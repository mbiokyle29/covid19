{"version":3,"file":"static/chunks/1.js","sources":["webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/igv/dist/igv.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///(webpack)/buildin/global.js"],"sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = global || self, global.igv = factory());\n}(this, (function () { 'use strict';\n\n\tvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar check = function (it) {\n\t  return it && it.Math == Math && it;\n\t}; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\n\n\tvar global_1 = // eslint-disable-next-line no-undef\n\tcheck(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || check(typeof self == 'object' && self) || check(typeof commonjsGlobal == 'object' && commonjsGlobal) || // eslint-disable-next-line no-new-func\n\tFunction('return this')();\n\n\tvar fails = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (error) {\n\t    return true;\n\t  }\n\t};\n\n\tvar descriptors = !fails(function () {\n\t  return Object.defineProperty({}, 1, {\n\t    get: function () {\n\t      return 7;\n\t    }\n\t  })[1] != 7;\n\t});\n\n\tvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\n\tvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug\n\n\tvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({\n\t  1: 2\n\t}, 1); // `Object.prototype.propertyIsEnumerable` method implementation\n\t// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\n\n\tvar f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n\t  var descriptor = getOwnPropertyDescriptor(this, V);\n\t  return !!descriptor && descriptor.enumerable;\n\t} : nativePropertyIsEnumerable;\n\tvar objectPropertyIsEnumerable = {\n\t  f: f\n\t};\n\n\tvar createPropertyDescriptor = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\tvar toString = {}.toString;\n\n\tvar classofRaw = function (it) {\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n\tvar split = ''.split; // fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n\tvar indexedObject = fails(function () {\n\t  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n\t  // eslint-disable-next-line no-prototype-builtins\n\t  return !Object('z').propertyIsEnumerable(0);\n\t}) ? function (it) {\n\t  return classofRaw(it) == 'String' ? split.call(it, '') : Object(it);\n\t} : Object;\n\n\t// `RequireObjectCoercible` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\n\tvar requireObjectCoercible = function (it) {\n\t  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n\t  return it;\n\t};\n\n\tvar toIndexedObject = function (it) {\n\t  return indexedObject(requireObjectCoercible(it));\n\t};\n\n\tvar isObject = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-toprimitive\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\n\tvar toPrimitive = function (input, PREFERRED_STRING) {\n\t  if (!isObject(input)) return input;\n\t  var fn, val;\n\t  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n\t  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n\t  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\n\tvar has = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\tvar document$1 = global_1.document; // typeof document.createElement is 'object' in old IE\n\n\tvar EXISTS = isObject(document$1) && isObject(document$1.createElement);\n\n\tvar documentCreateElement = function (it) {\n\t  return EXISTS ? document$1.createElement(it) : {};\n\t};\n\n\tvar ie8DomDefine = !descriptors && !fails(function () {\n\t  return Object.defineProperty(documentCreateElement('div'), 'a', {\n\t    get: function () {\n\t      return 7;\n\t    }\n\t  }).a != 7;\n\t});\n\n\tvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method\n\t// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n\n\tvar f$1 = descriptors ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n\t  O = toIndexedObject(O);\n\t  P = toPrimitive(P, true);\n\t  if (ie8DomDefine) try {\n\t    return nativeGetOwnPropertyDescriptor(O, P);\n\t  } catch (error) {\n\t    /* empty */\n\t  }\n\t  if (has(O, P)) return createPropertyDescriptor(!objectPropertyIsEnumerable.f.call(O, P), O[P]);\n\t};\n\tvar objectGetOwnPropertyDescriptor = {\n\t  f: f$1\n\t};\n\n\tvar anObject = function (it) {\n\t  if (!isObject(it)) {\n\t    throw TypeError(String(it) + ' is not an object');\n\t  }\n\n\t  return it;\n\t};\n\n\tvar nativeDefineProperty = Object.defineProperty; // `Object.defineProperty` method\n\t// https://tc39.github.io/ecma262/#sec-object.defineproperty\n\n\tvar f$2 = descriptors ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if (ie8DomDefine) try {\n\t    return nativeDefineProperty(O, P, Attributes);\n\t  } catch (error) {\n\t    /* empty */\n\t  }\n\t  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n\t  if ('value' in Attributes) O[P] = Attributes.value;\n\t  return O;\n\t};\n\tvar objectDefineProperty = {\n\t  f: f$2\n\t};\n\n\tvar createNonEnumerableProperty = descriptors ? function (object, key, value) {\n\t  return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\tvar setGlobal = function (key, value) {\n\t  try {\n\t    createNonEnumerableProperty(global_1, key, value);\n\t  } catch (error) {\n\t    global_1[key] = value;\n\t  }\n\n\t  return value;\n\t};\n\n\tvar SHARED = '__core-js_shared__';\n\tvar store = global_1[SHARED] || setGlobal(SHARED, {});\n\tvar sharedStore = store;\n\n\tvar functionToString = Function.toString; // this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\n\n\tif (typeof sharedStore.inspectSource != 'function') {\n\t  sharedStore.inspectSource = function (it) {\n\t    return functionToString.call(it);\n\t  };\n\t}\n\n\tvar inspectSource = sharedStore.inspectSource;\n\n\tvar WeakMap = global_1.WeakMap;\n\tvar nativeWeakMap = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n\n\tvar isPure = false;\n\n\tvar shared = createCommonjsModule(function (module) {\n\t  (module.exports = function (key, value) {\n\t    return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});\n\t  })('versions', []).push({\n\t    version: '3.6.4',\n\t    mode:  'global',\n\t    copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n\t  });\n\t});\n\n\tvar id = 0;\n\tvar postfix = Math.random();\n\n\tvar uid = function (key) {\n\t  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n\t};\n\n\tvar keys = shared('keys');\n\n\tvar sharedKey = function (key) {\n\t  return keys[key] || (keys[key] = uid(key));\n\t};\n\n\tvar hiddenKeys = {};\n\n\tvar WeakMap$1 = global_1.WeakMap;\n\tvar set, get, has$1;\n\n\tvar enforce = function (it) {\n\t  return has$1(it) ? get(it) : set(it, {});\n\t};\n\n\tvar getterFor = function (TYPE) {\n\t  return function (it) {\n\t    var state;\n\n\t    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n\t      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n\t    }\n\n\t    return state;\n\t  };\n\t};\n\n\tif (nativeWeakMap) {\n\t  var store$1 = new WeakMap$1();\n\t  var wmget = store$1.get;\n\t  var wmhas = store$1.has;\n\t  var wmset = store$1.set;\n\n\t  set = function (it, metadata) {\n\t    wmset.call(store$1, it, metadata);\n\t    return metadata;\n\t  };\n\n\t  get = function (it) {\n\t    return wmget.call(store$1, it) || {};\n\t  };\n\n\t  has$1 = function (it) {\n\t    return wmhas.call(store$1, it);\n\t  };\n\t} else {\n\t  var STATE = sharedKey('state');\n\t  hiddenKeys[STATE] = true;\n\n\t  set = function (it, metadata) {\n\t    createNonEnumerableProperty(it, STATE, metadata);\n\t    return metadata;\n\t  };\n\n\t  get = function (it) {\n\t    return has(it, STATE) ? it[STATE] : {};\n\t  };\n\n\t  has$1 = function (it) {\n\t    return has(it, STATE);\n\t  };\n\t}\n\n\tvar internalState = {\n\t  set: set,\n\t  get: get,\n\t  has: has$1,\n\t  enforce: enforce,\n\t  getterFor: getterFor\n\t};\n\n\tvar redefine = createCommonjsModule(function (module) {\n\t  var getInternalState = internalState.get;\n\t  var enforceInternalState = internalState.enforce;\n\t  var TEMPLATE = String(String).split('String');\n\t  (module.exports = function (O, key, value, options) {\n\t    var unsafe = options ? !!options.unsafe : false;\n\t    var simple = options ? !!options.enumerable : false;\n\t    var noTargetGet = options ? !!options.noTargetGet : false;\n\n\t    if (typeof value == 'function') {\n\t      if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n\t      enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n\t    }\n\n\t    if (O === global_1) {\n\t      if (simple) O[key] = value;else setGlobal(key, value);\n\t      return;\n\t    } else if (!unsafe) {\n\t      delete O[key];\n\t    } else if (!noTargetGet && O[key]) {\n\t      simple = true;\n\t    }\n\n\t    if (simple) O[key] = value;else createNonEnumerableProperty(O, key, value); // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t  })(Function.prototype, 'toString', function toString() {\n\t    return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n\t  });\n\t});\n\n\tvar path = global_1;\n\n\tvar aFunction = function (variable) {\n\t  return typeof variable == 'function' ? variable : undefined;\n\t};\n\n\tvar getBuiltIn = function (namespace, method) {\n\t  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global_1[namespace]) : path[namespace] && path[namespace][method] || global_1[namespace] && global_1[namespace][method];\n\t};\n\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor; // `ToInteger` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-tointeger\n\n\tvar toInteger = function (argument) {\n\t  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n\t};\n\n\tvar min = Math.min; // `ToLength` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-tolength\n\n\tvar toLength = function (argument) {\n\t  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n\t};\n\n\tvar max = Math.max;\n\tvar min$1 = Math.min; // Helper for a popular repeating case of the spec:\n\t// Let integer be ? ToInteger(index).\n\t// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\n\n\tvar toAbsoluteIndex = function (index, length) {\n\t  var integer = toInteger(index);\n\t  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);\n\t};\n\n\tvar createMethod = function (IS_INCLUDES) {\n\t  return function ($this, el, fromIndex) {\n\t    var O = toIndexedObject($this);\n\t    var length = toLength(O.length);\n\t    var index = toAbsoluteIndex(fromIndex, length);\n\t    var value; // Array#includes uses SameValueZero equality algorithm\n\t    // eslint-disable-next-line no-self-compare\n\n\t    if (IS_INCLUDES && el != el) while (length > index) {\n\t      value = O[index++]; // eslint-disable-next-line no-self-compare\n\n\t      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\n\t    } else for (; length > index; index++) {\n\t      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n\t    }\n\t    return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n\tvar arrayIncludes = {\n\t  // `Array.prototype.includes` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n\t  includes: createMethod(true),\n\t  // `Array.prototype.indexOf` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n\t  indexOf: createMethod(false)\n\t};\n\n\tvar indexOf = arrayIncludes.indexOf;\n\n\tvar objectKeysInternal = function (object, names) {\n\t  var O = toIndexedObject(object);\n\t  var i = 0;\n\t  var result = [];\n\t  var key;\n\n\t  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key); // Don't enum bug & hidden keys\n\n\n\t  while (names.length > i) if (has(O, key = names[i++])) {\n\t    ~indexOf(result, key) || result.push(key);\n\t  }\n\n\t  return result;\n\t};\n\n\t// IE8- don't enum bug keys\n\tvar enumBugKeys = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];\n\n\tvar hiddenKeys$1 = enumBugKeys.concat('length', 'prototype'); // `Object.getOwnPropertyNames` method\n\t// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n\n\tvar f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n\t  return objectKeysInternal(O, hiddenKeys$1);\n\t};\n\n\tvar objectGetOwnPropertyNames = {\n\t  f: f$3\n\t};\n\n\tvar f$4 = Object.getOwnPropertySymbols;\n\tvar objectGetOwnPropertySymbols = {\n\t  f: f$4\n\t};\n\n\tvar ownKeys = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n\t  var keys = objectGetOwnPropertyNames.f(anObject(it));\n\t  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;\n\t  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n\t};\n\n\tvar copyConstructorProperties = function (target, source) {\n\t  var keys = ownKeys(source);\n\t  var defineProperty = objectDefineProperty.f;\n\t  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\n\n\t  for (var i = 0; i < keys.length; i++) {\n\t    var key = keys[i];\n\t    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n\t  }\n\t};\n\n\tvar replacement = /#|\\.prototype\\./;\n\n\tvar isForced = function (feature, detection) {\n\t  var value = data[normalize(feature)];\n\t  return value == POLYFILL ? true : value == NATIVE ? false : typeof detection == 'function' ? fails(detection) : !!detection;\n\t};\n\n\tvar normalize = isForced.normalize = function (string) {\n\t  return String(string).replace(replacement, '.').toLowerCase();\n\t};\n\n\tvar data = isForced.data = {};\n\tvar NATIVE = isForced.NATIVE = 'N';\n\tvar POLYFILL = isForced.POLYFILL = 'P';\n\tvar isForced_1 = isForced;\n\n\tvar getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;\n\t/*\n\t  options.target      - name of the target object\n\t  options.global      - target is the global object\n\t  options.stat        - export as static methods of target\n\t  options.proto       - export as prototype methods of target\n\t  options.real        - real prototype method for the `pure` version\n\t  options.forced      - export even if the native feature is available\n\t  options.bind        - bind methods to the target, required for the `pure` version\n\t  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n\t  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n\t  options.sham        - add a flag to not completely full polyfills\n\t  options.enumerable  - export as enumerable property\n\t  options.noTargetGet - prevent calling a getter on target\n\t*/\n\n\tvar _export = function (options, source) {\n\t  var TARGET = options.target;\n\t  var GLOBAL = options.global;\n\t  var STATIC = options.stat;\n\t  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n\n\t  if (GLOBAL) {\n\t    target = global_1;\n\t  } else if (STATIC) {\n\t    target = global_1[TARGET] || setGlobal(TARGET, {});\n\t  } else {\n\t    target = (global_1[TARGET] || {}).prototype;\n\t  }\n\n\t  if (target) for (key in source) {\n\t    sourceProperty = source[key];\n\n\t    if (options.noTargetGet) {\n\t      descriptor = getOwnPropertyDescriptor$1(target, key);\n\t      targetProperty = descriptor && descriptor.value;\n\t    } else targetProperty = target[key];\n\n\t    FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contained in target\n\n\t    if (!FORCED && targetProperty !== undefined) {\n\t      if (typeof sourceProperty === typeof targetProperty) continue;\n\t      copyConstructorProperties(sourceProperty, targetProperty);\n\t    } // add a flag to not completely full polyfills\n\n\n\t    if (options.sham || targetProperty && targetProperty.sham) {\n\t      createNonEnumerableProperty(sourceProperty, 'sham', true);\n\t    } // extend global\n\n\n\t    redefine(target, key, sourceProperty, options);\n\t  }\n\t};\n\n\tvar aFunction$1 = function (it) {\n\t  if (typeof it != 'function') {\n\t    throw TypeError(String(it) + ' is not a function');\n\t  }\n\n\t  return it;\n\t};\n\n\tvar functionBindContext = function (fn, that, length) {\n\t  aFunction$1(fn);\n\t  if (that === undefined) return fn;\n\n\t  switch (length) {\n\t    case 0:\n\t      return function () {\n\t        return fn.call(that);\n\t      };\n\n\t    case 1:\n\t      return function (a) {\n\t        return fn.call(that, a);\n\t      };\n\n\t    case 2:\n\t      return function (a, b) {\n\t        return fn.call(that, a, b);\n\t      };\n\n\t    case 3:\n\t      return function (a, b, c) {\n\t        return fn.call(that, a, b, c);\n\t      };\n\t  }\n\n\t  return function ()\n\t  /* ...args */\n\t  {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-toobject\n\n\tvar toObject = function (argument) {\n\t  return Object(requireObjectCoercible(argument));\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-isarray\n\n\tvar isArray = Array.isArray || function isArray(arg) {\n\t  return classofRaw(arg) == 'Array';\n\t};\n\n\tvar nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function () {\n\t  // Chrome 38 Symbol has incorrect toString conversion\n\t  // eslint-disable-next-line no-undef\n\t  return !String(Symbol());\n\t});\n\n\tvar useSymbolAsUid = nativeSymbol // eslint-disable-next-line no-undef\n\t&& !Symbol.sham // eslint-disable-next-line no-undef\n\t&& typeof Symbol.iterator == 'symbol';\n\n\tvar WellKnownSymbolsStore = shared('wks');\n\tvar Symbol$1 = global_1.Symbol;\n\tvar createWellKnownSymbol = useSymbolAsUid ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid;\n\n\tvar wellKnownSymbol = function (name) {\n\t  if (!has(WellKnownSymbolsStore, name)) {\n\t    if (nativeSymbol && has(Symbol$1, name)) WellKnownSymbolsStore[name] = Symbol$1[name];else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n\t  }\n\n\t  return WellKnownSymbolsStore[name];\n\t};\n\n\tvar SPECIES = wellKnownSymbol('species'); // `ArraySpeciesCreate` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\n\n\tvar arraySpeciesCreate = function (originalArray, length) {\n\t  var C;\n\n\t  if (isArray(originalArray)) {\n\t    C = originalArray.constructor; // cross-realm fallback\n\n\t    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;else if (isObject(C)) {\n\t      C = C[SPECIES];\n\t      if (C === null) C = undefined;\n\t    }\n\t  }\n\n\t  return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n\t};\n\n\tvar push = [].push; // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\n\n\tvar createMethod$1 = function (TYPE) {\n\t  var IS_MAP = TYPE == 1;\n\t  var IS_FILTER = TYPE == 2;\n\t  var IS_SOME = TYPE == 3;\n\t  var IS_EVERY = TYPE == 4;\n\t  var IS_FIND_INDEX = TYPE == 6;\n\t  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n\t  return function ($this, callbackfn, that, specificCreate) {\n\t    var O = toObject($this);\n\t    var self = indexedObject(O);\n\t    var boundFunction = functionBindContext(callbackfn, that, 3);\n\t    var length = toLength(self.length);\n\t    var index = 0;\n\t    var create = specificCreate || arraySpeciesCreate;\n\t    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n\t    var value, result;\n\n\t    for (; length > index; index++) if (NO_HOLES || index in self) {\n\t      value = self[index];\n\t      result = boundFunction(value, index, O);\n\n\t      if (TYPE) {\n\t        if (IS_MAP) target[index] = result; // map\n\t        else if (result) switch (TYPE) {\n\t            case 3:\n\t              return true;\n\t            // some\n\n\t            case 5:\n\t              return value;\n\t            // find\n\n\t            case 6:\n\t              return index;\n\t            // findIndex\n\n\t            case 2:\n\t              push.call(target, value);\n\t            // filter\n\t          } else if (IS_EVERY) return false; // every\n\t      }\n\t    }\n\n\t    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n\t  };\n\t};\n\n\tvar arrayIteration = {\n\t  // `Array.prototype.forEach` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n\t  forEach: createMethod$1(0),\n\t  // `Array.prototype.map` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n\t  map: createMethod$1(1),\n\t  // `Array.prototype.filter` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n\t  filter: createMethod$1(2),\n\t  // `Array.prototype.some` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n\t  some: createMethod$1(3),\n\t  // `Array.prototype.every` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n\t  every: createMethod$1(4),\n\t  // `Array.prototype.find` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n\t  find: createMethod$1(5),\n\t  // `Array.prototype.findIndex` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n\t  findIndex: createMethod$1(6)\n\t};\n\n\tvar engineUserAgent = getBuiltIn('navigator', 'userAgent') || '';\n\n\tvar process$1 = global_1.process;\n\tvar versions = process$1 && process$1.versions;\n\tvar v8 = versions && versions.v8;\n\tvar match, version;\n\n\tif (v8) {\n\t  match = v8.split('.');\n\t  version = match[0] + match[1];\n\t} else if (engineUserAgent) {\n\t  match = engineUserAgent.match(/Edge\\/(\\d+)/);\n\n\t  if (!match || match[1] >= 74) {\n\t    match = engineUserAgent.match(/Chrome\\/(\\d+)/);\n\t    if (match) version = match[1];\n\t  }\n\t}\n\n\tvar engineV8Version = version && +version;\n\n\tvar SPECIES$1 = wellKnownSymbol('species');\n\n\tvar arrayMethodHasSpeciesSupport = function (METHOD_NAME) {\n\t  // We can't use this feature detection in V8 since it causes\n\t  // deoptimization and serious performance degradation\n\t  // https://github.com/zloirock/core-js/issues/677\n\t  return engineV8Version >= 51 || !fails(function () {\n\t    var array = [];\n\t    var constructor = array.constructor = {};\n\n\t    constructor[SPECIES$1] = function () {\n\t      return {\n\t        foo: 1\n\t      };\n\t    };\n\n\t    return array[METHOD_NAME](Boolean).foo !== 1;\n\t  });\n\t};\n\n\tvar defineProperty = Object.defineProperty;\n\tvar cache = {};\n\n\tvar thrower = function (it) {\n\t  throw it;\n\t};\n\n\tvar arrayMethodUsesToLength = function (METHOD_NAME, options) {\n\t  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n\t  if (!options) options = {};\n\t  var method = [][METHOD_NAME];\n\t  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n\t  var argument0 = has(options, 0) ? options[0] : thrower;\n\t  var argument1 = has(options, 1) ? options[1] : undefined;\n\t  return cache[METHOD_NAME] = !!method && !fails(function () {\n\t    if (ACCESSORS && !descriptors) return true;\n\t    var O = {\n\t      length: -1\n\t    };\n\t    if (ACCESSORS) defineProperty(O, 1, {\n\t      enumerable: true,\n\t      get: thrower\n\t    });else O[1] = 1;\n\t    method.call(O, argument0, argument1);\n\t  });\n\t};\n\n\tvar $filter = arrayIteration.filter;\n\tvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter'); // Edge 14- issue\n\n\tvar USES_TO_LENGTH = arrayMethodUsesToLength('filter'); // `Array.prototype.filter` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n\t// with adding support of @@species\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH\n\t}, {\n\t  filter: function filter(callbackfn\n\t  /* , thisArg */\n\t  ) {\n\t    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\tvar arrayMethodIsStrict = function (METHOD_NAME, argument) {\n\t  var method = [][METHOD_NAME];\n\t  return !!method && fails(function () {\n\t    // eslint-disable-next-line no-useless-call,no-throw-literal\n\t    method.call(null, argument || function () {\n\t      throw 1;\n\t    }, 1);\n\t  });\n\t};\n\n\tvar $forEach = arrayIteration.forEach;\n\tvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\tvar USES_TO_LENGTH$1 = arrayMethodUsesToLength('forEach'); // `Array.prototype.forEach` method implementation\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n\n\tvar arrayForEach = !STRICT_METHOD || !USES_TO_LENGTH$1 ? function forEach(callbackfn\n\t/* , thisArg */\n\t) {\n\t  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t} : [].forEach;\n\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: [].forEach != arrayForEach\n\t}, {\n\t  forEach: arrayForEach\n\t});\n\n\tvar $indexOf = arrayIncludes.indexOf;\n\tvar nativeIndexOf = [].indexOf;\n\tvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\n\tvar STRICT_METHOD$1 = arrayMethodIsStrict('indexOf');\n\tvar USES_TO_LENGTH$2 = arrayMethodUsesToLength('indexOf', {\n\t  ACCESSORS: true,\n\t  1: 0\n\t}); // `Array.prototype.indexOf` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: NEGATIVE_ZERO || !STRICT_METHOD$1 || !USES_TO_LENGTH$2\n\t}, {\n\t  indexOf: function indexOf(searchElement\n\t  /* , fromIndex = 0 */\n\t  ) {\n\t    return NEGATIVE_ZERO // convert -0 to +0\n\t    ? nativeIndexOf.apply(this, arguments) || 0 : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\tvar min$2 = Math.min;\n\tvar nativeLastIndexOf = [].lastIndexOf;\n\tvar NEGATIVE_ZERO$1 = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;\n\tvar STRICT_METHOD$2 = arrayMethodIsStrict('lastIndexOf'); // For preventing possible almost infinite loop in non-standard implementations, test the forward version of the method\n\n\tvar USES_TO_LENGTH$3 = arrayMethodUsesToLength('indexOf', {\n\t  ACCESSORS: true,\n\t  1: 0\n\t});\n\tvar FORCED = NEGATIVE_ZERO$1 || !STRICT_METHOD$2 || !USES_TO_LENGTH$3; // `Array.prototype.lastIndexOf` method implementation\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof\n\n\tvar arrayLastIndexOf = FORCED ? function lastIndexOf(searchElement\n\t/* , fromIndex = @[*-1] */\n\t) {\n\t  // convert -0 to +0\n\t  if (NEGATIVE_ZERO$1) return nativeLastIndexOf.apply(this, arguments) || 0;\n\t  var O = toIndexedObject(this);\n\t  var length = toLength(O.length);\n\t  var index = length - 1;\n\t  if (arguments.length > 1) index = min$2(index, toInteger(arguments[1]));\n\t  if (index < 0) index = length + index;\n\n\t  for (; index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;\n\n\t  return -1;\n\t} : nativeLastIndexOf;\n\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: arrayLastIndexOf !== [].lastIndexOf\n\t}, {\n\t  lastIndexOf: arrayLastIndexOf\n\t});\n\n\tvar aPossiblePrototype = function (it) {\n\t  if (!isObject(it) && it !== null) {\n\t    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n\t  }\n\n\t  return it;\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n\t// Works with __proto__ only. Old v8 can't work with null proto objects.\n\n\t/* eslint-disable no-proto */\n\n\tvar objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n\t  var CORRECT_SETTER = false;\n\t  var test = {};\n\t  var setter;\n\n\t  try {\n\t    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n\t    setter.call(test, []);\n\t    CORRECT_SETTER = test instanceof Array;\n\t  } catch (error) {\n\t    /* empty */\n\t  }\n\n\t  return function setPrototypeOf(O, proto) {\n\t    anObject(O);\n\t    aPossiblePrototype(proto);\n\t    if (CORRECT_SETTER) setter.call(O, proto);else O.__proto__ = proto;\n\t    return O;\n\t  };\n\t}() : undefined);\n\n\tvar inheritIfRequired = function ($this, dummy, Wrapper) {\n\t  var NewTarget, NewTargetPrototype;\n\t  if ( // it can work only with native `setPrototypeOf`\n\t  objectSetPrototypeOf && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n\t  typeof (NewTarget = dummy.constructor) == 'function' && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) objectSetPrototypeOf($this, NewTargetPrototype);\n\t  return $this;\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-object.keys\n\n\tvar objectKeys = Object.keys || function keys(O) {\n\t  return objectKeysInternal(O, enumBugKeys);\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-object.defineproperties\n\n\tvar objectDefineProperties = descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n\t  anObject(O);\n\t  var keys = objectKeys(Properties);\n\t  var length = keys.length;\n\t  var index = 0;\n\t  var key;\n\n\t  while (length > index) objectDefineProperty.f(O, key = keys[index++], Properties[key]);\n\n\t  return O;\n\t};\n\n\tvar html = getBuiltIn('document', 'documentElement');\n\n\tvar GT = '>';\n\tvar LT = '<';\n\tvar PROTOTYPE = 'prototype';\n\tvar SCRIPT = 'script';\n\tvar IE_PROTO = sharedKey('IE_PROTO');\n\n\tvar EmptyConstructor = function () {\n\t  /* empty */\n\t};\n\n\tvar scriptTag = function (content) {\n\t  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n\t}; // Create object with fake `null` prototype: use ActiveX Object with cleared prototype\n\n\n\tvar NullProtoObjectViaActiveX = function (activeXDocument) {\n\t  activeXDocument.write(scriptTag(''));\n\t  activeXDocument.close();\n\t  var temp = activeXDocument.parentWindow.Object;\n\t  activeXDocument = null; // avoid memory leak\n\n\t  return temp;\n\t}; // Create object with fake `null` prototype: use iframe Object with cleared prototype\n\n\n\tvar NullProtoObjectViaIFrame = function () {\n\t  // Thrash, waste and sodomy: IE GC bug\n\t  var iframe = documentCreateElement('iframe');\n\t  var JS = 'java' + SCRIPT + ':';\n\t  var iframeDocument;\n\t  iframe.style.display = 'none';\n\t  html.appendChild(iframe); // https://github.com/zloirock/core-js/issues/475\n\n\t  iframe.src = String(JS);\n\t  iframeDocument = iframe.contentWindow.document;\n\t  iframeDocument.open();\n\t  iframeDocument.write(scriptTag('document.F=Object'));\n\t  iframeDocument.close();\n\t  return iframeDocument.F;\n\t}; // Check for document.domain and active x support\n\t// No need to use active x approach when document.domain is not set\n\t// see https://github.com/es-shims/es5-shim/issues/150\n\t// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n\t// avoid IE GC bug\n\n\n\tvar activeXDocument;\n\n\tvar NullProtoObject = function () {\n\t  try {\n\t    /* global ActiveXObject */\n\t    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n\t  } catch (error) {\n\t    /* ignore */\n\t  }\n\n\t  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n\t  var length = enumBugKeys.length;\n\n\t  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n\n\t  return NullProtoObject();\n\t};\n\n\thiddenKeys[IE_PROTO] = true; // `Object.create` method\n\t// https://tc39.github.io/ecma262/#sec-object.create\n\n\tvar objectCreate = Object.create || function create(O, Properties) {\n\t  var result;\n\n\t  if (O !== null) {\n\t    EmptyConstructor[PROTOTYPE] = anObject(O);\n\t    result = new EmptyConstructor();\n\t    EmptyConstructor[PROTOTYPE] = null; // add \"__proto__\" for Object.getPrototypeOf polyfill\n\n\t    result[IE_PROTO] = O;\n\t  } else result = NullProtoObject();\n\n\t  return Properties === undefined ? result : objectDefineProperties(result, Properties);\n\t};\n\n\t// a string of all valid unicode whitespaces\n\t// eslint-disable-next-line max-len\n\tvar whitespaces = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n\tvar whitespace = '[' + whitespaces + ']';\n\tvar ltrim = RegExp('^' + whitespace + whitespace + '*');\n\tvar rtrim = RegExp(whitespace + whitespace + '*$'); // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\n\n\tvar createMethod$2 = function (TYPE) {\n\t  return function ($this) {\n\t    var string = String(requireObjectCoercible($this));\n\t    if (TYPE & 1) string = string.replace(ltrim, '');\n\t    if (TYPE & 2) string = string.replace(rtrim, '');\n\t    return string;\n\t  };\n\t};\n\n\tvar stringTrim = {\n\t  // `String.prototype.{ trimLeft, trimStart }` methods\n\t  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n\t  start: createMethod$2(1),\n\t  // `String.prototype.{ trimRight, trimEnd }` methods\n\t  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n\t  end: createMethod$2(2),\n\t  // `String.prototype.trim` method\n\t  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n\t  trim: createMethod$2(3)\n\t};\n\n\tvar getOwnPropertyNames = objectGetOwnPropertyNames.f;\n\tvar getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;\n\tvar defineProperty$1 = objectDefineProperty.f;\n\tvar trim = stringTrim.trim;\n\tvar NUMBER = 'Number';\n\tvar NativeNumber = global_1[NUMBER];\n\tvar NumberPrototype = NativeNumber.prototype; // Opera ~12 has broken Object#toString\n\n\tvar BROKEN_CLASSOF = classofRaw(objectCreate(NumberPrototype)) == NUMBER; // `ToNumber` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-tonumber\n\n\tvar toNumber = function (argument) {\n\t  var it = toPrimitive(argument, false);\n\t  var first, third, radix, maxCode, digits, length, index, code;\n\n\t  if (typeof it == 'string' && it.length > 2) {\n\t    it = trim(it);\n\t    first = it.charCodeAt(0);\n\n\t    if (first === 43 || first === 45) {\n\t      third = it.charCodeAt(2);\n\t      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n\t    } else if (first === 48) {\n\t      switch (it.charCodeAt(1)) {\n\t        case 66:\n\t        case 98:\n\t          radix = 2;\n\t          maxCode = 49;\n\t          break;\n\t        // fast equal of /^0b[01]+$/i\n\n\t        case 79:\n\t        case 111:\n\t          radix = 8;\n\t          maxCode = 55;\n\t          break;\n\t        // fast equal of /^0o[0-7]+$/i\n\n\t        default:\n\t          return +it;\n\t      }\n\n\t      digits = it.slice(2);\n\t      length = digits.length;\n\n\t      for (index = 0; index < length; index++) {\n\t        code = digits.charCodeAt(index); // parseInt parses a string to a first unavailable symbol\n\t        // but ToNumber should return NaN if a string contains unavailable symbols\n\n\t        if (code < 48 || code > maxCode) return NaN;\n\t      }\n\n\t      return parseInt(digits, radix);\n\t    }\n\t  }\n\n\t  return +it;\n\t}; // `Number` constructor\n\t// https://tc39.github.io/ecma262/#sec-number-constructor\n\n\n\tif (isForced_1(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n\t  var NumberWrapper = function Number(value) {\n\t    var it = arguments.length < 1 ? 0 : value;\n\t    var dummy = this;\n\t    return dummy instanceof NumberWrapper // check on 1..constructor(foo) case\n\t    && (BROKEN_CLASSOF ? fails(function () {\n\t      NumberPrototype.valueOf.call(dummy);\n\t    }) : classofRaw(dummy) != NUMBER) ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n\t  };\n\n\t  for (var keys$1 = descriptors ? getOwnPropertyNames(NativeNumber) : ( // ES3:\n\t  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' + // ES2015 (in case, if modules with ES2015 Number statics required before):\n\t  'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' + 'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').split(','), j = 0, key; keys$1.length > j; j++) {\n\t    if (has(NativeNumber, key = keys$1[j]) && !has(NumberWrapper, key)) {\n\t      defineProperty$1(NumberWrapper, key, getOwnPropertyDescriptor$2(NativeNumber, key));\n\t    }\n\t  }\n\n\t  NumberWrapper.prototype = NumberPrototype;\n\t  NumberPrototype.constructor = NumberWrapper;\n\t  redefine(global_1, NUMBER, NumberWrapper);\n\t}\n\n\t// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\n\n\n\tvar regexpFlags = function () {\n\t  var that = anObject(this);\n\t  var result = '';\n\t  if (that.global) result += 'g';\n\t  if (that.ignoreCase) result += 'i';\n\t  if (that.multiline) result += 'm';\n\t  if (that.dotAll) result += 's';\n\t  if (that.unicode) result += 'u';\n\t  if (that.sticky) result += 'y';\n\t  return result;\n\t};\n\n\t// so we use an intermediate function.\n\n\n\tfunction RE(s, f) {\n\t  return RegExp(s, f);\n\t}\n\n\tvar UNSUPPORTED_Y = fails(function () {\n\t  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n\t  var re = RE('a', 'y');\n\t  re.lastIndex = 2;\n\t  return re.exec('abcd') != null;\n\t});\n\tvar BROKEN_CARET = fails(function () {\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n\t  var re = RE('^r', 'gy');\n\t  re.lastIndex = 2;\n\t  return re.exec('str') != null;\n\t});\n\tvar regexpStickyHelpers = {\n\t  UNSUPPORTED_Y: UNSUPPORTED_Y,\n\t  BROKEN_CARET: BROKEN_CARET\n\t};\n\n\tvar nativeExec = RegExp.prototype.exec; // This always refers to the native implementation, because the\n\t// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n\t// which loads this file before patching the method.\n\n\tvar nativeReplace = String.prototype.replace;\n\tvar patchedExec = nativeExec;\n\n\tvar UPDATES_LAST_INDEX_WRONG = function () {\n\t  var re1 = /a/;\n\t  var re2 = /b*/g;\n\t  nativeExec.call(re1, 'a');\n\t  nativeExec.call(re2, 'a');\n\t  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n\t}();\n\n\tvar UNSUPPORTED_Y$1 = regexpStickyHelpers.UNSUPPORTED_Y || regexpStickyHelpers.BROKEN_CARET; // nonparticipating capturing group, copied from es5-shim's String#split patch.\n\n\tvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\tvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$1;\n\n\tif (PATCH) {\n\t  patchedExec = function exec(str) {\n\t    var re = this;\n\t    var lastIndex, reCopy, match, i;\n\t    var sticky = UNSUPPORTED_Y$1 && re.sticky;\n\t    var flags = regexpFlags.call(re);\n\t    var source = re.source;\n\t    var charsAdded = 0;\n\t    var strCopy = str;\n\n\t    if (sticky) {\n\t      flags = flags.replace('y', '');\n\n\t      if (flags.indexOf('g') === -1) {\n\t        flags += 'g';\n\t      }\n\n\t      strCopy = String(str).slice(re.lastIndex); // Support anchored sticky behavior.\n\n\t      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n\t        source = '(?: ' + source + ')';\n\t        strCopy = ' ' + strCopy;\n\t        charsAdded++;\n\t      } // ^(? + rx + ) is needed, in combination with some str slicing, to\n\t      // simulate the 'y' flag.\n\n\n\t      reCopy = new RegExp('^(?:' + source + ')', flags);\n\t    }\n\n\t    if (NPCG_INCLUDED) {\n\t      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n\t    }\n\n\t    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\t    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n\t    if (sticky) {\n\t      if (match) {\n\t        match.input = match.input.slice(charsAdded);\n\t        match[0] = match[0].slice(charsAdded);\n\t        match.index = re.lastIndex;\n\t        re.lastIndex += match[0].length;\n\t      } else re.lastIndex = 0;\n\t    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n\t      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n\t    }\n\n\t    if (NPCG_INCLUDED && match && match.length > 1) {\n\t      // Fix browsers whose `exec` methods don't consistently return `undefined`\n\t      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n\t      nativeReplace.call(match[0], reCopy, function () {\n\t        for (i = 1; i < arguments.length - 2; i++) {\n\t          if (arguments[i] === undefined) match[i] = undefined;\n\t        }\n\t      });\n\t    }\n\n\t    return match;\n\t  };\n\t}\n\n\tvar regexpExec = patchedExec;\n\n\t_export({\n\t  target: 'RegExp',\n\t  proto: true,\n\t  forced: /./.exec !== regexpExec\n\t}, {\n\t  exec: regexpExec\n\t});\n\n\tvar MATCH = wellKnownSymbol('match'); // `IsRegExp` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-isregexp\n\n\tvar isRegexp = function (it) {\n\t  var isRegExp;\n\t  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classofRaw(it) == 'RegExp');\n\t};\n\n\tvar notARegexp = function (it) {\n\t  if (isRegexp(it)) {\n\t    throw TypeError(\"The method doesn't accept regular expressions\");\n\t  }\n\n\t  return it;\n\t};\n\n\tvar MATCH$1 = wellKnownSymbol('match');\n\n\tvar correctIsRegexpLogic = function (METHOD_NAME) {\n\t  var regexp = /./;\n\n\t  try {\n\t    '/./'[METHOD_NAME](regexp);\n\t  } catch (e) {\n\t    try {\n\t      regexp[MATCH$1] = false;\n\t      return '/./'[METHOD_NAME](regexp);\n\t    } catch (f) {\n\t      /* empty */\n\t    }\n\t  }\n\n\t  return false;\n\t};\n\n\tvar getOwnPropertyDescriptor$3 = objectGetOwnPropertyDescriptor.f;\n\tvar nativeEndsWith = ''.endsWith;\n\tvar min$3 = Math.min;\n\tvar CORRECT_IS_REGEXP_LOGIC = correctIsRegexpLogic('endsWith'); // https://github.com/zloirock/core-js/pull/702\n\n\tvar MDN_POLYFILL_BUG =  !CORRECT_IS_REGEXP_LOGIC && !!function () {\n\t  var descriptor = getOwnPropertyDescriptor$3(String.prototype, 'endsWith');\n\t  return descriptor && !descriptor.writable;\n\t}(); // `String.prototype.endsWith` method\n\t// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n\n\t_export({\n\t  target: 'String',\n\t  proto: true,\n\t  forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC\n\t}, {\n\t  endsWith: function endsWith(searchString\n\t  /* , endPosition = @length */\n\t  ) {\n\t    var that = String(requireObjectCoercible(this));\n\t    notARegexp(searchString);\n\t    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n\t    var len = toLength(that.length);\n\t    var end = endPosition === undefined ? len : min$3(toLength(endPosition), len);\n\t    var search = String(searchString);\n\t    return nativeEndsWith ? nativeEndsWith.call(that, search, end) : that.slice(end - search.length, end) === search;\n\t  }\n\t});\n\n\tvar SPECIES$2 = wellKnownSymbol('species');\n\tvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n\t  // #replace needs built-in support for named groups.\n\t  // #match works fine because it just return the exec results, even if it has\n\t  // a \"grops\" property.\n\t  var re = /./;\n\n\t  re.exec = function () {\n\t    var result = [];\n\t    result.groups = {\n\t      a: '7'\n\t    };\n\t    return result;\n\t  };\n\n\t  return ''.replace(re, '$<a>') !== '7';\n\t}); // IE <= 11 replaces $0 with the whole match, as if it was $&\n\t// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\n\n\tvar REPLACE_KEEPS_$0 = function () {\n\t  return 'a'.replace(/./, '$0') === '$0';\n\t}();\n\n\tvar REPLACE = wellKnownSymbol('replace'); // Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\n\n\tvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function () {\n\t  if (/./[REPLACE]) {\n\t    return /./[REPLACE]('a', '$0') === '';\n\t  }\n\n\t  return false;\n\t}(); // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n\t// Weex JS has frozen built-in prototypes, so use try / catch wrapper\n\n\n\tvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n\t  var re = /(?:)/;\n\t  var originalExec = re.exec;\n\n\t  re.exec = function () {\n\t    return originalExec.apply(this, arguments);\n\t  };\n\n\t  var result = 'ab'.split(re);\n\t  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n\t});\n\n\tvar fixRegexpWellKnownSymbolLogic = function (KEY, length, exec, sham) {\n\t  var SYMBOL = wellKnownSymbol(KEY);\n\t  var DELEGATES_TO_SYMBOL = !fails(function () {\n\t    // String methods call symbol-named RegEp methods\n\t    var O = {};\n\n\t    O[SYMBOL] = function () {\n\t      return 7;\n\t    };\n\n\t    return ''[KEY](O) != 7;\n\t  });\n\t  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n\t    // Symbol-named RegExp methods call .exec\n\t    var execCalled = false;\n\t    var re = /a/;\n\n\t    if (KEY === 'split') {\n\t      // We can't use real regex here since it causes deoptimization\n\t      // and serious performance degradation in V8\n\t      // https://github.com/zloirock/core-js/issues/306\n\t      re = {}; // RegExp[@@split] doesn't call the regex's exec method, but first creates\n\t      // a new one. We need to return the patched regex when creating the new one.\n\n\t      re.constructor = {};\n\n\t      re.constructor[SPECIES$2] = function () {\n\t        return re;\n\t      };\n\n\t      re.flags = '';\n\t      re[SYMBOL] = /./[SYMBOL];\n\t    }\n\n\t    re.exec = function () {\n\t      execCalled = true;\n\t      return null;\n\t    };\n\n\t    re[SYMBOL]('');\n\t    return !execCalled;\n\t  });\n\n\t  if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || KEY === 'replace' && !(REPLACE_SUPPORTS_NAMED_GROUPS && REPLACE_KEEPS_$0 && !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE) || KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC) {\n\t    var nativeRegExpMethod = /./[SYMBOL];\n\t    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n\t      if (regexp.exec === regexpExec) {\n\t        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n\t          // The native String method already delegates to @@method (this\n\t          // polyfilled function), leasing to infinite recursion.\n\t          // We avoid it by directly calling the native @@method method.\n\t          return {\n\t            done: true,\n\t            value: nativeRegExpMethod.call(regexp, str, arg2)\n\t          };\n\t        }\n\n\t        return {\n\t          done: true,\n\t          value: nativeMethod.call(str, regexp, arg2)\n\t        };\n\t      }\n\n\t      return {\n\t        done: false\n\t      };\n\t    }, {\n\t      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n\t      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n\t    });\n\t    var stringMethod = methods[0];\n\t    var regexMethod = methods[1];\n\t    redefine(String.prototype, KEY, stringMethod);\n\t    redefine(RegExp.prototype, SYMBOL, length == 2 // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n\t    // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n\t    ? function (string, arg) {\n\t      return regexMethod.call(string, this, arg);\n\t    } // 21.2.5.6 RegExp.prototype[@@match](string)\n\t    // 21.2.5.9 RegExp.prototype[@@search](string)\n\t    : function (string) {\n\t      return regexMethod.call(string, this);\n\t    });\n\t  }\n\n\t  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n\t};\n\n\t// `SameValue` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-samevalue\n\tvar sameValue = Object.is || function is(x, y) {\n\t  // eslint-disable-next-line no-self-compare\n\t  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-regexpexec\n\n\tvar regexpExecAbstract = function (R, S) {\n\t  var exec = R.exec;\n\n\t  if (typeof exec === 'function') {\n\t    var result = exec.call(R, S);\n\n\t    if (typeof result !== 'object') {\n\t      throw TypeError('RegExp exec method returned something other than an Object or null');\n\t    }\n\n\t    return result;\n\t  }\n\n\t  if (classofRaw(R) !== 'RegExp') {\n\t    throw TypeError('RegExp#exec called on incompatible receiver');\n\t  }\n\n\t  return regexpExec.call(R, S);\n\t};\n\n\tfixRegexpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n\t  return [// `String.prototype.search` method\n\t  // https://tc39.github.io/ecma262/#sec-string.prototype.search\n\t  function search(regexp) {\n\t    var O = requireObjectCoercible(this);\n\t    var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n\t    return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n\t  }, // `RegExp.prototype[@@search]` method\n\t  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n\t  function (regexp) {\n\t    var res = maybeCallNative(nativeSearch, regexp, this);\n\t    if (res.done) return res.value;\n\t    var rx = anObject(regexp);\n\t    var S = String(this);\n\t    var previousLastIndex = rx.lastIndex;\n\t    if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n\t    var result = regexpExecAbstract(rx, S);\n\t    if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n\t    return result === null ? -1 : result.index;\n\t  }];\n\t});\n\n\tvar SPECIES$3 = wellKnownSymbol('species'); // `SpeciesConstructor` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-speciesconstructor\n\n\tvar speciesConstructor = function (O, defaultConstructor) {\n\t  var C = anObject(O).constructor;\n\t  var S;\n\t  return C === undefined || (S = anObject(C)[SPECIES$3]) == undefined ? defaultConstructor : aFunction$1(S);\n\t};\n\n\tvar createMethod$3 = function (CONVERT_TO_STRING) {\n\t  return function ($this, pos) {\n\t    var S = String(requireObjectCoercible($this));\n\t    var position = toInteger(pos);\n\t    var size = S.length;\n\t    var first, second;\n\t    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n\t    first = S.charCodeAt(position);\n\t    return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? S.charAt(position) : first : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n\t  };\n\t};\n\n\tvar stringMultibyte = {\n\t  // `String.prototype.codePointAt` method\n\t  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n\t  codeAt: createMethod$3(false),\n\t  // `String.prototype.at` method\n\t  // https://github.com/mathiasbynens/String.prototype.at\n\t  charAt: createMethod$3(true)\n\t};\n\n\tvar charAt = stringMultibyte.charAt; // `AdvanceStringIndex` abstract operation\n\t// https://tc39.github.io/ecma262/#sec-advancestringindex\n\n\tvar advanceStringIndex = function (S, index, unicode) {\n\t  return index + (unicode ? charAt(S, index).length : 1);\n\t};\n\n\tvar arrayPush = [].push;\n\tvar min$4 = Math.min;\n\tvar MAX_UINT32 = 0xFFFFFFFF; // babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\n\n\tvar SUPPORTS_Y = !fails(function () {\n\t  return !RegExp(MAX_UINT32, 'y');\n\t}); // @@split logic\n\n\tfixRegexpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n\t  var internalSplit;\n\n\t  if ('abbc'.split(/(b)*/)[1] == 'c' || 'test'.split(/(?:)/, -1).length != 4 || 'ab'.split(/(?:ab)*/).length != 2 || '.'.split(/(.?)(.?)/).length != 4 || '.'.split(/()()/).length > 1 || ''.split(/.?/).length) {\n\t    // based on es5-shim implementation, need to rework it\n\t    internalSplit = function (separator, limit) {\n\t      var string = String(requireObjectCoercible(this));\n\t      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n\t      if (lim === 0) return [];\n\t      if (separator === undefined) return [string]; // If `separator` is not a regex, use native split\n\n\t      if (!isRegexp(separator)) {\n\t        return nativeSplit.call(string, separator, lim);\n\t      }\n\n\t      var output = [];\n\t      var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');\n\t      var lastLastIndex = 0; // Make `global` and avoid `lastIndex` issues by working with a copy\n\n\t      var separatorCopy = new RegExp(separator.source, flags + 'g');\n\t      var match, lastIndex, lastLength;\n\n\t      while (match = regexpExec.call(separatorCopy, string)) {\n\t        lastIndex = separatorCopy.lastIndex;\n\n\t        if (lastIndex > lastLastIndex) {\n\t          output.push(string.slice(lastLastIndex, match.index));\n\t          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n\t          lastLength = match[0].length;\n\t          lastLastIndex = lastIndex;\n\t          if (output.length >= lim) break;\n\t        }\n\n\t        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n\t      }\n\n\t      if (lastLastIndex === string.length) {\n\t        if (lastLength || !separatorCopy.test('')) output.push('');\n\t      } else output.push(string.slice(lastLastIndex));\n\n\t      return output.length > lim ? output.slice(0, lim) : output;\n\t    }; // Chakra, V8\n\n\t  } else if ('0'.split(undefined, 0).length) {\n\t    internalSplit = function (separator, limit) {\n\t      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n\t    };\n\t  } else internalSplit = nativeSplit;\n\n\t  return [// `String.prototype.split` method\n\t  // https://tc39.github.io/ecma262/#sec-string.prototype.split\n\t  function split(separator, limit) {\n\t    var O = requireObjectCoercible(this);\n\t    var splitter = separator == undefined ? undefined : separator[SPLIT];\n\t    return splitter !== undefined ? splitter.call(separator, O, limit) : internalSplit.call(String(O), separator, limit);\n\t  }, // `RegExp.prototype[@@split]` method\n\t  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n\t  //\n\t  // NOTE: This cannot be properly polyfilled in engines that don't support\n\t  // the 'y' flag.\n\t  function (regexp, limit) {\n\t    var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n\t    if (res.done) return res.value;\n\t    var rx = anObject(regexp);\n\t    var S = String(this);\n\t    var C = speciesConstructor(rx, RegExp);\n\t    var unicodeMatching = rx.unicode;\n\t    var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (SUPPORTS_Y ? 'y' : 'g'); // ^(? + rx + ) is needed, in combination with some S slicing, to\n\t    // simulate the 'y' flag.\n\n\t    var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n\t    var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n\t    if (lim === 0) return [];\n\t    if (S.length === 0) return regexpExecAbstract(splitter, S) === null ? [S] : [];\n\t    var p = 0;\n\t    var q = 0;\n\t    var A = [];\n\n\t    while (q < S.length) {\n\t      splitter.lastIndex = SUPPORTS_Y ? q : 0;\n\t      var z = regexpExecAbstract(splitter, SUPPORTS_Y ? S : S.slice(q));\n\t      var e;\n\n\t      if (z === null || (e = min$4(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p) {\n\t        q = advanceStringIndex(S, q, unicodeMatching);\n\t      } else {\n\t        A.push(S.slice(p, q));\n\t        if (A.length === lim) return A;\n\n\t        for (var i = 1; i <= z.length - 1; i++) {\n\t          A.push(z[i]);\n\t          if (A.length === lim) return A;\n\t        }\n\n\t        q = p = e;\n\t      }\n\t    }\n\n\t    A.push(S.slice(p));\n\t    return A;\n\t  }];\n\t}, !SUPPORTS_Y);\n\n\t// iterable DOM collections\n\t// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\n\tvar domIterables = {\n\t  CSSRuleList: 0,\n\t  CSSStyleDeclaration: 0,\n\t  CSSValueList: 0,\n\t  ClientRectList: 0,\n\t  DOMRectList: 0,\n\t  DOMStringList: 0,\n\t  DOMTokenList: 1,\n\t  DataTransferItemList: 0,\n\t  FileList: 0,\n\t  HTMLAllCollection: 0,\n\t  HTMLCollection: 0,\n\t  HTMLFormElement: 0,\n\t  HTMLSelectElement: 0,\n\t  MediaList: 0,\n\t  MimeTypeArray: 0,\n\t  NamedNodeMap: 0,\n\t  NodeList: 1,\n\t  PaintRequestList: 0,\n\t  Plugin: 0,\n\t  PluginArray: 0,\n\t  SVGLengthList: 0,\n\t  SVGNumberList: 0,\n\t  SVGPathSegList: 0,\n\t  SVGPointList: 0,\n\t  SVGStringList: 0,\n\t  SVGTransformList: 0,\n\t  SourceBufferList: 0,\n\t  StyleSheetList: 0,\n\t  TextTrackCueList: 0,\n\t  TextTrackList: 0,\n\t  TouchList: 0\n\t};\n\n\tfor (var COLLECTION_NAME in domIterables) {\n\t  var Collection = global_1[COLLECTION_NAME];\n\t  var CollectionPrototype = Collection && Collection.prototype; // some Chrome versions have non-configurable methods on DOMTokenList\n\n\t  if (CollectionPrototype && CollectionPrototype.forEach !== arrayForEach) try {\n\t    createNonEnumerableProperty(CollectionPrototype, 'forEach', arrayForEach);\n\t  } catch (error) {\n\t    CollectionPrototype.forEach = arrayForEach;\n\t  }\n\t}\n\n\tvar runtime_1 = createCommonjsModule(function (module) {\n\t  /**\n\t   * Copyright (c) 2014-present, Facebook, Inc.\n\t   *\n\t   * This source code is licensed under the MIT license found in the\n\t   * LICENSE file in the root directory of this source tree.\n\t   */\n\t  var runtime = function (exports) {\n\n\t    var Op = Object.prototype;\n\t    var hasOwn = Op.hasOwnProperty;\n\t    var undefined$1; // More compressible than void 0.\n\n\t    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n\t    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n\t    function wrap(innerFn, outerFn, self, tryLocsList) {\n\t      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t      var generator = Object.create(protoGenerator.prototype);\n\t      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n\t      // .throw, and .return methods.\n\n\t      generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t      return generator;\n\t    }\n\n\t    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n\t    // record like context.tryEntries[i].completion. This interface could\n\t    // have been (and was previously) designed to take a closure to be\n\t    // invoked without arguments, but in all the cases we care about we\n\t    // already have an existing method we want to call, so there's no need\n\t    // to create a new function object. We can even get away with assuming\n\t    // the method takes exactly one argument, since that happens to be true\n\t    // in every case, so we don't have to touch the arguments object. The\n\t    // only additional allocation required is the completion record, which\n\t    // has a stable shape and so hopefully should be cheap to allocate.\n\n\t    function tryCatch(fn, obj, arg) {\n\t      try {\n\t        return {\n\t          type: \"normal\",\n\t          arg: fn.call(obj, arg)\n\t        };\n\t      } catch (err) {\n\t        return {\n\t          type: \"throw\",\n\t          arg: err\n\t        };\n\t      }\n\t    }\n\n\t    var GenStateSuspendedStart = \"suspendedStart\";\n\t    var GenStateSuspendedYield = \"suspendedYield\";\n\t    var GenStateExecuting = \"executing\";\n\t    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n\t    // breaking out of the dispatch switch statement.\n\n\t    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n\t    // .constructor.prototype properties for functions that return Generator\n\t    // objects. For full spec compliance, you may wish to configure your\n\t    // minifier not to mangle the names of these two functions.\n\n\t    function Generator() {}\n\n\t    function GeneratorFunction() {}\n\n\t    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n\t    // don't natively support it.\n\n\n\t    var IteratorPrototype = {};\n\n\t    IteratorPrototype[iteratorSymbol] = function () {\n\t      return this;\n\t    };\n\n\t    var getProto = Object.getPrototypeOf;\n\t    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n\t    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n\t      // This environment has a native %IteratorPrototype%; use it instead\n\t      // of the polyfill.\n\t      IteratorPrototype = NativeIteratorPrototype;\n\t    }\n\n\t    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\t    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n\t    // Iterator interface in terms of a single ._invoke method.\n\n\t    function defineIteratorMethods(prototype) {\n\t      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n\t        prototype[method] = function (arg) {\n\t          return this._invoke(method, arg);\n\t        };\n\t      });\n\t    }\n\n\t    exports.isGeneratorFunction = function (genFun) {\n\t      var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n\t      // do is to check its .name property.\n\t      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n\t    };\n\n\t    exports.mark = function (genFun) {\n\t      if (Object.setPrototypeOf) {\n\t        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t      } else {\n\t        genFun.__proto__ = GeneratorFunctionPrototype;\n\n\t        if (!(toStringTagSymbol in genFun)) {\n\t          genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t        }\n\t      }\n\n\t      genFun.prototype = Object.create(Gp);\n\t      return genFun;\n\t    }; // Within the body of any async function, `await x` is transformed to\n\t    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t    // meant to be awaited.\n\n\n\t    exports.awrap = function (arg) {\n\t      return {\n\t        __await: arg\n\t      };\n\t    };\n\n\t    function AsyncIterator(generator) {\n\t      function invoke(method, arg, resolve, reject) {\n\t        var record = tryCatch(generator[method], generator, arg);\n\n\t        if (record.type === \"throw\") {\n\t          reject(record.arg);\n\t        } else {\n\t          var result = record.arg;\n\t          var value = result.value;\n\n\t          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n\t            return Promise.resolve(value.__await).then(function (value) {\n\t              invoke(\"next\", value, resolve, reject);\n\t            }, function (err) {\n\t              invoke(\"throw\", err, resolve, reject);\n\t            });\n\t          }\n\n\t          return Promise.resolve(value).then(function (unwrapped) {\n\t            // When a yielded Promise is resolved, its final value becomes\n\t            // the .value of the Promise<{value,done}> result for the\n\t            // current iteration.\n\t            result.value = unwrapped;\n\t            resolve(result);\n\t          }, function (error) {\n\t            // If a rejected Promise was yielded, throw the rejection back\n\t            // into the async generator function so it can be handled there.\n\t            return invoke(\"throw\", error, resolve, reject);\n\t          });\n\t        }\n\t      }\n\n\t      var previousPromise;\n\n\t      function enqueue(method, arg) {\n\t        function callInvokeWithMethodAndArg() {\n\t          return new Promise(function (resolve, reject) {\n\t            invoke(method, arg, resolve, reject);\n\t          });\n\t        }\n\n\t        return previousPromise = // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n\t        // invocations of the iterator.\n\t        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n\t      } // Define the unified helper method that is used to implement .next,\n\t      // .throw, and .return (see defineIteratorMethods).\n\n\n\t      this._invoke = enqueue;\n\t    }\n\n\t    defineIteratorMethods(AsyncIterator.prototype);\n\n\t    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n\t      return this;\n\t    };\n\n\t    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n\t    // AsyncIterator objects; they just return a Promise for the value of\n\t    // the final result produced by the iterator.\n\n\t    exports.async = function (innerFn, outerFn, self, tryLocsList) {\n\t      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n\t      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function (result) {\n\t        return result.done ? result.value : iter.next();\n\t      });\n\t    };\n\n\t    function makeInvokeMethod(innerFn, self, context) {\n\t      var state = GenStateSuspendedStart;\n\t      return function invoke(method, arg) {\n\t        if (state === GenStateExecuting) {\n\t          throw new Error(\"Generator is already running\");\n\t        }\n\n\t        if (state === GenStateCompleted) {\n\t          if (method === \"throw\") {\n\t            throw arg;\n\t          } // Be forgiving, per 25.3.3.3.3 of the spec:\n\t          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n\t          return doneResult();\n\t        }\n\n\t        context.method = method;\n\t        context.arg = arg;\n\n\t        while (true) {\n\t          var delegate = context.delegate;\n\n\t          if (delegate) {\n\t            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n\t            if (delegateResult) {\n\t              if (delegateResult === ContinueSentinel) continue;\n\t              return delegateResult;\n\t            }\n\t          }\n\n\t          if (context.method === \"next\") {\n\t            // Setting context._sent for legacy support of Babel's\n\t            // function.sent implementation.\n\t            context.sent = context._sent = context.arg;\n\t          } else if (context.method === \"throw\") {\n\t            if (state === GenStateSuspendedStart) {\n\t              state = GenStateCompleted;\n\t              throw context.arg;\n\t            }\n\n\t            context.dispatchException(context.arg);\n\t          } else if (context.method === \"return\") {\n\t            context.abrupt(\"return\", context.arg);\n\t          }\n\n\t          state = GenStateExecuting;\n\t          var record = tryCatch(innerFn, self, context);\n\n\t          if (record.type === \"normal\") {\n\t            // If an exception is thrown from innerFn, we leave state ===\n\t            // GenStateExecuting and loop back for another invocation.\n\t            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n\t            if (record.arg === ContinueSentinel) {\n\t              continue;\n\t            }\n\n\t            return {\n\t              value: record.arg,\n\t              done: context.done\n\t            };\n\t          } else if (record.type === \"throw\") {\n\t            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n\t            // context.dispatchException(context.arg) call above.\n\n\t            context.method = \"throw\";\n\t            context.arg = record.arg;\n\t          }\n\t        }\n\t      };\n\t    } // Call delegate.iterator[context.method](context.arg) and handle the\n\t    // result, either by returning a { value, done } result from the\n\t    // delegate iterator, or by modifying context.method and context.arg,\n\t    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n\t    function maybeInvokeDelegate(delegate, context) {\n\t      var method = delegate.iterator[context.method];\n\n\t      if (method === undefined$1) {\n\t        // A .throw or .return when the delegate iterator has no .throw\n\t        // method always terminates the yield* loop.\n\t        context.delegate = null;\n\n\t        if (context.method === \"throw\") {\n\t          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n\t          if (delegate.iterator[\"return\"]) {\n\t            // If the delegate iterator has a return method, give it a\n\t            // chance to clean up.\n\t            context.method = \"return\";\n\t            context.arg = undefined$1;\n\t            maybeInvokeDelegate(delegate, context);\n\n\t            if (context.method === \"throw\") {\n\t              // If maybeInvokeDelegate(context) changed context.method from\n\t              // \"return\" to \"throw\", let that override the TypeError below.\n\t              return ContinueSentinel;\n\t            }\n\t          }\n\n\t          context.method = \"throw\";\n\t          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n\t        }\n\n\t        return ContinueSentinel;\n\t      }\n\n\t      var record = tryCatch(method, delegate.iterator, context.arg);\n\n\t      if (record.type === \"throw\") {\n\t        context.method = \"throw\";\n\t        context.arg = record.arg;\n\t        context.delegate = null;\n\t        return ContinueSentinel;\n\t      }\n\n\t      var info = record.arg;\n\n\t      if (!info) {\n\t        context.method = \"throw\";\n\t        context.arg = new TypeError(\"iterator result is not an object\");\n\t        context.delegate = null;\n\t        return ContinueSentinel;\n\t      }\n\n\t      if (info.done) {\n\t        // Assign the result of the finished delegate to the temporary\n\t        // variable specified by delegate.resultName (see delegateYield).\n\t        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n\t        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n\t        // exception, let the outer generator proceed normally. If\n\t        // context.method was \"next\", forget context.arg since it has been\n\t        // \"consumed\" by the delegate iterator. If context.method was\n\t        // \"return\", allow the original .return call to continue in the\n\t        // outer generator.\n\n\t        if (context.method !== \"return\") {\n\t          context.method = \"next\";\n\t          context.arg = undefined$1;\n\t        }\n\t      } else {\n\t        // Re-yield the result returned by the delegate method.\n\t        return info;\n\t      } // The delegate iterator is finished, so forget it and continue with\n\t      // the outer generator.\n\n\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    } // Define Generator.prototype.{next,throw,return} in terms of the\n\t    // unified ._invoke helper method.\n\n\n\t    defineIteratorMethods(Gp);\n\t    Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n\t    // @@iterator function is called on it. Some browsers' implementations of the\n\t    // iterator prototype chain incorrectly implement this, causing the Generator\n\t    // object to not be returned from this call. This ensures that doesn't happen.\n\t    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n\t    Gp[iteratorSymbol] = function () {\n\t      return this;\n\t    };\n\n\t    Gp.toString = function () {\n\t      return \"[object Generator]\";\n\t    };\n\n\t    function pushTryEntry(locs) {\n\t      var entry = {\n\t        tryLoc: locs[0]\n\t      };\n\n\t      if (1 in locs) {\n\t        entry.catchLoc = locs[1];\n\t      }\n\n\t      if (2 in locs) {\n\t        entry.finallyLoc = locs[2];\n\t        entry.afterLoc = locs[3];\n\t      }\n\n\t      this.tryEntries.push(entry);\n\t    }\n\n\t    function resetTryEntry(entry) {\n\t      var record = entry.completion || {};\n\t      record.type = \"normal\";\n\t      delete record.arg;\n\t      entry.completion = record;\n\t    }\n\n\t    function Context(tryLocsList) {\n\t      // The root entry object (effectively a try statement without a catch\n\t      // or a finally block) gives us a place to store values thrown from\n\t      // locations where there is no enclosing try statement.\n\t      this.tryEntries = [{\n\t        tryLoc: \"root\"\n\t      }];\n\t      tryLocsList.forEach(pushTryEntry, this);\n\t      this.reset(true);\n\t    }\n\n\t    exports.keys = function (object) {\n\t      var keys = [];\n\n\t      for (var key in object) {\n\t        keys.push(key);\n\t      }\n\n\t      keys.reverse(); // Rather than returning an object with a next method, we keep\n\t      // things simple and return the next function itself.\n\n\t      return function next() {\n\t        while (keys.length) {\n\t          var key = keys.pop();\n\n\t          if (key in object) {\n\t            next.value = key;\n\t            next.done = false;\n\t            return next;\n\t          }\n\t        } // To avoid creating an additional object, we just hang the .value\n\t        // and .done properties off the next function object itself. This\n\t        // also ensures that the minifier will not anonymize the function.\n\n\n\t        next.done = true;\n\t        return next;\n\t      };\n\t    };\n\n\t    function values(iterable) {\n\t      if (iterable) {\n\t        var iteratorMethod = iterable[iteratorSymbol];\n\n\t        if (iteratorMethod) {\n\t          return iteratorMethod.call(iterable);\n\t        }\n\n\t        if (typeof iterable.next === \"function\") {\n\t          return iterable;\n\t        }\n\n\t        if (!isNaN(iterable.length)) {\n\t          var i = -1,\n\t              next = function next() {\n\t            while (++i < iterable.length) {\n\t              if (hasOwn.call(iterable, i)) {\n\t                next.value = iterable[i];\n\t                next.done = false;\n\t                return next;\n\t              }\n\t            }\n\n\t            next.value = undefined$1;\n\t            next.done = true;\n\t            return next;\n\t          };\n\n\t          return next.next = next;\n\t        }\n\t      } // Return an iterator with no values.\n\n\n\t      return {\n\t        next: doneResult\n\t      };\n\t    }\n\n\t    exports.values = values;\n\n\t    function doneResult() {\n\t      return {\n\t        value: undefined$1,\n\t        done: true\n\t      };\n\t    }\n\n\t    Context.prototype = {\n\t      constructor: Context,\n\t      reset: function (skipTempReset) {\n\t        this.prev = 0;\n\t        this.next = 0; // Resetting context._sent for legacy support of Babel's\n\t        // function.sent implementation.\n\n\t        this.sent = this._sent = undefined$1;\n\t        this.done = false;\n\t        this.delegate = null;\n\t        this.method = \"next\";\n\t        this.arg = undefined$1;\n\t        this.tryEntries.forEach(resetTryEntry);\n\n\t        if (!skipTempReset) {\n\t          for (var name in this) {\n\t            // Not sure about the optimal order of these conditions:\n\t            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n\t              this[name] = undefined$1;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      stop: function () {\n\t        this.done = true;\n\t        var rootEntry = this.tryEntries[0];\n\t        var rootRecord = rootEntry.completion;\n\n\t        if (rootRecord.type === \"throw\") {\n\t          throw rootRecord.arg;\n\t        }\n\n\t        return this.rval;\n\t      },\n\t      dispatchException: function (exception) {\n\t        if (this.done) {\n\t          throw exception;\n\t        }\n\n\t        var context = this;\n\n\t        function handle(loc, caught) {\n\t          record.type = \"throw\";\n\t          record.arg = exception;\n\t          context.next = loc;\n\n\t          if (caught) {\n\t            // If the dispatched exception was caught by a catch block,\n\t            // then let that catch block handle the exception normally.\n\t            context.method = \"next\";\n\t            context.arg = undefined$1;\n\t          }\n\n\t          return !!caught;\n\t        }\n\n\t        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t          var entry = this.tryEntries[i];\n\t          var record = entry.completion;\n\n\t          if (entry.tryLoc === \"root\") {\n\t            // Exception thrown outside of any try block that could handle\n\t            // it, so set the completion value of the entire function to\n\t            // throw the exception.\n\t            return handle(\"end\");\n\t          }\n\n\t          if (entry.tryLoc <= this.prev) {\n\t            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n\t            if (hasCatch && hasFinally) {\n\t              if (this.prev < entry.catchLoc) {\n\t                return handle(entry.catchLoc, true);\n\t              } else if (this.prev < entry.finallyLoc) {\n\t                return handle(entry.finallyLoc);\n\t              }\n\t            } else if (hasCatch) {\n\t              if (this.prev < entry.catchLoc) {\n\t                return handle(entry.catchLoc, true);\n\t              }\n\t            } else if (hasFinally) {\n\t              if (this.prev < entry.finallyLoc) {\n\t                return handle(entry.finallyLoc);\n\t              }\n\t            } else {\n\t              throw new Error(\"try statement without catch or finally\");\n\t            }\n\t          }\n\t        }\n\t      },\n\t      abrupt: function (type, arg) {\n\t        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t          var entry = this.tryEntries[i];\n\n\t          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n\t            var finallyEntry = entry;\n\t            break;\n\t          }\n\t        }\n\n\t        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n\t          // Ignore the finally entry if control is not jumping to a\n\t          // location outside the try/catch block.\n\t          finallyEntry = null;\n\t        }\n\n\t        var record = finallyEntry ? finallyEntry.completion : {};\n\t        record.type = type;\n\t        record.arg = arg;\n\n\t        if (finallyEntry) {\n\t          this.method = \"next\";\n\t          this.next = finallyEntry.finallyLoc;\n\t          return ContinueSentinel;\n\t        }\n\n\t        return this.complete(record);\n\t      },\n\t      complete: function (record, afterLoc) {\n\t        if (record.type === \"throw\") {\n\t          throw record.arg;\n\t        }\n\n\t        if (record.type === \"break\" || record.type === \"continue\") {\n\t          this.next = record.arg;\n\t        } else if (record.type === \"return\") {\n\t          this.rval = this.arg = record.arg;\n\t          this.method = \"return\";\n\t          this.next = \"end\";\n\t        } else if (record.type === \"normal\" && afterLoc) {\n\t          this.next = afterLoc;\n\t        }\n\n\t        return ContinueSentinel;\n\t      },\n\t      finish: function (finallyLoc) {\n\t        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t          var entry = this.tryEntries[i];\n\n\t          if (entry.finallyLoc === finallyLoc) {\n\t            this.complete(entry.completion, entry.afterLoc);\n\t            resetTryEntry(entry);\n\t            return ContinueSentinel;\n\t          }\n\t        }\n\t      },\n\t      \"catch\": function (tryLoc) {\n\t        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t          var entry = this.tryEntries[i];\n\n\t          if (entry.tryLoc === tryLoc) {\n\t            var record = entry.completion;\n\n\t            if (record.type === \"throw\") {\n\t              var thrown = record.arg;\n\t              resetTryEntry(entry);\n\t            }\n\n\t            return thrown;\n\t          }\n\t        } // The context.catch method must only be called with a location\n\t        // argument that corresponds to a known catch block.\n\n\n\t        throw new Error(\"illegal catch attempt\");\n\t      },\n\t      delegateYield: function (iterable, resultName, nextLoc) {\n\t        this.delegate = {\n\t          iterator: values(iterable),\n\t          resultName: resultName,\n\t          nextLoc: nextLoc\n\t        };\n\n\t        if (this.method === \"next\") {\n\t          // Deliberately forget the last sent value so that we don't\n\t          // accidentally pass it on to the delegate.\n\t          this.arg = undefined$1;\n\t        }\n\n\t        return ContinueSentinel;\n\t      }\n\t    }; // Regardless of whether this script is executing as a CommonJS module\n\t    // or not, return the runtime object so that we can declare the variable\n\t    // regeneratorRuntime in the outer scope, which allows this module to be\n\t    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n\t    return exports;\n\t  }( // If this script is executing as a CommonJS module, use module.exports\n\t  // as the regeneratorRuntime namespace. Otherwise create a new empty\n\t  // object. Either way, the resulting object will be used to initialize\n\t  // the regeneratorRuntime variable at the top of this file.\n\t   module.exports );\n\n\t  try {\n\t    regeneratorRuntime = runtime;\n\t  } catch (accidentalStrictMode) {\n\t    // This module should not be running in strict mode, so the above\n\t    // assignment should always work unless something is misconfigured. Just\n\t    // in case runtime.js accidentally runs in strict mode, we can escape\n\t    // strict mode using a global Function call. This could conceivably fail\n\t    // if a Content Security Policy forbids using Function, but in that case\n\t    // the proper solution is to fix the accidental strict mode problem. If\n\t    // you've misconfigured your bundler to force strict mode and applied a\n\t    // CSP to forbid Function, and you're not willing to fix either of those\n\t    // problems, please detail your unique predicament in a GitHub issue.\n\t    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n\t  }\n\t});\n\n\tfunction _typeof(obj) {\n\t  \"@babel/helpers - typeof\";\n\n\t  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n\t    _typeof = function (obj) {\n\t      return typeof obj;\n\t    };\n\t  } else {\n\t    _typeof = function (obj) {\n\t      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n\t    };\n\t  }\n\n\t  return _typeof(obj);\n\t}\n\n\tfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n\t  try {\n\t    var info = gen[key](arg);\n\t    var value = info.value;\n\t  } catch (error) {\n\t    reject(error);\n\t    return;\n\t  }\n\n\t  if (info.done) {\n\t    resolve(value);\n\t  } else {\n\t    Promise.resolve(value).then(_next, _throw);\n\t  }\n\t}\n\n\tfunction _asyncToGenerator(fn) {\n\t  return function () {\n\t    var self = this,\n\t        args = arguments;\n\t    return new Promise(function (resolve, reject) {\n\t      var gen = fn.apply(self, args);\n\n\t      function _next(value) {\n\t        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n\t      }\n\n\t      function _throw(err) {\n\t        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n\t      }\n\n\t      _next(undefined);\n\t    });\n\t  };\n\t}\n\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\n\tfunction _defineProperties(target, props) {\n\t  for (var i = 0; i < props.length; i++) {\n\t    var descriptor = props[i];\n\t    descriptor.enumerable = descriptor.enumerable || false;\n\t    descriptor.configurable = true;\n\t    if (\"value\" in descriptor) descriptor.writable = true;\n\t    Object.defineProperty(target, descriptor.key, descriptor);\n\t  }\n\t}\n\n\tfunction _createClass(Constructor, protoProps, staticProps) {\n\t  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n\t  if (staticProps) _defineProperties(Constructor, staticProps);\n\t  return Constructor;\n\t}\n\n\tfunction _inherits(subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function\");\n\t  }\n\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) _setPrototypeOf(subClass, superClass);\n\t}\n\n\tfunction _getPrototypeOf(o) {\n\t  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n\t    return o.__proto__ || Object.getPrototypeOf(o);\n\t  };\n\t  return _getPrototypeOf(o);\n\t}\n\n\tfunction _setPrototypeOf(o, p) {\n\t  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n\t    o.__proto__ = p;\n\t    return o;\n\t  };\n\n\t  return _setPrototypeOf(o, p);\n\t}\n\n\tfunction isNativeReflectConstruct() {\n\t  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\t  if (Reflect.construct.sham) return false;\n\t  if (typeof Proxy === \"function\") return true;\n\n\t  try {\n\t    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\n\tfunction _construct(Parent, args, Class) {\n\t  if (isNativeReflectConstruct()) {\n\t    _construct = Reflect.construct;\n\t  } else {\n\t    _construct = function _construct(Parent, args, Class) {\n\t      var a = [null];\n\t      a.push.apply(a, args);\n\t      var Constructor = Function.bind.apply(Parent, a);\n\t      var instance = new Constructor();\n\t      if (Class) _setPrototypeOf(instance, Class.prototype);\n\t      return instance;\n\t    };\n\t  }\n\n\t  return _construct.apply(null, arguments);\n\t}\n\n\tfunction _isNativeFunction(fn) {\n\t  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n\t}\n\n\tfunction _wrapNativeSuper(Class) {\n\t  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n\t  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n\t    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n\t    if (typeof Class !== \"function\") {\n\t      throw new TypeError(\"Super expression must either be null or a function\");\n\t    }\n\n\t    if (typeof _cache !== \"undefined\") {\n\t      if (_cache.has(Class)) return _cache.get(Class);\n\n\t      _cache.set(Class, Wrapper);\n\t    }\n\n\t    function Wrapper() {\n\t      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n\t    }\n\n\t    Wrapper.prototype = Object.create(Class.prototype, {\n\t      constructor: {\n\t        value: Wrapper,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t    return _setPrototypeOf(Wrapper, Class);\n\t  };\n\n\t  return _wrapNativeSuper(Class);\n\t}\n\n\tfunction _assertThisInitialized(self) {\n\t  if (self === void 0) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\n\t  return self;\n\t}\n\n\tfunction _possibleConstructorReturn(self, call) {\n\t  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n\t    return call;\n\t  }\n\n\t  return _assertThisInitialized(self);\n\t}\n\n\tfunction _slicedToArray(arr, i) {\n\t  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n\t}\n\n\tfunction _toArray(arr) {\n\t  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();\n\t}\n\n\tfunction _toConsumableArray(arr) {\n\t  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n\t}\n\n\tfunction _arrayWithoutHoles(arr) {\n\t  if (Array.isArray(arr)) {\n\t    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n\t    return arr2;\n\t  }\n\t}\n\n\tfunction _arrayWithHoles(arr) {\n\t  if (Array.isArray(arr)) return arr;\n\t}\n\n\tfunction _iterableToArray(iter) {\n\t  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n\t}\n\n\tfunction _iterableToArrayLimit(arr, i) {\n\t  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n\t    return;\n\t  }\n\n\t  var _arr = [];\n\t  var _n = true;\n\t  var _d = false;\n\t  var _e = undefined;\n\n\t  try {\n\t    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n\t      _arr.push(_s.value);\n\n\t      if (i && _arr.length === i) break;\n\t    }\n\t  } catch (err) {\n\t    _d = true;\n\t    _e = err;\n\t  } finally {\n\t    try {\n\t      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n\t    } finally {\n\t      if (_d) throw _e;\n\t    }\n\t  }\n\n\t  return _arr;\n\t}\n\n\tfunction _nonIterableSpread() {\n\t  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n\t}\n\n\tfunction _nonIterableRest() {\n\t  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n\t}\n\n\tvar nativeGetOwnPropertyNames = objectGetOwnPropertyNames.f;\n\tvar toString$1 = {}.toString;\n\tvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];\n\n\tvar getWindowNames = function (it) {\n\t  try {\n\t    return nativeGetOwnPropertyNames(it);\n\t  } catch (error) {\n\t    return windowNames.slice();\n\t  }\n\t}; // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\n\n\tvar f$5 = function getOwnPropertyNames(it) {\n\t  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : nativeGetOwnPropertyNames(toIndexedObject(it));\n\t};\n\n\tvar objectGetOwnPropertyNamesExternal = {\n\t  f: f$5\n\t};\n\n\tvar f$6 = wellKnownSymbol;\n\tvar wellKnownSymbolWrapped = {\n\t  f: f$6\n\t};\n\n\tvar defineProperty$2 = objectDefineProperty.f;\n\n\tvar defineWellKnownSymbol = function (NAME) {\n\t  var Symbol = path.Symbol || (path.Symbol = {});\n\t  if (!has(Symbol, NAME)) defineProperty$2(Symbol, NAME, {\n\t    value: wellKnownSymbolWrapped.f(NAME)\n\t  });\n\t};\n\n\tvar defineProperty$3 = objectDefineProperty.f;\n\tvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\n\tvar setToStringTag = function (it, TAG, STATIC) {\n\t  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n\t    defineProperty$3(it, TO_STRING_TAG, {\n\t      configurable: true,\n\t      value: TAG\n\t    });\n\t  }\n\t};\n\n\tvar $forEach$1 = arrayIteration.forEach;\n\tvar HIDDEN = sharedKey('hidden');\n\tvar SYMBOL = 'Symbol';\n\tvar PROTOTYPE$1 = 'prototype';\n\tvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\tvar setInternalState = internalState.set;\n\tvar getInternalState = internalState.getterFor(SYMBOL);\n\tvar ObjectPrototype = Object[PROTOTYPE$1];\n\tvar $Symbol = global_1.Symbol;\n\tvar $stringify = getBuiltIn('JSON', 'stringify');\n\tvar nativeGetOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;\n\tvar nativeDefineProperty$1 = objectDefineProperty.f;\n\tvar nativeGetOwnPropertyNames$1 = objectGetOwnPropertyNamesExternal.f;\n\tvar nativePropertyIsEnumerable$1 = objectPropertyIsEnumerable.f;\n\tvar AllSymbols = shared('symbols');\n\tvar ObjectPrototypeSymbols = shared('op-symbols');\n\tvar StringToSymbolRegistry = shared('string-to-symbol-registry');\n\tvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\tvar WellKnownSymbolsStore$1 = shared('wks');\n\tvar QObject = global_1.QObject; // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\n\n\tvar USE_SETTER = !QObject || !QObject[PROTOTYPE$1] || !QObject[PROTOTYPE$1].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\n\n\tvar setSymbolDescriptor = descriptors && fails(function () {\n\t  return objectCreate(nativeDefineProperty$1({}, 'a', {\n\t    get: function () {\n\t      return nativeDefineProperty$1(this, 'a', {\n\t        value: 7\n\t      }).a;\n\t    }\n\t  })).a != 7;\n\t}) ? function (O, P, Attributes) {\n\t  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype, P);\n\t  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n\t  nativeDefineProperty$1(O, P, Attributes);\n\n\t  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n\t    nativeDefineProperty$1(ObjectPrototype, P, ObjectPrototypeDescriptor);\n\t  }\n\t} : nativeDefineProperty$1;\n\n\tvar wrap = function (tag, description) {\n\t  var symbol = AllSymbols[tag] = objectCreate($Symbol[PROTOTYPE$1]);\n\t  setInternalState(symbol, {\n\t    type: SYMBOL,\n\t    tag: tag,\n\t    description: description\n\t  });\n\t  if (!descriptors) symbol.description = description;\n\t  return symbol;\n\t};\n\n\tvar isSymbol = useSymbolAsUid ? function (it) {\n\t  return typeof it == 'symbol';\n\t} : function (it) {\n\t  return Object(it) instanceof $Symbol;\n\t};\n\n\tvar $defineProperty = function defineProperty(O, P, Attributes) {\n\t  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n\t  anObject(O);\n\t  var key = toPrimitive(P, true);\n\t  anObject(Attributes);\n\n\t  if (has(AllSymbols, key)) {\n\t    if (!Attributes.enumerable) {\n\t      if (!has(O, HIDDEN)) nativeDefineProperty$1(O, HIDDEN, createPropertyDescriptor(1, {}));\n\t      O[HIDDEN][key] = true;\n\t    } else {\n\t      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n\t      Attributes = objectCreate(Attributes, {\n\t        enumerable: createPropertyDescriptor(0, false)\n\t      });\n\t    }\n\n\t    return setSymbolDescriptor(O, key, Attributes);\n\t  }\n\n\t  return nativeDefineProperty$1(O, key, Attributes);\n\t};\n\n\tvar $defineProperties = function defineProperties(O, Properties) {\n\t  anObject(O);\n\t  var properties = toIndexedObject(Properties);\n\t  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n\t  $forEach$1(keys, function (key) {\n\t    if (!descriptors || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n\t  });\n\t  return O;\n\t};\n\n\tvar $create = function create(O, Properties) {\n\t  return Properties === undefined ? objectCreate(O) : $defineProperties(objectCreate(O), Properties);\n\t};\n\n\tvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n\t  var P = toPrimitive(V, true);\n\t  var enumerable = nativePropertyIsEnumerable$1.call(this, P);\n\t  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n\t  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n\t};\n\n\tvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n\t  var it = toIndexedObject(O);\n\t  var key = toPrimitive(P, true);\n\t  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n\t  var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);\n\n\t  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n\t    descriptor.enumerable = true;\n\t  }\n\n\t  return descriptor;\n\t};\n\n\tvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n\t  var names = nativeGetOwnPropertyNames$1(toIndexedObject(O));\n\t  var result = [];\n\t  $forEach$1(names, function (key) {\n\t    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n\t  });\n\t  return result;\n\t};\n\n\tvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n\t  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n\t  var names = nativeGetOwnPropertyNames$1(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n\t  var result = [];\n\t  $forEach$1(names, function (key) {\n\t    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n\t      result.push(AllSymbols[key]);\n\t    }\n\t  });\n\t  return result;\n\t}; // `Symbol` constructor\n\t// https://tc39.github.io/ecma262/#sec-symbol-constructor\n\n\n\tif (!nativeSymbol) {\n\t  $Symbol = function Symbol() {\n\t    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n\t    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n\t    var tag = uid(description);\n\n\t    var setter = function (value) {\n\t      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n\t      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n\t      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n\t    };\n\n\t    if (descriptors && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, {\n\t      configurable: true,\n\t      set: setter\n\t    });\n\t    return wrap(tag, description);\n\t  };\n\n\t  redefine($Symbol[PROTOTYPE$1], 'toString', function toString() {\n\t    return getInternalState(this).tag;\n\t  });\n\t  redefine($Symbol, 'withoutSetter', function (description) {\n\t    return wrap(uid(description), description);\n\t  });\n\t  objectPropertyIsEnumerable.f = $propertyIsEnumerable;\n\t  objectDefineProperty.f = $defineProperty;\n\t  objectGetOwnPropertyDescriptor.f = $getOwnPropertyDescriptor;\n\t  objectGetOwnPropertyNames.f = objectGetOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n\t  objectGetOwnPropertySymbols.f = $getOwnPropertySymbols;\n\n\t  wellKnownSymbolWrapped.f = function (name) {\n\t    return wrap(wellKnownSymbol(name), name);\n\t  };\n\n\t  if (descriptors) {\n\t    // https://github.com/tc39/proposal-Symbol-description\n\t    nativeDefineProperty$1($Symbol[PROTOTYPE$1], 'description', {\n\t      configurable: true,\n\t      get: function description() {\n\t        return getInternalState(this).description;\n\t      }\n\t    });\n\n\t    {\n\t      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, {\n\t        unsafe: true\n\t      });\n\t    }\n\t  }\n\t}\n\n\t_export({\n\t  global: true,\n\t  wrap: true,\n\t  forced: !nativeSymbol,\n\t  sham: !nativeSymbol\n\t}, {\n\t  Symbol: $Symbol\n\t});\n\t$forEach$1(objectKeys(WellKnownSymbolsStore$1), function (name) {\n\t  defineWellKnownSymbol(name);\n\t});\n\t_export({\n\t  target: SYMBOL,\n\t  stat: true,\n\t  forced: !nativeSymbol\n\t}, {\n\t  // `Symbol.for` method\n\t  // https://tc39.github.io/ecma262/#sec-symbol.for\n\t  'for': function (key) {\n\t    var string = String(key);\n\t    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n\t    var symbol = $Symbol(string);\n\t    StringToSymbolRegistry[string] = symbol;\n\t    SymbolToStringRegistry[symbol] = string;\n\t    return symbol;\n\t  },\n\t  // `Symbol.keyFor` method\n\t  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n\t  keyFor: function keyFor(sym) {\n\t    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n\t    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n\t  },\n\t  useSetter: function () {\n\t    USE_SETTER = true;\n\t  },\n\t  useSimple: function () {\n\t    USE_SETTER = false;\n\t  }\n\t});\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: !nativeSymbol,\n\t  sham: !descriptors\n\t}, {\n\t  // `Object.create` method\n\t  // https://tc39.github.io/ecma262/#sec-object.create\n\t  create: $create,\n\t  // `Object.defineProperty` method\n\t  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n\t  defineProperty: $defineProperty,\n\t  // `Object.defineProperties` method\n\t  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n\t  defineProperties: $defineProperties,\n\t  // `Object.getOwnPropertyDescriptor` method\n\t  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n\t  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n\t});\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: !nativeSymbol\n\t}, {\n\t  // `Object.getOwnPropertyNames` method\n\t  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n\t  getOwnPropertyNames: $getOwnPropertyNames,\n\t  // `Object.getOwnPropertySymbols` method\n\t  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n\t  getOwnPropertySymbols: $getOwnPropertySymbols\n\t}); // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n\t// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: fails(function () {\n\t    objectGetOwnPropertySymbols.f(1);\n\t  })\n\t}, {\n\t  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n\t    return objectGetOwnPropertySymbols.f(toObject(it));\n\t  }\n\t}); // `JSON.stringify` method behavior with symbols\n\t// https://tc39.github.io/ecma262/#sec-json.stringify\n\n\tif ($stringify) {\n\t  var FORCED_JSON_STRINGIFY = !nativeSymbol || fails(function () {\n\t    var symbol = $Symbol(); // MS Edge converts symbol values to JSON as {}\n\n\t    return $stringify([symbol]) != '[null]' // WebKit converts symbol values to JSON as null\n\t    || $stringify({\n\t      a: symbol\n\t    }) != '{}' // V8 throws on boxed symbols\n\t    || $stringify(Object(symbol)) != '{}';\n\t  });\n\t  _export({\n\t    target: 'JSON',\n\t    stat: true,\n\t    forced: FORCED_JSON_STRINGIFY\n\t  }, {\n\t    // eslint-disable-next-line no-unused-vars\n\t    stringify: function stringify(it, replacer, space) {\n\t      var args = [it];\n\t      var index = 1;\n\t      var $replacer;\n\n\t      while (arguments.length > index) args.push(arguments[index++]);\n\n\t      $replacer = replacer;\n\t      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n\n\t      if (!isArray(replacer)) replacer = function (key, value) {\n\t        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n\t        if (!isSymbol(value)) return value;\n\t      };\n\t      args[1] = replacer;\n\t      return $stringify.apply(null, args);\n\t    }\n\t  });\n\t} // `Symbol.prototype[@@toPrimitive]` method\n\t// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\n\n\n\tif (!$Symbol[PROTOTYPE$1][TO_PRIMITIVE]) {\n\t  createNonEnumerableProperty($Symbol[PROTOTYPE$1], TO_PRIMITIVE, $Symbol[PROTOTYPE$1].valueOf);\n\t} // `Symbol.prototype[@@toStringTag]` property\n\t// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\n\n\n\tsetToStringTag($Symbol, SYMBOL);\n\thiddenKeys[HIDDEN] = true;\n\n\tvar defineProperty$4 = objectDefineProperty.f;\n\tvar NativeSymbol = global_1.Symbol;\n\n\tif (descriptors && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) || // Safari 12 bug\n\tNativeSymbol().description !== undefined)) {\n\t  var EmptyStringDescriptionStore = {}; // wrap Symbol constructor for correct work with undefined description\n\n\t  var SymbolWrapper = function Symbol() {\n\t    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n\t    var result = this instanceof SymbolWrapper ? new NativeSymbol(description) // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n\t    : description === undefined ? NativeSymbol() : NativeSymbol(description);\n\t    if (description === '') EmptyStringDescriptionStore[result] = true;\n\t    return result;\n\t  };\n\n\t  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n\t  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n\t  symbolPrototype.constructor = SymbolWrapper;\n\t  var symbolToString = symbolPrototype.toString;\n\t  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n\t  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n\t  defineProperty$4(symbolPrototype, 'description', {\n\t    configurable: true,\n\t    get: function description() {\n\t      var symbol = isObject(this) ? this.valueOf() : this;\n\t      var string = symbolToString.call(symbol);\n\t      if (has(EmptyStringDescriptionStore, symbol)) return '';\n\t      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n\t      return desc === '' ? undefined : desc;\n\t    }\n\t  });\n\t  _export({\n\t    global: true,\n\t    forced: true\n\t  }, {\n\t    Symbol: SymbolWrapper\n\t  });\n\t}\n\n\t// https://tc39.github.io/ecma262/#sec-symbol.iterator\n\n\tdefineWellKnownSymbol('iterator');\n\n\tvar createProperty = function (object, key, value) {\n\t  var propertyKey = toPrimitive(key);\n\t  if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));else object[propertyKey] = value;\n\t};\n\n\tvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\tvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\n\tvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded'; // We can't use this feature detection in V8 since it causes\n\t// deoptimization and serious performance degradation\n\t// https://github.com/zloirock/core-js/issues/679\n\n\tvar IS_CONCAT_SPREADABLE_SUPPORT = engineV8Version >= 51 || !fails(function () {\n\t  var array = [];\n\t  array[IS_CONCAT_SPREADABLE] = false;\n\t  return array.concat()[0] !== array;\n\t});\n\tvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\n\tvar isConcatSpreadable = function (O) {\n\t  if (!isObject(O)) return false;\n\t  var spreadable = O[IS_CONCAT_SPREADABLE];\n\t  return spreadable !== undefined ? !!spreadable : isArray(O);\n\t};\n\n\tvar FORCED$1 = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT; // `Array.prototype.concat` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n\t// with adding support of @@isConcatSpreadable and @@species\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: FORCED$1\n\t}, {\n\t  concat: function concat(arg) {\n\t    // eslint-disable-line no-unused-vars\n\t    var O = toObject(this);\n\t    var A = arraySpeciesCreate(O, 0);\n\t    var n = 0;\n\t    var i, k, length, len, E;\n\n\t    for (i = -1, length = arguments.length; i < length; i++) {\n\t      E = i === -1 ? O : arguments[i];\n\n\t      if (isConcatSpreadable(E)) {\n\t        len = toLength(E.length);\n\t        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n\n\t        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n\t      } else {\n\t        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n\t        createProperty(A, n++, E);\n\t      }\n\t    }\n\n\t    A.length = n;\n\t    return A;\n\t  }\n\t});\n\n\tvar UNSCOPABLES = wellKnownSymbol('unscopables');\n\tvar ArrayPrototype = Array.prototype; // Array.prototype[@@unscopables]\n\t// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\n\tif (ArrayPrototype[UNSCOPABLES] == undefined) {\n\t  objectDefineProperty.f(ArrayPrototype, UNSCOPABLES, {\n\t    configurable: true,\n\t    value: objectCreate(null)\n\t  });\n\t} // add a key to Array.prototype[@@unscopables]\n\n\n\tvar addToUnscopables = function (key) {\n\t  ArrayPrototype[UNSCOPABLES][key] = true;\n\t};\n\n\tvar $find = arrayIteration.find;\n\tvar FIND = 'find';\n\tvar SKIPS_HOLES = true;\n\tvar USES_TO_LENGTH$4 = arrayMethodUsesToLength(FIND); // Shouldn't skip holes\n\n\tif (FIND in []) Array(1)[FIND](function () {\n\t  SKIPS_HOLES = false;\n\t}); // `Array.prototype.find` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.find\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: SKIPS_HOLES || !USES_TO_LENGTH$4\n\t}, {\n\t  find: function find(callbackfn\n\t  /* , that = undefined */\n\t  ) {\n\t    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t}); // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\n\taddToUnscopables(FIND);\n\n\tvar iterators = {};\n\n\tvar correctPrototypeGetter = !fails(function () {\n\t  function F() {\n\t    /* empty */\n\t  }\n\n\t  F.prototype.constructor = null;\n\t  return Object.getPrototypeOf(new F()) !== F.prototype;\n\t});\n\n\tvar IE_PROTO$1 = sharedKey('IE_PROTO');\n\tvar ObjectPrototype$1 = Object.prototype; // `Object.getPrototypeOf` method\n\t// https://tc39.github.io/ecma262/#sec-object.getprototypeof\n\n\tvar objectGetPrototypeOf = correctPrototypeGetter ? Object.getPrototypeOf : function (O) {\n\t  O = toObject(O);\n\t  if (has(O, IE_PROTO$1)) return O[IE_PROTO$1];\n\n\t  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n\t    return O.constructor.prototype;\n\t  }\n\n\t  return O instanceof Object ? ObjectPrototype$1 : null;\n\t};\n\n\tvar ITERATOR = wellKnownSymbol('iterator');\n\tvar BUGGY_SAFARI_ITERATORS = false;\n\n\tvar returnThis = function () {\n\t  return this;\n\t}; // `%IteratorPrototype%` object\n\t// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\n\n\n\tvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n\tif ([].keys) {\n\t  arrayIterator = [].keys(); // Safari 8 has buggy iterators w/o `next`\n\n\t  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;else {\n\t    PrototypeOfArrayIteratorPrototype = objectGetPrototypeOf(objectGetPrototypeOf(arrayIterator));\n\t    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n\t  }\n\t}\n\n\tif (IteratorPrototype == undefined) IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\n\tif ( !has(IteratorPrototype, ITERATOR)) {\n\t  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n\t}\n\n\tvar iteratorsCore = {\n\t  IteratorPrototype: IteratorPrototype,\n\t  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n\t};\n\n\tvar IteratorPrototype$1 = iteratorsCore.IteratorPrototype;\n\n\tvar returnThis$1 = function () {\n\t  return this;\n\t};\n\n\tvar createIteratorConstructor = function (IteratorConstructor, NAME, next) {\n\t  var TO_STRING_TAG = NAME + ' Iterator';\n\t  IteratorConstructor.prototype = objectCreate(IteratorPrototype$1, {\n\t    next: createPropertyDescriptor(1, next)\n\t  });\n\t  setToStringTag(IteratorConstructor, TO_STRING_TAG, false);\n\t  iterators[TO_STRING_TAG] = returnThis$1;\n\t  return IteratorConstructor;\n\t};\n\n\tvar IteratorPrototype$2 = iteratorsCore.IteratorPrototype;\n\tvar BUGGY_SAFARI_ITERATORS$1 = iteratorsCore.BUGGY_SAFARI_ITERATORS;\n\tvar ITERATOR$1 = wellKnownSymbol('iterator');\n\tvar KEYS = 'keys';\n\tvar VALUES = 'values';\n\tvar ENTRIES = 'entries';\n\n\tvar returnThis$2 = function () {\n\t  return this;\n\t};\n\n\tvar defineIterator = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n\t  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n\t  var getIterationMethod = function (KIND) {\n\t    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n\t    if (!BUGGY_SAFARI_ITERATORS$1 && KIND in IterablePrototype) return IterablePrototype[KIND];\n\n\t    switch (KIND) {\n\t      case KEYS:\n\t        return function keys() {\n\t          return new IteratorConstructor(this, KIND);\n\t        };\n\n\t      case VALUES:\n\t        return function values() {\n\t          return new IteratorConstructor(this, KIND);\n\t        };\n\n\t      case ENTRIES:\n\t        return function entries() {\n\t          return new IteratorConstructor(this, KIND);\n\t        };\n\t    }\n\n\t    return function () {\n\t      return new IteratorConstructor(this);\n\t    };\n\t  };\n\n\t  var TO_STRING_TAG = NAME + ' Iterator';\n\t  var INCORRECT_VALUES_NAME = false;\n\t  var IterablePrototype = Iterable.prototype;\n\t  var nativeIterator = IterablePrototype[ITERATOR$1] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];\n\t  var defaultIterator = !BUGGY_SAFARI_ITERATORS$1 && nativeIterator || getIterationMethod(DEFAULT);\n\t  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n\t  var CurrentIteratorPrototype, methods, KEY; // fix native\n\n\t  if (anyNativeIterator) {\n\t    CurrentIteratorPrototype = objectGetPrototypeOf(anyNativeIterator.call(new Iterable()));\n\n\t    if (IteratorPrototype$2 !== Object.prototype && CurrentIteratorPrototype.next) {\n\t      if ( objectGetPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype$2) {\n\t        if (objectSetPrototypeOf) {\n\t          objectSetPrototypeOf(CurrentIteratorPrototype, IteratorPrototype$2);\n\t        } else if (typeof CurrentIteratorPrototype[ITERATOR$1] != 'function') {\n\t          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR$1, returnThis$2);\n\t        }\n\t      } // Set @@toStringTag to native iterators\n\n\n\t      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);\n\t    }\n\t  } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n\t  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n\t    INCORRECT_VALUES_NAME = true;\n\n\t    defaultIterator = function values() {\n\t      return nativeIterator.call(this);\n\t    };\n\t  } // define iterator\n\n\n\t  if ( IterablePrototype[ITERATOR$1] !== defaultIterator) {\n\t    createNonEnumerableProperty(IterablePrototype, ITERATOR$1, defaultIterator);\n\t  }\n\n\t  iterators[NAME] = defaultIterator; // export additional methods\n\n\t  if (DEFAULT) {\n\t    methods = {\n\t      values: getIterationMethod(VALUES),\n\t      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n\t      entries: getIterationMethod(ENTRIES)\n\t    };\n\t    if (FORCED) for (KEY in methods) {\n\t      if (BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n\t        redefine(IterablePrototype, KEY, methods[KEY]);\n\t      }\n\t    } else _export({\n\t      target: NAME,\n\t      proto: true,\n\t      forced: BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME\n\t    }, methods);\n\t  }\n\n\t  return methods;\n\t};\n\n\tvar ARRAY_ITERATOR = 'Array Iterator';\n\tvar setInternalState$1 = internalState.set;\n\tvar getInternalState$1 = internalState.getterFor(ARRAY_ITERATOR); // `Array.prototype.entries` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n\t// `Array.prototype.keys` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n\t// `Array.prototype.values` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.values\n\t// `Array.prototype[@@iterator]` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n\t// `CreateArrayIterator` internal method\n\t// https://tc39.github.io/ecma262/#sec-createarrayiterator\n\n\tvar es_array_iterator = defineIterator(Array, 'Array', function (iterated, kind) {\n\t  setInternalState$1(this, {\n\t    type: ARRAY_ITERATOR,\n\t    target: toIndexedObject(iterated),\n\t    // target\n\t    index: 0,\n\t    // next index\n\t    kind: kind // kind\n\n\t  }); // `%ArrayIteratorPrototype%.next` method\n\t  // https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n\t}, function () {\n\t  var state = getInternalState$1(this);\n\t  var target = state.target;\n\t  var kind = state.kind;\n\t  var index = state.index++;\n\n\t  if (!target || index >= target.length) {\n\t    state.target = undefined;\n\t    return {\n\t      value: undefined,\n\t      done: true\n\t    };\n\t  }\n\n\t  if (kind == 'keys') return {\n\t    value: index,\n\t    done: false\n\t  };\n\t  if (kind == 'values') return {\n\t    value: target[index],\n\t    done: false\n\t  };\n\t  return {\n\t    value: [index, target[index]],\n\t    done: false\n\t  };\n\t}, 'values'); // argumentsList[@@iterator] is %ArrayProto_values%\n\t// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n\t// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\n\n\titerators.Arguments = iterators.Array; // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\n\taddToUnscopables('keys');\n\taddToUnscopables('values');\n\taddToUnscopables('entries');\n\n\tvar nativeJoin = [].join;\n\tvar ES3_STRINGS = indexedObject != Object;\n\tvar STRICT_METHOD$3 = arrayMethodIsStrict('join', ','); // `Array.prototype.join` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.join\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: ES3_STRINGS || !STRICT_METHOD$3\n\t}, {\n\t  join: function join(separator) {\n\t    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n\t  }\n\t});\n\n\tvar $map = arrayIteration.map;\n\tvar HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport('map'); // FF49- issue\n\n\tvar USES_TO_LENGTH$5 = arrayMethodUsesToLength('map'); // `Array.prototype.map` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.map\n\t// with adding support of @@species\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: !HAS_SPECIES_SUPPORT$1 || !USES_TO_LENGTH$5\n\t}, {\n\t  map: function map(callbackfn\n\t  /* , thisArg */\n\t  ) {\n\t    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\tvar HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport('slice');\n\tvar USES_TO_LENGTH$6 = arrayMethodUsesToLength('slice', {\n\t  ACCESSORS: true,\n\t  0: 0,\n\t  1: 2\n\t});\n\tvar SPECIES$4 = wellKnownSymbol('species');\n\tvar nativeSlice = [].slice;\n\tvar max$1 = Math.max; // `Array.prototype.slice` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n\t// fallback for not array-like ES3 strings and DOM objects\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: !HAS_SPECIES_SUPPORT$2 || !USES_TO_LENGTH$6\n\t}, {\n\t  slice: function slice(start, end) {\n\t    var O = toIndexedObject(this);\n\t    var length = toLength(O.length);\n\t    var k = toAbsoluteIndex(start, length);\n\t    var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n\n\t    var Constructor, result, n;\n\n\t    if (isArray(O)) {\n\t      Constructor = O.constructor; // cross-realm fallback\n\n\t      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n\t        Constructor = undefined;\n\t      } else if (isObject(Constructor)) {\n\t        Constructor = Constructor[SPECIES$4];\n\t        if (Constructor === null) Constructor = undefined;\n\t      }\n\n\t      if (Constructor === Array || Constructor === undefined) {\n\t        return nativeSlice.call(O, k, fin);\n\t      }\n\t    }\n\n\t    result = new (Constructor === undefined ? Array : Constructor)(max$1(fin - k, 0));\n\n\t    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n\n\t    result.length = n;\n\t    return result;\n\t  }\n\t});\n\n\tvar HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport('splice');\n\tvar USES_TO_LENGTH$7 = arrayMethodUsesToLength('splice', {\n\t  ACCESSORS: true,\n\t  0: 0,\n\t  1: 2\n\t});\n\tvar max$2 = Math.max;\n\tvar min$5 = Math.min;\n\tvar MAX_SAFE_INTEGER$1 = 0x1FFFFFFFFFFFFF;\n\tvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded'; // `Array.prototype.splice` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n\t// with adding support of @@species\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: !HAS_SPECIES_SUPPORT$3 || !USES_TO_LENGTH$7\n\t}, {\n\t  splice: function splice(start, deleteCount\n\t  /* , ...items */\n\t  ) {\n\t    var O = toObject(this);\n\t    var len = toLength(O.length);\n\t    var actualStart = toAbsoluteIndex(start, len);\n\t    var argumentsLength = arguments.length;\n\t    var insertCount, actualDeleteCount, A, k, from, to;\n\n\t    if (argumentsLength === 0) {\n\t      insertCount = actualDeleteCount = 0;\n\t    } else if (argumentsLength === 1) {\n\t      insertCount = 0;\n\t      actualDeleteCount = len - actualStart;\n\t    } else {\n\t      insertCount = argumentsLength - 2;\n\t      actualDeleteCount = min$5(max$2(toInteger(deleteCount), 0), len - actualStart);\n\t    }\n\n\t    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER$1) {\n\t      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n\t    }\n\n\t    A = arraySpeciesCreate(O, actualDeleteCount);\n\n\t    for (k = 0; k < actualDeleteCount; k++) {\n\t      from = actualStart + k;\n\t      if (from in O) createProperty(A, k, O[from]);\n\t    }\n\n\t    A.length = actualDeleteCount;\n\n\t    if (insertCount < actualDeleteCount) {\n\t      for (k = actualStart; k < len - actualDeleteCount; k++) {\n\t        from = k + actualDeleteCount;\n\t        to = k + insertCount;\n\t        if (from in O) O[to] = O[from];else delete O[to];\n\t      }\n\n\t      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n\t    } else if (insertCount > actualDeleteCount) {\n\t      for (k = len - actualDeleteCount; k > actualStart; k--) {\n\t        from = k + actualDeleteCount - 1;\n\t        to = k + insertCount - 1;\n\t        if (from in O) O[to] = O[from];else delete O[to];\n\t      }\n\t    }\n\n\t    for (k = 0; k < insertCount; k++) {\n\t      O[k + actualStart] = arguments[k + 2];\n\t    }\n\n\t    O.length = len - actualDeleteCount + insertCount;\n\t    return A;\n\t  }\n\t});\n\n\tvar defineProperty$5 = objectDefineProperty.f;\n\tvar FunctionPrototype = Function.prototype;\n\tvar FunctionPrototypeToString = FunctionPrototype.toString;\n\tvar nameRE = /^\\s*function ([^ (]*)/;\n\tvar NAME = 'name'; // Function instances `.name` property\n\t// https://tc39.github.io/ecma262/#sec-function-instances-name\n\n\tif (descriptors && !(NAME in FunctionPrototype)) {\n\t  defineProperty$5(FunctionPrototype, NAME, {\n\t    configurable: true,\n\t    get: function () {\n\t      try {\n\t        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n\t      } catch (error) {\n\t        return '';\n\t      }\n\t    }\n\t  });\n\t}\n\n\tvar FAILS_ON_PRIMITIVES = fails(function () {\n\t  objectGetPrototypeOf(1);\n\t}); // `Object.getPrototypeOf` method\n\t// https://tc39.github.io/ecma262/#sec-object.getprototypeof\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: FAILS_ON_PRIMITIVES,\n\t  sham: !correctPrototypeGetter\n\t}, {\n\t  getPrototypeOf: function getPrototypeOf(it) {\n\t    return objectGetPrototypeOf(toObject(it));\n\t  }\n\t});\n\n\tvar TO_STRING_TAG$1 = wellKnownSymbol('toStringTag');\n\tvar test = {};\n\ttest[TO_STRING_TAG$1] = 'z';\n\tvar toStringTagSupport = String(test) === '[object z]';\n\n\tvar TO_STRING_TAG$2 = wellKnownSymbol('toStringTag'); // ES3 wrong here\n\n\tvar CORRECT_ARGUMENTS = classofRaw(function () {\n\t  return arguments;\n\t}()) == 'Arguments'; // fallback for IE11 Script Access Denied error\n\n\tvar tryGet = function (it, key) {\n\t  try {\n\t    return it[key];\n\t  } catch (error) {\n\t    /* empty */\n\t  }\n\t}; // getting tag from ES6+ `Object.prototype.toString`\n\n\n\tvar classof = toStringTagSupport ? classofRaw : function (it) {\n\t  var O, tag, result;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case\n\t  : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG$2)) == 'string' ? tag // builtinTag case\n\t  : CORRECT_ARGUMENTS ? classofRaw(O) // ES3 arguments fallback\n\t  : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n\n\n\tvar objectToString = toStringTagSupport ? {}.toString : function toString() {\n\t  return '[object ' + classof(this) + ']';\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n\n\tif (!toStringTagSupport) {\n\t  redefine(Object.prototype, 'toString', objectToString, {\n\t    unsafe: true\n\t  });\n\t}\n\n\tvar SPECIES$5 = wellKnownSymbol('species');\n\n\tvar setSpecies = function (CONSTRUCTOR_NAME) {\n\t  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n\t  var defineProperty = objectDefineProperty.f;\n\n\t  if (descriptors && Constructor && !Constructor[SPECIES$5]) {\n\t    defineProperty(Constructor, SPECIES$5, {\n\t      configurable: true,\n\t      get: function () {\n\t        return this;\n\t      }\n\t    });\n\t  }\n\t};\n\n\tvar defineProperty$6 = objectDefineProperty.f;\n\tvar getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;\n\tvar setInternalState$2 = internalState.set;\n\tvar MATCH$2 = wellKnownSymbol('match');\n\tvar NativeRegExp = global_1.RegExp;\n\tvar RegExpPrototype = NativeRegExp.prototype;\n\tvar re1 = /a/g;\n\tvar re2 = /a/g; // \"new\" should create a new object, old webkit bug\n\n\tvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\tvar UNSUPPORTED_Y$2 = regexpStickyHelpers.UNSUPPORTED_Y;\n\tvar FORCED$2 = descriptors && isForced_1('RegExp', !CORRECT_NEW || UNSUPPORTED_Y$2 || fails(function () {\n\t  re2[MATCH$2] = false; // RegExp constructor can alter flags and IsRegExp works correct with @@match\n\n\t  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n\t})); // `RegExp` constructor\n\t// https://tc39.github.io/ecma262/#sec-regexp-constructor\n\n\tif (FORCED$2) {\n\t  var RegExpWrapper = function RegExp(pattern, flags) {\n\t    var thisIsRegExp = this instanceof RegExpWrapper;\n\t    var patternIsRegExp = isRegexp(pattern);\n\t    var flagsAreUndefined = flags === undefined;\n\t    var sticky;\n\n\t    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n\t      return pattern;\n\t    }\n\n\t    if (CORRECT_NEW) {\n\t      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n\t    } else if (pattern instanceof RegExpWrapper) {\n\t      if (flagsAreUndefined) flags = regexpFlags.call(pattern);\n\t      pattern = pattern.source;\n\t    }\n\n\t    if (UNSUPPORTED_Y$2) {\n\t      sticky = !!flags && flags.indexOf('y') > -1;\n\t      if (sticky) flags = flags.replace(/y/g, '');\n\t    }\n\n\t    var result = inheritIfRequired(CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n\t    if (UNSUPPORTED_Y$2 && sticky) setInternalState$2(result, {\n\t      sticky: sticky\n\t    });\n\t    return result;\n\t  };\n\n\t  var proxy = function (key) {\n\t    key in RegExpWrapper || defineProperty$6(RegExpWrapper, key, {\n\t      configurable: true,\n\t      get: function () {\n\t        return NativeRegExp[key];\n\t      },\n\t      set: function (it) {\n\t        NativeRegExp[key] = it;\n\t      }\n\t    });\n\t  };\n\n\t  var keys$2 = getOwnPropertyNames$1(NativeRegExp);\n\t  var index = 0;\n\n\t  while (keys$2.length > index) proxy(keys$2[index++]);\n\n\t  RegExpPrototype.constructor = RegExpWrapper;\n\t  RegExpWrapper.prototype = RegExpPrototype;\n\t  redefine(global_1, 'RegExp', RegExpWrapper);\n\t} // https://tc39.github.io/ecma262/#sec-get-regexp-@@species\n\n\n\tsetSpecies('RegExp');\n\n\tvar TO_STRING = 'toString';\n\tvar RegExpPrototype$1 = RegExp.prototype;\n\tvar nativeToString = RegExpPrototype$1[TO_STRING];\n\tvar NOT_GENERIC = fails(function () {\n\t  return nativeToString.call({\n\t    source: 'a',\n\t    flags: 'b'\n\t  }) != '/a/b';\n\t}); // FF44- RegExp#toString has a wrong name\n\n\tvar INCORRECT_NAME = nativeToString.name != TO_STRING; // `RegExp.prototype.toString` method\n\t// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\n\n\tif (NOT_GENERIC || INCORRECT_NAME) {\n\t  redefine(RegExp.prototype, TO_STRING, function toString() {\n\t    var R = anObject(this);\n\t    var p = String(R.source);\n\t    var rf = R.flags;\n\t    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype$1) ? regexpFlags.call(R) : rf);\n\t    return '/' + p + '/' + f;\n\t  }, {\n\t    unsafe: true\n\t  });\n\t}\n\n\tvar charAt$1 = stringMultibyte.charAt;\n\tvar STRING_ITERATOR = 'String Iterator';\n\tvar setInternalState$3 = internalState.set;\n\tvar getInternalState$2 = internalState.getterFor(STRING_ITERATOR); // `String.prototype[@@iterator]` method\n\t// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\n\n\tdefineIterator(String, 'String', function (iterated) {\n\t  setInternalState$3(this, {\n\t    type: STRING_ITERATOR,\n\t    string: String(iterated),\n\t    index: 0\n\t  }); // `%StringIteratorPrototype%.next` method\n\t  // https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n\t}, function next() {\n\t  var state = getInternalState$2(this);\n\t  var string = state.string;\n\t  var index = state.index;\n\t  var point;\n\t  if (index >= string.length) return {\n\t    value: undefined,\n\t    done: true\n\t  };\n\t  point = charAt$1(string, index);\n\t  state.index += point.length;\n\t  return {\n\t    value: point,\n\t    done: false\n\t  };\n\t});\n\n\tfixRegexpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n\t  return [// `String.prototype.match` method\n\t  // https://tc39.github.io/ecma262/#sec-string.prototype.match\n\t  function match(regexp) {\n\t    var O = requireObjectCoercible(this);\n\t    var matcher = regexp == undefined ? undefined : regexp[MATCH];\n\t    return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n\t  }, // `RegExp.prototype[@@match]` method\n\t  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n\t  function (regexp) {\n\t    var res = maybeCallNative(nativeMatch, regexp, this);\n\t    if (res.done) return res.value;\n\t    var rx = anObject(regexp);\n\t    var S = String(this);\n\t    if (!rx.global) return regexpExecAbstract(rx, S);\n\t    var fullUnicode = rx.unicode;\n\t    rx.lastIndex = 0;\n\t    var A = [];\n\t    var n = 0;\n\t    var result;\n\n\t    while ((result = regexpExecAbstract(rx, S)) !== null) {\n\t      var matchStr = String(result[0]);\n\t      A[n] = matchStr;\n\t      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n\t      n++;\n\t    }\n\n\t    return n === 0 ? null : A;\n\t  }];\n\t});\n\n\tvar max$3 = Math.max;\n\tvar min$6 = Math.min;\n\tvar floor$1 = Math.floor;\n\tvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\n\tvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\n\tvar maybeToString = function (it) {\n\t  return it === undefined ? it : String(it);\n\t}; // @@replace logic\n\n\n\tfixRegexpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n\t  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n\t  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n\t  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\t  return [// `String.prototype.replace` method\n\t  // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n\t  function replace(searchValue, replaceValue) {\n\t    var O = requireObjectCoercible(this);\n\t    var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n\t    return replacer !== undefined ? replacer.call(searchValue, O, replaceValue) : nativeReplace.call(String(O), searchValue, replaceValue);\n\t  }, // `RegExp.prototype[@@replace]` method\n\t  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n\t  function (regexp, replaceValue) {\n\t    if (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0 || typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1) {\n\t      var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n\t      if (res.done) return res.value;\n\t    }\n\n\t    var rx = anObject(regexp);\n\t    var S = String(this);\n\t    var functionalReplace = typeof replaceValue === 'function';\n\t    if (!functionalReplace) replaceValue = String(replaceValue);\n\t    var global = rx.global;\n\n\t    if (global) {\n\t      var fullUnicode = rx.unicode;\n\t      rx.lastIndex = 0;\n\t    }\n\n\t    var results = [];\n\n\t    while (true) {\n\t      var result = regexpExecAbstract(rx, S);\n\t      if (result === null) break;\n\t      results.push(result);\n\t      if (!global) break;\n\t      var matchStr = String(result[0]);\n\t      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n\t    }\n\n\t    var accumulatedResult = '';\n\t    var nextSourcePosition = 0;\n\n\t    for (var i = 0; i < results.length; i++) {\n\t      result = results[i];\n\t      var matched = String(result[0]);\n\t      var position = max$3(min$6(toInteger(result.index), S.length), 0);\n\t      var captures = []; // NOTE: This is equivalent to\n\t      //   captures = result.slice(1).map(maybeToString)\n\t      // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n\t      // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n\t      // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n\n\t      for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n\n\t      var namedCaptures = result.groups;\n\n\t      if (functionalReplace) {\n\t        var replacerArgs = [matched].concat(captures, position, S);\n\t        if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n\t        var replacement = String(replaceValue.apply(undefined, replacerArgs));\n\t      } else {\n\t        replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n\t      }\n\n\t      if (position >= nextSourcePosition) {\n\t        accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n\t        nextSourcePosition = position + matched.length;\n\t      }\n\t    }\n\n\t    return accumulatedResult + S.slice(nextSourcePosition);\n\t  }]; // https://tc39.github.io/ecma262/#sec-getsubstitution\n\n\t  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n\t    var tailPos = position + matched.length;\n\t    var m = captures.length;\n\t    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n\n\t    if (namedCaptures !== undefined) {\n\t      namedCaptures = toObject(namedCaptures);\n\t      symbols = SUBSTITUTION_SYMBOLS;\n\t    }\n\n\t    return nativeReplace.call(replacement, symbols, function (match, ch) {\n\t      var capture;\n\n\t      switch (ch.charAt(0)) {\n\t        case '$':\n\t          return '$';\n\n\t        case '&':\n\t          return matched;\n\n\t        case '`':\n\t          return str.slice(0, position);\n\n\t        case \"'\":\n\t          return str.slice(tailPos);\n\n\t        case '<':\n\t          capture = namedCaptures[ch.slice(1, -1)];\n\t          break;\n\n\t        default:\n\t          // \\d\\d?\n\t          var n = +ch;\n\t          if (n === 0) return match;\n\n\t          if (n > m) {\n\t            var f = floor$1(n / 10);\n\t            if (f === 0) return match;\n\t            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n\t            return match;\n\t          }\n\n\t          capture = captures[n - 1];\n\t      }\n\n\t      return capture === undefined ? '' : capture;\n\t    });\n\t  }\n\t});\n\n\tvar ITERATOR$2 = wellKnownSymbol('iterator');\n\tvar TO_STRING_TAG$3 = wellKnownSymbol('toStringTag');\n\tvar ArrayValues = es_array_iterator.values;\n\n\tfor (var COLLECTION_NAME$1 in domIterables) {\n\t  var Collection$1 = global_1[COLLECTION_NAME$1];\n\t  var CollectionPrototype$1 = Collection$1 && Collection$1.prototype;\n\n\t  if (CollectionPrototype$1) {\n\t    // some Chrome versions have non-configurable methods on DOMTokenList\n\t    if (CollectionPrototype$1[ITERATOR$2] !== ArrayValues) try {\n\t      createNonEnumerableProperty(CollectionPrototype$1, ITERATOR$2, ArrayValues);\n\t    } catch (error) {\n\t      CollectionPrototype$1[ITERATOR$2] = ArrayValues;\n\t    }\n\n\t    if (!CollectionPrototype$1[TO_STRING_TAG$3]) {\n\t      createNonEnumerableProperty(CollectionPrototype$1, TO_STRING_TAG$3, COLLECTION_NAME$1);\n\t    }\n\n\t    if (domIterables[COLLECTION_NAME$1]) for (var METHOD_NAME in es_array_iterator) {\n\t      // some Chrome versions have non-configurable methods on DOMTokenList\n\t      if (CollectionPrototype$1[METHOD_NAME] !== es_array_iterator[METHOD_NAME]) try {\n\t        createNonEnumerableProperty(CollectionPrototype$1, METHOD_NAME, es_array_iterator[METHOD_NAME]);\n\t      } catch (error) {\n\t        CollectionPrototype$1[METHOD_NAME] = es_array_iterator[METHOD_NAME];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/*!\n\t * jQuery JavaScript Library v3.3.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector\n\t * https://jquery.com/\n\t *\n\t * Includes Sizzle.js\n\t * https://sizzlejs.com/\n\t *\n\t * Copyright JS Foundation and other contributors\n\t * Released under the MIT license\n\t * https://jquery.org/license\n\t *\n\t * Date: 2018-01-20T17:24Z\n\t */\n\tvar arr = [];\n\tvar document$2 = window.document;\n\tvar getProto = Object.getPrototypeOf;\n\tvar _slice = arr.slice;\n\tvar concat = arr.concat;\n\tvar push$1 = arr.push;\n\tvar indexOf$1 = arr.indexOf;\n\tvar class2type = {};\n\tvar toString$2 = class2type.toString;\n\tvar hasOwn = class2type.hasOwnProperty;\n\tvar fnToString = hasOwn.toString;\n\tvar ObjectFunctionString = fnToString.call(Object);\n\tvar support = {};\n\n\tvar isFunction = function isFunction(obj) {\n\t  // Support: Chrome <=57, Firefox <=52\n\t  // In some browsers, typeof returns \"function\" for HTML <object> elements\n\t  // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t  // We don't want to classify *any* DOM node as a function.\n\t  return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n\t};\n\n\tvar isWindow = function isWindow(obj) {\n\t  return obj != null && obj === obj.window;\n\t};\n\n\tvar preservedScriptAttributes = {\n\t  type: true,\n\t  src: true,\n\t  noModule: true\n\t};\n\n\tfunction DOMEval(code, doc, node) {\n\t  doc = doc || document$2;\n\t  var i,\n\t      script = doc.createElement(\"script\");\n\t  script.text = code;\n\n\t  if (node) {\n\t    for (i in preservedScriptAttributes) {\n\t      if (node[i]) {\n\t        script[i] = node[i];\n\t      }\n\t    }\n\t  }\n\n\t  doc.head.appendChild(script).parentNode.removeChild(script);\n\t}\n\n\tfunction toType(obj) {\n\t  if (obj == null) {\n\t    return obj + \"\";\n\t  } // Support: Android <=2.3 only (functionish RegExp)\n\n\n\t  return _typeof(obj) === \"object\" || typeof obj === \"function\" ? class2type[toString$2.call(obj)] || \"object\" : _typeof(obj);\n\t} // global Symbol\n\t// Defining this global in .eslintrc.json would create a danger of using the global\n\t// unguarded in another place, it seems safer to define global only for this module\n\n\n\tvar version$1 = \"3.3.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector\",\n\t    // Define a local copy of jQuery\n\tjQuery = function jQuery(selector, context) {\n\t  // The jQuery object is actually just the init constructor 'enhanced'\n\t  // Need init if jQuery is called (just allow error to be thrown if not included)\n\t  return new jQuery.fn.init(selector, context);\n\t},\n\t    // Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim$1 = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n\tjQuery.fn = jQuery.prototype = {\n\t  // The current version of jQuery being used\n\t  jquery: version$1,\n\t  constructor: jQuery,\n\t  // The default length of a jQuery object is 0\n\t  length: 0,\n\t  toArray: function toArray() {\n\t    return _slice.call(this);\n\t  },\n\t  // Get the Nth element in the matched element set OR\n\t  // Get the whole matched element set as a clean array\n\t  get: function get(num) {\n\t    // Return all the elements in a clean array\n\t    if (num == null) {\n\t      return _slice.call(this);\n\t    } // Return just the one element from the set\n\n\n\t    return num < 0 ? this[num + this.length] : this[num];\n\t  },\n\t  // Take an array of elements and push it onto the stack\n\t  // (returning the new matched element set)\n\t  pushStack: function pushStack(elems) {\n\t    // Build a new jQuery matched element set\n\t    var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n\t    ret.prevObject = this; // Return the newly-formed element set\n\n\t    return ret;\n\t  },\n\t  // Execute a callback for every element in the matched set.\n\t  each: function each(callback) {\n\t    return jQuery.each(this, callback);\n\t  },\n\t  map: function map(callback) {\n\t    return this.pushStack(jQuery.map(this, function (elem, i) {\n\t      return callback.call(elem, i, elem);\n\t    }));\n\t  },\n\t  slice: function slice() {\n\t    return this.pushStack(_slice.apply(this, arguments));\n\t  },\n\t  first: function first() {\n\t    return this.eq(0);\n\t  },\n\t  last: function last() {\n\t    return this.eq(-1);\n\t  },\n\t  eq: function eq(i) {\n\t    var len = this.length,\n\t        j = +i + (i < 0 ? len : 0);\n\t    return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n\t  },\n\t  end: function end() {\n\t    return this.prevObject || this.constructor();\n\t  },\n\t  // For internal use only.\n\t  // Behaves like an Array's method, not like a jQuery method.\n\t  push: push$1,\n\t  sort: arr.sort,\n\t  splice: arr.splice\n\t};\n\n\tjQuery.extend = jQuery.fn.extend = function () {\n\t  var options,\n\t      name,\n\t      src,\n\t      copy,\n\t      copyIsArray,\n\t      clone,\n\t      target = arguments[0] || {},\n\t      i = 1,\n\t      length = arguments.length,\n\t      deep = false; // Handle a deep copy situation\n\n\t  if (typeof target === \"boolean\") {\n\t    deep = target; // Skip the boolean and the target\n\n\t    target = arguments[i] || {};\n\t    i++;\n\t  } // Handle case when target is a string or something (possible in deep copy)\n\n\n\t  if (_typeof(target) !== \"object\" && !isFunction(target)) {\n\t    target = {};\n\t  } // Extend jQuery itself if only one argument is passed\n\n\n\t  if (i === length) {\n\t    target = this;\n\t    i--;\n\t  }\n\n\t  for (; i < length; i++) {\n\t    // Only deal with non-null/undefined values\n\t    if ((options = arguments[i]) != null) {\n\t      // Extend the base object\n\t      for (name in options) {\n\t        src = target[name];\n\t        copy = options[name]; // Prevent never-ending loop\n\n\t        if (target === copy) {\n\t          continue;\n\t        } // Recurse if we're merging plain objects or arrays\n\n\n\t        if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n\t          if (copyIsArray) {\n\t            copyIsArray = false;\n\t            clone = src && Array.isArray(src) ? src : [];\n\t          } else {\n\t            clone = src && jQuery.isPlainObject(src) ? src : {};\n\t          } // Never move original objects, clone them\n\n\n\t          target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n\t        } else if (copy !== undefined) {\n\t          target[name] = copy;\n\t        }\n\t      }\n\t    }\n\t  } // Return the modified object\n\n\n\t  return target;\n\t};\n\n\tjQuery.extend({\n\t  // Unique for each copy of jQuery on the page\n\t  expando: \"jQuery\" + (version$1 + Math.random()).replace(/\\D/g, \"\"),\n\t  // Assume jQuery is ready without the ready module\n\t  isReady: true,\n\t  error: function error(msg) {\n\t    throw new Error(msg);\n\t  },\n\t  noop: function noop() {},\n\t  isPlainObject: function isPlainObject(obj) {\n\t    var proto, Ctor; // Detect obvious negatives\n\t    // Use toString instead of jQuery.type to catch host objects\n\n\t    if (!obj || toString$2.call(obj) !== \"[object Object]\") {\n\t      return false;\n\t    }\n\n\t    proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n\t    if (!proto) {\n\t      return true;\n\t    } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n\t    Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n\t    return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n\t  },\n\t  isEmptyObject: function isEmptyObject(obj) {\n\t    /* eslint-disable no-unused-vars */\n\t    // See https://github.com/eslint/eslint/issues/6125\n\t    var name;\n\n\t    for (name in obj) {\n\t      return false;\n\t    }\n\n\t    return true;\n\t  },\n\t  // Evaluates a script in a global context\n\t  globalEval: function globalEval(code) {\n\t    DOMEval(code);\n\t  },\n\t  each: function each(obj, callback) {\n\t    var length,\n\t        i = 0;\n\n\t    if (isArrayLike(obj)) {\n\t      length = obj.length;\n\n\t      for (; i < length; i++) {\n\t        if (callback.call(obj[i], i, obj[i]) === false) {\n\t          break;\n\t        }\n\t      }\n\t    } else {\n\t      for (i in obj) {\n\t        if (callback.call(obj[i], i, obj[i]) === false) {\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    return obj;\n\t  },\n\t  // Support: Android <=4.0 only\n\t  trim: function trim(text) {\n\t    return text == null ? \"\" : (text + \"\").replace(rtrim$1, \"\");\n\t  },\n\t  // results is for internal usage only\n\t  makeArray: function makeArray(arr, results) {\n\t    var ret = results || [];\n\n\t    if (arr != null) {\n\t      if (isArrayLike(Object(arr))) {\n\t        jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n\t      } else {\n\t        push$1.call(ret, arr);\n\t      }\n\t    }\n\n\t    return ret;\n\t  },\n\t  inArray: function inArray(elem, arr, i) {\n\t    return arr == null ? -1 : indexOf$1.call(arr, elem, i);\n\t  },\n\t  // Support: Android <=4.0 only, PhantomJS 1 only\n\t  // push.apply(_, arraylike) throws on ancient WebKit\n\t  merge: function merge(first, second) {\n\t    var len = +second.length,\n\t        j = 0,\n\t        i = first.length;\n\n\t    for (; j < len; j++) {\n\t      first[i++] = second[j];\n\t    }\n\n\t    first.length = i;\n\t    return first;\n\t  },\n\t  grep: function grep(elems, callback, invert) {\n\t    var callbackInverse,\n\t        matches = [],\n\t        i = 0,\n\t        length = elems.length,\n\t        callbackExpect = !invert; // Go through the array, only saving the items\n\t    // that pass the validator function\n\n\t    for (; i < length; i++) {\n\t      callbackInverse = !callback(elems[i], i);\n\n\t      if (callbackInverse !== callbackExpect) {\n\t        matches.push(elems[i]);\n\t      }\n\t    }\n\n\t    return matches;\n\t  },\n\t  // arg is for internal usage only\n\t  map: function map(elems, callback, arg) {\n\t    var length,\n\t        value,\n\t        i = 0,\n\t        ret = []; // Go through the array, translating each of the items to their new values\n\n\t    if (isArrayLike(elems)) {\n\t      length = elems.length;\n\n\t      for (; i < length; i++) {\n\t        value = callback(elems[i], i, arg);\n\n\t        if (value != null) {\n\t          ret.push(value);\n\t        }\n\t      } // Go through every key on the object,\n\n\t    } else {\n\t      for (i in elems) {\n\t        value = callback(elems[i], i, arg);\n\n\t        if (value != null) {\n\t          ret.push(value);\n\t        }\n\t      }\n\t    } // Flatten any nested arrays\n\n\n\t    return concat.apply([], ret);\n\t  },\n\t  // A global GUID counter for objects\n\t  guid: 1,\n\t  // jQuery.support is not used in Core but other projects attach their\n\t  // properties to it so it needs to exist.\n\t  support: support\n\t});\n\n\tif (typeof Symbol === \"function\") {\n\t  jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n\t} // Populate the class2type map\n\n\n\tjQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (i, name) {\n\t  class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n\t});\n\n\tfunction isArrayLike(obj) {\n\t  // Support: real iOS 8.2 only (not reproducible in simulator)\n\t  // `in` check used to prevent JIT error (gh-2145)\n\t  // hasOwn isn't used here due to false negatives\n\t  // regarding Nodelist length in IE\n\t  var length = !!obj && \"length\" in obj && obj.length,\n\t      type = toType(obj);\n\n\t  if (isFunction(obj) || isWindow(obj)) {\n\t    return false;\n\t  }\n\n\t  return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n\t}\n\n\tvar Sizzle =\n\t/*!\n\t* Sizzle CSS Selector Engine v2.3.3\n\t* https://sizzlejs.com/\n\t*\n\t* Copyright jQuery Foundation and other contributors\n\t* Released under the MIT license\n\t* http://jquery.org/license\n\t*\n\t* Date: 2016-08-08\n\t*/\n\tfunction (window) {\n\t  var i,\n\t      support,\n\t      Expr,\n\t      getText,\n\t      isXML,\n\t      tokenize,\n\t      compile,\n\t      select,\n\t      outermostContext,\n\t      sortInput,\n\t      hasDuplicate,\n\t      // Local document vars\n\t  setDocument,\n\t      document,\n\t      docElem,\n\t      documentIsHTML,\n\t      rbuggyQSA,\n\t      rbuggyMatches,\n\t      matches,\n\t      contains,\n\t      // Instance-specific data\n\t  expando = \"sizzle\" + 1 * new Date(),\n\t      preferredDoc = window.document,\n\t      dirruns = 0,\n\t      done = 0,\n\t      classCache = createCache(),\n\t      tokenCache = createCache(),\n\t      compilerCache = createCache(),\n\t      sortOrder = function sortOrder(a, b) {\n\t    if (a === b) {\n\t      hasDuplicate = true;\n\t    }\n\n\t    return 0;\n\t  },\n\t      // Instance methods\n\t  hasOwn = {}.hasOwnProperty,\n\t      arr = [],\n\t      pop = arr.pop,\n\t      push_native = arr.push,\n\t      push = arr.push,\n\t      slice = arr.slice,\n\t      // Use a stripped-down indexOf as it's faster than native\n\t  // https://jsperf.com/thor-indexof-vs-for/5\n\t  indexOf = function indexOf(list, elem) {\n\t    var i = 0,\n\t        len = list.length;\n\n\t    for (; i < len; i++) {\n\t      if (list[i] === elem) {\n\t        return i;\n\t      }\n\t    }\n\n\t    return -1;\n\t  },\n\t      booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\t      // Regular expressions\n\t  // http://www.w3.org/TR/css3-selectors/#whitespace\n\t  whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t      // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\t  identifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\t      // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\t  attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + // Operator (capture 2)\n\t  \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t  \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n\t      pseudos = \":(\" + identifier + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t  // 1. quoted (capture 3; capture 4 or capture 5)\n\t  \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n\t  \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n\t  \".*\" + \")\\\\)|)\",\n\t      // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\t  rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n\t      rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n\t      rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n\t      rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n\t      rattributeQuotes = new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\"),\n\t      rpseudo = new RegExp(pseudos),\n\t      ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n\t      matchExpr = {\n\t    \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n\t    \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n\t    \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n\t    \"ATTR\": new RegExp(\"^\" + attributes),\n\t    \"PSEUDO\": new RegExp(\"^\" + pseudos),\n\t    \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n\t    \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n\t    // For use in libraries implementing .is()\n\t    // We use this for POS matching in `select`\n\t    \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n\t  },\n\t      rinputs = /^(?:input|select|textarea|button)$/i,\n\t      rheader = /^h\\d$/i,\n\t      rnative = /^[^{]+\\{\\s*\\[native \\w/,\n\t      // Easily-parseable/retrievable ID or TAG or CLASS selectors\n\t  rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\t      rsibling = /[+~]/,\n\t      // CSS escapes\n\t  // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\t  runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n\t      funescape = function funescape(_, escaped, escapedWhitespace) {\n\t    var high = \"0x\" + escaped - 0x10000; // NaN means non-codepoint\n\t    // Support: Firefox<24\n\t    // Workaround erroneous numeric interpretation of +\"0x\"\n\n\t    return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n\t    String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n\t    String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n\t  },\n\t      // CSS string/identifier serialization\n\t  // https://drafts.csswg.org/cssom/#common-serializing-idioms\n\t  // eslint-disable-next-line no-control-regex\n\t  rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\t      fcssescape = function fcssescape(ch, asCodePoint) {\n\t    if (asCodePoint) {\n\t      // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t      if (ch === \"\\0\") {\n\t        return \"\\uFFFD\";\n\t      } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n\t      return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n\t    } // Other potentially-special ASCII characters get backslash-escaped\n\n\n\t    return \"\\\\\" + ch;\n\t  },\n\t      // Used for iframes\n\t  // See setDocument()\n\t  // Removing the function wrapper causes a \"Permission Denied\"\n\t  // error in IE\n\t  unloadHandler = function unloadHandler() {\n\t    setDocument();\n\t  },\n\t      disabledAncestor = addCombinator(function (elem) {\n\t    return elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t  }, {\n\t    dir: \"parentNode\",\n\t    next: \"legend\"\n\t  }); // Optimize for push.apply( _, NodeList )\n\n\n\t  try {\n\t    push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n\t    // Detect silently failing push.apply\n\n\t    arr[preferredDoc.childNodes.length].nodeType;\n\t  } catch (e) {\n\t    push = {\n\t      apply: arr.length ? // Leverage slice if possible\n\t      function (target, els) {\n\t        push_native.apply(target, slice.call(els));\n\t      } : // Support: IE<9\n\t      // Otherwise append directly\n\t      function (target, els) {\n\t        var j = target.length,\n\t            i = 0; // Can't trust NodeList.length\n\n\t        while (target[j++] = els[i++]) {}\n\n\t        target.length = j - 1;\n\t      }\n\t    };\n\t  }\n\n\t  function Sizzle(selector, context, results, seed) {\n\t    var m,\n\t        i,\n\t        elem,\n\t        nid,\n\t        match,\n\t        groups,\n\t        newSelector,\n\t        newContext = context && context.ownerDocument,\n\t        // nodeType defaults to 9, since context defaults to document\n\t    nodeType = context ? context.nodeType : 9;\n\t    results = results || []; // Return early from calls with invalid selector or context\n\n\t    if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n\t      return results;\n\t    } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n\t    if (!seed) {\n\t      if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n\t        setDocument(context);\n\t      }\n\n\t      context = context || document;\n\n\t      if (documentIsHTML) {\n\t        // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t        // (excepting DocumentFragment context, where the methods don't exist)\n\t        if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n\t          // ID selector\n\t          if (m = match[1]) {\n\t            // Document context\n\t            if (nodeType === 9) {\n\t              if (elem = context.getElementById(m)) {\n\t                // Support: IE, Opera, Webkit\n\t                // TODO: identify versions\n\t                // getElementById can match elements by name instead of ID\n\t                if (elem.id === m) {\n\t                  results.push(elem);\n\t                  return results;\n\t                }\n\t              } else {\n\t                return results;\n\t              } // Element context\n\n\t            } else {\n\t              // Support: IE, Opera, Webkit\n\t              // TODO: identify versions\n\t              // getElementById can match elements by name instead of ID\n\t              if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n\t                results.push(elem);\n\t                return results;\n\t              }\n\t            } // Type selector\n\n\t          } else if (match[2]) {\n\t            push.apply(results, context.getElementsByTagName(selector));\n\t            return results; // Class selector\n\t          } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n\t            push.apply(results, context.getElementsByClassName(m));\n\t            return results;\n\t          }\n\t        } // Take advantage of querySelectorAll\n\n\n\t        if (support.qsa && !compilerCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n\t          if (nodeType !== 1) {\n\t            newContext = context;\n\t            newSelector = selector; // qSA looks outside Element context, which is not what we want\n\t            // Thanks to Andrew Dupont for this workaround technique\n\t            // Support: IE <=8\n\t            // Exclude object elements\n\t          } else if (context.nodeName.toLowerCase() !== \"object\") {\n\t            // Capture the context ID, setting it first if necessary\n\t            if (nid = context.getAttribute(\"id\")) {\n\t              nid = nid.replace(rcssescape, fcssescape);\n\t            } else {\n\t              context.setAttribute(\"id\", nid = expando);\n\t            } // Prefix every selector in the list\n\n\n\t            groups = tokenize(selector);\n\t            i = groups.length;\n\n\t            while (i--) {\n\t              groups[i] = \"#\" + nid + \" \" + toSelector(groups[i]);\n\t            }\n\n\t            newSelector = groups.join(\",\"); // Expand context for sibling selectors\n\n\t            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n\t          }\n\n\t          if (newSelector) {\n\t            try {\n\t              push.apply(results, newContext.querySelectorAll(newSelector));\n\t              return results;\n\t            } catch (qsaError) {} finally {\n\t              if (nid === expando) {\n\t                context.removeAttribute(\"id\");\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } // All others\n\n\n\t    return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n\t  }\n\t  /**\n\t   * Create key-value caches of limited size\n\t   * @returns {function(string, object)} Returns the Object data after storing it on itself with\n\t   *    property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\t   *    deleting the oldest entry\n\t   */\n\n\n\t  function createCache() {\n\t    var keys = [];\n\n\t    function cache(key, value) {\n\t      // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t      if (keys.push(key + \" \") > Expr.cacheLength) {\n\t        // Only keep the most recent entries\n\t        delete cache[keys.shift()];\n\t      }\n\n\t      return cache[key + \" \"] = value;\n\t    }\n\n\t    return cache;\n\t  }\n\t  /**\n\t   * Mark a function for special use by Sizzle\n\t   * @param {Function} fn The function to mark\n\t   */\n\n\n\t  function markFunction(fn) {\n\t    fn[expando] = true;\n\t    return fn;\n\t  }\n\t  /**\n\t   * Support testing using an element\n\t   * @param {Function} fn Passed the created element and returns a boolean result\n\t   */\n\n\n\t  function assert(fn) {\n\t    var el = document.createElement(\"fieldset\");\n\n\t    try {\n\t      return !!fn(el);\n\t    } catch (e) {\n\t      return false;\n\t    } finally {\n\t      // Remove from its parent by default\n\t      if (el.parentNode) {\n\t        el.parentNode.removeChild(el);\n\t      } // release memory in IE\n\n\n\t      el = null;\n\t    }\n\t  }\n\t  /**\n\t   * Adds the same handler for all of the specified attrs\n\t   * @param {String} attrs Pipe-separated list of attributes\n\t   * @param {Function} handler The method that will be applied\n\t   */\n\n\n\t  function addHandle(attrs, handler) {\n\t    var arr = attrs.split(\"|\"),\n\t        i = arr.length;\n\n\t    while (i--) {\n\t      Expr.attrHandle[arr[i]] = handler;\n\t    }\n\t  }\n\t  /**\n\t   * Checks document order of two siblings\n\t   * @param {Element} a\n\t   * @param {Element} b\n\t   * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n\t   */\n\n\n\t  function siblingCheck(a, b) {\n\t    var cur = b && a,\n\t        diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n\t    if (diff) {\n\t      return diff;\n\t    } // Check if b follows a\n\n\n\t    if (cur) {\n\t      while (cur = cur.nextSibling) {\n\t        if (cur === b) {\n\t          return -1;\n\t        }\n\t      }\n\t    }\n\n\t    return a ? 1 : -1;\n\t  }\n\t  /**\n\t   * Returns a function to use in pseudos for input types\n\t   * @param {String} type\n\t   */\n\n\n\t  function createInputPseudo(type) {\n\t    return function (elem) {\n\t      var name = elem.nodeName.toLowerCase();\n\t      return name === \"input\" && elem.type === type;\n\t    };\n\t  }\n\t  /**\n\t   * Returns a function to use in pseudos for buttons\n\t   * @param {String} type\n\t   */\n\n\n\t  function createButtonPseudo(type) {\n\t    return function (elem) {\n\t      var name = elem.nodeName.toLowerCase();\n\t      return (name === \"input\" || name === \"button\") && elem.type === type;\n\t    };\n\t  }\n\t  /**\n\t   * Returns a function to use in pseudos for :enabled/:disabled\n\t   * @param {Boolean} disabled true for :disabled; false for :enabled\n\t   */\n\n\n\t  function createDisabledPseudo(disabled) {\n\t    // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\t    return function (elem) {\n\t      // Only certain elements can match :enabled or :disabled\n\t      // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t      // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t      if (\"form\" in elem) {\n\t        // Check for inherited disabledness on relevant non-disabled elements:\n\t        // * listed form-associated elements in a disabled fieldset\n\t        //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t        //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t        // * option elements in a disabled optgroup\n\t        //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t        // All such elements have a \"form\" property.\n\t        if (elem.parentNode && elem.disabled === false) {\n\t          // Option elements defer to a parent optgroup if present\n\t          if (\"label\" in elem) {\n\t            if (\"label\" in elem.parentNode) {\n\t              return elem.parentNode.disabled === disabled;\n\t            } else {\n\t              return elem.disabled === disabled;\n\t            }\n\t          } // Support: IE 6 - 11\n\t          // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n\t          return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n\t          /* jshint -W018 */\n\t          elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;\n\t        }\n\n\t        return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t        // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t        // even exist on them, let alone have a boolean value.\n\t      } else if (\"label\" in elem) {\n\t        return elem.disabled === disabled;\n\t      } // Remaining elements are neither :enabled nor :disabled\n\n\n\t      return false;\n\t    };\n\t  }\n\t  /**\n\t   * Returns a function to use in pseudos for positionals\n\t   * @param {Function} fn\n\t   */\n\n\n\t  function createPositionalPseudo(fn) {\n\t    return markFunction(function (argument) {\n\t      argument = +argument;\n\t      return markFunction(function (seed, matches) {\n\t        var j,\n\t            matchIndexes = fn([], seed.length, argument),\n\t            i = matchIndexes.length; // Match elements found at the specified indexes\n\n\t        while (i--) {\n\t          if (seed[j = matchIndexes[i]]) {\n\t            seed[j] = !(matches[j] = seed[j]);\n\t          }\n\t        }\n\t      });\n\t    });\n\t  }\n\t  /**\n\t   * Checks a node for validity as a Sizzle context\n\t   * @param {Element|Object=} context\n\t   * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n\t   */\n\n\n\t  function testContext(context) {\n\t    return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n\t  } // Expose support vars for convenience\n\n\n\t  support = Sizzle.support = {};\n\t  /**\n\t   * Detects XML nodes\n\t   * @param {Element|Object} elem An element or a document\n\t   * @returns {Boolean} True iff elem is a non-HTML XML node\n\t   */\n\n\t  isXML = Sizzle.isXML = function (elem) {\n\t    // documentElement is verified for cases where it doesn't yet exist\n\t    // (such as loading iframes in IE - #4833)\n\t    var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\t    return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n\t  };\n\t  /**\n\t   * Sets document-related variables once based on the current document\n\t   * @param {Element|Object} [doc] An element or document object to use to set the document\n\t   * @returns {Object} Returns the current document\n\t   */\n\n\n\t  setDocument = Sizzle.setDocument = function (node) {\n\t    var hasCompare,\n\t        subWindow,\n\t        doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n\n\t    if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n\t      return document;\n\t    } // Update global variables\n\n\n\t    document = doc;\n\t    docElem = document.documentElement;\n\t    documentIsHTML = !isXML(document); // Support: IE 9-11, Edge\n\t    // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\n\t    if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n\t      // Support: IE 11, Edge\n\t      if (subWindow.addEventListener) {\n\t        subWindow.addEventListener(\"unload\", unloadHandler, false); // Support: IE 9 - 10 only\n\t      } else if (subWindow.attachEvent) {\n\t        subWindow.attachEvent(\"onunload\", unloadHandler);\n\t      }\n\t    }\n\t    /* Attributes\n\t    ---------------------------------------------------------------------- */\n\t    // Support: IE<8\n\t    // Verify that getAttribute really returns attributes and not properties\n\t    // (excepting IE8 booleans)\n\n\n\t    support.attributes = assert(function (el) {\n\t      el.className = \"i\";\n\t      return !el.getAttribute(\"className\");\n\t    });\n\t    /* getElement(s)By*\n\t    ---------------------------------------------------------------------- */\n\t    // Check if getElementsByTagName(\"*\") returns only elements\n\n\t    support.getElementsByTagName = assert(function (el) {\n\t      el.appendChild(document.createComment(\"\"));\n\t      return !el.getElementsByTagName(\"*\").length;\n\t    }); // Support: IE<9\n\n\t    support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n\t    // Check if getElementById returns elements by name\n\t    // The broken getElementById methods don't pick up programmatically-set names,\n\t    // so use a roundabout getElementsByName test\n\n\t    support.getById = assert(function (el) {\n\t      docElem.appendChild(el).id = expando;\n\t      return !document.getElementsByName || !document.getElementsByName(expando).length;\n\t    }); // ID filter and find\n\n\t    if (support.getById) {\n\t      Expr.filter[\"ID\"] = function (id) {\n\t        var attrId = id.replace(runescape, funescape);\n\t        return function (elem) {\n\t          return elem.getAttribute(\"id\") === attrId;\n\t        };\n\t      };\n\n\t      Expr.find[\"ID\"] = function (id, context) {\n\t        if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n\t          var elem = context.getElementById(id);\n\t          return elem ? [elem] : [];\n\t        }\n\t      };\n\t    } else {\n\t      Expr.filter[\"ID\"] = function (id) {\n\t        var attrId = id.replace(runescape, funescape);\n\t        return function (elem) {\n\t          var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\t          return node && node.value === attrId;\n\t        };\n\t      }; // Support: IE 6 - 7 only\n\t      // getElementById is not reliable as a find shortcut\n\n\n\t      Expr.find[\"ID\"] = function (id, context) {\n\t        if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n\t          var node,\n\t              i,\n\t              elems,\n\t              elem = context.getElementById(id);\n\n\t          if (elem) {\n\t            // Verify the id attribute\n\t            node = elem.getAttributeNode(\"id\");\n\n\t            if (node && node.value === id) {\n\t              return [elem];\n\t            } // Fall back on getElementsByName\n\n\n\t            elems = context.getElementsByName(id);\n\t            i = 0;\n\n\t            while (elem = elems[i++]) {\n\t              node = elem.getAttributeNode(\"id\");\n\n\t              if (node && node.value === id) {\n\t                return [elem];\n\t              }\n\t            }\n\t          }\n\n\t          return [];\n\t        }\n\t      };\n\t    } // Tag\n\n\n\t    Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n\t      if (typeof context.getElementsByTagName !== \"undefined\") {\n\t        return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n\t      } else if (support.qsa) {\n\t        return context.querySelectorAll(tag);\n\t      }\n\t    } : function (tag, context) {\n\t      var elem,\n\t          tmp = [],\n\t          i = 0,\n\t          // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t      results = context.getElementsByTagName(tag); // Filter out possible comments\n\n\t      if (tag === \"*\") {\n\t        while (elem = results[i++]) {\n\t          if (elem.nodeType === 1) {\n\t            tmp.push(elem);\n\t          }\n\t        }\n\n\t        return tmp;\n\t      }\n\n\t      return results;\n\t    }; // Class\n\n\t    Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n\t      if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n\t        return context.getElementsByClassName(className);\n\t      }\n\t    };\n\t    /* QSA/matchesSelector\n\t    ---------------------------------------------------------------------- */\n\t    // QSA and matchesSelector support\n\t    // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n\t    rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n\t    // We allow this because of a bug in IE8/9 that throws an error\n\t    // whenever `document.activeElement` is accessed on an iframe\n\t    // So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t    // See https://bugs.jquery.com/ticket/13378\n\n\t    rbuggyQSA = [];\n\n\t    if (support.qsa = rnative.test(document.querySelectorAll)) {\n\t      // Build QSA regex\n\t      // Regex strategy adopted from Diego Perini\n\t      assert(function (el) {\n\t        // Select is set to empty string on purpose\n\t        // This is to test IE's treatment of not explicitly\n\t        // setting a boolean content attribute,\n\t        // since its presence should be enough\n\t        // https://bugs.jquery.com/ticket/12359\n\t        docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n\t        // Nothing should be selected when empty strings follow ^= or $= or *=\n\t        // The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t        // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n\t        if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n\t          rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n\t        } // Support: IE8\n\t        // Boolean attributes and \"value\" are not treated correctly\n\n\n\t        if (!el.querySelectorAll(\"[selected]\").length) {\n\t          rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n\t        } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n\t        if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n\t          rbuggyQSA.push(\"~=\");\n\t        } // Webkit/Opera - :checked should return selected option elements\n\t        // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t        // IE8 throws error here and will not see later tests\n\n\n\t        if (!el.querySelectorAll(\":checked\").length) {\n\t          rbuggyQSA.push(\":checked\");\n\t        } // Support: Safari 8+, iOS 8+\n\t        // https://bugs.webkit.org/show_bug.cgi?id=136851\n\t        // In-page `selector#id sibling-combinator selector` fails\n\n\n\t        if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n\t          rbuggyQSA.push(\".#.+[+~]\");\n\t        }\n\t      });\n\t      assert(function (el) {\n\t        el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\"; // Support: Windows 8 Native Apps\n\t        // The type and name attributes are restricted during .innerHTML assignment\n\n\t        var input = document.createElement(\"input\");\n\t        input.setAttribute(\"type\", \"hidden\");\n\t        el.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n\t        // Enforce case-sensitivity of name attribute\n\n\t        if (el.querySelectorAll(\"[name=d]\").length) {\n\t          rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n\t        } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t        // IE8 throws error here and will not see later tests\n\n\n\t        if (el.querySelectorAll(\":enabled\").length !== 2) {\n\t          rbuggyQSA.push(\":enabled\", \":disabled\");\n\t        } // Support: IE9-11+\n\t        // IE's :disabled selector does not pick up the children of disabled fieldsets\n\n\n\t        docElem.appendChild(el).disabled = true;\n\n\t        if (el.querySelectorAll(\":disabled\").length !== 2) {\n\t          rbuggyQSA.push(\":enabled\", \":disabled\");\n\t        } // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n\t        el.querySelectorAll(\"*,:x\");\n\t        rbuggyQSA.push(\",.*:\");\n\t      });\n\t    }\n\n\t    if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n\t      assert(function (el) {\n\t        // Check to see if it's possible to do matchesSelector\n\t        // on a disconnected node (IE 9)\n\t        support.disconnectedMatch = matches.call(el, \"*\"); // This should fail with an exception\n\t        // Gecko does not error, returns false instead\n\n\t        matches.call(el, \"[s!='']:x\");\n\t        rbuggyMatches.push(\"!=\", pseudos);\n\t      });\n\t    }\n\n\t    rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n\t    rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n\t    /* Contains\n\t    ---------------------------------------------------------------------- */\n\n\t    hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n\t    // Purposefully self-exclusive\n\t    // As in, an element does not contain itself\n\n\t    contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n\t      var adown = a.nodeType === 9 ? a.documentElement : a,\n\t          bup = b && b.parentNode;\n\t      return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n\t    } : function (a, b) {\n\t      if (b) {\n\t        while (b = b.parentNode) {\n\t          if (b === a) {\n\t            return true;\n\t          }\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\t    /* Sorting\n\t    ---------------------------------------------------------------------- */\n\t    // Document order sorting\n\n\t    sortOrder = hasCompare ? function (a, b) {\n\t      // Flag for duplicate removal\n\t      if (a === b) {\n\t        hasDuplicate = true;\n\t        return 0;\n\t      } // Sort on method existence if only one input has compareDocumentPosition\n\n\n\t      var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n\t      if (compare) {\n\t        return compare;\n\t      } // Calculate position if both inputs belong to the same document\n\n\n\t      compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n\t      1; // Disconnected nodes\n\n\t      if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n\t        // Choose the first element that is related to our preferred document\n\t        if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n\t          return -1;\n\t        }\n\n\t        if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n\t          return 1;\n\t        } // Maintain original order\n\n\n\t        return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n\t      }\n\n\t      return compare & 4 ? -1 : 1;\n\t    } : function (a, b) {\n\t      // Exit early if the nodes are identical\n\t      if (a === b) {\n\t        hasDuplicate = true;\n\t        return 0;\n\t      }\n\n\t      var cur,\n\t          i = 0,\n\t          aup = a.parentNode,\n\t          bup = b.parentNode,\n\t          ap = [a],\n\t          bp = [b]; // Parentless nodes are either documents or disconnected\n\n\t      if (!aup || !bup) {\n\t        return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n\t      } else if (aup === bup) {\n\t        return siblingCheck(a, b);\n\t      } // Otherwise we need full lists of their ancestors for comparison\n\n\n\t      cur = a;\n\n\t      while (cur = cur.parentNode) {\n\t        ap.unshift(cur);\n\t      }\n\n\t      cur = b;\n\n\t      while (cur = cur.parentNode) {\n\t        bp.unshift(cur);\n\t      } // Walk down the tree looking for a discrepancy\n\n\n\t      while (ap[i] === bp[i]) {\n\t        i++;\n\t      }\n\n\t      return i ? // Do a sibling check if the nodes have a common ancestor\n\t      siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n\t      ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n\t    };\n\t    return document;\n\t  };\n\n\t  Sizzle.matches = function (expr, elements) {\n\t    return Sizzle(expr, null, null, elements);\n\t  };\n\n\t  Sizzle.matchesSelector = function (elem, expr) {\n\t    // Set document vars if needed\n\t    if ((elem.ownerDocument || elem) !== document) {\n\t      setDocument(elem);\n\t    } // Make sure that attribute selectors are quoted\n\n\n\t    expr = expr.replace(rattributeQuotes, \"='$1']\");\n\n\t    if (support.matchesSelector && documentIsHTML && !compilerCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n\t      try {\n\t        var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n\t        if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n\t        // fragment in IE 9\n\t        elem.document && elem.document.nodeType !== 11) {\n\t          return ret;\n\t        }\n\t      } catch (e) {}\n\t    }\n\n\t    return Sizzle(expr, document, null, [elem]).length > 0;\n\t  };\n\n\t  Sizzle.contains = function (context, elem) {\n\t    // Set document vars if needed\n\t    if ((context.ownerDocument || context) !== document) {\n\t      setDocument(context);\n\t    }\n\n\t    return contains(context, elem);\n\t  };\n\n\t  Sizzle.attr = function (elem, name) {\n\t    // Set document vars if needed\n\t    if ((elem.ownerDocument || elem) !== document) {\n\t      setDocument(elem);\n\t    }\n\n\t    var fn = Expr.attrHandle[name.toLowerCase()],\n\t        // Don't get fooled by Object.prototype properties (jQuery #13807)\n\t    val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n\t    return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n\t  };\n\n\t  Sizzle.escape = function (sel) {\n\t    return (sel + \"\").replace(rcssescape, fcssescape);\n\t  };\n\n\t  Sizzle.error = function (msg) {\n\t    throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n\t  };\n\t  /**\n\t   * Document sorting and removing duplicates\n\t   * @param {ArrayLike} results\n\t   */\n\n\n\t  Sizzle.uniqueSort = function (results) {\n\t    var elem,\n\t        duplicates = [],\n\t        j = 0,\n\t        i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n\t    hasDuplicate = !support.detectDuplicates;\n\t    sortInput = !support.sortStable && results.slice(0);\n\t    results.sort(sortOrder);\n\n\t    if (hasDuplicate) {\n\t      while (elem = results[i++]) {\n\t        if (elem === results[i]) {\n\t          j = duplicates.push(i);\n\t        }\n\t      }\n\n\t      while (j--) {\n\t        results.splice(duplicates[j], 1);\n\t      }\n\t    } // Clear input after sorting to release objects\n\t    // See https://github.com/jquery/sizzle/pull/225\n\n\n\t    sortInput = null;\n\t    return results;\n\t  };\n\t  /**\n\t   * Utility function for retrieving the text value of an array of DOM nodes\n\t   * @param {Array|Element} elem\n\t   */\n\n\n\t  getText = Sizzle.getText = function (elem) {\n\t    var node,\n\t        ret = \"\",\n\t        i = 0,\n\t        nodeType = elem.nodeType;\n\n\t    if (!nodeType) {\n\t      // If no nodeType, this is expected to be an array\n\t      while (node = elem[i++]) {\n\t        // Do not traverse comment nodes\n\t        ret += getText(node);\n\t      }\n\t    } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n\t      // Use textContent for elements\n\t      // innerText usage removed for consistency of new lines (jQuery #11153)\n\t      if (typeof elem.textContent === \"string\") {\n\t        return elem.textContent;\n\t      } else {\n\t        // Traverse its children\n\t        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n\t          ret += getText(elem);\n\t        }\n\t      }\n\t    } else if (nodeType === 3 || nodeType === 4) {\n\t      return elem.nodeValue;\n\t    } // Do not include comment or processing instruction nodes\n\n\n\t    return ret;\n\t  };\n\n\t  Expr = Sizzle.selectors = {\n\t    // Can be adjusted by the user\n\t    cacheLength: 50,\n\t    createPseudo: markFunction,\n\t    match: matchExpr,\n\t    attrHandle: {},\n\t    find: {},\n\t    relative: {\n\t      \">\": {\n\t        dir: \"parentNode\",\n\t        first: true\n\t      },\n\t      \" \": {\n\t        dir: \"parentNode\"\n\t      },\n\t      \"+\": {\n\t        dir: \"previousSibling\",\n\t        first: true\n\t      },\n\t      \"~\": {\n\t        dir: \"previousSibling\"\n\t      }\n\t    },\n\t    preFilter: {\n\t      \"ATTR\": function ATTR(match) {\n\t        match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n\t        match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n\t        if (match[2] === \"~=\") {\n\t          match[3] = \" \" + match[3] + \" \";\n\t        }\n\n\t        return match.slice(0, 4);\n\t      },\n\t      \"CHILD\": function CHILD(match) {\n\t        /* matches from matchExpr[\"CHILD\"]\n\t        1 type (only|nth|...)\n\t        2 what (child|of-type)\n\t        3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t        4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t        5 sign of xn-component\n\t        6 x of xn-component\n\t        7 sign of y-component\n\t        8 y of y-component\n\t        */\n\t        match[1] = match[1].toLowerCase();\n\n\t        if (match[1].slice(0, 3) === \"nth\") {\n\t          // nth-* requires argument\n\t          if (!match[3]) {\n\t            Sizzle.error(match[0]);\n\t          } // numeric x and y parameters for Expr.filter.CHILD\n\t          // remember that false/true cast respectively to 0/1\n\n\n\t          match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n\t          match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n\t        } else if (match[3]) {\n\t          Sizzle.error(match[0]);\n\t        }\n\n\t        return match;\n\t      },\n\t      \"PSEUDO\": function PSEUDO(match) {\n\t        var excess,\n\t            unquoted = !match[6] && match[2];\n\n\t        if (matchExpr[\"CHILD\"].test(match[0])) {\n\t          return null;\n\t        } // Accept quoted arguments as-is\n\n\n\t        if (match[3]) {\n\t          match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n\t        } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n\t        excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n\t        excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n\t          // excess is a negative index\n\t          match[0] = match[0].slice(0, excess);\n\t          match[2] = unquoted.slice(0, excess);\n\t        } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n\t        return match.slice(0, 3);\n\t      }\n\t    },\n\t    filter: {\n\t      \"TAG\": function TAG(nodeNameSelector) {\n\t        var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n\t        return nodeNameSelector === \"*\" ? function () {\n\t          return true;\n\t        } : function (elem) {\n\t          return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t        };\n\t      },\n\t      \"CLASS\": function CLASS(className) {\n\t        var pattern = classCache[className + \" \"];\n\t        return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n\t          return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n\t        });\n\t      },\n\t      \"ATTR\": function ATTR(name, operator, check) {\n\t        return function (elem) {\n\t          var result = Sizzle.attr(elem, name);\n\n\t          if (result == null) {\n\t            return operator === \"!=\";\n\t          }\n\n\t          if (!operator) {\n\t            return true;\n\t          }\n\n\t          result += \"\";\n\t          return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n\t        };\n\t      },\n\t      \"CHILD\": function CHILD(type, what, argument, first, last) {\n\t        var simple = type.slice(0, 3) !== \"nth\",\n\t            forward = type.slice(-4) !== \"last\",\n\t            ofType = what === \"of-type\";\n\t        return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n\t        function (elem) {\n\t          return !!elem.parentNode;\n\t        } : function (elem, context, xml) {\n\t          var cache,\n\t              uniqueCache,\n\t              outerCache,\n\t              node,\n\t              nodeIndex,\n\t              start,\n\t              dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t              parent = elem.parentNode,\n\t              name = ofType && elem.nodeName.toLowerCase(),\n\t              useCache = !xml && !ofType,\n\t              diff = false;\n\n\t          if (parent) {\n\t            // :(first|last|only)-(child|of-type)\n\t            if (simple) {\n\t              while (dir) {\n\t                node = elem;\n\n\t                while (node = node[dir]) {\n\t                  if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n\t                    return false;\n\t                  }\n\t                } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n\t                start = dir = type === \"only\" && !start && \"nextSibling\";\n\t              }\n\n\t              return true;\n\t            }\n\n\t            start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n\t            if (forward && useCache) {\n\t              // Seek `elem` from a previously-cached index\n\t              // ...in a gzip-friendly way\n\t              node = parent;\n\t              outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n\t              // Defend against cloned attroperties (jQuery gh-1709)\n\n\t              uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n\t              cache = uniqueCache[type] || [];\n\t              nodeIndex = cache[0] === dirruns && cache[1];\n\t              diff = nodeIndex && cache[2];\n\t              node = nodeIndex && parent.childNodes[nodeIndex];\n\n\t              while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n\t              diff = nodeIndex = 0) || start.pop()) {\n\t                // When found, cache indexes on `parent` and break\n\t                if (node.nodeType === 1 && ++diff && node === elem) {\n\t                  uniqueCache[type] = [dirruns, nodeIndex, diff];\n\t                  break;\n\t                }\n\t              }\n\t            } else {\n\t              // Use previously-cached element index if available\n\t              if (useCache) {\n\t                // ...in a gzip-friendly way\n\t                node = elem;\n\t                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n\t                // Defend against cloned attroperties (jQuery gh-1709)\n\n\t                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n\t                cache = uniqueCache[type] || [];\n\t                nodeIndex = cache[0] === dirruns && cache[1];\n\t                diff = nodeIndex;\n\t              } // xml :nth-child(...)\n\t              // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n\t              if (diff === false) {\n\t                // Use the same loop as above to seek `elem` from the start\n\t                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n\t                  if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n\t                    // Cache the index of each encountered element\n\t                    if (useCache) {\n\t                      outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n\t                      // Defend against cloned attroperties (jQuery gh-1709)\n\n\t                      uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n\t                      uniqueCache[type] = [dirruns, diff];\n\t                    }\n\n\t                    if (node === elem) {\n\t                      break;\n\t                    }\n\t                  }\n\t                }\n\t              }\n\t            } // Incorporate the offset, then check against cycle size\n\n\n\t            diff -= last;\n\t            return diff === first || diff % first === 0 && diff / first >= 0;\n\t          }\n\t        };\n\t      },\n\t      \"PSEUDO\": function PSEUDO(pseudo, argument) {\n\t        // pseudo-class names are case-insensitive\n\t        // http://www.w3.org/TR/selectors/#pseudo-classes\n\t        // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t        // Remember that setFilters inherits from pseudos\n\t        var args,\n\t            fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n\t        // arguments are needed to create the filter function\n\t        // just as Sizzle does\n\n\t        if (fn[expando]) {\n\t          return fn(argument);\n\t        } // But maintain support for old signatures\n\n\n\t        if (fn.length > 1) {\n\t          args = [pseudo, pseudo, \"\", argument];\n\t          return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n\t            var idx,\n\t                matched = fn(seed, argument),\n\t                i = matched.length;\n\n\t            while (i--) {\n\t              idx = indexOf(seed, matched[i]);\n\t              seed[idx] = !(matches[idx] = matched[i]);\n\t            }\n\t          }) : function (elem) {\n\t            return fn(elem, 0, args);\n\t          };\n\t        }\n\n\t        return fn;\n\t      }\n\t    },\n\t    pseudos: {\n\t      // Potentially complex pseudos\n\t      \"not\": markFunction(function (selector) {\n\t        // Trim the selector passed to compile\n\t        // to avoid treating leading and trailing\n\t        // spaces as combinators\n\t        var input = [],\n\t            results = [],\n\t            matcher = compile(selector.replace(rtrim, \"$1\"));\n\t        return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n\t          var elem,\n\t              unmatched = matcher(seed, null, xml, []),\n\t              i = seed.length; // Match elements unmatched by `matcher`\n\n\t          while (i--) {\n\t            if (elem = unmatched[i]) {\n\t              seed[i] = !(matches[i] = elem);\n\t            }\n\t          }\n\t        }) : function (elem, context, xml) {\n\t          input[0] = elem;\n\t          matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n\t          input[0] = null;\n\t          return !results.pop();\n\t        };\n\t      }),\n\t      \"has\": markFunction(function (selector) {\n\t        return function (elem) {\n\t          return Sizzle(selector, elem).length > 0;\n\t        };\n\t      }),\n\t      \"contains\": markFunction(function (text) {\n\t        text = text.replace(runescape, funescape);\n\t        return function (elem) {\n\t          return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n\t        };\n\t      }),\n\t      // \"Whether an element is represented by a :lang() selector\n\t      // is based solely on the element's language value\n\t      // being equal to the identifier C,\n\t      // or beginning with the identifier C immediately followed by \"-\".\n\t      // The matching of C against the element's language value is performed case-insensitively.\n\t      // The identifier C does not have to be a valid language name.\"\n\t      // http://www.w3.org/TR/selectors/#lang-pseudo\n\t      \"lang\": markFunction(function (lang) {\n\t        // lang value must be a valid identifier\n\t        if (!ridentifier.test(lang || \"\")) {\n\t          Sizzle.error(\"unsupported lang: \" + lang);\n\t        }\n\n\t        lang = lang.replace(runescape, funescape).toLowerCase();\n\t        return function (elem) {\n\t          var elemLang;\n\n\t          do {\n\t            if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n\t              elemLang = elemLang.toLowerCase();\n\t              return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n\t            }\n\t          } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n\t          return false;\n\t        };\n\t      }),\n\t      // Miscellaneous\n\t      \"target\": function target(elem) {\n\t        var hash = window.location && window.location.hash;\n\t        return hash && hash.slice(1) === elem.id;\n\t      },\n\t      \"root\": function root(elem) {\n\t        return elem === docElem;\n\t      },\n\t      \"focus\": function focus(elem) {\n\t        return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t      },\n\t      // Boolean properties\n\t      \"enabled\": createDisabledPseudo(false),\n\t      \"disabled\": createDisabledPseudo(true),\n\t      \"checked\": function checked(elem) {\n\t        // In CSS3, :checked should return both checked and selected elements\n\t        // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t        var nodeName = elem.nodeName.toLowerCase();\n\t        return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n\t      },\n\t      \"selected\": function selected(elem) {\n\t        // Accessing this property makes selected-by-default\n\t        // options in Safari work properly\n\t        if (elem.parentNode) {\n\t          elem.parentNode.selectedIndex;\n\t        }\n\n\t        return elem.selected === true;\n\t      },\n\t      // Contents\n\t      \"empty\": function empty(elem) {\n\t        // http://www.w3.org/TR/selectors/#empty-pseudo\n\t        // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t        //   but not by others (comment: 8; processing instruction: 7; etc.)\n\t        // nodeType < 6 works because attributes (2) do not appear as children\n\t        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n\t          if (elem.nodeType < 6) {\n\t            return false;\n\t          }\n\t        }\n\n\t        return true;\n\t      },\n\t      \"parent\": function parent(elem) {\n\t        return !Expr.pseudos[\"empty\"](elem);\n\t      },\n\t      // Element/input types\n\t      \"header\": function header(elem) {\n\t        return rheader.test(elem.nodeName);\n\t      },\n\t      \"input\": function input(elem) {\n\t        return rinputs.test(elem.nodeName);\n\t      },\n\t      \"button\": function button(elem) {\n\t        var name = elem.nodeName.toLowerCase();\n\t        return name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t      },\n\t      \"text\": function text(elem) {\n\t        var attr;\n\t        return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n\t        // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t        (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n\t      },\n\t      // Position-in-collection\n\t      \"first\": createPositionalPseudo(function () {\n\t        return [0];\n\t      }),\n\t      \"last\": createPositionalPseudo(function (matchIndexes, length) {\n\t        return [length - 1];\n\t      }),\n\t      \"eq\": createPositionalPseudo(function (matchIndexes, length, argument) {\n\t        return [argument < 0 ? argument + length : argument];\n\t      }),\n\t      \"even\": createPositionalPseudo(function (matchIndexes, length) {\n\t        var i = 0;\n\n\t        for (; i < length; i += 2) {\n\t          matchIndexes.push(i);\n\t        }\n\n\t        return matchIndexes;\n\t      }),\n\t      \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n\t        var i = 1;\n\n\t        for (; i < length; i += 2) {\n\t          matchIndexes.push(i);\n\t        }\n\n\t        return matchIndexes;\n\t      }),\n\t      \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n\t        var i = argument < 0 ? argument + length : argument;\n\n\t        for (; --i >= 0;) {\n\t          matchIndexes.push(i);\n\t        }\n\n\t        return matchIndexes;\n\t      }),\n\t      \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n\t        var i = argument < 0 ? argument + length : argument;\n\n\t        for (; ++i < length;) {\n\t          matchIndexes.push(i);\n\t        }\n\n\t        return matchIndexes;\n\t      })\n\t    }\n\t  };\n\t  Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n\t  for (i in {\n\t    radio: true,\n\t    checkbox: true,\n\t    file: true,\n\t    password: true,\n\t    image: true\n\t  }) {\n\t    Expr.pseudos[i] = createInputPseudo(i);\n\t  }\n\n\t  for (i in {\n\t    submit: true,\n\t    reset: true\n\t  }) {\n\t    Expr.pseudos[i] = createButtonPseudo(i);\n\t  } // Easy API for creating new setFilters\n\n\n\t  function setFilters() {}\n\n\t  setFilters.prototype = Expr.filters = Expr.pseudos;\n\t  Expr.setFilters = new setFilters();\n\n\t  tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n\t    var matched,\n\t        match,\n\t        tokens,\n\t        type,\n\t        soFar,\n\t        groups,\n\t        preFilters,\n\t        cached = tokenCache[selector + \" \"];\n\n\t    if (cached) {\n\t      return parseOnly ? 0 : cached.slice(0);\n\t    }\n\n\t    soFar = selector;\n\t    groups = [];\n\t    preFilters = Expr.preFilter;\n\n\t    while (soFar) {\n\t      // Comma and first run\n\t      if (!matched || (match = rcomma.exec(soFar))) {\n\t        if (match) {\n\t          // Don't consume trailing commas as valid\n\t          soFar = soFar.slice(match[0].length) || soFar;\n\t        }\n\n\t        groups.push(tokens = []);\n\t      }\n\n\t      matched = false; // Combinators\n\n\t      if (match = rcombinators.exec(soFar)) {\n\t        matched = match.shift();\n\t        tokens.push({\n\t          value: matched,\n\t          // Cast descendant combinators to space\n\t          type: match[0].replace(rtrim, \" \")\n\t        });\n\t        soFar = soFar.slice(matched.length);\n\t      } // Filters\n\n\n\t      for (type in Expr.filter) {\n\t        if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n\t          matched = match.shift();\n\t          tokens.push({\n\t            value: matched,\n\t            type: type,\n\t            matches: match\n\t          });\n\t          soFar = soFar.slice(matched.length);\n\t        }\n\t      }\n\n\t      if (!matched) {\n\t        break;\n\t      }\n\t    } // Return the length of the invalid excess\n\t    // if we're just parsing\n\t    // Otherwise, throw an error or return tokens\n\n\n\t    return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n\t    tokenCache(selector, groups).slice(0);\n\t  };\n\n\t  function toSelector(tokens) {\n\t    var i = 0,\n\t        len = tokens.length,\n\t        selector = \"\";\n\n\t    for (; i < len; i++) {\n\t      selector += tokens[i].value;\n\t    }\n\n\t    return selector;\n\t  }\n\n\t  function addCombinator(matcher, combinator, base) {\n\t    var dir = combinator.dir,\n\t        skip = combinator.next,\n\t        key = skip || dir,\n\t        checkNonElements = base && key === \"parentNode\",\n\t        doneName = done++;\n\t    return combinator.first ? // Check against closest ancestor/preceding element\n\t    function (elem, context, xml) {\n\t      while (elem = elem[dir]) {\n\t        if (elem.nodeType === 1 || checkNonElements) {\n\t          return matcher(elem, context, xml);\n\t        }\n\t      }\n\n\t      return false;\n\t    } : // Check against all ancestor/preceding elements\n\t    function (elem, context, xml) {\n\t      var oldCache,\n\t          uniqueCache,\n\t          outerCache,\n\t          newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\n\t      if (xml) {\n\t        while (elem = elem[dir]) {\n\t          if (elem.nodeType === 1 || checkNonElements) {\n\t            if (matcher(elem, context, xml)) {\n\t              return true;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        while (elem = elem[dir]) {\n\t          if (elem.nodeType === 1 || checkNonElements) {\n\t            outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n\t            // Defend against cloned attroperties (jQuery gh-1709)\n\n\t            uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n\t            if (skip && skip === elem.nodeName.toLowerCase()) {\n\t              elem = elem[dir] || elem;\n\t            } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n\t              // Assign to newCache so results back-propagate to previous elements\n\t              return newCache[2] = oldCache[2];\n\t            } else {\n\t              // Reuse newcache so results back-propagate to previous elements\n\t              uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking\n\n\t              if (newCache[2] = matcher(elem, context, xml)) {\n\t                return true;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\t  }\n\n\t  function elementMatcher(matchers) {\n\t    return matchers.length > 1 ? function (elem, context, xml) {\n\t      var i = matchers.length;\n\n\t      while (i--) {\n\t        if (!matchers[i](elem, context, xml)) {\n\t          return false;\n\t        }\n\t      }\n\n\t      return true;\n\t    } : matchers[0];\n\t  }\n\n\t  function multipleContexts(selector, contexts, results) {\n\t    var i = 0,\n\t        len = contexts.length;\n\n\t    for (; i < len; i++) {\n\t      Sizzle(selector, contexts[i], results);\n\t    }\n\n\t    return results;\n\t  }\n\n\t  function condense(unmatched, map, filter, context, xml) {\n\t    var elem,\n\t        newUnmatched = [],\n\t        i = 0,\n\t        len = unmatched.length,\n\t        mapped = map != null;\n\n\t    for (; i < len; i++) {\n\t      if (elem = unmatched[i]) {\n\t        if (!filter || filter(elem, context, xml)) {\n\t          newUnmatched.push(elem);\n\n\t          if (mapped) {\n\t            map.push(i);\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    return newUnmatched;\n\t  }\n\n\t  function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n\t    if (postFilter && !postFilter[expando]) {\n\t      postFilter = setMatcher(postFilter);\n\t    }\n\n\t    if (postFinder && !postFinder[expando]) {\n\t      postFinder = setMatcher(postFinder, postSelector);\n\t    }\n\n\t    return markFunction(function (seed, results, context, xml) {\n\t      var temp,\n\t          i,\n\t          elem,\n\t          preMap = [],\n\t          postMap = [],\n\t          preexisting = results.length,\n\t          // Get initial elements from seed or context\n\t      elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n\t          // Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t      matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n\t          matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t      postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n\t      [] : // ...otherwise use results directly\n\t      results : matcherIn; // Find primary matches\n\n\t      if (matcher) {\n\t        matcher(matcherIn, matcherOut, context, xml);\n\t      } // Apply postFilter\n\n\n\t      if (postFilter) {\n\t        temp = condense(matcherOut, postMap);\n\t        postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n\t        i = temp.length;\n\n\t        while (i--) {\n\t          if (elem = temp[i]) {\n\t            matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n\t          }\n\t        }\n\t      }\n\n\t      if (seed) {\n\t        if (postFinder || preFilter) {\n\t          if (postFinder) {\n\t            // Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t            temp = [];\n\t            i = matcherOut.length;\n\n\t            while (i--) {\n\t              if (elem = matcherOut[i]) {\n\t                // Restore matcherIn since elem is not yet a final match\n\t                temp.push(matcherIn[i] = elem);\n\t              }\n\t            }\n\n\t            postFinder(null, matcherOut = [], temp, xml);\n\t          } // Move matched elements from seed to results to keep them synchronized\n\n\n\t          i = matcherOut.length;\n\n\t          while (i--) {\n\t            if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n\t              seed[temp] = !(results[temp] = elem);\n\t            }\n\t          }\n\t        } // Add elements to results, through postFinder if defined\n\n\t      } else {\n\t        matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n\t        if (postFinder) {\n\t          postFinder(null, results, matcherOut, xml);\n\t        } else {\n\t          push.apply(results, matcherOut);\n\t        }\n\t      }\n\t    });\n\t  }\n\n\t  function matcherFromTokens(tokens) {\n\t    var checkContext,\n\t        matcher,\n\t        j,\n\t        len = tokens.length,\n\t        leadingRelative = Expr.relative[tokens[0].type],\n\t        implicitRelative = leadingRelative || Expr.relative[\" \"],\n\t        i = leadingRelative ? 1 : 0,\n\t        // The foundational matcher ensures that elements are reachable from top-level context(s)\n\t    matchContext = addCombinator(function (elem) {\n\t      return elem === checkContext;\n\t    }, implicitRelative, true),\n\t        matchAnyContext = addCombinator(function (elem) {\n\t      return indexOf(checkContext, elem) > -1;\n\t    }, implicitRelative, true),\n\t        matchers = [function (elem, context, xml) {\n\t      var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n\t      checkContext = null;\n\t      return ret;\n\t    }];\n\n\t    for (; i < len; i++) {\n\t      if (matcher = Expr.relative[tokens[i].type]) {\n\t        matchers = [addCombinator(elementMatcher(matchers), matcher)];\n\t      } else {\n\t        matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n\t        if (matcher[expando]) {\n\t          // Find the next relative operator (if any) for proper handling\n\t          j = ++i;\n\n\t          for (; j < len; j++) {\n\t            if (Expr.relative[tokens[j].type]) {\n\t              break;\n\t            }\n\t          }\n\n\t          return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t          tokens.slice(0, i - 1).concat({\n\t            value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n\t          })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n\t        }\n\n\t        matchers.push(matcher);\n\t      }\n\t    }\n\n\t    return elementMatcher(matchers);\n\t  }\n\n\t  function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n\t    var bySet = setMatchers.length > 0,\n\t        byElement = elementMatchers.length > 0,\n\t        superMatcher = function superMatcher(seed, context, xml, results, outermost) {\n\t      var elem,\n\t          j,\n\t          matcher,\n\t          matchedCount = 0,\n\t          i = \"0\",\n\t          unmatched = seed && [],\n\t          setMatched = [],\n\t          contextBackup = outermostContext,\n\t          // We must always have either seed elements or outermost context\n\t      elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n\t          // Use integer dirruns iff this is the outermost matcher\n\t      dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n\t          len = elems.length;\n\n\t      if (outermost) {\n\t        outermostContext = context === document || context || outermost;\n\t      } // Add elements passing elementMatchers directly to results\n\t      // Support: IE<9, Safari\n\t      // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n\t      for (; i !== len && (elem = elems[i]) != null; i++) {\n\t        if (byElement && elem) {\n\t          j = 0;\n\n\t          if (!context && elem.ownerDocument !== document) {\n\t            setDocument(elem);\n\t            xml = !documentIsHTML;\n\t          }\n\n\t          while (matcher = elementMatchers[j++]) {\n\t            if (matcher(elem, context || document, xml)) {\n\t              results.push(elem);\n\t              break;\n\t            }\n\t          }\n\n\t          if (outermost) {\n\t            dirruns = dirrunsUnique;\n\t          }\n\t        } // Track unmatched elements for set filters\n\n\n\t        if (bySet) {\n\t          // They will have gone through all possible matchers\n\t          if (elem = !matcher && elem) {\n\t            matchedCount--;\n\t          } // Lengthen the array for every element, matched or not\n\n\n\t          if (seed) {\n\t            unmatched.push(elem);\n\t          }\n\t        }\n\t      } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t      // makes the latter nonnegative.\n\n\n\t      matchedCount += i; // Apply set filters to unmatched elements\n\t      // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t      // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t      // no element matchers and no seed.\n\t      // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t      // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t      // numerically zero.\n\n\t      if (bySet && i !== matchedCount) {\n\t        j = 0;\n\n\t        while (matcher = setMatchers[j++]) {\n\t          matcher(unmatched, setMatched, context, xml);\n\t        }\n\n\t        if (seed) {\n\t          // Reintegrate element matches to eliminate the need for sorting\n\t          if (matchedCount > 0) {\n\t            while (i--) {\n\t              if (!(unmatched[i] || setMatched[i])) {\n\t                setMatched[i] = pop.call(results);\n\t              }\n\t            }\n\t          } // Discard index placeholder values to get only actual matches\n\n\n\t          setMatched = condense(setMatched);\n\t        } // Add matches to results\n\n\n\t        push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n\t        if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n\t          Sizzle.uniqueSort(results);\n\t        }\n\t      } // Override manipulation of globals by nested matchers\n\n\n\t      if (outermost) {\n\t        dirruns = dirrunsUnique;\n\t        outermostContext = contextBackup;\n\t      }\n\n\t      return unmatched;\n\t    };\n\n\t    return bySet ? markFunction(superMatcher) : superMatcher;\n\t  }\n\n\t  compile = Sizzle.compile = function (selector, match\n\t  /* Internal Use Only */\n\t  ) {\n\t    var i,\n\t        setMatchers = [],\n\t        elementMatchers = [],\n\t        cached = compilerCache[selector + \" \"];\n\n\t    if (!cached) {\n\t      // Generate a function of recursive functions that can be used to check each element\n\t      if (!match) {\n\t        match = tokenize(selector);\n\t      }\n\n\t      i = match.length;\n\n\t      while (i--) {\n\t        cached = matcherFromTokens(match[i]);\n\n\t        if (cached[expando]) {\n\t          setMatchers.push(cached);\n\t        } else {\n\t          elementMatchers.push(cached);\n\t        }\n\t      } // Cache the compiled function\n\n\n\t      cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n\t      cached.selector = selector;\n\t    }\n\n\t    return cached;\n\t  };\n\t  /**\n\t   * A low-level selection function that works with Sizzle's compiled\n\t   *  selector functions\n\t   * @param {String|Function} selector A selector or a pre-compiled\n\t   *  selector function built with Sizzle.compile\n\t   * @param {Element} context\n\t   * @param {Array} [results]\n\t   * @param {Array} [seed] A set of elements to match against\n\t   */\n\n\n\t  select = Sizzle.select = function (selector, context, results, seed) {\n\t    var i,\n\t        tokens,\n\t        token,\n\t        type,\n\t        find,\n\t        compiled = typeof selector === \"function\" && selector,\n\t        match = !seed && tokenize(selector = compiled.selector || selector);\n\t    results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n\t    // (the latter of which guarantees us context)\n\n\t    if (match.length === 1) {\n\t      // Reduce context if the leading compound selector is an ID\n\t      tokens = match[0] = match[0].slice(0);\n\n\t      if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n\t        context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n\t        if (!context) {\n\t          return results; // Precompiled matchers will still verify ancestry, so step up a level\n\t        } else if (compiled) {\n\t          context = context.parentNode;\n\t        }\n\n\t        selector = selector.slice(tokens.shift().value.length);\n\t      } // Fetch a seed set for right-to-left matching\n\n\n\t      i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n\t      while (i--) {\n\t        token = tokens[i]; // Abort if we hit a combinator\n\n\t        if (Expr.relative[type = token.type]) {\n\t          break;\n\t        }\n\n\t        if (find = Expr.find[type]) {\n\t          // Search, expanding context for leading sibling combinators\n\t          if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n\t            // If seed is empty or no tokens remain, we can return early\n\t            tokens.splice(i, 1);\n\t            selector = seed.length && toSelector(tokens);\n\n\t            if (!selector) {\n\t              push.apply(results, seed);\n\t              return results;\n\t            }\n\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    } // Compile and execute a filtering function if one is not provided\n\t    // Provide `match` to avoid retokenization if we modified the selector above\n\n\n\t    (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n\t    return results;\n\t  }; // One-time assignments\n\t  // Sort stability\n\n\n\t  support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n\t  // Always assume duplicates if they aren't passed to the comparison function\n\n\t  support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n\t  setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n\t  // Detached nodes confoundingly follow *each other*\n\n\t  support.sortDetached = assert(function (el) {\n\t    // Should return 1, but returns 4 (following)\n\t    return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n\t  }); // Support: IE<8\n\t  // Prevent attribute/property \"interpolation\"\n\t  // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n\t  if (!assert(function (el) {\n\t    el.innerHTML = \"<a href='#'></a>\";\n\t    return el.firstChild.getAttribute(\"href\") === \"#\";\n\t  })) {\n\t    addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n\t      if (!isXML) {\n\t        return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n\t      }\n\t    });\n\t  } // Support: IE<9\n\t  // Use defaultValue in place of getAttribute(\"value\")\n\n\n\t  if (!support.attributes || !assert(function (el) {\n\t    el.innerHTML = \"<input/>\";\n\t    el.firstChild.setAttribute(\"value\", \"\");\n\t    return el.firstChild.getAttribute(\"value\") === \"\";\n\t  })) {\n\t    addHandle(\"value\", function (elem, name, isXML) {\n\t      if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n\t        return elem.defaultValue;\n\t      }\n\t    });\n\t  } // Support: IE<9\n\t  // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n\t  if (!assert(function (el) {\n\t    return el.getAttribute(\"disabled\") == null;\n\t  })) {\n\t    addHandle(booleans, function (elem, name, isXML) {\n\t      var val;\n\n\t      if (!isXML) {\n\t        return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n\t      }\n\t    });\n\t  }\n\n\t  return Sizzle;\n\t}(window);\n\n\tjQuery.find = Sizzle;\n\tjQuery.expr = Sizzle.selectors; // Deprecated\n\n\tjQuery.expr[\":\"] = jQuery.expr.pseudos;\n\tjQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n\tjQuery.text = Sizzle.getText;\n\tjQuery.isXMLDoc = Sizzle.isXML;\n\tjQuery.contains = Sizzle.contains;\n\tjQuery.escapeSelector = Sizzle.escape;\n\n\tvar dir = function dir(elem, _dir, until) {\n\t  var matched = [],\n\t      truncate = until !== undefined;\n\n\t  while ((elem = elem[_dir]) && elem.nodeType !== 9) {\n\t    if (elem.nodeType === 1) {\n\t      if (truncate && jQuery(elem).is(until)) {\n\t        break;\n\t      }\n\n\t      matched.push(elem);\n\t    }\n\t  }\n\n\t  return matched;\n\t};\n\n\tvar _siblings = function siblings(n, elem) {\n\t  var matched = [];\n\n\t  for (; n; n = n.nextSibling) {\n\t    if (n.nodeType === 1 && n !== elem) {\n\t      matched.push(n);\n\t    }\n\t  }\n\n\t  return matched;\n\t};\n\n\tvar rneedsContext = jQuery.expr.match.needsContext;\n\n\tfunction nodeName(elem, name) {\n\t  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t}\n\n\tvar rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n\tfunction winnow(elements, qualifier, not) {\n\t  if (isFunction(qualifier)) {\n\t    return jQuery.grep(elements, function (elem, i) {\n\t      return !!qualifier.call(elem, i, elem) !== not;\n\t    });\n\t  } // Single element\n\n\n\t  if (qualifier.nodeType) {\n\t    return jQuery.grep(elements, function (elem) {\n\t      return elem === qualifier !== not;\n\t    });\n\t  } // Arraylike of elements (jQuery, arguments, Array)\n\n\n\t  if (typeof qualifier !== \"string\") {\n\t    return jQuery.grep(elements, function (elem) {\n\t      return indexOf$1.call(qualifier, elem) > -1 !== not;\n\t    });\n\t  } // Filtered directly for both simple and complex selectors\n\n\n\t  return jQuery.filter(qualifier, elements, not);\n\t}\n\n\tjQuery.filter = function (expr, elems, not) {\n\t  var elem = elems[0];\n\n\t  if (not) {\n\t    expr = \":not(\" + expr + \")\";\n\t  }\n\n\t  if (elems.length === 1 && elem.nodeType === 1) {\n\t    return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n\t  }\n\n\t  return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n\t    return elem.nodeType === 1;\n\t  }));\n\t};\n\n\tjQuery.fn.extend({\n\t  find: function find(selector) {\n\t    var i,\n\t        ret,\n\t        len = this.length,\n\t        self = this;\n\n\t    if (typeof selector !== \"string\") {\n\t      return this.pushStack(jQuery(selector).filter(function () {\n\t        for (i = 0; i < len; i++) {\n\t          if (jQuery.contains(self[i], this)) {\n\t            return true;\n\t          }\n\t        }\n\t      }));\n\t    }\n\n\t    ret = this.pushStack([]);\n\n\t    for (i = 0; i < len; i++) {\n\t      jQuery.find(selector, self[i], ret);\n\t    }\n\n\t    return len > 1 ? jQuery.uniqueSort(ret) : ret;\n\t  },\n\t  filter: function filter(selector) {\n\t    return this.pushStack(winnow(this, selector || [], false));\n\t  },\n\t  not: function not(selector) {\n\t    return this.pushStack(winnow(this, selector || [], true));\n\t  },\n\t  is: function is(selector) {\n\t    return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n\t    // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t    typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n\t  }\n\t}); // Initialize a jQuery object\n\t// A central reference to the root jQuery(document)\n\n\tvar rootjQuery,\n\t    // A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\t    init = jQuery.fn.init = function (selector, context, root) {\n\t  var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n\t  if (!selector) {\n\t    return this;\n\t  } // Method init() accepts an alternate rootjQuery\n\t  // so migrate can support jQuery.sub (gh-2101)\n\n\n\t  root = root || rootjQuery; // Handle HTML strings\n\n\t  if (typeof selector === \"string\") {\n\t    if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n\t      // Assume that strings that start and end with <> are HTML and skip the regex check\n\t      match = [null, selector, null];\n\t    } else {\n\t      match = rquickExpr.exec(selector);\n\t    } // Match html or make sure no context is specified for #id\n\n\n\t    if (match && (match[1] || !context)) {\n\t      // HANDLE: $(html) -> $(array)\n\t      if (match[1]) {\n\t        context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n\t        // Intentionally let the error be thrown if parseHTML is not present\n\n\t        jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document$2, true)); // HANDLE: $(html, props)\n\n\t        if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n\t          for (match in context) {\n\t            // Properties of context are called as methods if possible\n\t            if (isFunction(this[match])) {\n\t              this[match](context[match]); // ...and otherwise set as attributes\n\t            } else {\n\t              this.attr(match, context[match]);\n\t            }\n\t          }\n\t        }\n\n\t        return this; // HANDLE: $(#id)\n\t      } else {\n\t        elem = document$2.getElementById(match[2]);\n\n\t        if (elem) {\n\t          // Inject the element directly into the jQuery object\n\t          this[0] = elem;\n\t          this.length = 1;\n\t        }\n\n\t        return this;\n\t      } // HANDLE: $(expr, $(...))\n\n\t    } else if (!context || context.jquery) {\n\t      return (context || root).find(selector); // HANDLE: $(expr, context)\n\t      // (which is just equivalent to: $(context).find(expr)\n\t    } else {\n\t      return this.constructor(context).find(selector);\n\t    } // HANDLE: $(DOMElement)\n\n\t  } else if (selector.nodeType) {\n\t    this[0] = selector;\n\t    this.length = 1;\n\t    return this; // HANDLE: $(function)\n\t    // Shortcut for document ready\n\t  } else if (isFunction(selector)) {\n\t    return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n\t    selector(jQuery);\n\t  }\n\n\t  return jQuery.makeArray(selector, this);\n\t}; // Give the init function the jQuery prototype for later instantiation\n\n\n\tinit.prototype = jQuery.fn; // Initialize central reference\n\n\trootjQuery = jQuery(document$2);\n\tvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t    // Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t  children: true,\n\t  contents: true,\n\t  next: true,\n\t  prev: true\n\t};\n\tjQuery.fn.extend({\n\t  has: function has(target) {\n\t    var targets = jQuery(target, this),\n\t        l = targets.length;\n\t    return this.filter(function () {\n\t      var i = 0;\n\n\t      for (; i < l; i++) {\n\t        if (jQuery.contains(this, targets[i])) {\n\t          return true;\n\t        }\n\t      }\n\t    });\n\t  },\n\t  closest: function closest(selectors, context) {\n\t    var cur,\n\t        i = 0,\n\t        l = this.length,\n\t        matched = [],\n\t        targets = typeof selectors !== \"string\" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context\n\n\t    if (!rneedsContext.test(selectors)) {\n\t      for (; i < l; i++) {\n\t        for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n\t          // Always skip document fragments\n\t          if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n\t          cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n\t            matched.push(cur);\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n\t  },\n\t  // Determine the position of an element within the set\n\t  index: function index(elem) {\n\t    // No argument, return index in parent\n\t    if (!elem) {\n\t      return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n\t    } // Index in selector\n\n\n\t    if (typeof elem === \"string\") {\n\t      return indexOf$1.call(jQuery(elem), this[0]);\n\t    } // Locate the position of the desired element\n\n\n\t    return indexOf$1.call(this, // If it receives a jQuery object, the first element is used\n\t    elem.jquery ? elem[0] : elem);\n\t  },\n\t  add: function add(selector, context) {\n\t    return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n\t  },\n\t  addBack: function addBack(selector) {\n\t    return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n\t  }\n\t});\n\n\tfunction sibling(cur, dir) {\n\t  while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n\t  return cur;\n\t}\n\n\tjQuery.each({\n\t  parent: function parent(elem) {\n\t    var parent = elem.parentNode;\n\t    return parent && parent.nodeType !== 11 ? parent : null;\n\t  },\n\t  parents: function parents(elem) {\n\t    return dir(elem, \"parentNode\");\n\t  },\n\t  parentsUntil: function parentsUntil(elem, i, until) {\n\t    return dir(elem, \"parentNode\", until);\n\t  },\n\t  next: function next(elem) {\n\t    return sibling(elem, \"nextSibling\");\n\t  },\n\t  prev: function prev(elem) {\n\t    return sibling(elem, \"previousSibling\");\n\t  },\n\t  nextAll: function nextAll(elem) {\n\t    return dir(elem, \"nextSibling\");\n\t  },\n\t  prevAll: function prevAll(elem) {\n\t    return dir(elem, \"previousSibling\");\n\t  },\n\t  nextUntil: function nextUntil(elem, i, until) {\n\t    return dir(elem, \"nextSibling\", until);\n\t  },\n\t  prevUntil: function prevUntil(elem, i, until) {\n\t    return dir(elem, \"previousSibling\", until);\n\t  },\n\t  siblings: function siblings(elem) {\n\t    return _siblings((elem.parentNode || {}).firstChild, elem);\n\t  },\n\t  children: function children(elem) {\n\t    return _siblings(elem.firstChild);\n\t  },\n\t  contents: function contents(elem) {\n\t    if (nodeName(elem, \"iframe\")) {\n\t      return elem.contentDocument;\n\t    } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t    // Treat the template element as a regular one in browsers that\n\t    // don't support it.\n\n\n\t    if (nodeName(elem, \"template\")) {\n\t      elem = elem.content || elem;\n\t    }\n\n\t    return jQuery.merge([], elem.childNodes);\n\t  }\n\t}, function (name, fn) {\n\t  jQuery.fn[name] = function (until, selector) {\n\t    var matched = jQuery.map(this, fn, until);\n\n\t    if (name.slice(-5) !== \"Until\") {\n\t      selector = until;\n\t    }\n\n\t    if (selector && typeof selector === \"string\") {\n\t      matched = jQuery.filter(selector, matched);\n\t    }\n\n\t    if (this.length > 1) {\n\t      // Remove duplicates\n\t      if (!guaranteedUnique[name]) {\n\t        jQuery.uniqueSort(matched);\n\t      } // Reverse order for parents* and prev-derivatives\n\n\n\t      if (rparentsprev.test(name)) {\n\t        matched.reverse();\n\t      }\n\t    }\n\n\t    return this.pushStack(matched);\n\t  };\n\t});\n\tvar rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n\tfunction createOptions(options) {\n\t  var object = {};\n\t  jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n\t    object[flag] = true;\n\t  });\n\t  return object;\n\t}\n\t/*\n\t * Create a callback list using the following parameters:\n\t *\n\t *\toptions: an optional list of space-separated options that will change how\n\t *\t\t\tthe callback list behaves or a more traditional option object\n\t *\n\t * By default a callback list will act like an event callback list and can be\n\t * \"fired\" multiple times.\n\t *\n\t * Possible options:\n\t *\n\t *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n\t *\n\t *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n\t *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n\t *\t\t\t\t\tvalues (like a Deferred)\n\t *\n\t *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n\t *\n\t *\tstopOnFalse:\tinterrupt callings when a callback returns false\n\t *\n\t */\n\n\n\tjQuery.Callbacks = function (options) {\n\t  // Convert options from String-formatted to Object-formatted if needed\n\t  // (we check in cache first)\n\t  options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n\n\t  var // Flag to know if list is currently firing\n\t  firing,\n\t      // Last fire value for non-forgettable lists\n\t  memory,\n\t      // Flag to know if list was already fired\n\t  _fired,\n\t      // Flag to prevent firing\n\t  _locked,\n\t      // Actual callback list\n\t  list = [],\n\t      // Queue of execution data for repeatable lists\n\t  queue = [],\n\t      // Index of currently firing callback (modified by add/remove as needed)\n\t  firingIndex = -1,\n\t      // Fire callbacks\n\t  fire = function fire() {\n\t    // Enforce single-firing\n\t    _locked = _locked || options.once; // Execute callbacks for all pending executions,\n\t    // respecting firingIndex overrides and runtime changes\n\n\t    _fired = firing = true;\n\n\t    for (; queue.length; firingIndex = -1) {\n\t      memory = queue.shift();\n\n\t      while (++firingIndex < list.length) {\n\t        // Run callback and check for early termination\n\t        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n\t          // Jump to end and forget the data so .add doesn't re-fire\n\t          firingIndex = list.length;\n\t          memory = false;\n\t        }\n\t      }\n\t    } // Forget the data if we're done with it\n\n\n\t    if (!options.memory) {\n\t      memory = false;\n\t    }\n\n\t    firing = false; // Clean up if we're done firing for good\n\n\t    if (_locked) {\n\t      // Keep an empty list if we have data for future add calls\n\t      if (memory) {\n\t        list = []; // Otherwise, this object is spent\n\t      } else {\n\t        list = \"\";\n\t      }\n\t    }\n\t  },\n\t      // Actual Callbacks object\n\t  self = {\n\t    // Add a callback or a collection of callbacks to the list\n\t    add: function add() {\n\t      if (list) {\n\t        // If we have memory from a past run, we should fire after adding\n\t        if (memory && !firing) {\n\t          firingIndex = list.length - 1;\n\t          queue.push(memory);\n\t        }\n\n\t        (function add(args) {\n\t          jQuery.each(args, function (_, arg) {\n\t            if (isFunction(arg)) {\n\t              if (!options.unique || !self.has(arg)) {\n\t                list.push(arg);\n\t              }\n\t            } else if (arg && arg.length && toType(arg) !== \"string\") {\n\t              // Inspect recursively\n\t              add(arg);\n\t            }\n\t          });\n\t        })(arguments);\n\n\t        if (memory && !firing) {\n\t          fire();\n\t        }\n\t      }\n\n\t      return this;\n\t    },\n\t    // Remove a callback from the list\n\t    remove: function remove() {\n\t      jQuery.each(arguments, function (_, arg) {\n\t        var index;\n\n\t        while ((index = jQuery.inArray(arg, list, index)) > -1) {\n\t          list.splice(index, 1); // Handle firing indexes\n\n\t          if (index <= firingIndex) {\n\t            firingIndex--;\n\t          }\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t    // Check if a given callback is in the list.\n\t    // If no argument is given, return whether or not list has callbacks attached.\n\t    has: function has(fn) {\n\t      return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n\t    },\n\t    // Remove all callbacks from the list\n\t    empty: function empty() {\n\t      if (list) {\n\t        list = [];\n\t      }\n\n\t      return this;\n\t    },\n\t    // Disable .fire and .add\n\t    // Abort any current/pending executions\n\t    // Clear all callbacks and values\n\t    disable: function disable() {\n\t      _locked = queue = [];\n\t      list = memory = \"\";\n\t      return this;\n\t    },\n\t    disabled: function disabled() {\n\t      return !list;\n\t    },\n\t    // Disable .fire\n\t    // Also disable .add unless we have memory (since it would have no effect)\n\t    // Abort any pending executions\n\t    lock: function lock() {\n\t      _locked = queue = [];\n\n\t      if (!memory && !firing) {\n\t        list = memory = \"\";\n\t      }\n\n\t      return this;\n\t    },\n\t    locked: function locked() {\n\t      return !!_locked;\n\t    },\n\t    // Call all callbacks with the given context and arguments\n\t    fireWith: function fireWith(context, args) {\n\t      if (!_locked) {\n\t        args = args || [];\n\t        args = [context, args.slice ? args.slice() : args];\n\t        queue.push(args);\n\n\t        if (!firing) {\n\t          fire();\n\t        }\n\t      }\n\n\t      return this;\n\t    },\n\t    // Call all the callbacks with the given arguments\n\t    fire: function fire() {\n\t      self.fireWith(this, arguments);\n\t      return this;\n\t    },\n\t    // To know if the callbacks have already been called at least once\n\t    fired: function fired() {\n\t      return !!_fired;\n\t    }\n\t  };\n\n\t  return self;\n\t};\n\n\tfunction Identity(v) {\n\t  return v;\n\t}\n\n\tfunction Thrower(ex) {\n\t  throw ex;\n\t}\n\n\tfunction adoptValue(value, resolve, reject, noValue) {\n\t  var method;\n\n\t  try {\n\t    // Check for promise aspect first to privilege synchronous behavior\n\t    if (value && isFunction(method = value.promise)) {\n\t      method.call(value).done(resolve).fail(reject); // Other thenables\n\t    } else if (value && isFunction(method = value.then)) {\n\t      method.call(value, resolve, reject); // Other non-thenables\n\t    } else {\n\t      // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t      // * false: [ value ].slice( 0 ) => resolve( value )\n\t      // * true: [ value ].slice( 1 ) => resolve()\n\t      resolve.apply(undefined, [value].slice(noValue));\n\t    } // For Promises/A+, convert exceptions into rejections\n\t    // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t    // Deferred#then to conditionally suppress rejection.\n\n\t  } catch (value) {\n\t    // Support: Android 4.0 only\n\t    // Strict mode functions invoked without .call/.apply get global-object context\n\t    reject.apply(undefined, [value]);\n\t  }\n\t}\n\n\tjQuery.extend({\n\t  Deferred: function Deferred(func) {\n\t    var tuples = [// action, add listener, callbacks,\n\t    // ... .then handlers, argument index, [final state]\n\t    [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n\t        _state = \"pending\",\n\t        _promise = {\n\t      state: function state() {\n\t        return _state;\n\t      },\n\t      always: function always() {\n\t        deferred.done(arguments).fail(arguments);\n\t        return this;\n\t      },\n\t      \"catch\": function _catch(fn) {\n\t        return _promise.then(null, fn);\n\t      },\n\t      // Keep pipe for back-compat\n\t      pipe: function pipe()\n\t      /* fnDone, fnFail, fnProgress */\n\t      {\n\t        var fns = arguments;\n\t        return jQuery.Deferred(function (newDefer) {\n\t          jQuery.each(tuples, function (i, tuple) {\n\t            // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t            var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t            // deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t            // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n\t            deferred[tuple[1]](function () {\n\t              var returned = fn && fn.apply(this, arguments);\n\n\t              if (returned && isFunction(returned.promise)) {\n\t                returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n\t              } else {\n\t                newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n\t              }\n\t            });\n\t          });\n\t          fns = null;\n\t        }).promise();\n\t      },\n\t      then: function then(onFulfilled, onRejected, onProgress) {\n\t        var maxDepth = 0;\n\n\t        function resolve(depth, deferred, handler, special) {\n\t          return function () {\n\t            var that = this,\n\t                args = arguments,\n\t                mightThrow = function mightThrow() {\n\t              var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n\t              // https://promisesaplus.com/#point-59\n\t              // Ignore double-resolution attempts\n\n\t              if (depth < maxDepth) {\n\t                return;\n\t              }\n\n\t              returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n\t              // https://promisesaplus.com/#point-48\n\n\t              if (returned === deferred.promise()) {\n\t                throw new TypeError(\"Thenable self-resolution\");\n\t              } // Support: Promises/A+ sections 2.3.3.1, 3.5\n\t              // https://promisesaplus.com/#point-54\n\t              // https://promisesaplus.com/#point-75\n\t              // Retrieve `then` only once\n\n\n\t              then = returned && ( // Support: Promises/A+ section 2.3.4\n\t              // https://promisesaplus.com/#point-64\n\t              // Only check objects and functions for thenability\n\t              _typeof(returned) === \"object\" || typeof returned === \"function\") && returned.then; // Handle a returned thenable\n\n\t              if (isFunction(then)) {\n\t                // Special processors (notify) just wait for resolution\n\t                if (special) {\n\t                  then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n\t                } else {\n\t                  // ...and disregard older resolution values\n\t                  maxDepth++;\n\t                  then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n\t                } // Handle all other returned values\n\n\t              } else {\n\t                // Only substitute handlers pass on context\n\t                // and multiple values (non-spec behavior)\n\t                if (handler !== Identity) {\n\t                  that = undefined;\n\t                  args = [returned];\n\t                } // Process the value(s)\n\t                // Default process is resolve\n\n\n\t                (special || deferred.resolveWith)(that, args);\n\t              }\n\t            },\n\t                // Only normal processors (resolve) catch and reject exceptions\n\t            process = special ? mightThrow : function () {\n\t              try {\n\t                mightThrow();\n\t              } catch (e) {\n\t                if (jQuery.Deferred.exceptionHook) {\n\t                  jQuery.Deferred.exceptionHook(e, process.stackTrace);\n\t                } // Support: Promises/A+ section 2.3.3.3.4.1\n\t                // https://promisesaplus.com/#point-61\n\t                // Ignore post-resolution exceptions\n\n\n\t                if (depth + 1 >= maxDepth) {\n\t                  // Only substitute handlers pass on context\n\t                  // and multiple values (non-spec behavior)\n\t                  if (handler !== Thrower) {\n\t                    that = undefined;\n\t                    args = [e];\n\t                  }\n\n\t                  deferred.rejectWith(that, args);\n\t                }\n\t              }\n\t            }; // Support: Promises/A+ section 2.3.3.3.1\n\t            // https://promisesaplus.com/#point-57\n\t            // Re-resolve promises immediately to dodge false rejection from\n\t            // subsequent errors\n\n\n\t            if (depth) {\n\t              process();\n\t            } else {\n\t              // Call an optional hook to record the stack, in case of exception\n\t              // since it's otherwise lost when execution goes async\n\t              if (jQuery.Deferred.getStackHook) {\n\t                process.stackTrace = jQuery.Deferred.getStackHook();\n\t              }\n\n\t              window.setTimeout(process);\n\t            }\n\t          };\n\t        }\n\n\t        return jQuery.Deferred(function (newDefer) {\n\t          // progress_handlers.add( ... )\n\t          tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n\t          tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n\t          tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n\t        }).promise();\n\t      },\n\t      // Get a promise for this deferred\n\t      // If obj is provided, the promise aspect is added to the object\n\t      promise: function promise(obj) {\n\t        return obj != null ? jQuery.extend(obj, _promise) : _promise;\n\t      }\n\t    },\n\t        deferred = {}; // Add list-specific methods\n\n\t    jQuery.each(tuples, function (i, tuple) {\n\t      var list = tuple[2],\n\t          stateString = tuple[5]; // promise.progress = list.add\n\t      // promise.done = list.add\n\t      // promise.fail = list.add\n\n\t      _promise[tuple[1]] = list.add; // Handle state\n\n\t      if (stateString) {\n\t        list.add(function () {\n\t          // state = \"resolved\" (i.e., fulfilled)\n\t          // state = \"rejected\"\n\t          _state = stateString;\n\t        }, // rejected_callbacks.disable\n\t        // fulfilled_callbacks.disable\n\t        tuples[3 - i][2].disable, // rejected_handlers.disable\n\t        // fulfilled_handlers.disable\n\t        tuples[3 - i][3].disable, // progress_callbacks.lock\n\t        tuples[0][2].lock, // progress_handlers.lock\n\t        tuples[0][3].lock);\n\t      } // progress_handlers.fire\n\t      // fulfilled_handlers.fire\n\t      // rejected_handlers.fire\n\n\n\t      list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n\t      // deferred.resolve = function() { deferred.resolveWith(...) }\n\t      // deferred.reject = function() { deferred.rejectWith(...) }\n\n\t      deferred[tuple[0]] = function () {\n\t        deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n\t        return this;\n\t      }; // deferred.notifyWith = list.fireWith\n\t      // deferred.resolveWith = list.fireWith\n\t      // deferred.rejectWith = list.fireWith\n\n\n\t      deferred[tuple[0] + \"With\"] = list.fireWith;\n\t    }); // Make the deferred a promise\n\n\t    _promise.promise(deferred); // Call given func if any\n\n\n\t    if (func) {\n\t      func.call(deferred, deferred);\n\t    } // All done!\n\n\n\t    return deferred;\n\t  },\n\t  // Deferred helper\n\t  when: function when(singleValue) {\n\t    var // count of uncompleted subordinates\n\t    remaining = arguments.length,\n\t        // count of unprocessed arguments\n\t    i = remaining,\n\t        // subordinate fulfillment data\n\t    resolveContexts = Array(i),\n\t        resolveValues = _slice.call(arguments),\n\t        // the master Deferred\n\t    master = jQuery.Deferred(),\n\t        // subordinate callback factory\n\t    updateFunc = function updateFunc(i) {\n\t      return function (value) {\n\t        resolveContexts[i] = this;\n\t        resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;\n\n\t        if (! --remaining) {\n\t          master.resolveWith(resolveContexts, resolveValues);\n\t        }\n\t      };\n\t    }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n\t    if (remaining <= 1) {\n\t      adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n\t      if (master.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n\t        return master.then();\n\t      }\n\t    } // Multiple arguments are aggregated like Promise.all array elements\n\n\n\t    while (i--) {\n\t      adoptValue(resolveValues[i], updateFunc(i), master.reject);\n\t    }\n\n\t    return master.promise();\n\t  }\n\t}); // These usually indicate a programmer mistake during development,\n\t// warn about them ASAP rather than swallowing them by default.\n\n\tvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n\tjQuery.Deferred.exceptionHook = function (error, stack) {\n\t  // Support: IE 8 - 9 only\n\t  // Console exists when dev tools are open, which can happen at any time\n\t  if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n\t    window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n\t  }\n\t};\n\n\tjQuery.readyException = function (error) {\n\t  window.setTimeout(function () {\n\t    throw error;\n\t  });\n\t}; // The deferred used on DOM ready\n\n\n\tvar readyList = jQuery.Deferred();\n\n\tjQuery.fn.ready = function (fn) {\n\t  readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n\t  // happens at the time of error handling instead of callback\n\t  // registration.\n\t  .catch(function (error) {\n\t    jQuery.readyException(error);\n\t  });\n\t  return this;\n\t};\n\n\tjQuery.extend({\n\t  // Is the DOM ready to be used? Set to true once it occurs.\n\t  isReady: false,\n\t  // A counter to track how many items to wait for before\n\t  // the ready event fires. See #6781\n\t  readyWait: 1,\n\t  // Handle when the DOM is ready\n\t  ready: function ready(wait) {\n\t    // Abort if there are pending holds or we're already ready\n\t    if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n\t      return;\n\t    } // Remember that the DOM is ready\n\n\n\t    jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n\t    if (wait !== true && --jQuery.readyWait > 0) {\n\t      return;\n\t    } // If there are functions bound, to execute\n\n\n\t    readyList.resolveWith(document$2, [jQuery]);\n\t  }\n\t});\n\tjQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n\tfunction completed() {\n\t  document$2.removeEventListener(\"DOMContentLoaded\", completed);\n\t  window.removeEventListener(\"load\", completed);\n\t  jQuery.ready();\n\t} // Catch cases where $(document).ready() is called\n\t// after the browser event has already occurred.\n\t// Support: IE <=9 - 10 only\n\t// Older IE sometimes signals \"interactive\" too soon\n\n\n\tif (document$2.readyState === \"complete\" || document$2.readyState !== \"loading\" && !document$2.documentElement.doScroll) {\n\t  // Handle it asynchronously to allow scripts the opportunity to delay ready\n\t  window.setTimeout(jQuery.ready);\n\t} else {\n\t  // Use the handy event callback\n\t  document$2.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n\t  window.addEventListener(\"load\", completed);\n\t} // Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\n\n\tvar access = function access(elems, fn, key, value, chainable, emptyGet, raw) {\n\t  var i = 0,\n\t      len = elems.length,\n\t      bulk = key == null; // Sets many values\n\n\t  if (toType(key) === \"object\") {\n\t    chainable = true;\n\n\t    for (i in key) {\n\t      access(elems, fn, i, key[i], true, emptyGet, raw);\n\t    } // Sets one value\n\n\t  } else if (value !== undefined) {\n\t    chainable = true;\n\n\t    if (!isFunction(value)) {\n\t      raw = true;\n\t    }\n\n\t    if (bulk) {\n\t      // Bulk operations run against the entire set\n\t      if (raw) {\n\t        fn.call(elems, value);\n\t        fn = null; // ...except when executing function values\n\t      } else {\n\t        bulk = fn;\n\n\t        fn = function fn(elem, key, value) {\n\t          return bulk.call(jQuery(elem), value);\n\t        };\n\t      }\n\t    }\n\n\t    if (fn) {\n\t      for (; i < len; i++) {\n\t        fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n\t      }\n\t    }\n\t  }\n\n\t  if (chainable) {\n\t    return elems;\n\t  } // Gets\n\n\n\t  if (bulk) {\n\t    return fn.call(elems);\n\t  }\n\n\t  return len ? fn(elems[0], key) : emptyGet;\n\t}; // Matches dashed string for camelizing\n\n\n\tvar rmsPrefix = /^-ms-/,\n\t    rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n\tfunction fcamelCase(all, letter) {\n\t  return letter.toUpperCase();\n\t} // Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE <=9 - 11, Edge 12 - 15\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\n\n\tfunction camelCase(string) {\n\t  return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n\t}\n\n\tvar acceptData = function acceptData(owner) {\n\t  // Accepts only:\n\t  //  - Node\n\t  //    - Node.ELEMENT_NODE\n\t  //    - Node.DOCUMENT_NODE\n\t  //  - Object\n\t  //    - Any\n\t  return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n\t};\n\n\tfunction Data() {\n\t  this.expando = jQuery.expando + Data.uid++;\n\t}\n\n\tData.uid = 1;\n\tData.prototype = {\n\t  cache: function cache(owner) {\n\t    // Check if the owner object already has a cache\n\t    var value = owner[this.expando]; // If not, create one\n\n\t    if (!value) {\n\t      value = {}; // We can accept data for non-element nodes in modern browsers,\n\t      // but we should not, see #8335.\n\t      // Always return an empty object.\n\n\t      if (acceptData(owner)) {\n\t        // If it is a node unlikely to be stringify-ed or looped over\n\t        // use plain assignment\n\t        if (owner.nodeType) {\n\t          owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n\t          // configurable must be true to allow the property to be\n\t          // deleted when data is removed\n\t        } else {\n\t          Object.defineProperty(owner, this.expando, {\n\t            value: value,\n\t            configurable: true\n\t          });\n\t        }\n\t      }\n\t    }\n\n\t    return value;\n\t  },\n\t  set: function set(owner, data, value) {\n\t    var prop,\n\t        cache = this.cache(owner); // Handle: [ owner, key, value ] args\n\t    // Always use camelCase key (gh-2257)\n\n\t    if (typeof data === \"string\") {\n\t      cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n\t    } else {\n\t      // Copy the properties one-by-one to the cache object\n\t      for (prop in data) {\n\t        cache[camelCase(prop)] = data[prop];\n\t      }\n\t    }\n\n\t    return cache;\n\t  },\n\t  get: function get(owner, key) {\n\t    return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n\t    owner[this.expando] && owner[this.expando][camelCase(key)];\n\t  },\n\t  access: function access(owner, key, value) {\n\t    // In cases where either:\n\t    //\n\t    //   1. No key was specified\n\t    //   2. A string key was specified, but no value provided\n\t    //\n\t    // Take the \"read\" path and allow the get method to determine\n\t    // which value to return, respectively either:\n\t    //\n\t    //   1. The entire cache object\n\t    //   2. The data stored at the key\n\t    //\n\t    if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n\t      return this.get(owner, key);\n\t    } // When the key is not a string, or both a key and value\n\t    // are specified, set or extend (existing objects) with either:\n\t    //\n\t    //   1. An object of properties\n\t    //   2. A key and value\n\t    //\n\n\n\t    this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n\t    // return the expected data based on which path was taken[*]\n\n\t    return value !== undefined ? value : key;\n\t  },\n\t  remove: function remove(owner, key) {\n\t    var i,\n\t        cache = owner[this.expando];\n\n\t    if (cache === undefined) {\n\t      return;\n\t    }\n\n\t    if (key !== undefined) {\n\t      // Support array or space separated string of keys\n\t      if (Array.isArray(key)) {\n\t        // If key is an array of keys...\n\t        // We always set camelCase keys, so remove that.\n\t        key = key.map(camelCase);\n\t      } else {\n\t        key = camelCase(key); // If a key with the spaces exists, use it.\n\t        // Otherwise, create an array by matching non-whitespace\n\n\t        key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n\t      }\n\n\t      i = key.length;\n\n\t      while (i--) {\n\t        delete cache[key[i]];\n\t      }\n\t    } // Remove the expando if there's no more data\n\n\n\t    if (key === undefined || jQuery.isEmptyObject(cache)) {\n\t      // Support: Chrome <=35 - 45\n\t      // Webkit & Blink performance suffers when deleting properties\n\t      // from DOM nodes, so set to undefined instead\n\t      // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t      if (owner.nodeType) {\n\t        owner[this.expando] = undefined;\n\t      } else {\n\t        delete owner[this.expando];\n\t      }\n\t    }\n\t  },\n\t  hasData: function hasData(owner) {\n\t    var cache = owner[this.expando];\n\t    return cache !== undefined && !jQuery.isEmptyObject(cache);\n\t  }\n\t};\n\tvar dataPriv = new Data();\n\tvar dataUser = new Data(); //\tImplementation Summary\n\t//\n\t//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t//\t2. Improve the module's maintainability by reducing the storage\n\t//\t\tpaths to a single mechanism.\n\t//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n\tvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\t    rmultiDash = /[A-Z]/g;\n\n\tfunction getData(data) {\n\t  if (data === \"true\") {\n\t    return true;\n\t  }\n\n\t  if (data === \"false\") {\n\t    return false;\n\t  }\n\n\t  if (data === \"null\") {\n\t    return null;\n\t  } // Only convert to a number if it doesn't change the string\n\n\n\t  if (data === +data + \"\") {\n\t    return +data;\n\t  }\n\n\t  if (rbrace.test(data)) {\n\t    return JSON.parse(data);\n\t  }\n\n\t  return data;\n\t}\n\n\tfunction dataAttr(elem, key, data) {\n\t  var name; // If nothing was found internally, try to fetch any\n\t  // data from the HTML5 data-* attribute\n\n\t  if (data === undefined && elem.nodeType === 1) {\n\t    name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n\t    data = elem.getAttribute(name);\n\n\t    if (typeof data === \"string\") {\n\t      try {\n\t        data = getData(data);\n\t      } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n\t      dataUser.set(elem, key, data);\n\t    } else {\n\t      data = undefined;\n\t    }\n\t  }\n\n\t  return data;\n\t}\n\n\tjQuery.extend({\n\t  hasData: function hasData(elem) {\n\t    return dataUser.hasData(elem) || dataPriv.hasData(elem);\n\t  },\n\t  data: function data(elem, name, _data) {\n\t    return dataUser.access(elem, name, _data);\n\t  },\n\t  removeData: function removeData(elem, name) {\n\t    dataUser.remove(elem, name);\n\t  },\n\t  // TODO: Now that all calls to _data and _removeData have been replaced\n\t  // with direct calls to dataPriv methods, these can be deprecated.\n\t  _data: function _data(elem, name, data) {\n\t    return dataPriv.access(elem, name, data);\n\t  },\n\t  _removeData: function _removeData(elem, name) {\n\t    dataPriv.remove(elem, name);\n\t  }\n\t});\n\tjQuery.fn.extend({\n\t  data: function data(key, value) {\n\t    var i,\n\t        name,\n\t        data,\n\t        elem = this[0],\n\t        attrs = elem && elem.attributes; // Gets all values\n\n\t    if (key === undefined) {\n\t      if (this.length) {\n\t        data = dataUser.get(elem);\n\n\t        if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n\t          i = attrs.length;\n\n\t          while (i--) {\n\t            // Support: IE 11 only\n\t            // The attrs elements can be null (#14894)\n\t            if (attrs[i]) {\n\t              name = attrs[i].name;\n\n\t              if (name.indexOf(\"data-\") === 0) {\n\t                name = camelCase(name.slice(5));\n\t                dataAttr(elem, name, data[name]);\n\t              }\n\t            }\n\t          }\n\n\t          dataPriv.set(elem, \"hasDataAttrs\", true);\n\t        }\n\t      }\n\n\t      return data;\n\t    } // Sets multiple values\n\n\n\t    if (_typeof(key) === \"object\") {\n\t      return this.each(function () {\n\t        dataUser.set(this, key);\n\t      });\n\t    }\n\n\t    return access(this, function (value) {\n\t      var data; // The calling jQuery object (element matches) is not empty\n\t      // (and therefore has an element appears at this[ 0 ]) and the\n\t      // `value` parameter was not undefined. An empty jQuery object\n\t      // will result in `undefined` for elem = this[ 0 ] which will\n\t      // throw an exception if an attempt to read a data cache is made.\n\n\t      if (elem && value === undefined) {\n\t        // Attempt to get data from the cache\n\t        // The key will always be camelCased in Data\n\t        data = dataUser.get(elem, key);\n\n\t        if (data !== undefined) {\n\t          return data;\n\t        } // Attempt to \"discover\" the data in\n\t        // HTML5 custom data-* attrs\n\n\n\t        data = dataAttr(elem, key);\n\n\t        if (data !== undefined) {\n\t          return data;\n\t        } // We tried really hard, but the data doesn't exist.\n\n\n\t        return;\n\t      } // Set the data...\n\n\n\t      this.each(function () {\n\t        // We always store the camelCased key\n\t        dataUser.set(this, key, value);\n\t      });\n\t    }, null, value, arguments.length > 1, null, true);\n\t  },\n\t  removeData: function removeData(key) {\n\t    return this.each(function () {\n\t      dataUser.remove(this, key);\n\t    });\n\t  }\n\t});\n\tjQuery.extend({\n\t  queue: function queue(elem, type, data) {\n\t    var queue;\n\n\t    if (elem) {\n\t      type = (type || \"fx\") + \"queue\";\n\t      queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n\t      if (data) {\n\t        if (!queue || Array.isArray(data)) {\n\t          queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n\t        } else {\n\t          queue.push(data);\n\t        }\n\t      }\n\n\t      return queue || [];\n\t    }\n\t  },\n\t  dequeue: function dequeue(elem, type) {\n\t    type = type || \"fx\";\n\n\t    var queue = jQuery.queue(elem, type),\n\t        startLength = queue.length,\n\t        fn = queue.shift(),\n\t        hooks = jQuery._queueHooks(elem, type),\n\t        next = function next() {\n\t      jQuery.dequeue(elem, type);\n\t    }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n\t    if (fn === \"inprogress\") {\n\t      fn = queue.shift();\n\t      startLength--;\n\t    }\n\n\t    if (fn) {\n\t      // Add a progress sentinel to prevent the fx queue from being\n\t      // automatically dequeued\n\t      if (type === \"fx\") {\n\t        queue.unshift(\"inprogress\");\n\t      } // Clear up the last queue stop function\n\n\n\t      delete hooks.stop;\n\t      fn.call(elem, next, hooks);\n\t    }\n\n\t    if (!startLength && hooks) {\n\t      hooks.empty.fire();\n\t    }\n\t  },\n\t  // Not public - generate a queueHooks object, or return the current one\n\t  _queueHooks: function _queueHooks(elem, type) {\n\t    var key = type + \"queueHooks\";\n\t    return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n\t      empty: jQuery.Callbacks(\"once memory\").add(function () {\n\t        dataPriv.remove(elem, [type + \"queue\", key]);\n\t      })\n\t    });\n\t  }\n\t});\n\tjQuery.fn.extend({\n\t  queue: function queue(type, data) {\n\t    var setter = 2;\n\n\t    if (typeof type !== \"string\") {\n\t      data = type;\n\t      type = \"fx\";\n\t      setter--;\n\t    }\n\n\t    if (arguments.length < setter) {\n\t      return jQuery.queue(this[0], type);\n\t    }\n\n\t    return data === undefined ? this : this.each(function () {\n\t      var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n\t      jQuery._queueHooks(this, type);\n\n\t      if (type === \"fx\" && queue[0] !== \"inprogress\") {\n\t        jQuery.dequeue(this, type);\n\t      }\n\t    });\n\t  },\n\t  dequeue: function dequeue(type) {\n\t    return this.each(function () {\n\t      jQuery.dequeue(this, type);\n\t    });\n\t  },\n\t  clearQueue: function clearQueue(type) {\n\t    return this.queue(type || \"fx\", []);\n\t  },\n\t  // Get a promise resolved when queues of a certain type\n\t  // are emptied (fx is the type by default)\n\t  promise: function promise(type, obj) {\n\t    var tmp,\n\t        count = 1,\n\t        defer = jQuery.Deferred(),\n\t        elements = this,\n\t        i = this.length,\n\t        resolve = function resolve() {\n\t      if (! --count) {\n\t        defer.resolveWith(elements, [elements]);\n\t      }\n\t    };\n\n\t    if (typeof type !== \"string\") {\n\t      obj = type;\n\t      type = undefined;\n\t    }\n\n\t    type = type || \"fx\";\n\n\t    while (i--) {\n\t      tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n\n\t      if (tmp && tmp.empty) {\n\t        count++;\n\t        tmp.empty.add(resolve);\n\t      }\n\t    }\n\n\t    resolve();\n\t    return defer.promise(obj);\n\t  }\n\t});\n\tvar pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n\tvar rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n\tvar cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n\n\tvar isHiddenWithinTree = function isHiddenWithinTree(elem, el) {\n\t  // isHiddenWithinTree might be called from jQuery#filter function;\n\t  // in that case, element will be second argument\n\t  elem = el || elem; // Inline style trumps all\n\n\t  return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n\t  // Support: Firefox <=43 - 45\n\t  // Disconnected elements can have computed display: none, so first confirm that elem is\n\t  // in the document.\n\t  jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, \"display\") === \"none\";\n\t};\n\n\tvar swap = function swap(elem, options, callback, args) {\n\t  var ret,\n\t      name,\n\t      old = {}; // Remember the old values, and insert the new ones\n\n\t  for (name in options) {\n\t    old[name] = elem.style[name];\n\t    elem.style[name] = options[name];\n\t  }\n\n\t  ret = callback.apply(elem, args || []); // Revert the old values\n\n\t  for (name in options) {\n\t    elem.style[name] = old[name];\n\t  }\n\n\t  return ret;\n\t};\n\n\tfunction adjustCSS(elem, prop, valueParts, tween) {\n\t  var adjusted,\n\t      scale,\n\t      maxIterations = 20,\n\t      currentValue = tween ? function () {\n\t    return tween.cur();\n\t  } : function () {\n\t    return jQuery.css(elem, prop, \"\");\n\t  },\n\t      initial = currentValue(),\n\t      unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n\t      // Starting value computation is required for potential unit mismatches\n\t  initialInUnit = (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n\t  if (initialInUnit && initialInUnit[3] !== unit) {\n\t    // Support: Firefox <=54\n\t    // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t    initial = initial / 2; // Trust units reported by jQuery.css\n\n\t    unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n\t    initialInUnit = +initial || 1;\n\n\t    while (maxIterations--) {\n\t      // Evaluate and update our best guess (doubling guesses that zero out).\n\t      // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t      jQuery.style(elem, prop, initialInUnit + unit);\n\n\t      if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n\t        maxIterations = 0;\n\t      }\n\n\t      initialInUnit = initialInUnit / scale;\n\t    }\n\n\t    initialInUnit = initialInUnit * 2;\n\t    jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n\t    valueParts = valueParts || [];\n\t  }\n\n\t  if (valueParts) {\n\t    initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n\t    adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n\t    if (tween) {\n\t      tween.unit = unit;\n\t      tween.start = initialInUnit;\n\t      tween.end = adjusted;\n\t    }\n\t  }\n\n\t  return adjusted;\n\t}\n\n\tvar defaultDisplayMap = {};\n\n\tfunction getDefaultDisplay(elem) {\n\t  var temp,\n\t      doc = elem.ownerDocument,\n\t      nodeName = elem.nodeName,\n\t      display = defaultDisplayMap[nodeName];\n\n\t  if (display) {\n\t    return display;\n\t  }\n\n\t  temp = doc.body.appendChild(doc.createElement(nodeName));\n\t  display = jQuery.css(temp, \"display\");\n\t  temp.parentNode.removeChild(temp);\n\n\t  if (display === \"none\") {\n\t    display = \"block\";\n\t  }\n\n\t  defaultDisplayMap[nodeName] = display;\n\t  return display;\n\t}\n\n\tfunction showHide(elements, show) {\n\t  var display,\n\t      elem,\n\t      values = [],\n\t      index = 0,\n\t      length = elements.length; // Determine new display value for elements that need to change\n\n\t  for (; index < length; index++) {\n\t    elem = elements[index];\n\n\t    if (!elem.style) {\n\t      continue;\n\t    }\n\n\t    display = elem.style.display;\n\n\t    if (show) {\n\t      // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t      // check is required in this first loop unless we have a nonempty display value (either\n\t      // inline or about-to-be-restored)\n\t      if (display === \"none\") {\n\t        values[index] = dataPriv.get(elem, \"display\") || null;\n\n\t        if (!values[index]) {\n\t          elem.style.display = \"\";\n\t        }\n\t      }\n\n\t      if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n\t        values[index] = getDefaultDisplay(elem);\n\t      }\n\t    } else {\n\t      if (display !== \"none\") {\n\t        values[index] = \"none\"; // Remember what we're overwriting\n\n\t        dataPriv.set(elem, \"display\", display);\n\t      }\n\t    }\n\t  } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n\t  for (index = 0; index < length; index++) {\n\t    if (values[index] != null) {\n\t      elements[index].style.display = values[index];\n\t    }\n\t  }\n\n\t  return elements;\n\t}\n\n\tjQuery.fn.extend({\n\t  show: function show() {\n\t    return showHide(this, true);\n\t  },\n\t  hide: function hide() {\n\t    return showHide(this);\n\t  },\n\t  toggle: function toggle(state) {\n\t    if (typeof state === \"boolean\") {\n\t      return state ? this.show() : this.hide();\n\t    }\n\n\t    return this.each(function () {\n\t      if (isHiddenWithinTree(this)) {\n\t        jQuery(this).show();\n\t      } else {\n\t        jQuery(this).hide();\n\t      }\n\t    });\n\t  }\n\t});\n\tvar rcheckableType = /^(?:checkbox|radio)$/i;\n\tvar rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i;\n\tvar rscriptType = /^$|^module$|\\/(?:java|ecma)script/i; // We have to close these tags to support XHTML (#13200)\n\n\tvar wrapMap = {\n\t  // Support: IE <=9 only\n\t  option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n\t  // XHTML parsers do not magically insert elements in the\n\t  // same way that tag soup parsers do. So we cannot shorten\n\t  // this by omitting <tbody> or other required elements.\n\t  thead: [1, \"<table>\", \"</table>\"],\n\t  col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n\t  tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n\t  td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n\t  _default: [0, \"\", \"\"]\n\t}; // Support: IE <=9 only\n\n\twrapMap.optgroup = wrapMap.option;\n\twrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n\twrapMap.th = wrapMap.td;\n\n\tfunction getAll(context, tag) {\n\t  // Support: IE <=9 - 11 only\n\t  // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\t  var ret;\n\n\t  if (typeof context.getElementsByTagName !== \"undefined\") {\n\t    ret = context.getElementsByTagName(tag || \"*\");\n\t  } else if (typeof context.querySelectorAll !== \"undefined\") {\n\t    ret = context.querySelectorAll(tag || \"*\");\n\t  } else {\n\t    ret = [];\n\t  }\n\n\t  if (tag === undefined || tag && nodeName(context, tag)) {\n\t    return jQuery.merge([context], ret);\n\t  }\n\n\t  return ret;\n\t} // Mark scripts as having already been evaluated\n\n\n\tfunction setGlobalEval(elems, refElements) {\n\t  var i = 0,\n\t      l = elems.length;\n\n\t  for (; i < l; i++) {\n\t    dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n\t  }\n\t}\n\n\tvar rhtml = /<|&#?\\w+;/;\n\n\tfunction buildFragment(elems, context, scripts, selection, ignored) {\n\t  var elem,\n\t      tmp,\n\t      tag,\n\t      wrap,\n\t      contains,\n\t      j,\n\t      fragment = context.createDocumentFragment(),\n\t      nodes = [],\n\t      i = 0,\n\t      l = elems.length;\n\n\t  for (; i < l; i++) {\n\t    elem = elems[i];\n\n\t    if (elem || elem === 0) {\n\t      // Add nodes directly\n\t      if (toType(elem) === \"object\") {\n\t        // Support: Android <=4.0 only, PhantomJS 1 only\n\t        // push.apply(_, arraylike) throws on ancient WebKit\n\t        jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n\t      } else if (!rhtml.test(elem)) {\n\t        nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n\t      } else {\n\t        tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n\t        tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n\t        wrap = wrapMap[tag] || wrapMap._default;\n\t        tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n\t        j = wrap[0];\n\n\t        while (j--) {\n\t          tmp = tmp.lastChild;\n\t        } // Support: Android <=4.0 only, PhantomJS 1 only\n\t        // push.apply(_, arraylike) throws on ancient WebKit\n\n\n\t        jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n\t        tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n\t        tmp.textContent = \"\";\n\t      }\n\t    }\n\t  } // Remove wrapper from fragment\n\n\n\t  fragment.textContent = \"\";\n\t  i = 0;\n\n\t  while (elem = nodes[i++]) {\n\t    // Skip elements already in the context collection (trac-4087)\n\t    if (selection && jQuery.inArray(elem, selection) > -1) {\n\t      if (ignored) {\n\t        ignored.push(elem);\n\t      }\n\n\t      continue;\n\t    }\n\n\t    contains = jQuery.contains(elem.ownerDocument, elem); // Append to fragment\n\n\t    tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n\t    if (contains) {\n\t      setGlobalEval(tmp);\n\t    } // Capture executables\n\n\n\t    if (scripts) {\n\t      j = 0;\n\n\t      while (elem = tmp[j++]) {\n\t        if (rscriptType.test(elem.type || \"\")) {\n\t          scripts.push(elem);\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  return fragment;\n\t}\n\n\t(function () {\n\t  var fragment = document$2.createDocumentFragment(),\n\t      div = fragment.appendChild(document$2.createElement(\"div\")),\n\t      input = document$2.createElement(\"input\"); // Support: Android 4.0 - 4.3 only\n\t  // Check state lost if the name is set (#11217)\n\t  // Support: Windows Web Apps (WWA)\n\t  // `name` and `type` must use .setAttribute for WWA (#14901)\n\n\t  input.setAttribute(\"type\", \"radio\");\n\t  input.setAttribute(\"checked\", \"checked\");\n\t  input.setAttribute(\"name\", \"t\");\n\t  div.appendChild(input); // Support: Android <=4.1 only\n\t  // Older WebKit doesn't clone checked state correctly in fragments\n\n\t  support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n\t  // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n\t  div.innerHTML = \"<textarea>x</textarea>\";\n\t  support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n\t})();\n\n\tvar documentElement = document$2.documentElement;\n\tvar rkeyEvent = /^key/,\n\t    rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\t    rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n\tfunction returnTrue() {\n\t  return true;\n\t}\n\n\tfunction returnFalse() {\n\t  return false;\n\t} // Support: IE <=9 only\n\t// See #13393 for more info\n\n\n\tfunction safeActiveElement() {\n\t  try {\n\t    return document$2.activeElement;\n\t  } catch (err) {}\n\t}\n\n\tfunction _on(elem, types, selector, data, fn, one) {\n\t  var origFn, type; // Types can be a map of types/handlers\n\n\t  if (_typeof(types) === \"object\") {\n\t    // ( types-Object, selector, data )\n\t    if (typeof selector !== \"string\") {\n\t      // ( types-Object, data )\n\t      data = data || selector;\n\t      selector = undefined;\n\t    }\n\n\t    for (type in types) {\n\t      _on(elem, type, selector, data, types[type], one);\n\t    }\n\n\t    return elem;\n\t  }\n\n\t  if (data == null && fn == null) {\n\t    // ( types, fn )\n\t    fn = selector;\n\t    data = selector = undefined;\n\t  } else if (fn == null) {\n\t    if (typeof selector === \"string\") {\n\t      // ( types, selector, fn )\n\t      fn = data;\n\t      data = undefined;\n\t    } else {\n\t      // ( types, data, fn )\n\t      fn = data;\n\t      data = selector;\n\t      selector = undefined;\n\t    }\n\t  }\n\n\t  if (fn === false) {\n\t    fn = returnFalse;\n\t  } else if (!fn) {\n\t    return elem;\n\t  }\n\n\t  if (one === 1) {\n\t    origFn = fn;\n\n\t    fn = function fn(event) {\n\t      // Can use an empty set, since event contains the info\n\t      jQuery().off(event);\n\t      return origFn.apply(this, arguments);\n\t    }; // Use same guid so caller can remove using origFn\n\n\n\t    fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n\t  }\n\n\t  return elem.each(function () {\n\t    jQuery.event.add(this, types, fn, data, selector);\n\t  });\n\t}\n\t/*\n\t * Helper functions for managing events -- not part of the public interface.\n\t * Props to Dean Edwards' addEvent library for many of the ideas.\n\t */\n\n\n\tjQuery.event = {\n\t  global: {},\n\t  add: function add(elem, types, handler, data, selector) {\n\t    var handleObjIn,\n\t        eventHandle,\n\t        tmp,\n\t        events,\n\t        t,\n\t        handleObj,\n\t        special,\n\t        handlers,\n\t        type,\n\t        namespaces,\n\t        origType,\n\t        elemData = dataPriv.get(elem); // Don't attach events to noData or text/comment nodes (but allow plain objects)\n\n\t    if (!elemData) {\n\t      return;\n\t    } // Caller can pass in an object of custom data in lieu of the handler\n\n\n\t    if (handler.handler) {\n\t      handleObjIn = handler;\n\t      handler = handleObjIn.handler;\n\t      selector = handleObjIn.selector;\n\t    } // Ensure that invalid selectors throw exceptions at attach time\n\t    // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n\t    if (selector) {\n\t      jQuery.find.matchesSelector(documentElement, selector);\n\t    } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n\t    if (!handler.guid) {\n\t      handler.guid = jQuery.guid++;\n\t    } // Init the element's event structure and main handler, if this is the first\n\n\n\t    if (!(events = elemData.events)) {\n\t      events = elemData.events = {};\n\t    }\n\n\t    if (!(eventHandle = elemData.handle)) {\n\t      eventHandle = elemData.handle = function (e) {\n\t        // Discard the second event of a jQuery.event.trigger() and\n\t        // when an event is called after a page has unloaded\n\t        return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n\t      };\n\t    } // Handle multiple events separated by a space\n\n\n\t    types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n\t    t = types.length;\n\n\t    while (t--) {\n\t      tmp = rtypenamespace.exec(types[t]) || [];\n\t      type = origType = tmp[1];\n\t      namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n\t      if (!type) {\n\t        continue;\n\t      } // If event changes its type, use the special event handlers for the changed type\n\n\n\t      special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n\t      type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n\t      special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n\t      handleObj = jQuery.extend({\n\t        type: type,\n\t        origType: origType,\n\t        data: data,\n\t        handler: handler,\n\t        guid: handler.guid,\n\t        selector: selector,\n\t        needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n\t        namespace: namespaces.join(\".\")\n\t      }, handleObjIn); // Init the event handler queue if we're the first\n\n\t      if (!(handlers = events[type])) {\n\t        handlers = events[type] = [];\n\t        handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n\t        if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n\t          if (elem.addEventListener) {\n\t            elem.addEventListener(type, eventHandle);\n\t          }\n\t        }\n\t      }\n\n\t      if (special.add) {\n\t        special.add.call(elem, handleObj);\n\n\t        if (!handleObj.handler.guid) {\n\t          handleObj.handler.guid = handler.guid;\n\t        }\n\t      } // Add to the element's handler list, delegates in front\n\n\n\t      if (selector) {\n\t        handlers.splice(handlers.delegateCount++, 0, handleObj);\n\t      } else {\n\t        handlers.push(handleObj);\n\t      } // Keep track of which events have ever been used, for event optimization\n\n\n\t      jQuery.event.global[type] = true;\n\t    }\n\t  },\n\t  // Detach an event or set of events from an element\n\t  remove: function remove(elem, types, handler, selector, mappedTypes) {\n\t    var j,\n\t        origCount,\n\t        tmp,\n\t        events,\n\t        t,\n\t        handleObj,\n\t        special,\n\t        handlers,\n\t        type,\n\t        namespaces,\n\t        origType,\n\t        elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n\t    if (!elemData || !(events = elemData.events)) {\n\t      return;\n\t    } // Once for each type.namespace in types; type may be omitted\n\n\n\t    types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n\t    t = types.length;\n\n\t    while (t--) {\n\t      tmp = rtypenamespace.exec(types[t]) || [];\n\t      type = origType = tmp[1];\n\t      namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n\t      if (!type) {\n\t        for (type in events) {\n\t          jQuery.event.remove(elem, type + types[t], handler, selector, true);\n\t        }\n\n\t        continue;\n\t      }\n\n\t      special = jQuery.event.special[type] || {};\n\t      type = (selector ? special.delegateType : special.bindType) || type;\n\t      handlers = events[type] || [];\n\t      tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n\t      origCount = j = handlers.length;\n\n\t      while (j--) {\n\t        handleObj = handlers[j];\n\n\t        if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n\t          handlers.splice(j, 1);\n\n\t          if (handleObj.selector) {\n\t            handlers.delegateCount--;\n\t          }\n\n\t          if (special.remove) {\n\t            special.remove.call(elem, handleObj);\n\t          }\n\t        }\n\t      } // Remove generic event handler if we removed something and no more handlers exist\n\t      // (avoids potential for endless recursion during removal of special event handlers)\n\n\n\t      if (origCount && !handlers.length) {\n\t        if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n\t          jQuery.removeEvent(elem, type, elemData.handle);\n\t        }\n\n\t        delete events[type];\n\t      }\n\t    } // Remove data and the expando if it's no longer used\n\n\n\t    if (jQuery.isEmptyObject(events)) {\n\t      dataPriv.remove(elem, \"handle events\");\n\t    }\n\t  },\n\t  dispatch: function dispatch(nativeEvent) {\n\t    // Make a writable jQuery.Event from the native event object\n\t    var event = jQuery.event.fix(nativeEvent);\n\t    var i,\n\t        j,\n\t        ret,\n\t        matched,\n\t        handleObj,\n\t        handlerQueue,\n\t        args = new Array(arguments.length),\n\t        handlers = (dataPriv.get(this, \"events\") || {})[event.type] || [],\n\t        special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n\t    args[0] = event;\n\n\t    for (i = 1; i < arguments.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\n\t    event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n\t    if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n\t      return;\n\t    } // Determine handlers\n\n\n\t    handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n\t    i = 0;\n\n\t    while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n\t      event.currentTarget = matched.elem;\n\t      j = 0;\n\n\t      while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n\t        // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t        // a subset or equal to those in the bound event (both can have no namespace).\n\t        if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n\t          event.handleObj = handleObj;\n\t          event.data = handleObj.data;\n\t          ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n\t          if (ret !== undefined) {\n\t            if ((event.result = ret) === false) {\n\t              event.preventDefault();\n\t              event.stopPropagation();\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } // Call the postDispatch hook for the mapped type\n\n\n\t    if (special.postDispatch) {\n\t      special.postDispatch.call(this, event);\n\t    }\n\n\t    return event.result;\n\t  },\n\t  handlers: function handlers(event, _handlers) {\n\t    var i,\n\t        handleObj,\n\t        sel,\n\t        matchedHandlers,\n\t        matchedSelectors,\n\t        handlerQueue = [],\n\t        delegateCount = _handlers.delegateCount,\n\t        cur = event.target; // Find delegate handlers\n\n\t    if (delegateCount && // Support: IE <=9\n\t    // Black-hole SVG <use> instance trees (trac-13180)\n\t    cur.nodeType && // Support: Firefox <=42\n\t    // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t    // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t    // Support: IE 11 only\n\t    // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t    !(event.type === \"click\" && event.button >= 1)) {\n\t      for (; cur !== this; cur = cur.parentNode || this) {\n\t        // Don't check non-elements (#13208)\n\t        // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t        if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n\t          matchedHandlers = [];\n\t          matchedSelectors = {};\n\n\t          for (i = 0; i < delegateCount; i++) {\n\t            handleObj = _handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n\t            sel = handleObj.selector + \" \";\n\n\t            if (matchedSelectors[sel] === undefined) {\n\t              matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n\t            }\n\n\t            if (matchedSelectors[sel]) {\n\t              matchedHandlers.push(handleObj);\n\t            }\n\t          }\n\n\t          if (matchedHandlers.length) {\n\t            handlerQueue.push({\n\t              elem: cur,\n\t              handlers: matchedHandlers\n\t            });\n\t          }\n\t        }\n\t      }\n\t    } // Add the remaining (directly-bound) handlers\n\n\n\t    cur = this;\n\n\t    if (delegateCount < _handlers.length) {\n\t      handlerQueue.push({\n\t        elem: cur,\n\t        handlers: _handlers.slice(delegateCount)\n\t      });\n\t    }\n\n\t    return handlerQueue;\n\t  },\n\t  addProp: function addProp(name, hook) {\n\t    Object.defineProperty(jQuery.Event.prototype, name, {\n\t      enumerable: true,\n\t      configurable: true,\n\t      get: isFunction(hook) ? function () {\n\t        if (this.originalEvent) {\n\t          return hook(this.originalEvent);\n\t        }\n\t      } : function () {\n\t        if (this.originalEvent) {\n\t          return this.originalEvent[name];\n\t        }\n\t      },\n\t      set: function set(value) {\n\t        Object.defineProperty(this, name, {\n\t          enumerable: true,\n\t          configurable: true,\n\t          writable: true,\n\t          value: value\n\t        });\n\t      }\n\t    });\n\t  },\n\t  fix: function fix(originalEvent) {\n\t    return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n\t  },\n\t  special: {\n\t    load: {\n\t      // Prevent triggered image.load events from bubbling to window.load\n\t      noBubble: true\n\t    },\n\t    focus: {\n\t      // Fire native event if possible so blur/focus sequence is correct\n\t      trigger: function trigger() {\n\t        if (this !== safeActiveElement() && this.focus) {\n\t          this.focus();\n\t          return false;\n\t        }\n\t      },\n\t      delegateType: \"focusin\"\n\t    },\n\t    blur: {\n\t      trigger: function trigger() {\n\t        if (this === safeActiveElement() && this.blur) {\n\t          this.blur();\n\t          return false;\n\t        }\n\t      },\n\t      delegateType: \"focusout\"\n\t    },\n\t    click: {\n\t      // For checkbox, fire native event so checked state will be right\n\t      trigger: function trigger() {\n\t        if (this.type === \"checkbox\" && this.click && nodeName(this, \"input\")) {\n\t          this.click();\n\t          return false;\n\t        }\n\t      },\n\t      // For cross-browser consistency, don't fire native .click() on links\n\t      _default: function _default(event) {\n\t        return nodeName(event.target, \"a\");\n\t      }\n\t    },\n\t    beforeunload: {\n\t      postDispatch: function postDispatch(event) {\n\t        // Support: Firefox 20+\n\t        // Firefox doesn't alert if the returnValue field is not set.\n\t        if (event.result !== undefined && event.originalEvent) {\n\t          event.originalEvent.returnValue = event.result;\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n\tjQuery.removeEvent = function (elem, type, handle) {\n\t  // This \"if\" is needed for plain objects\n\t  if (elem.removeEventListener) {\n\t    elem.removeEventListener(type, handle);\n\t  }\n\t};\n\n\tjQuery.Event = function (src, props) {\n\t  // Allow instantiation without the 'new' keyword\n\t  if (!(this instanceof jQuery.Event)) {\n\t    return new jQuery.Event(src, props);\n\t  } // Event object\n\n\n\t  if (src && src.type) {\n\t    this.originalEvent = src;\n\t    this.type = src.type; // Events bubbling up the document may have been marked as prevented\n\t    // by a handler lower down the tree; reflect the correct value.\n\n\t    this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n\t    src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n\t    // Support: Safari <=6 - 7 only\n\t    // Target should not be a text node (#504, #13143)\n\n\t    this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n\t    this.currentTarget = src.currentTarget;\n\t    this.relatedTarget = src.relatedTarget; // Event type\n\t  } else {\n\t    this.type = src;\n\t  } // Put explicitly provided properties onto the event object\n\n\n\t  if (props) {\n\t    jQuery.extend(this, props);\n\t  } // Create a timestamp if incoming event doesn't have one\n\n\n\t  this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n\t  this[jQuery.expando] = true;\n\t}; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n\t// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n\tjQuery.Event.prototype = {\n\t  constructor: jQuery.Event,\n\t  isDefaultPrevented: returnFalse,\n\t  isPropagationStopped: returnFalse,\n\t  isImmediatePropagationStopped: returnFalse,\n\t  isSimulated: false,\n\t  preventDefault: function preventDefault() {\n\t    var e = this.originalEvent;\n\t    this.isDefaultPrevented = returnTrue;\n\n\t    if (e && !this.isSimulated) {\n\t      e.preventDefault();\n\t    }\n\t  },\n\t  stopPropagation: function stopPropagation() {\n\t    var e = this.originalEvent;\n\t    this.isPropagationStopped = returnTrue;\n\n\t    if (e && !this.isSimulated) {\n\t      e.stopPropagation();\n\t    }\n\t  },\n\t  stopImmediatePropagation: function stopImmediatePropagation() {\n\t    var e = this.originalEvent;\n\t    this.isImmediatePropagationStopped = returnTrue;\n\n\t    if (e && !this.isSimulated) {\n\t      e.stopImmediatePropagation();\n\t    }\n\n\t    this.stopPropagation();\n\t  }\n\t}; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n\tjQuery.each({\n\t  altKey: true,\n\t  bubbles: true,\n\t  cancelable: true,\n\t  changedTouches: true,\n\t  ctrlKey: true,\n\t  detail: true,\n\t  eventPhase: true,\n\t  metaKey: true,\n\t  pageX: true,\n\t  pageY: true,\n\t  shiftKey: true,\n\t  view: true,\n\t  \"char\": true,\n\t  charCode: true,\n\t  key: true,\n\t  keyCode: true,\n\t  button: true,\n\t  buttons: true,\n\t  clientX: true,\n\t  clientY: true,\n\t  offsetX: true,\n\t  offsetY: true,\n\t  pointerId: true,\n\t  pointerType: true,\n\t  screenX: true,\n\t  screenY: true,\n\t  targetTouches: true,\n\t  toElement: true,\n\t  touches: true,\n\t  which: function which(event) {\n\t    var button = event.button; // Add which for key events\n\n\t    if (event.which == null && rkeyEvent.test(event.type)) {\n\t      return event.charCode != null ? event.charCode : event.keyCode;\n\t    } // Add which for click: 1 === left; 2 === middle; 3 === right\n\n\n\t    if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n\t      if (button & 1) {\n\t        return 1;\n\t      }\n\n\t      if (button & 2) {\n\t        return 3;\n\t      }\n\n\t      if (button & 4) {\n\t        return 2;\n\t      }\n\n\t      return 0;\n\t    }\n\n\t    return event.which;\n\t  }\n\t}, jQuery.event.addProp); // Create mouseenter/leave events using mouseover/out and event-time checks\n\t// so that event delegation works in jQuery.\n\t// Do the same for pointerenter/pointerleave and pointerover/pointerout\n\t//\n\t// Support: Safari 7 only\n\t// Safari sends mouseenter too often; see:\n\t// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n\t// for the description of the bug (it existed in older Chrome versions as well).\n\n\tjQuery.each({\n\t  mouseenter: \"mouseover\",\n\t  mouseleave: \"mouseout\",\n\t  pointerenter: \"pointerover\",\n\t  pointerleave: \"pointerout\"\n\t}, function (orig, fix) {\n\t  jQuery.event.special[orig] = {\n\t    delegateType: fix,\n\t    bindType: fix,\n\t    handle: function handle(event) {\n\t      var ret,\n\t          target = this,\n\t          related = event.relatedTarget,\n\t          handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n\t      // NB: No relatedTarget if the mouse left/entered the browser window\n\n\t      if (!related || related !== target && !jQuery.contains(target, related)) {\n\t        event.type = handleObj.origType;\n\t        ret = handleObj.handler.apply(this, arguments);\n\t        event.type = fix;\n\t      }\n\n\t      return ret;\n\t    }\n\t  };\n\t});\n\tjQuery.fn.extend({\n\t  on: function on(types, selector, data, fn) {\n\t    return _on(this, types, selector, data, fn);\n\t  },\n\t  one: function one(types, selector, data, fn) {\n\t    return _on(this, types, selector, data, fn, 1);\n\t  },\n\t  off: function off(types, selector, fn) {\n\t    var handleObj, type;\n\n\t    if (types && types.preventDefault && types.handleObj) {\n\t      // ( event )  dispatched jQuery.Event\n\t      handleObj = types.handleObj;\n\t      jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n\t      return this;\n\t    }\n\n\t    if (_typeof(types) === \"object\") {\n\t      // ( types-object [, selector] )\n\t      for (type in types) {\n\t        this.off(type, selector, types[type]);\n\t      }\n\n\t      return this;\n\t    }\n\n\t    if (selector === false || typeof selector === \"function\") {\n\t      // ( types [, fn] )\n\t      fn = selector;\n\t      selector = undefined;\n\t    }\n\n\t    if (fn === false) {\n\t      fn = returnFalse;\n\t    }\n\n\t    return this.each(function () {\n\t      jQuery.event.remove(this, types, fn, selector);\n\t    });\n\t  }\n\t});\n\tvar\n\t/* eslint-disable max-len */\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\t    // checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\t    rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n\tfunction manipulationTarget(elem, content) {\n\t  if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n\t    return jQuery(elem).children(\"tbody\")[0] || elem;\n\t  }\n\n\t  return elem;\n\t} // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n\tfunction disableScript(elem) {\n\t  elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\t  return elem;\n\t}\n\n\tfunction restoreScript(elem) {\n\t  if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n\t    elem.type = elem.type.slice(5);\n\t  } else {\n\t    elem.removeAttribute(\"type\");\n\t  }\n\n\t  return elem;\n\t}\n\n\tfunction cloneCopyEvent(src, dest) {\n\t  var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\t  if (dest.nodeType !== 1) {\n\t    return;\n\t  } // 1. Copy private data: events, handlers, etc.\n\n\n\t  if (dataPriv.hasData(src)) {\n\t    pdataOld = dataPriv.access(src);\n\t    pdataCur = dataPriv.set(dest, pdataOld);\n\t    events = pdataOld.events;\n\n\t    if (events) {\n\t      delete pdataCur.handle;\n\t      pdataCur.events = {};\n\n\t      for (type in events) {\n\t        for (i = 0, l = events[type].length; i < l; i++) {\n\t          jQuery.event.add(dest, type, events[type][i]);\n\t        }\n\t      }\n\t    }\n\t  } // 2. Copy user data\n\n\n\t  if (dataUser.hasData(src)) {\n\t    udataOld = dataUser.access(src);\n\t    udataCur = jQuery.extend({}, udataOld);\n\t    dataUser.set(dest, udataCur);\n\t  }\n\t} // Fix IE bugs, see support tests\n\n\n\tfunction fixInput(src, dest) {\n\t  var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n\t  if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n\t    dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n\t  } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n\t    dest.defaultValue = src.defaultValue;\n\t  }\n\t}\n\n\tfunction domManip(collection, args, callback, ignored) {\n\t  // Flatten any nested arrays\n\t  args = concat.apply([], args);\n\t  var fragment,\n\t      first,\n\t      scripts,\n\t      hasScripts,\n\t      node,\n\t      doc,\n\t      i = 0,\n\t      l = collection.length,\n\t      iNoClone = l - 1,\n\t      value = args[0],\n\t      valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n\t  if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n\t    return collection.each(function (index) {\n\t      var self = collection.eq(index);\n\n\t      if (valueIsFunction) {\n\t        args[0] = value.call(this, index, self.html());\n\t      }\n\n\t      domManip(self, args, callback, ignored);\n\t    });\n\t  }\n\n\t  if (l) {\n\t    fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n\t    first = fragment.firstChild;\n\n\t    if (fragment.childNodes.length === 1) {\n\t      fragment = first;\n\t    } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n\t    if (first || ignored) {\n\t      scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n\t      hasScripts = scripts.length; // Use the original fragment for the last item\n\t      // instead of the first because it can end up\n\t      // being emptied incorrectly in certain situations (#8070).\n\n\t      for (; i < l; i++) {\n\t        node = fragment;\n\n\t        if (i !== iNoClone) {\n\t          node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n\t          if (hasScripts) {\n\t            // Support: Android <=4.0 only, PhantomJS 1 only\n\t            // push.apply(_, arraylike) throws on ancient WebKit\n\t            jQuery.merge(scripts, getAll(node, \"script\"));\n\t          }\n\t        }\n\n\t        callback.call(collection[i], node, i);\n\t      }\n\n\t      if (hasScripts) {\n\t        doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n\t        jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n\t        for (i = 0; i < hasScripts; i++) {\n\t          node = scripts[i];\n\n\t          if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n\t            if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n\t              // Optional AJAX dependency, but won't run scripts if not present\n\t              if (jQuery._evalUrl) {\n\t                jQuery._evalUrl(node.src);\n\t              }\n\t            } else {\n\t              DOMEval(node.textContent.replace(rcleanScript, \"\"), doc, node);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  return collection;\n\t}\n\n\tfunction _remove(elem, selector, keepData) {\n\t  var node,\n\t      nodes = selector ? jQuery.filter(selector, elem) : elem,\n\t      i = 0;\n\n\t  for (; (node = nodes[i]) != null; i++) {\n\t    if (!keepData && node.nodeType === 1) {\n\t      jQuery.cleanData(getAll(node));\n\t    }\n\n\t    if (node.parentNode) {\n\t      if (keepData && jQuery.contains(node.ownerDocument, node)) {\n\t        setGlobalEval(getAll(node, \"script\"));\n\t      }\n\n\t      node.parentNode.removeChild(node);\n\t    }\n\t  }\n\n\t  return elem;\n\t}\n\n\tjQuery.extend({\n\t  htmlPrefilter: function htmlPrefilter(html) {\n\t    return html.replace(rxhtmlTag, \"<$1></$2>\");\n\t  },\n\t  clone: function clone(elem, dataAndEvents, deepDataAndEvents) {\n\t    var i,\n\t        l,\n\t        srcElements,\n\t        destElements,\n\t        clone = elem.cloneNode(true),\n\t        inPage = jQuery.contains(elem.ownerDocument, elem); // Fix IE cloning issues\n\n\t    if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n\t      // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t      destElements = getAll(clone);\n\t      srcElements = getAll(elem);\n\n\t      for (i = 0, l = srcElements.length; i < l; i++) {\n\t        fixInput(srcElements[i], destElements[i]);\n\t      }\n\t    } // Copy the events from the original to the clone\n\n\n\t    if (dataAndEvents) {\n\t      if (deepDataAndEvents) {\n\t        srcElements = srcElements || getAll(elem);\n\t        destElements = destElements || getAll(clone);\n\n\t        for (i = 0, l = srcElements.length; i < l; i++) {\n\t          cloneCopyEvent(srcElements[i], destElements[i]);\n\t        }\n\t      } else {\n\t        cloneCopyEvent(elem, clone);\n\t      }\n\t    } // Preserve script evaluation history\n\n\n\t    destElements = getAll(clone, \"script\");\n\n\t    if (destElements.length > 0) {\n\t      setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n\t    } // Return the cloned set\n\n\n\t    return clone;\n\t  },\n\t  cleanData: function cleanData(elems) {\n\t    var data,\n\t        elem,\n\t        type,\n\t        special = jQuery.event.special,\n\t        i = 0;\n\n\t    for (; (elem = elems[i]) !== undefined; i++) {\n\t      if (acceptData(elem)) {\n\t        if (data = elem[dataPriv.expando]) {\n\t          if (data.events) {\n\t            for (type in data.events) {\n\t              if (special[type]) {\n\t                jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n\t              } else {\n\t                jQuery.removeEvent(elem, type, data.handle);\n\t              }\n\t            }\n\t          } // Support: Chrome <=35 - 45+\n\t          // Assign undefined instead of using delete, see Data#remove\n\n\n\t          elem[dataPriv.expando] = undefined;\n\t        }\n\n\t        if (elem[dataUser.expando]) {\n\t          // Support: Chrome <=35 - 45+\n\t          // Assign undefined instead of using delete, see Data#remove\n\t          elem[dataUser.expando] = undefined;\n\t        }\n\t      }\n\t    }\n\t  }\n\t});\n\tjQuery.fn.extend({\n\t  detach: function detach(selector) {\n\t    return _remove(this, selector, true);\n\t  },\n\t  remove: function remove(selector) {\n\t    return _remove(this, selector);\n\t  },\n\t  text: function text(value) {\n\t    return access(this, function (value) {\n\t      return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n\t        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n\t          this.textContent = value;\n\t        }\n\t      });\n\t    }, null, value, arguments.length);\n\t  },\n\t  append: function append() {\n\t    return domManip(this, arguments, function (elem) {\n\t      if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n\t        var target = manipulationTarget(this, elem);\n\t        target.appendChild(elem);\n\t      }\n\t    });\n\t  },\n\t  prepend: function prepend() {\n\t    return domManip(this, arguments, function (elem) {\n\t      if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n\t        var target = manipulationTarget(this, elem);\n\t        target.insertBefore(elem, target.firstChild);\n\t      }\n\t    });\n\t  },\n\t  before: function before() {\n\t    return domManip(this, arguments, function (elem) {\n\t      if (this.parentNode) {\n\t        this.parentNode.insertBefore(elem, this);\n\t      }\n\t    });\n\t  },\n\t  after: function after() {\n\t    return domManip(this, arguments, function (elem) {\n\t      if (this.parentNode) {\n\t        this.parentNode.insertBefore(elem, this.nextSibling);\n\t      }\n\t    });\n\t  },\n\t  empty: function empty() {\n\t    var elem,\n\t        i = 0;\n\n\t    for (; (elem = this[i]) != null; i++) {\n\t      if (elem.nodeType === 1) {\n\t        // Prevent memory leaks\n\t        jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n\t        elem.textContent = \"\";\n\t      }\n\t    }\n\n\t    return this;\n\t  },\n\t  clone: function clone(dataAndEvents, deepDataAndEvents) {\n\t    dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t    deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\t    return this.map(function () {\n\t      return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n\t    });\n\t  },\n\t  html: function html(value) {\n\t    return access(this, function (value) {\n\t      var elem = this[0] || {},\n\t          i = 0,\n\t          l = this.length;\n\n\t      if (value === undefined && elem.nodeType === 1) {\n\t        return elem.innerHTML;\n\t      } // See if we can take a shortcut and just use innerHTML\n\n\n\t      if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n\t        value = jQuery.htmlPrefilter(value);\n\n\t        try {\n\t          for (; i < l; i++) {\n\t            elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n\t            if (elem.nodeType === 1) {\n\t              jQuery.cleanData(getAll(elem, false));\n\t              elem.innerHTML = value;\n\t            }\n\t          }\n\n\t          elem = 0; // If using innerHTML throws an exception, use the fallback method\n\t        } catch (e) {}\n\t      }\n\n\t      if (elem) {\n\t        this.empty().append(value);\n\t      }\n\t    }, null, value, arguments.length);\n\t  },\n\t  replaceWith: function replaceWith() {\n\t    var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n\t    return domManip(this, arguments, function (elem) {\n\t      var parent = this.parentNode;\n\n\t      if (jQuery.inArray(this, ignored) < 0) {\n\t        jQuery.cleanData(getAll(this));\n\n\t        if (parent) {\n\t          parent.replaceChild(elem, this);\n\t        }\n\t      } // Force callback invocation\n\n\t    }, ignored);\n\t  }\n\t});\n\tjQuery.each({\n\t  appendTo: \"append\",\n\t  prependTo: \"prepend\",\n\t  insertBefore: \"before\",\n\t  insertAfter: \"after\",\n\t  replaceAll: \"replaceWith\"\n\t}, function (name, original) {\n\t  jQuery.fn[name] = function (selector) {\n\t    var elems,\n\t        ret = [],\n\t        insert = jQuery(selector),\n\t        last = insert.length - 1,\n\t        i = 0;\n\n\t    for (; i <= last; i++) {\n\t      elems = i === last ? this : this.clone(true);\n\t      jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n\t      // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n\t      push$1.apply(ret, elems.get());\n\t    }\n\n\t    return this.pushStack(ret);\n\t  };\n\t});\n\tvar rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n\tvar getStyles = function getStyles(elem) {\n\t  // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t  // IE throws on elements created in popups\n\t  // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t  var view = elem.ownerDocument.defaultView;\n\n\t  if (!view || !view.opener) {\n\t    view = window;\n\t  }\n\n\t  return view.getComputedStyle(elem);\n\t};\n\n\tvar rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n\n\t(function () {\n\t  // Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t  // so they're executed at the same time to save the second computation.\n\t  function computeStyleTests() {\n\t    // This is a singleton, we need to execute it only once\n\t    if (!div) {\n\t      return;\n\t    }\n\n\t    container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n\t    div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n\t    documentElement.appendChild(container).appendChild(div);\n\t    var divStyle = window.getComputedStyle(div);\n\t    pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n\t    reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t    // Some styles come back with percentage values, even though they shouldn't\n\n\t    div.style.right = \"60%\";\n\t    pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n\t    // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n\t    boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n\t    // Detect overflow:scroll screwiness (gh-3699)\n\n\t    div.style.position = \"absolute\";\n\t    scrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\t    documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n\t    // it will also be a sign that checks already performed\n\n\t    div = null;\n\t  }\n\n\t  function roundPixelMeasures(measure) {\n\t    return Math.round(parseFloat(measure));\n\t  }\n\n\t  var pixelPositionVal,\n\t      boxSizingReliableVal,\n\t      scrollboxSizeVal,\n\t      pixelBoxStylesVal,\n\t      reliableMarginLeftVal,\n\t      container = document$2.createElement(\"div\"),\n\t      div = document$2.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n\t  if (!div.style) {\n\t    return;\n\t  } // Support: IE <=9 - 11 only\n\t  // Style of cloned element affects source element cloned (#8908)\n\n\n\t  div.style.backgroundClip = \"content-box\";\n\t  div.cloneNode(true).style.backgroundClip = \"\";\n\t  support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\t  jQuery.extend(support, {\n\t    boxSizingReliable: function boxSizingReliable() {\n\t      computeStyleTests();\n\t      return boxSizingReliableVal;\n\t    },\n\t    pixelBoxStyles: function pixelBoxStyles() {\n\t      computeStyleTests();\n\t      return pixelBoxStylesVal;\n\t    },\n\t    pixelPosition: function pixelPosition() {\n\t      computeStyleTests();\n\t      return pixelPositionVal;\n\t    },\n\t    reliableMarginLeft: function reliableMarginLeft() {\n\t      computeStyleTests();\n\t      return reliableMarginLeftVal;\n\t    },\n\t    scrollboxSize: function scrollboxSize() {\n\t      computeStyleTests();\n\t      return scrollboxSizeVal;\n\t    }\n\t  });\n\t})();\n\n\tfunction curCSS(elem, name, computed) {\n\t  var width,\n\t      minWidth,\n\t      maxWidth,\n\t      ret,\n\t      // Support: Firefox 51+\n\t  // Retrieving style before computed somehow\n\t  // fixes an issue with getting wrong values\n\t  // on detached elements\n\t  style = elem.style;\n\t  computed = computed || getStyles(elem); // getPropertyValue is needed for:\n\t  //   .css('filter') (IE 9 only, #12537)\n\t  //   .css('--customProperty) (#3144)\n\n\t  if (computed) {\n\t    ret = computed.getPropertyValue(name) || computed[name];\n\n\t    if (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n\t      ret = jQuery.style(elem, name);\n\t    } // A tribute to the \"awesome hack by Dean Edwards\"\n\t    // Android Browser returns percentage for some values,\n\t    // but width seems to be reliably pixels.\n\t    // This is against the CSSOM draft spec:\n\t    // https://drafts.csswg.org/cssom/#resolved-values\n\n\n\t    if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n\t      // Remember the original values\n\t      width = style.width;\n\t      minWidth = style.minWidth;\n\t      maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n\t      style.minWidth = style.maxWidth = style.width = ret;\n\t      ret = computed.width; // Revert the changed values\n\n\t      style.width = width;\n\t      style.minWidth = minWidth;\n\t      style.maxWidth = maxWidth;\n\t    }\n\t  }\n\n\t  return ret !== undefined ? // Support: IE <=9 - 11 only\n\t  // IE returns zIndex value as an integer.\n\t  ret + \"\" : ret;\n\t}\n\n\tfunction addGetHookIf(conditionFn, hookFn) {\n\t  // Define the hook, we'll check on the first run if it's really needed.\n\t  return {\n\t    get: function get() {\n\t      if (conditionFn()) {\n\t        // Hook not needed (or it's not possible to use it due\n\t        // to missing dependency), remove it.\n\t        delete this.get;\n\t        return;\n\t      } // Hook needed; redefine it so that the support test is not executed again.\n\n\n\t      return (this.get = hookFn).apply(this, arguments);\n\t    }\n\t  };\n\t}\n\n\tvar // Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\t    rcustomProp = /^--/,\n\t    cssShow = {\n\t  position: \"absolute\",\n\t  visibility: \"hidden\",\n\t  display: \"block\"\n\t},\n\t    cssNormalTransform = {\n\t  letterSpacing: \"0\",\n\t  fontWeight: \"400\"\n\t},\n\t    cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n\t    emptyStyle = document$2.createElement(\"div\").style; // Return a css property mapped to a potentially vendor prefixed property\n\n\tfunction vendorPropName(name) {\n\t  // Shortcut for names that are not vendor prefixed\n\t  if (name in emptyStyle) {\n\t    return name;\n\t  } // Check for vendor prefixed names\n\n\n\t  var capName = name[0].toUpperCase() + name.slice(1),\n\t      i = cssPrefixes.length;\n\n\t  while (i--) {\n\t    name = cssPrefixes[i] + capName;\n\n\t    if (name in emptyStyle) {\n\t      return name;\n\t    }\n\t  }\n\t} // Return a property mapped along what jQuery.cssProps suggests or to\n\t// a vendor prefixed property.\n\n\n\tfunction finalPropName(name) {\n\t  var ret = jQuery.cssProps[name];\n\n\t  if (!ret) {\n\t    ret = jQuery.cssProps[name] = vendorPropName(name) || name;\n\t  }\n\n\t  return ret;\n\t}\n\n\tfunction setPositiveNumber(elem, value, subtract) {\n\t  // Any relative (+/-) values have already been\n\t  // normalized at this point\n\t  var matches = rcssNum.exec(value);\n\t  return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t  Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n\t}\n\n\tfunction boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n\t  var i = dimension === \"width\" ? 1 : 0,\n\t      extra = 0,\n\t      delta = 0; // Adjustment may not be necessary\n\n\t  if (box === (isBorderBox ? \"border\" : \"content\")) {\n\t    return 0;\n\t  }\n\n\t  for (; i < 4; i += 2) {\n\t    // Both box models exclude margin\n\t    if (box === \"margin\") {\n\t      delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n\t    } // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\n\n\t    if (!isBorderBox) {\n\t      // Add padding\n\t      delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // For \"border\" or \"margin\", add border\n\n\t      if (box !== \"padding\") {\n\t        delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles); // But still keep track of it otherwise\n\t      } else {\n\t        extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n\t      } // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t      // \"padding\" or \"margin\"\n\n\t    } else {\n\t      // For \"content\", subtract padding\n\t      if (box === \"content\") {\n\t        delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n\t      } // For \"content\" or \"padding\", subtract border\n\n\n\t      if (box !== \"margin\") {\n\t        delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n\t      }\n\t    }\n\t  } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n\t  if (!isBorderBox && computedVal >= 0) {\n\t    // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t    // Assuming integer scroll gutter, subtract the rest and round down\n\t    delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5));\n\t  }\n\n\t  return delta;\n\t}\n\n\tfunction getWidthOrHeight(elem, dimension, extra) {\n\t  // Start with computed style\n\t  var styles = getStyles(elem),\n\t      val = curCSS(elem, dimension, styles),\n\t      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n\t      valueIsBorderBox = isBorderBox; // Support: Firefox <=54\n\t  // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n\t  if (rnumnonpx.test(val)) {\n\t    if (!extra) {\n\t      return val;\n\t    }\n\n\t    val = \"auto\";\n\t  } // Check for style in case a browser which returns unreliable values\n\t  // for getComputedStyle silently falls back to the reliable elem.style\n\n\n\t  valueIsBorderBox = valueIsBorderBox && (support.boxSizingReliable() || val === elem.style[dimension]); // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t  // This happens for inline elements with no explicit setting (gh-3571)\n\t  // Support: Android <=4.1 - 4.3 only\n\t  // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\n\t  if (val === \"auto\" || !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") {\n\t    val = elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)]; // offsetWidth/offsetHeight provide border-box values\n\n\t    valueIsBorderBox = true;\n\t  } // Normalize \"\" and auto\n\n\n\t  val = parseFloat(val) || 0; // Adjust for the element's box model\n\n\t  return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t  val) + \"px\";\n\t}\n\n\tjQuery.extend({\n\t  // Add in style property hooks for overriding the default\n\t  // behavior of getting and setting a style property\n\t  cssHooks: {\n\t    opacity: {\n\t      get: function get(elem, computed) {\n\t        if (computed) {\n\t          // We should always get a number back from opacity\n\t          var ret = curCSS(elem, \"opacity\");\n\t          return ret === \"\" ? \"1\" : ret;\n\t        }\n\t      }\n\t    }\n\t  },\n\t  // Don't automatically add \"px\" to these possibly-unitless properties\n\t  cssNumber: {\n\t    \"animationIterationCount\": true,\n\t    \"columnCount\": true,\n\t    \"fillOpacity\": true,\n\t    \"flexGrow\": true,\n\t    \"flexShrink\": true,\n\t    \"fontWeight\": true,\n\t    \"lineHeight\": true,\n\t    \"opacity\": true,\n\t    \"order\": true,\n\t    \"orphans\": true,\n\t    \"widows\": true,\n\t    \"zIndex\": true,\n\t    \"zoom\": true\n\t  },\n\t  // Add in properties whose names you wish to fix before\n\t  // setting or getting the value\n\t  cssProps: {},\n\t  // Get and set the style property on a DOM Node\n\t  style: function style(elem, name, value, extra) {\n\t    // Don't set styles on text and comment nodes\n\t    if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n\t      return;\n\t    } // Make sure that we're working with the right name\n\n\n\t    var ret,\n\t        type,\n\t        hooks,\n\t        origName = camelCase(name),\n\t        isCustomProp = rcustomProp.test(name),\n\t        style = elem.style; // Make sure that we're working with the right name. We don't\n\t    // want to query the value if it is a CSS custom property\n\t    // since they are user-defined.\n\n\t    if (!isCustomProp) {\n\t      name = finalPropName(origName);\n\t    } // Gets hook for the prefixed version, then unprefixed version\n\n\n\t    hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n\t    if (value !== undefined) {\n\t      type = _typeof(value); // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n\t      if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n\t        value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n\t        type = \"number\";\n\t      } // Make sure that null and NaN values aren't set (#7116)\n\n\n\t      if (value == null || value !== value) {\n\t        return;\n\t      } // If a number was passed in, add the unit (except for certain CSS properties)\n\n\n\t      if (type === \"number\") {\n\t        value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n\t      } // background-* props affect original clone's values\n\n\n\t      if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n\t        style[name] = \"inherit\";\n\t      } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n\t      if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n\t        if (isCustomProp) {\n\t          style.setProperty(name, value);\n\t        } else {\n\t          style[name] = value;\n\t        }\n\t      }\n\t    } else {\n\t      // If a hook was provided get the non-computed value from there\n\t      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n\t        return ret;\n\t      } // Otherwise just get the value from the style object\n\n\n\t      return style[name];\n\t    }\n\t  },\n\t  css: function css(elem, name, extra, styles) {\n\t    var val,\n\t        num,\n\t        hooks,\n\t        origName = camelCase(name),\n\t        isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't\n\t    // want to modify the value if it is a CSS custom property\n\t    // since they are user-defined.\n\n\t    if (!isCustomProp) {\n\t      name = finalPropName(origName);\n\t    } // Try prefixed name followed by the unprefixed name\n\n\n\t    hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n\t    if (hooks && \"get\" in hooks) {\n\t      val = hooks.get(elem, true, extra);\n\t    } // Otherwise, if a way to get the computed value exists, use that\n\n\n\t    if (val === undefined) {\n\t      val = curCSS(elem, name, styles);\n\t    } // Convert \"normal\" to computed value\n\n\n\t    if (val === \"normal\" && name in cssNormalTransform) {\n\t      val = cssNormalTransform[name];\n\t    } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n\t    if (extra === \"\" || extra) {\n\t      num = parseFloat(val);\n\t      return extra === true || isFinite(num) ? num || 0 : val;\n\t    }\n\n\t    return val;\n\t  }\n\t});\n\tjQuery.each([\"height\", \"width\"], function (i, dimension) {\n\t  jQuery.cssHooks[dimension] = {\n\t    get: function get(elem, computed, extra) {\n\t      if (computed) {\n\t        // Certain elements can have dimension info if we invisibly show them\n\t        // but it must have a current display style that would benefit\n\t        return rdisplayswap.test(jQuery.css(elem, \"display\")) && ( // Support: Safari 8+\n\t        // Table columns in Safari have non-zero offsetWidth & zero\n\t        // getBoundingClientRect().width unless display is changed.\n\t        // Support: IE <=11 only\n\t        // Running getBoundingClientRect on a disconnected node\n\t        // in IE throws an error.\n\t        !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n\t          return getWidthOrHeight(elem, dimension, extra);\n\t        }) : getWidthOrHeight(elem, dimension, extra);\n\t      }\n\t    },\n\t    set: function set(elem, value, extra) {\n\t      var matches,\n\t          styles = getStyles(elem),\n\t          isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n\t          subtract = extra && boxModelAdjustment(elem, dimension, extra, isBorderBox, styles); // Account for unreliable border-box dimensions by comparing offset* to computed and\n\t      // faking a content-box to get border and padding (gh-3699)\n\n\t      if (isBorderBox && support.scrollboxSize() === styles.position) {\n\t        subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n\t      } // Convert to pixels if value adjustment is needed\n\n\n\t      if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n\t        elem.style[dimension] = value;\n\t        value = jQuery.css(elem, dimension);\n\t      }\n\n\t      return setPositiveNumber(elem, value, subtract);\n\t    }\n\t  };\n\t});\n\tjQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n\t  if (computed) {\n\t    return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n\t      marginLeft: 0\n\t    }, function () {\n\t      return elem.getBoundingClientRect().left;\n\t    })) + \"px\";\n\t  }\n\t}); // These hooks are used by animate to expand properties\n\n\tjQuery.each({\n\t  margin: \"\",\n\t  padding: \"\",\n\t  border: \"Width\"\n\t}, function (prefix, suffix) {\n\t  jQuery.cssHooks[prefix + suffix] = {\n\t    expand: function expand(value) {\n\t      var i = 0,\n\t          expanded = {},\n\t          // Assumes a single number if not a string\n\t      parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n\t      for (; i < 4; i++) {\n\t        expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n\t      }\n\n\t      return expanded;\n\t    }\n\t  };\n\n\t  if (prefix !== \"margin\") {\n\t    jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n\t  }\n\t});\n\tjQuery.fn.extend({\n\t  css: function css(name, value) {\n\t    return access(this, function (elem, name, value) {\n\t      var styles,\n\t          len,\n\t          map = {},\n\t          i = 0;\n\n\t      if (Array.isArray(name)) {\n\t        styles = getStyles(elem);\n\t        len = name.length;\n\n\t        for (; i < len; i++) {\n\t          map[name[i]] = jQuery.css(elem, name[i], false, styles);\n\t        }\n\n\t        return map;\n\t      }\n\n\t      return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n\t    }, name, value, arguments.length > 1);\n\t  }\n\t}); // Based off of the plugin by Clint Helfers, with permission.\n\t// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n\tjQuery.fn.delay = function (time, type) {\n\t  time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n\t  type = type || \"fx\";\n\t  return this.queue(type, function (next, hooks) {\n\t    var timeout = window.setTimeout(next, time);\n\n\t    hooks.stop = function () {\n\t      window.clearTimeout(timeout);\n\t    };\n\t  });\n\t};\n\n\t(function () {\n\t  var input = document$2.createElement(\"input\"),\n\t      select = document$2.createElement(\"select\"),\n\t      opt = select.appendChild(document$2.createElement(\"option\"));\n\t  input.type = \"checkbox\"; // Support: Android <=4.3 only\n\t  // Default value for a checkbox should be \"on\"\n\n\t  support.checkOn = input.value !== \"\"; // Support: IE <=11 only\n\t  // Must access selectedIndex to make default options select\n\n\t  support.optSelected = opt.selected; // Support: IE <=11 only\n\t  // An input loses its value after becoming a radio\n\n\t  input = document$2.createElement(\"input\");\n\t  input.value = \"t\";\n\t  input.type = \"radio\";\n\t  support.radioValue = input.value === \"t\";\n\t})();\n\n\tvar boolHook,\n\t    attrHandle = jQuery.expr.attrHandle;\n\tjQuery.fn.extend({\n\t  attr: function attr(name, value) {\n\t    return access(this, jQuery.attr, name, value, arguments.length > 1);\n\t  },\n\t  removeAttr: function removeAttr(name) {\n\t    return this.each(function () {\n\t      jQuery.removeAttr(this, name);\n\t    });\n\t  }\n\t});\n\tjQuery.extend({\n\t  attr: function attr(elem, name, value) {\n\t    var ret,\n\t        hooks,\n\t        nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes\n\n\t    if (nType === 3 || nType === 8 || nType === 2) {\n\t      return;\n\t    } // Fallback to prop when attributes are not supported\n\n\n\t    if (typeof elem.getAttribute === \"undefined\") {\n\t      return jQuery.prop(elem, name, value);\n\t    } // Attribute hooks are determined by the lowercase version\n\t    // Grab necessary hook if one is defined\n\n\n\t    if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n\t      hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n\t    }\n\n\t    if (value !== undefined) {\n\t      if (value === null) {\n\t        jQuery.removeAttr(elem, name);\n\t        return;\n\t      }\n\n\t      if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n\t        return ret;\n\t      }\n\n\t      elem.setAttribute(name, value + \"\");\n\t      return value;\n\t    }\n\n\t    if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n\t      return ret;\n\t    }\n\n\t    ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n\t    return ret == null ? undefined : ret;\n\t  },\n\t  attrHooks: {\n\t    type: {\n\t      set: function set(elem, value) {\n\t        if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n\t          var val = elem.value;\n\t          elem.setAttribute(\"type\", value);\n\n\t          if (val) {\n\t            elem.value = val;\n\t          }\n\n\t          return value;\n\t        }\n\t      }\n\t    }\n\t  },\n\t  removeAttr: function removeAttr(elem, value) {\n\t    var name,\n\t        i = 0,\n\t        // Attribute names can contain non-HTML whitespace characters\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t    attrNames = value && value.match(rnothtmlwhite);\n\n\t    if (attrNames && elem.nodeType === 1) {\n\t      while (name = attrNames[i++]) {\n\t        elem.removeAttribute(name);\n\t      }\n\t    }\n\t  }\n\t}); // Hooks for boolean attributes\n\n\tboolHook = {\n\t  set: function set(elem, value, name) {\n\t    if (value === false) {\n\t      // Remove boolean attributes when set to false\n\t      jQuery.removeAttr(elem, name);\n\t    } else {\n\t      elem.setAttribute(name, name);\n\t    }\n\n\t    return name;\n\t  }\n\t};\n\tjQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n\t  var getter = attrHandle[name] || jQuery.find.attr;\n\n\t  attrHandle[name] = function (elem, name, isXML) {\n\t    var ret,\n\t        handle,\n\t        lowercaseName = name.toLowerCase();\n\n\t    if (!isXML) {\n\t      // Avoid an infinite loop by temporarily removing this function from the getter\n\t      handle = attrHandle[lowercaseName];\n\t      attrHandle[lowercaseName] = ret;\n\t      ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n\t      attrHandle[lowercaseName] = handle;\n\t    }\n\n\t    return ret;\n\t  };\n\t});\n\tvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\t    rclickable = /^(?:a|area)$/i;\n\tjQuery.fn.extend({\n\t  prop: function prop(name, value) {\n\t    return access(this, jQuery.prop, name, value, arguments.length > 1);\n\t  },\n\t  removeProp: function removeProp(name) {\n\t    return this.each(function () {\n\t      delete this[jQuery.propFix[name] || name];\n\t    });\n\t  }\n\t});\n\tjQuery.extend({\n\t  prop: function prop(elem, name, value) {\n\t    var ret,\n\t        hooks,\n\t        nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n\t    if (nType === 3 || nType === 8 || nType === 2) {\n\t      return;\n\t    }\n\n\t    if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n\t      // Fix name and attach hooks\n\t      name = jQuery.propFix[name] || name;\n\t      hooks = jQuery.propHooks[name];\n\t    }\n\n\t    if (value !== undefined) {\n\t      if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n\t        return ret;\n\t      }\n\n\t      return elem[name] = value;\n\t    }\n\n\t    if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n\t      return ret;\n\t    }\n\n\t    return elem[name];\n\t  },\n\t  propHooks: {\n\t    tabIndex: {\n\t      get: function get(elem) {\n\t        // Support: IE <=9 - 11 only\n\t        // elem.tabIndex doesn't always return the\n\t        // correct value when it hasn't been explicitly set\n\t        // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t        // Use proper attribute retrieval(#12072)\n\t        var tabindex = jQuery.find.attr(elem, \"tabindex\");\n\n\t        if (tabindex) {\n\t          return parseInt(tabindex, 10);\n\t        }\n\n\t        if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n\t          return 0;\n\t        }\n\n\t        return -1;\n\t      }\n\t    }\n\t  },\n\t  propFix: {\n\t    \"for\": \"htmlFor\",\n\t    \"class\": \"className\"\n\t  }\n\t}); // Support: IE <=11 only\n\t// Accessing the selectedIndex property\n\t// forces the browser to respect setting selected\n\t// on the option\n\t// The getter ensures a default option is selected\n\t// when in an optgroup\n\t// eslint rule \"no-unused-expressions\" is disabled for this code\n\t// since it considers such accessions noop\n\n\tif (!support.optSelected) {\n\t  jQuery.propHooks.selected = {\n\t    get: function get(elem) {\n\t      /* eslint no-unused-expressions: \"off\" */\n\t      var parent = elem.parentNode;\n\n\t      if (parent && parent.parentNode) {\n\t        parent.parentNode.selectedIndex;\n\t      }\n\n\t      return null;\n\t    },\n\t    set: function set(elem) {\n\t      /* eslint no-unused-expressions: \"off\" */\n\t      var parent = elem.parentNode;\n\n\t      if (parent) {\n\t        parent.selectedIndex;\n\n\t        if (parent.parentNode) {\n\t          parent.parentNode.selectedIndex;\n\t        }\n\t      }\n\t    }\n\t  };\n\t}\n\n\tjQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n\t  jQuery.propFix[this.toLowerCase()] = this;\n\t}); // Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n\tfunction stripAndCollapse(value) {\n\t  var tokens = value.match(rnothtmlwhite) || [];\n\t  return tokens.join(\" \");\n\t}\n\n\tfunction getClass(elem) {\n\t  return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n\t}\n\n\tfunction classesToArray(value) {\n\t  if (Array.isArray(value)) {\n\t    return value;\n\t  }\n\n\t  if (typeof value === \"string\") {\n\t    return value.match(rnothtmlwhite) || [];\n\t  }\n\n\t  return [];\n\t}\n\n\tjQuery.fn.extend({\n\t  addClass: function addClass(value) {\n\t    var classes,\n\t        elem,\n\t        cur,\n\t        curValue,\n\t        clazz,\n\t        j,\n\t        finalValue,\n\t        i = 0;\n\n\t    if (isFunction(value)) {\n\t      return this.each(function (j) {\n\t        jQuery(this).addClass(value.call(this, j, getClass(this)));\n\t      });\n\t    }\n\n\t    classes = classesToArray(value);\n\n\t    if (classes.length) {\n\t      while (elem = this[i++]) {\n\t        curValue = getClass(elem);\n\t        cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n\t        if (cur) {\n\t          j = 0;\n\n\t          while (clazz = classes[j++]) {\n\t            if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n\t              cur += clazz + \" \";\n\t            }\n\t          } // Only assign if different to avoid unneeded rendering.\n\n\n\t          finalValue = stripAndCollapse(cur);\n\n\t          if (curValue !== finalValue) {\n\t            elem.setAttribute(\"class\", finalValue);\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    return this;\n\t  },\n\t  removeClass: function removeClass(value) {\n\t    var classes,\n\t        elem,\n\t        cur,\n\t        curValue,\n\t        clazz,\n\t        j,\n\t        finalValue,\n\t        i = 0;\n\n\t    if (isFunction(value)) {\n\t      return this.each(function (j) {\n\t        jQuery(this).removeClass(value.call(this, j, getClass(this)));\n\t      });\n\t    }\n\n\t    if (!arguments.length) {\n\t      return this.attr(\"class\", \"\");\n\t    }\n\n\t    classes = classesToArray(value);\n\n\t    if (classes.length) {\n\t      while (elem = this[i++]) {\n\t        curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n\t        cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n\t        if (cur) {\n\t          j = 0;\n\n\t          while (clazz = classes[j++]) {\n\t            // Remove *all* instances\n\t            while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n\t              cur = cur.replace(\" \" + clazz + \" \", \" \");\n\t            }\n\t          } // Only assign if different to avoid unneeded rendering.\n\n\n\t          finalValue = stripAndCollapse(cur);\n\n\t          if (curValue !== finalValue) {\n\t            elem.setAttribute(\"class\", finalValue);\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    return this;\n\t  },\n\t  toggleClass: function toggleClass(value, stateVal) {\n\t    var type = _typeof(value),\n\t        isValidValue = type === \"string\" || Array.isArray(value);\n\n\t    if (typeof stateVal === \"boolean\" && isValidValue) {\n\t      return stateVal ? this.addClass(value) : this.removeClass(value);\n\t    }\n\n\t    if (isFunction(value)) {\n\t      return this.each(function (i) {\n\t        jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n\t      });\n\t    }\n\n\t    return this.each(function () {\n\t      var className, i, self, classNames;\n\n\t      if (isValidValue) {\n\t        // Toggle individual class names\n\t        i = 0;\n\t        self = jQuery(this);\n\t        classNames = classesToArray(value);\n\n\t        while (className = classNames[i++]) {\n\t          // Check each className given, space separated list\n\t          if (self.hasClass(className)) {\n\t            self.removeClass(className);\n\t          } else {\n\t            self.addClass(className);\n\t          }\n\t        } // Toggle whole class name\n\n\t      } else if (value === undefined || type === \"boolean\") {\n\t        className = getClass(this);\n\n\t        if (className) {\n\t          // Store className if set\n\t          dataPriv.set(this, \"__className__\", className);\n\t        } // If the element has a class name or if we're passed `false`,\n\t        // then remove the whole classname (if there was one, the above saved it).\n\t        // Otherwise bring back whatever was previously saved (if anything),\n\t        // falling back to the empty string if nothing was stored.\n\n\n\t        if (this.setAttribute) {\n\t          this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n\t        }\n\t      }\n\t    });\n\t  },\n\t  hasClass: function hasClass(selector) {\n\t    var className,\n\t        elem,\n\t        i = 0;\n\t    className = \" \" + selector + \" \";\n\n\t    while (elem = this[i++]) {\n\t      if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n\t        return true;\n\t      }\n\t    }\n\n\t    return false;\n\t  }\n\t});\n\tvar rreturn = /\\r/g;\n\tjQuery.fn.extend({\n\t  val: function val(value) {\n\t    var hooks,\n\t        ret,\n\t        valueIsFunction,\n\t        elem = this[0];\n\n\t    if (!arguments.length) {\n\t      if (elem) {\n\t        hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n\t        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n\t          return ret;\n\t        }\n\n\t        ret = elem.value; // Handle most common string cases\n\n\t        if (typeof ret === \"string\") {\n\t          return ret.replace(rreturn, \"\");\n\t        } // Handle cases where value is null/undef or number\n\n\n\t        return ret == null ? \"\" : ret;\n\t      }\n\n\t      return;\n\t    }\n\n\t    valueIsFunction = isFunction(value);\n\t    return this.each(function (i) {\n\t      var val;\n\n\t      if (this.nodeType !== 1) {\n\t        return;\n\t      }\n\n\t      if (valueIsFunction) {\n\t        val = value.call(this, i, jQuery(this).val());\n\t      } else {\n\t        val = value;\n\t      } // Treat null/undefined as \"\"; convert numbers to string\n\n\n\t      if (val == null) {\n\t        val = \"\";\n\t      } else if (typeof val === \"number\") {\n\t        val += \"\";\n\t      } else if (Array.isArray(val)) {\n\t        val = jQuery.map(val, function (value) {\n\t          return value == null ? \"\" : value + \"\";\n\t        });\n\t      }\n\n\t      hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n\t      if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n\t        this.value = val;\n\t      }\n\t    });\n\t  }\n\t});\n\tjQuery.extend({\n\t  valHooks: {\n\t    option: {\n\t      get: function get(elem) {\n\t        var val = jQuery.find.attr(elem, \"value\");\n\t        return val != null ? val : // Support: IE <=10 - 11 only\n\t        // option.text throws exceptions (#14686, #14858)\n\t        // Strip and collapse whitespace\n\t        // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t        stripAndCollapse(jQuery.text(elem));\n\t      }\n\t    },\n\t    select: {\n\t      get: function get(elem) {\n\t        var value,\n\t            option,\n\t            i,\n\t            options = elem.options,\n\t            index = elem.selectedIndex,\n\t            one = elem.type === \"select-one\",\n\t            values = one ? null : [],\n\t            max = one ? index + 1 : options.length;\n\n\t        if (index < 0) {\n\t          i = max;\n\t        } else {\n\t          i = one ? index : 0;\n\t        } // Loop through all the selected options\n\n\n\t        for (; i < max; i++) {\n\t          option = options[i]; // Support: IE <=9 only\n\t          // IE8-9 doesn't update selected after form reset (#2551)\n\n\t          if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n\t          !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n\t            // Get the specific value for the option\n\t            value = jQuery(option).val(); // We don't need an array for one selects\n\n\t            if (one) {\n\t              return value;\n\t            } // Multi-Selects return an array\n\n\n\t            values.push(value);\n\t          }\n\t        }\n\n\t        return values;\n\t      },\n\t      set: function set(elem, value) {\n\t        var optionSet,\n\t            option,\n\t            options = elem.options,\n\t            values = jQuery.makeArray(value),\n\t            i = options.length;\n\n\t        while (i--) {\n\t          option = options[i];\n\t          /* eslint-disable no-cond-assign */\n\n\t          if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n\t            optionSet = true;\n\t          }\n\t          /* eslint-enable no-cond-assign */\n\n\t        } // Force browsers to behave consistently when non-matching value is set\n\n\n\t        if (!optionSet) {\n\t          elem.selectedIndex = -1;\n\t        }\n\n\t        return values;\n\t      }\n\t    }\n\t  }\n\t}); // Radios and checkboxes getter/setter\n\n\tjQuery.each([\"radio\", \"checkbox\"], function () {\n\t  jQuery.valHooks[this] = {\n\t    set: function set(elem, value) {\n\t      if (Array.isArray(value)) {\n\t        return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n\t      }\n\t    }\n\t  };\n\n\t  if (!support.checkOn) {\n\t    jQuery.valHooks[this].get = function (elem) {\n\t      return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t    };\n\t  }\n\t}); // Return jQuery for attributes-only inclusion\n\n\tsupport.focusin = \"onfocusin\" in window;\n\n\tvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\t    stopPropagationCallback = function stopPropagationCallback(e) {\n\t  e.stopPropagation();\n\t};\n\n\tjQuery.extend(jQuery.event, {\n\t  trigger: function trigger(event, data, elem, onlyHandlers) {\n\t    var i,\n\t        cur,\n\t        tmp,\n\t        bubbleType,\n\t        ontype,\n\t        handle,\n\t        special,\n\t        lastElement,\n\t        eventPath = [elem || document$2],\n\t        type = hasOwn.call(event, \"type\") ? event.type : event,\n\t        namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n\t    cur = lastElement = tmp = elem = elem || document$2; // Don't do events on text and comment nodes\n\n\t    if (elem.nodeType === 3 || elem.nodeType === 8) {\n\t      return;\n\t    } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n\t    if (rfocusMorph.test(type + jQuery.event.triggered)) {\n\t      return;\n\t    }\n\n\t    if (type.indexOf(\".\") > -1) {\n\t      // Namespaced trigger; create a regexp to match event type in handle()\n\t      namespaces = type.split(\".\");\n\t      type = namespaces.shift();\n\t      namespaces.sort();\n\t    }\n\n\t    ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n\t    event = event[jQuery.expando] ? event : new jQuery.Event(type, _typeof(event) === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n\t    event.isTrigger = onlyHandlers ? 2 : 3;\n\t    event.namespace = namespaces.join(\".\");\n\t    event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n\t    event.result = undefined;\n\n\t    if (!event.target) {\n\t      event.target = elem;\n\t    } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n\t    data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n\t    special = jQuery.event.special[type] || {};\n\n\t    if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n\t      return;\n\t    } // Determine event propagation path in advance, per W3C events spec (#9951)\n\t    // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n\t    if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n\t      bubbleType = special.delegateType || type;\n\n\t      if (!rfocusMorph.test(bubbleType + type)) {\n\t        cur = cur.parentNode;\n\t      }\n\n\t      for (; cur; cur = cur.parentNode) {\n\t        eventPath.push(cur);\n\t        tmp = cur;\n\t      } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n\t      if (tmp === (elem.ownerDocument || document$2)) {\n\t        eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n\t      }\n\t    } // Fire handlers on the event path\n\n\n\t    i = 0;\n\n\t    while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n\t      lastElement = cur;\n\t      event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n\t      handle = (dataPriv.get(cur, \"events\") || {})[event.type] && dataPriv.get(cur, \"handle\");\n\n\t      if (handle) {\n\t        handle.apply(cur, data);\n\t      } // Native handler\n\n\n\t      handle = ontype && cur[ontype];\n\n\t      if (handle && handle.apply && acceptData(cur)) {\n\t        event.result = handle.apply(cur, data);\n\n\t        if (event.result === false) {\n\t          event.preventDefault();\n\t        }\n\t      }\n\t    }\n\n\t    event.type = type; // If nobody prevented the default action, do it now\n\n\t    if (!onlyHandlers && !event.isDefaultPrevented()) {\n\t      if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n\t        // Call a native DOM method on the target with the same name as the event.\n\t        // Don't do default actions on window, that's where global variables be (#6170)\n\t        if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n\t          // Don't re-trigger an onFOO event when we call its FOO() method\n\t          tmp = elem[ontype];\n\n\t          if (tmp) {\n\t            elem[ontype] = null;\n\t          } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n\t          jQuery.event.triggered = type;\n\n\t          if (event.isPropagationStopped()) {\n\t            lastElement.addEventListener(type, stopPropagationCallback);\n\t          }\n\n\t          elem[type]();\n\n\t          if (event.isPropagationStopped()) {\n\t            lastElement.removeEventListener(type, stopPropagationCallback);\n\t          }\n\n\t          jQuery.event.triggered = undefined;\n\n\t          if (tmp) {\n\t            elem[ontype] = tmp;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    return event.result;\n\t  },\n\t  // Piggyback on a donor event to simulate a different one\n\t  // Used only for `focus(in | out)` events\n\t  simulate: function simulate(type, elem, event) {\n\t    var e = jQuery.extend(new jQuery.Event(), event, {\n\t      type: type,\n\t      isSimulated: true\n\t    });\n\t    jQuery.event.trigger(e, null, elem);\n\t  }\n\t});\n\tjQuery.fn.extend({\n\t  trigger: function trigger(type, data) {\n\t    return this.each(function () {\n\t      jQuery.event.trigger(type, data, this);\n\t    });\n\t  },\n\t  triggerHandler: function triggerHandler(type, data) {\n\t    var elem = this[0];\n\n\t    if (elem) {\n\t      return jQuery.event.trigger(type, data, elem, true);\n\t    }\n\t  }\n\t}); // Support: Firefox <=44\n\t// Firefox doesn't have focus(in | out) events\n\t// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n\t//\n\t// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n\t// focus(in | out) events fire after focus & blur events,\n\t// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n\t// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n\tif (!support.focusin) {\n\t  jQuery.each({\n\t    focus: \"focusin\",\n\t    blur: \"focusout\"\n\t  }, function (orig, fix) {\n\t    // Attach a single capturing handler on the document while someone wants focusin/focusout\n\t    var handler = function handler(event) {\n\t      jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n\t    };\n\n\t    jQuery.event.special[fix] = {\n\t      setup: function setup() {\n\t        var doc = this.ownerDocument || this,\n\t            attaches = dataPriv.access(doc, fix);\n\n\t        if (!attaches) {\n\t          doc.addEventListener(orig, handler, true);\n\t        }\n\n\t        dataPriv.access(doc, fix, (attaches || 0) + 1);\n\t      },\n\t      teardown: function teardown() {\n\t        var doc = this.ownerDocument || this,\n\t            attaches = dataPriv.access(doc, fix) - 1;\n\n\t        if (!attaches) {\n\t          doc.removeEventListener(orig, handler, true);\n\t          dataPriv.remove(doc, fix);\n\t        } else {\n\t          dataPriv.access(doc, fix, attaches);\n\t        }\n\t      }\n\t    };\n\t  });\n\t}\n\n\tvar rbracket = /\\[\\]$/,\n\t    rCRLF = /\\r?\\n/g,\n\t    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\t    rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n\tfunction buildParams(prefix, obj, traditional, add) {\n\t  var name;\n\n\t  if (Array.isArray(obj)) {\n\t    // Serialize array item.\n\t    jQuery.each(obj, function (i, v) {\n\t      if (traditional || rbracket.test(prefix)) {\n\t        // Treat each array item as a scalar.\n\t        add(prefix, v);\n\t      } else {\n\t        // Item is non-scalar (array or object), encode its numeric index.\n\t        buildParams(prefix + \"[\" + (_typeof(v) === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n\t      }\n\t    });\n\t  } else if (!traditional && toType(obj) === \"object\") {\n\t    // Serialize object item.\n\t    for (name in obj) {\n\t      buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n\t    }\n\t  } else {\n\t    // Serialize scalar item.\n\t    add(prefix, obj);\n\t  }\n\t} // Serialize an array of form elements or a set of\n\t// key/values into a query string\n\n\n\tjQuery.param = function (a, traditional) {\n\t  var prefix,\n\t      s = [],\n\t      add = function add(key, valueOrFunction) {\n\t    // If value is a function, invoke it and use its return value\n\t    var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n\t    s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n\t  }; // If an array was passed in, assume that it is an array of form elements.\n\n\n\t  if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n\t    // Serialize the form elements\n\t    jQuery.each(a, function () {\n\t      add(this.name, this.value);\n\t    });\n\t  } else {\n\t    // If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t    // did it), otherwise encode params recursively.\n\t    for (prefix in a) {\n\t      buildParams(prefix, a[prefix], traditional, add);\n\t    }\n\t  } // Return the resulting serialization\n\n\n\t  return s.join(\"&\");\n\t};\n\n\tjQuery.fn.extend({\n\t  serialize: function serialize() {\n\t    return jQuery.param(this.serializeArray());\n\t  },\n\t  serializeArray: function serializeArray() {\n\t    return this.map(function () {\n\t      // Can add propHook for \"elements\" to filter or add form elements\n\t      var elements = jQuery.prop(this, \"elements\");\n\t      return elements ? jQuery.makeArray(elements) : this;\n\t    }).filter(function () {\n\t      var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n\t      return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n\t    }).map(function (i, elem) {\n\t      var val = jQuery(this).val();\n\n\t      if (val == null) {\n\t        return null;\n\t      }\n\n\t      if (Array.isArray(val)) {\n\t        return jQuery.map(val, function (val) {\n\t          return {\n\t            name: elem.name,\n\t            value: val.replace(rCRLF, \"\\r\\n\")\n\t          };\n\t        });\n\t      }\n\n\t      return {\n\t        name: elem.name,\n\t        value: val.replace(rCRLF, \"\\r\\n\")\n\t      };\n\t    }).get();\n\t  }\n\t});\n\tjQuery.fn.extend({\n\t  wrapAll: function wrapAll(html) {\n\t    var wrap;\n\n\t    if (this[0]) {\n\t      if (isFunction(html)) {\n\t        html = html.call(this[0]);\n\t      } // The elements to wrap the target around\n\n\n\t      wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n\t      if (this[0].parentNode) {\n\t        wrap.insertBefore(this[0]);\n\t      }\n\n\t      wrap.map(function () {\n\t        var elem = this;\n\n\t        while (elem.firstElementChild) {\n\t          elem = elem.firstElementChild;\n\t        }\n\n\t        return elem;\n\t      }).append(this);\n\t    }\n\n\t    return this;\n\t  },\n\t  wrapInner: function wrapInner(html) {\n\t    if (isFunction(html)) {\n\t      return this.each(function (i) {\n\t        jQuery(this).wrapInner(html.call(this, i));\n\t      });\n\t    }\n\n\t    return this.each(function () {\n\t      var self = jQuery(this),\n\t          contents = self.contents();\n\n\t      if (contents.length) {\n\t        contents.wrapAll(html);\n\t      } else {\n\t        self.append(html);\n\t      }\n\t    });\n\t  },\n\t  wrap: function wrap(html) {\n\t    var htmlIsFunction = isFunction(html);\n\t    return this.each(function (i) {\n\t      jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n\t    });\n\t  },\n\t  unwrap: function unwrap(selector) {\n\t    this.parent(selector).not(\"body\").each(function () {\n\t      jQuery(this).replaceWith(this.childNodes);\n\t    });\n\t    return this;\n\t  }\n\t});\n\n\tjQuery.expr.pseudos.hidden = function (elem) {\n\t  return !jQuery.expr.pseudos.visible(elem);\n\t};\n\n\tjQuery.expr.pseudos.visible = function (elem) {\n\t  return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n\t}; // Support: Safari 8 only\n\t// In Safari 8 documents created via document.implementation.createHTMLDocument\n\t// collapse sibling forms: the second one becomes a child of the first one.\n\t// Because of that, this security measure has to be disabled in Safari 8.\n\t// https://bugs.webkit.org/show_bug.cgi?id=137337\n\n\n\tsupport.createHTMLDocument = function () {\n\t  var body = document$2.implementation.createHTMLDocument(\"\").body;\n\t  body.innerHTML = \"<form></form><form></form>\";\n\t  return body.childNodes.length === 2;\n\t}(); // Argument \"data\" should be string of html\n\t// context (optional): If specified, the fragment will be created in this context,\n\t// defaults to document\n\t// keepScripts (optional): If true, will include scripts passed in the html string\n\n\n\tjQuery.parseHTML = function (data, context, keepScripts) {\n\t  if (typeof data !== \"string\") {\n\t    return [];\n\t  }\n\n\t  if (typeof context === \"boolean\") {\n\t    keepScripts = context;\n\t    context = false;\n\t  }\n\n\t  var base, parsed, scripts;\n\n\t  if (!context) {\n\t    // Stop scripts or inline event handlers from being executed immediately\n\t    // by using document.implementation\n\t    if (support.createHTMLDocument) {\n\t      context = document$2.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n\t      // so any parsed elements with URLs\n\t      // are based on the document's URL (gh-2965)\n\n\t      base = context.createElement(\"base\");\n\t      base.href = document$2.location.href;\n\t      context.head.appendChild(base);\n\t    } else {\n\t      context = document$2;\n\t    }\n\t  }\n\n\t  parsed = rsingleTag.exec(data);\n\t  scripts = !keepScripts && []; // Single tag\n\n\t  if (parsed) {\n\t    return [context.createElement(parsed[1])];\n\t  }\n\n\t  parsed = buildFragment([data], context, scripts);\n\n\t  if (scripts && scripts.length) {\n\t    jQuery(scripts).remove();\n\t  }\n\n\t  return jQuery.merge([], parsed.childNodes);\n\t};\n\n\tjQuery.offset = {\n\t  setOffset: function setOffset(elem, options, i) {\n\t    var curPosition,\n\t        curLeft,\n\t        curCSSTop,\n\t        curTop,\n\t        curOffset,\n\t        curCSSLeft,\n\t        calculatePosition,\n\t        position = jQuery.css(elem, \"position\"),\n\t        curElem = jQuery(elem),\n\t        props = {}; // Set position first, in-case top/left are set even on static elem\n\n\t    if (position === \"static\") {\n\t      elem.style.position = \"relative\";\n\t    }\n\n\t    curOffset = curElem.offset();\n\t    curCSSTop = jQuery.css(elem, \"top\");\n\t    curCSSLeft = jQuery.css(elem, \"left\");\n\t    calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n\t    // top or left is auto and position is either absolute or fixed\n\n\t    if (calculatePosition) {\n\t      curPosition = curElem.position();\n\t      curTop = curPosition.top;\n\t      curLeft = curPosition.left;\n\t    } else {\n\t      curTop = parseFloat(curCSSTop) || 0;\n\t      curLeft = parseFloat(curCSSLeft) || 0;\n\t    }\n\n\t    if (isFunction(options)) {\n\t      // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t      options = options.call(elem, i, jQuery.extend({}, curOffset));\n\t    }\n\n\t    if (options.top != null) {\n\t      props.top = options.top - curOffset.top + curTop;\n\t    }\n\n\t    if (options.left != null) {\n\t      props.left = options.left - curOffset.left + curLeft;\n\t    }\n\n\t    if (\"using\" in options) {\n\t      options.using.call(elem, props);\n\t    } else {\n\t      curElem.css(props);\n\t    }\n\t  }\n\t};\n\tjQuery.fn.extend({\n\t  // offset() relates an element's border box to the document origin\n\t  offset: function offset(options) {\n\t    // Preserve chaining for setter\n\t    if (arguments.length) {\n\t      return options === undefined ? this : this.each(function (i) {\n\t        jQuery.offset.setOffset(this, options, i);\n\t      });\n\t    }\n\n\t    var rect,\n\t        win,\n\t        elem = this[0];\n\n\t    if (!elem) {\n\t      return;\n\t    } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t    // Support: IE <=11 only\n\t    // Running getBoundingClientRect on a\n\t    // disconnected node in IE throws an error\n\n\n\t    if (!elem.getClientRects().length) {\n\t      return {\n\t        top: 0,\n\t        left: 0\n\t      };\n\t    } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n\t    rect = elem.getBoundingClientRect();\n\t    win = elem.ownerDocument.defaultView;\n\t    return {\n\t      top: rect.top + win.pageYOffset,\n\t      left: rect.left + win.pageXOffset\n\t    };\n\t  },\n\t  // position() relates an element's margin box to its offset parent's padding box\n\t  // This corresponds to the behavior of CSS absolute positioning\n\t  position: function position() {\n\t    if (!this[0]) {\n\t      return;\n\t    }\n\n\t    var offsetParent,\n\t        offset,\n\t        doc,\n\t        elem = this[0],\n\t        parentOffset = {\n\t      top: 0,\n\t      left: 0\n\t    }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n\t    if (jQuery.css(elem, \"position\") === \"fixed\") {\n\t      // Assume position:fixed implies availability of getBoundingClientRect\n\t      offset = elem.getBoundingClientRect();\n\t    } else {\n\t      offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n\t      // when a statically positioned element is identified\n\n\t      doc = elem.ownerDocument;\n\t      offsetParent = elem.offsetParent || doc.documentElement;\n\n\t      while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n\t        offsetParent = offsetParent.parentNode;\n\t      }\n\n\t      if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n\t        // Incorporate borders into its offset, since they are outside its content origin\n\t        parentOffset = jQuery(offsetParent).offset();\n\t        parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n\t        parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n\t      }\n\t    } // Subtract parent offsets and element margins\n\n\n\t    return {\n\t      top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n\t      left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n\t    };\n\t  },\n\t  // This method will return documentElement in the following cases:\n\t  // 1) For the element inside the iframe without offsetParent, this method will return\n\t  //    documentElement of the parent window\n\t  // 2) For the hidden or detached element\n\t  // 3) For body or html element, i.e. in case of the html node - it will return itself\n\t  //\n\t  // but those exceptions were never presented as a real life use-cases\n\t  // and might be considered as more preferable results.\n\t  //\n\t  // This logic, however, is not guaranteed and can change at any point in the future\n\t  offsetParent: function offsetParent() {\n\t    return this.map(function () {\n\t      var offsetParent = this.offsetParent;\n\n\t      while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n\t        offsetParent = offsetParent.offsetParent;\n\t      }\n\n\t      return offsetParent || documentElement;\n\t    });\n\t  }\n\t}); // Create scrollLeft and scrollTop methods\n\n\tjQuery.each({\n\t  scrollLeft: \"pageXOffset\",\n\t  scrollTop: \"pageYOffset\"\n\t}, function (method, prop) {\n\t  var top = \"pageYOffset\" === prop;\n\n\t  jQuery.fn[method] = function (val) {\n\t    return access(this, function (elem, method, val) {\n\t      // Coalesce documents and windows\n\t      var win;\n\n\t      if (isWindow(elem)) {\n\t        win = elem;\n\t      } else if (elem.nodeType === 9) {\n\t        win = elem.defaultView;\n\t      }\n\n\t      if (val === undefined) {\n\t        return win ? win[prop] : elem[method];\n\t      }\n\n\t      if (win) {\n\t        win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n\t      } else {\n\t        elem[method] = val;\n\t      }\n\t    }, method, val, arguments.length);\n\t  };\n\t}); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n\t// Add the top/left cssHooks using jQuery.fn.position\n\t// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n\t// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n\t// getComputedStyle returns percent when specified for top/left/bottom/right;\n\t// rather than make the css module depend on the offset module, just check for it here\n\n\tjQuery.each([\"top\", \"left\"], function (i, prop) {\n\t  jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n\t    if (computed) {\n\t      computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n\t      return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n\t    }\n\t  });\n\t}); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n\tjQuery.each({\n\t  Height: \"height\",\n\t  Width: \"width\"\n\t}, function (name, type) {\n\t  jQuery.each({\n\t    padding: \"inner\" + name,\n\t    content: type,\n\t    \"\": \"outer\" + name\n\t  }, function (defaultExtra, funcName) {\n\t    // Margin is only for outerHeight, outerWidth\n\t    jQuery.fn[funcName] = function (margin, value) {\n\t      var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n\t          extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n\t      return access(this, function (elem, type, value) {\n\t        var doc;\n\n\t        if (isWindow(elem)) {\n\t          // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t          return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n\t        } // Get document width or height\n\n\n\t        if (elem.nodeType === 9) {\n\t          doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t          // whichever is greatest\n\n\t          return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n\t        }\n\n\t        return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n\t        jQuery.css(elem, type, extra) : // Set width or height on the element\n\t        jQuery.style(elem, type, value, extra);\n\t      }, type, chainable ? margin : undefined, chainable);\n\t    };\n\t  });\n\t});\n\tjQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (i, name) {\n\t  // Handle event binding\n\t  jQuery.fn[name] = function (data, fn) {\n\t    return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n\t  };\n\t});\n\tjQuery.fn.extend({\n\t  hover: function hover(fnOver, fnOut) {\n\t    return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n\t  }\n\t});\n\tjQuery.fn.extend({\n\t  bind: function bind(types, data, fn) {\n\t    return this.on(types, null, data, fn);\n\t  },\n\t  unbind: function unbind(types, fn) {\n\t    return this.off(types, null, fn);\n\t  },\n\t  delegate: function delegate(selector, types, data, fn) {\n\t    return this.on(types, selector, data, fn);\n\t  },\n\t  undelegate: function undelegate(selector, types, fn) {\n\t    // ( namespace ) or ( selector, types [, fn] )\n\t    return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n\t  }\n\t}); // Bind a function to a context, optionally partially applying any\n\t// arguments.\n\t// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n\t// However, it is not slated for removal any time soon\n\n\tjQuery.proxy = function (fn, context) {\n\t  var tmp, args, proxy;\n\n\t  if (typeof context === \"string\") {\n\t    tmp = fn[context];\n\t    context = fn;\n\t    fn = tmp;\n\t  } // Quick check to determine if target is callable, in the spec\n\t  // this throws a TypeError, but we will just return undefined.\n\n\n\t  if (!isFunction(fn)) {\n\t    return undefined;\n\t  } // Simulated bind\n\n\n\t  args = _slice.call(arguments, 2);\n\n\t  proxy = function proxy() {\n\t    return fn.apply(context || this, args.concat(_slice.call(arguments)));\n\t  }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n\t  proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\t  return proxy;\n\t};\n\n\tjQuery.holdReady = function (hold) {\n\t  if (hold) {\n\t    jQuery.readyWait++;\n\t  } else {\n\t    jQuery.ready(true);\n\t  }\n\t};\n\n\tjQuery.isArray = Array.isArray;\n\tjQuery.parseJSON = JSON.parse;\n\tjQuery.nodeName = nodeName;\n\tjQuery.isFunction = isFunction;\n\tjQuery.isWindow = isWindow;\n\tjQuery.camelCase = camelCase;\n\tjQuery.type = toType;\n\tjQuery.now = Date.now;\n\n\tjQuery.isNumeric = function (obj) {\n\t  // As of jQuery 3.0, isNumeric is limited to\n\t  // strings and numbers (primitives or objects)\n\t  // that can be coerced to finite numbers (gh-2662)\n\t  var type = jQuery.type(obj);\n\t  return (type === \"number\" || type === \"string\") && // parseFloat NaNs numeric-cast false positives (\"\")\n\t  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t  // subtraction forces infinities to NaN\n\t  !isNaN(obj - parseFloat(obj));\n\t};\n\n\tvar $ = jQuery;\n\n\tvar nativeAssign = Object.assign;\n\tvar defineProperty$7 = Object.defineProperty; // `Object.assign` method\n\t// https://tc39.github.io/ecma262/#sec-object.assign\n\n\tvar objectAssign = !nativeAssign || fails(function () {\n\t  // should have correct order of operations (Edge bug)\n\t  if (descriptors && nativeAssign({\n\t    b: 1\n\t  }, nativeAssign(defineProperty$7({}, 'a', {\n\t    enumerable: true,\n\t    get: function () {\n\t      defineProperty$7(this, 'b', {\n\t        value: 3,\n\t        enumerable: false\n\t      });\n\t    }\n\t  }), {\n\t    b: 2\n\t  })).b !== 1) return true; // should work with symbols and should have deterministic property order (V8 bug)\n\n\t  var A = {};\n\t  var B = {}; // eslint-disable-next-line no-undef\n\n\t  var symbol = Symbol();\n\t  var alphabet = 'abcdefghijklmnopqrst';\n\t  A[symbol] = 7;\n\t  alphabet.split('').forEach(function (chr) {\n\t    B[chr] = chr;\n\t  });\n\t  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n\t}) ? function assign(target, source) {\n\t  // eslint-disable-line no-unused-vars\n\t  var T = toObject(target);\n\t  var argumentsLength = arguments.length;\n\t  var index = 1;\n\t  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;\n\t  var propertyIsEnumerable = objectPropertyIsEnumerable.f;\n\n\t  while (argumentsLength > index) {\n\t    var S = indexedObject(arguments[index++]);\n\t    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n\t    var length = keys.length;\n\t    var j = 0;\n\t    var key;\n\n\t    while (length > j) {\n\t      key = keys[j++];\n\t      if (!descriptors || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n\t    }\n\t  }\n\n\t  return T;\n\t} : nativeAssign;\n\n\t// https://tc39.github.io/ecma262/#sec-object.assign\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: Object.assign !== objectAssign\n\t}, {\n\t  assign: objectAssign\n\t});\n\n\tvar nativeGetOwnPropertyNames$2 = objectGetOwnPropertyNamesExternal.f;\n\tvar FAILS_ON_PRIMITIVES$1 = fails(function () {\n\t  return !Object.getOwnPropertyNames(1);\n\t}); // `Object.getOwnPropertyNames` method\n\t// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: FAILS_ON_PRIMITIVES$1\n\t}, {\n\t  getOwnPropertyNames: nativeGetOwnPropertyNames$2\n\t});\n\n\tvar FAILS_ON_PRIMITIVES$2 = fails(function () {\n\t  objectKeys(1);\n\t}); // `Object.keys` method\n\t// https://tc39.github.io/ecma262/#sec-object.keys\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: FAILS_ON_PRIMITIVES$2\n\t}, {\n\t  keys: function keys(it) {\n\t    return objectKeys(toObject(it));\n\t  }\n\t});\n\n\tvar nativePromiseConstructor = global_1.Promise;\n\n\tvar redefineAll = function (target, src, options) {\n\t  for (var key in src) redefine(target, key, src[key], options);\n\n\t  return target;\n\t};\n\n\tvar anInstance = function (it, Constructor, name) {\n\t  if (!(it instanceof Constructor)) {\n\t    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n\t  }\n\n\t  return it;\n\t};\n\n\tvar ITERATOR$3 = wellKnownSymbol('iterator');\n\tvar ArrayPrototype$1 = Array.prototype; // check on default Array iterator\n\n\tvar isArrayIteratorMethod = function (it) {\n\t  return it !== undefined && (iterators.Array === it || ArrayPrototype$1[ITERATOR$3] === it);\n\t};\n\n\tvar ITERATOR$4 = wellKnownSymbol('iterator');\n\n\tvar getIteratorMethod = function (it) {\n\t  if (it != undefined) return it[ITERATOR$4] || it['@@iterator'] || iterators[classof(it)];\n\t};\n\n\tvar callWithSafeIterationClosing = function (iterator, fn, value, ENTRIES) {\n\t  try {\n\t    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)\n\t  } catch (error) {\n\t    var returnMethod = iterator['return'];\n\t    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n\t    throw error;\n\t  }\n\t};\n\n\tvar iterate_1 = createCommonjsModule(function (module) {\n\t  var Result = function (stopped, result) {\n\t    this.stopped = stopped;\n\t    this.result = result;\n\t  };\n\n\t  var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n\t    var boundFunction = functionBindContext(fn, that, AS_ENTRIES ? 2 : 1);\n\t    var iterator, iterFn, index, length, result, next, step;\n\n\t    if (IS_ITERATOR) {\n\t      iterator = iterable;\n\t    } else {\n\t      iterFn = getIteratorMethod(iterable);\n\t      if (typeof iterFn != 'function') throw TypeError('Target is not iterable'); // optimisation for array iterators\n\n\t      if (isArrayIteratorMethod(iterFn)) {\n\t        for (index = 0, length = toLength(iterable.length); length > index; index++) {\n\t          result = AS_ENTRIES ? boundFunction(anObject(step = iterable[index])[0], step[1]) : boundFunction(iterable[index]);\n\t          if (result && result instanceof Result) return result;\n\t        }\n\n\t        return new Result(false);\n\t      }\n\n\t      iterator = iterFn.call(iterable);\n\t    }\n\n\t    next = iterator.next;\n\n\t    while (!(step = next.call(iterator)).done) {\n\t      result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n\t      if (typeof result == 'object' && result && result instanceof Result) return result;\n\t    }\n\n\t    return new Result(false);\n\t  };\n\n\t  iterate.stop = function (result) {\n\t    return new Result(true, result);\n\t  };\n\t});\n\n\tvar ITERATOR$5 = wellKnownSymbol('iterator');\n\tvar SAFE_CLOSING = false;\n\n\ttry {\n\t  var called = 0;\n\t  var iteratorWithReturn = {\n\t    next: function () {\n\t      return {\n\t        done: !!called++\n\t      };\n\t    },\n\t    'return': function () {\n\t      SAFE_CLOSING = true;\n\t    }\n\t  };\n\n\t  iteratorWithReturn[ITERATOR$5] = function () {\n\t    return this;\n\t  }; // eslint-disable-next-line no-throw-literal\n\n\n\t  Array.from(iteratorWithReturn, function () {\n\t    throw 2;\n\t  });\n\t} catch (error) {\n\t  /* empty */\n\t}\n\n\tvar checkCorrectnessOfIteration = function (exec, SKIP_CLOSING) {\n\t  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n\t  var ITERATION_SUPPORT = false;\n\n\t  try {\n\t    var object = {};\n\n\t    object[ITERATOR$5] = function () {\n\t      return {\n\t        next: function () {\n\t          return {\n\t            done: ITERATION_SUPPORT = true\n\t          };\n\t        }\n\t      };\n\t    };\n\n\t    exec(object);\n\t  } catch (error) {\n\t    /* empty */\n\t  }\n\n\t  return ITERATION_SUPPORT;\n\t};\n\n\tvar engineIsIos = /(iphone|ipod|ipad).*applewebkit/i.test(engineUserAgent);\n\n\tvar location = global_1.location;\n\tvar set$1 = global_1.setImmediate;\n\tvar clear = global_1.clearImmediate;\n\tvar process$2 = global_1.process;\n\tvar MessageChannel$1 = global_1.MessageChannel;\n\tvar Dispatch = global_1.Dispatch;\n\tvar counter = 0;\n\tvar queue = {};\n\tvar ONREADYSTATECHANGE = 'onreadystatechange';\n\tvar defer, channel, port;\n\n\tvar run = function (id) {\n\t  // eslint-disable-next-line no-prototype-builtins\n\t  if (queue.hasOwnProperty(id)) {\n\t    var fn = queue[id];\n\t    delete queue[id];\n\t    fn();\n\t  }\n\t};\n\n\tvar runner = function (id) {\n\t  return function () {\n\t    run(id);\n\t  };\n\t};\n\n\tvar listener = function (event) {\n\t  run(event.data);\n\t};\n\n\tvar post = function (id) {\n\t  // old engines have not location.origin\n\t  global_1.postMessage(id + '', location.protocol + '//' + location.host);\n\t}; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:\n\n\n\tif (!set$1 || !clear) {\n\t  set$1 = function setImmediate(fn) {\n\t    var args = [];\n\t    var i = 1;\n\n\t    while (arguments.length > i) args.push(arguments[i++]);\n\n\t    queue[++counter] = function () {\n\t      // eslint-disable-next-line no-new-func\n\t      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n\t    };\n\n\t    defer(counter);\n\t    return counter;\n\t  };\n\n\t  clear = function clearImmediate(id) {\n\t    delete queue[id];\n\t  }; // Node.js 0.8-\n\n\n\t  if (classofRaw(process$2) == 'process') {\n\t    defer = function (id) {\n\t      process$2.nextTick(runner(id));\n\t    }; // Sphere (JS game engine) Dispatch API\n\n\t  } else if (Dispatch && Dispatch.now) {\n\t    defer = function (id) {\n\t      Dispatch.now(runner(id));\n\t    }; // Browsers with MessageChannel, includes WebWorkers\n\t    // except iOS - https://github.com/zloirock/core-js/issues/624\n\n\t  } else if (MessageChannel$1 && !engineIsIos) {\n\t    channel = new MessageChannel$1();\n\t    port = channel.port2;\n\t    channel.port1.onmessage = listener;\n\t    defer = functionBindContext(port.postMessage, port, 1); // Browsers with postMessage, skip WebWorkers\n\t    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n\t  } else if (global_1.addEventListener && typeof postMessage == 'function' && !global_1.importScripts && !fails(post)) {\n\t    defer = post;\n\t    global_1.addEventListener('message', listener, false); // IE8-\n\t  } else if (ONREADYSTATECHANGE in documentCreateElement('script')) {\n\t    defer = function (id) {\n\t      html.appendChild(documentCreateElement('script'))[ONREADYSTATECHANGE] = function () {\n\t        html.removeChild(this);\n\t        run(id);\n\t      };\n\t    }; // Rest old browsers\n\n\t  } else {\n\t    defer = function (id) {\n\t      setTimeout(runner(id), 0);\n\t    };\n\t  }\n\t}\n\n\tvar task = {\n\t  set: set$1,\n\t  clear: clear\n\t};\n\n\tvar getOwnPropertyDescriptor$4 = objectGetOwnPropertyDescriptor.f;\n\tvar macrotask = task.set;\n\tvar MutationObserver = global_1.MutationObserver || global_1.WebKitMutationObserver;\n\tvar process$3 = global_1.process;\n\tvar Promise$1 = global_1.Promise;\n\tvar IS_NODE = classofRaw(process$3) == 'process'; // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\n\n\tvar queueMicrotaskDescriptor = getOwnPropertyDescriptor$4(global_1, 'queueMicrotask');\n\tvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\tvar flush, head, last, notify, toggle, node, promise, then; // modern engines have queueMicrotask method\n\n\tif (!queueMicrotask) {\n\t  flush = function () {\n\t    var parent, fn;\n\t    if (IS_NODE && (parent = process$3.domain)) parent.exit();\n\n\t    while (head) {\n\t      fn = head.fn;\n\t      head = head.next;\n\n\t      try {\n\t        fn();\n\t      } catch (error) {\n\t        if (head) notify();else last = undefined;\n\t        throw error;\n\t      }\n\t    }\n\n\t    last = undefined;\n\t    if (parent) parent.enter();\n\t  }; // Node.js\n\n\n\t  if (IS_NODE) {\n\t    notify = function () {\n\t      process$3.nextTick(flush);\n\t    }; // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n\n\t  } else if (MutationObserver && !engineIsIos) {\n\t    toggle = true;\n\t    node = document.createTextNode('');\n\t    new MutationObserver(flush).observe(node, {\n\t      characterData: true\n\t    });\n\n\t    notify = function () {\n\t      node.data = toggle = !toggle;\n\t    }; // environments with maybe non-completely correct, but existent Promise\n\n\t  } else if (Promise$1 && Promise$1.resolve) {\n\t    // Promise.resolve without an argument throws an error in LG WebOS 2\n\t    promise = Promise$1.resolve(undefined);\n\t    then = promise.then;\n\n\t    notify = function () {\n\t      then.call(promise, flush);\n\t    }; // for other environments - macrotask based on:\n\t    // - setImmediate\n\t    // - MessageChannel\n\t    // - window.postMessag\n\t    // - onreadystatechange\n\t    // - setTimeout\n\n\t  } else {\n\t    notify = function () {\n\t      // strange IE + webpack dev server bug - use .call(global)\n\t      macrotask.call(global_1, flush);\n\t    };\n\t  }\n\t}\n\n\tvar microtask = queueMicrotask || function (fn) {\n\t  var task = {\n\t    fn: fn,\n\t    next: undefined\n\t  };\n\t  if (last) last.next = task;\n\n\t  if (!head) {\n\t    head = task;\n\t    notify();\n\t  }\n\n\t  last = task;\n\t};\n\n\tvar PromiseCapability = function (C) {\n\t  var resolve, reject;\n\t  this.promise = new C(function ($$resolve, $$reject) {\n\t    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n\t    resolve = $$resolve;\n\t    reject = $$reject;\n\t  });\n\t  this.resolve = aFunction$1(resolve);\n\t  this.reject = aFunction$1(reject);\n\t}; // 25.4.1.5 NewPromiseCapability(C)\n\n\n\tvar f$7 = function (C) {\n\t  return new PromiseCapability(C);\n\t};\n\n\tvar newPromiseCapability = {\n\t  f: f$7\n\t};\n\n\tvar promiseResolve = function (C, x) {\n\t  anObject(C);\n\t  if (isObject(x) && x.constructor === C) return x;\n\t  var promiseCapability = newPromiseCapability.f(C);\n\t  var resolve = promiseCapability.resolve;\n\t  resolve(x);\n\t  return promiseCapability.promise;\n\t};\n\n\tvar hostReportErrors = function (a, b) {\n\t  var console = global_1.console;\n\n\t  if (console && console.error) {\n\t    arguments.length === 1 ? console.error(a) : console.error(a, b);\n\t  }\n\t};\n\n\tvar perform = function (exec) {\n\t  try {\n\t    return {\n\t      error: false,\n\t      value: exec()\n\t    };\n\t  } catch (error) {\n\t    return {\n\t      error: true,\n\t      value: error\n\t    };\n\t  }\n\t};\n\n\tvar task$1 = task.set;\n\tvar SPECIES$6 = wellKnownSymbol('species');\n\tvar PROMISE = 'Promise';\n\tvar getInternalState$3 = internalState.get;\n\tvar setInternalState$4 = internalState.set;\n\tvar getInternalPromiseState = internalState.getterFor(PROMISE);\n\tvar PromiseConstructor = nativePromiseConstructor;\n\tvar TypeError$1 = global_1.TypeError;\n\tvar document$3 = global_1.document;\n\tvar process$4 = global_1.process;\n\tvar $fetch = getBuiltIn('fetch');\n\tvar newPromiseCapability$1 = newPromiseCapability.f;\n\tvar newGenericPromiseCapability = newPromiseCapability$1;\n\tvar IS_NODE$1 = classofRaw(process$4) == 'process';\n\tvar DISPATCH_EVENT = !!(document$3 && document$3.createEvent && global_1.dispatchEvent);\n\tvar UNHANDLED_REJECTION = 'unhandledrejection';\n\tvar REJECTION_HANDLED = 'rejectionhandled';\n\tvar PENDING = 0;\n\tvar FULFILLED = 1;\n\tvar REJECTED = 2;\n\tvar HANDLED = 1;\n\tvar UNHANDLED = 2;\n\tvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\tvar FORCED$3 = isForced_1(PROMISE, function () {\n\t  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);\n\n\t  if (!GLOBAL_CORE_JS_PROMISE) {\n\t    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n\t    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n\t    // We can't detect it synchronously, so just check versions\n\t    if (engineV8Version === 66) return true; // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n\n\t    if (!IS_NODE$1 && typeof PromiseRejectionEvent != 'function') return true;\n\t  } // We need Promise#finally in the pure version for preventing prototype pollution\n\t  // deoptimization and performance degradation\n\t  // https://github.com/zloirock/core-js/issues/679\n\n\t  if (engineV8Version >= 51 && /native code/.test(PromiseConstructor)) return false; // Detect correctness of subclassing with @@species support\n\n\t  var promise = PromiseConstructor.resolve(1);\n\n\t  var FakePromise = function (exec) {\n\t    exec(function () {\n\t      /* empty */\n\t    }, function () {\n\t      /* empty */\n\t    });\n\t  };\n\n\t  var constructor = promise.constructor = {};\n\t  constructor[SPECIES$6] = FakePromise;\n\t  return !(promise.then(function () {\n\t    /* empty */\n\t  }) instanceof FakePromise);\n\t});\n\tvar INCORRECT_ITERATION = FORCED$3 || !checkCorrectnessOfIteration(function (iterable) {\n\t  PromiseConstructor.all(iterable)['catch'](function () {\n\t    /* empty */\n\t  });\n\t}); // helpers\n\n\tvar isThenable = function (it) {\n\t  var then;\n\t  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n\t};\n\n\tvar notify$1 = function (promise, state, isReject) {\n\t  if (state.notified) return;\n\t  state.notified = true;\n\t  var chain = state.reactions;\n\t  microtask(function () {\n\t    var value = state.value;\n\t    var ok = state.state == FULFILLED;\n\t    var index = 0; // variable length - can't use forEach\n\n\t    while (chain.length > index) {\n\t      var reaction = chain[index++];\n\t      var handler = ok ? reaction.ok : reaction.fail;\n\t      var resolve = reaction.resolve;\n\t      var reject = reaction.reject;\n\t      var domain = reaction.domain;\n\t      var result, then, exited;\n\n\t      try {\n\t        if (handler) {\n\t          if (!ok) {\n\t            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);\n\t            state.rejection = HANDLED;\n\t          }\n\n\t          if (handler === true) result = value;else {\n\t            if (domain) domain.enter();\n\t            result = handler(value); // can throw\n\n\t            if (domain) {\n\t              domain.exit();\n\t              exited = true;\n\t            }\n\t          }\n\n\t          if (result === reaction.promise) {\n\t            reject(TypeError$1('Promise-chain cycle'));\n\t          } else if (then = isThenable(result)) {\n\t            then.call(result, resolve, reject);\n\t          } else resolve(result);\n\t        } else reject(value);\n\t      } catch (error) {\n\t        if (domain && !exited) domain.exit();\n\t        reject(error);\n\t      }\n\t    }\n\n\t    state.reactions = [];\n\t    state.notified = false;\n\t    if (isReject && !state.rejection) onUnhandled(promise, state);\n\t  });\n\t};\n\n\tvar dispatchEvent = function (name, promise, reason) {\n\t  var event, handler;\n\n\t  if (DISPATCH_EVENT) {\n\t    event = document$3.createEvent('Event');\n\t    event.promise = promise;\n\t    event.reason = reason;\n\t    event.initEvent(name, false, true);\n\t    global_1.dispatchEvent(event);\n\t  } else event = {\n\t    promise: promise,\n\t    reason: reason\n\t  };\n\n\t  if (handler = global_1['on' + name]) handler(event);else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n\t};\n\n\tvar onUnhandled = function (promise, state) {\n\t  task$1.call(global_1, function () {\n\t    var value = state.value;\n\t    var IS_UNHANDLED = isUnhandled(state);\n\t    var result;\n\n\t    if (IS_UNHANDLED) {\n\t      result = perform(function () {\n\t        if (IS_NODE$1) {\n\t          process$4.emit('unhandledRejection', value, promise);\n\t        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n\t      }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n\n\t      state.rejection = IS_NODE$1 || isUnhandled(state) ? UNHANDLED : HANDLED;\n\t      if (result.error) throw result.value;\n\t    }\n\t  });\n\t};\n\n\tvar isUnhandled = function (state) {\n\t  return state.rejection !== HANDLED && !state.parent;\n\t};\n\n\tvar onHandleUnhandled = function (promise, state) {\n\t  task$1.call(global_1, function () {\n\t    if (IS_NODE$1) {\n\t      process$4.emit('rejectionHandled', promise);\n\t    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n\t  });\n\t};\n\n\tvar bind = function (fn, promise, state, unwrap) {\n\t  return function (value) {\n\t    fn(promise, state, value, unwrap);\n\t  };\n\t};\n\n\tvar internalReject = function (promise, state, value, unwrap) {\n\t  if (state.done) return;\n\t  state.done = true;\n\t  if (unwrap) state = unwrap;\n\t  state.value = value;\n\t  state.state = REJECTED;\n\t  notify$1(promise, state, true);\n\t};\n\n\tvar internalResolve = function (promise, state, value, unwrap) {\n\t  if (state.done) return;\n\t  state.done = true;\n\t  if (unwrap) state = unwrap;\n\n\t  try {\n\t    if (promise === value) throw TypeError$1(\"Promise can't be resolved itself\");\n\t    var then = isThenable(value);\n\n\t    if (then) {\n\t      microtask(function () {\n\t        var wrapper = {\n\t          done: false\n\t        };\n\n\t        try {\n\t          then.call(value, bind(internalResolve, promise, wrapper, state), bind(internalReject, promise, wrapper, state));\n\t        } catch (error) {\n\t          internalReject(promise, wrapper, error, state);\n\t        }\n\t      });\n\t    } else {\n\t      state.value = value;\n\t      state.state = FULFILLED;\n\t      notify$1(promise, state, false);\n\t    }\n\t  } catch (error) {\n\t    internalReject(promise, {\n\t      done: false\n\t    }, error, state);\n\t  }\n\t}; // constructor polyfill\n\n\n\tif (FORCED$3) {\n\t  // 25.4.3.1 Promise(executor)\n\t  PromiseConstructor = function Promise(executor) {\n\t    anInstance(this, PromiseConstructor, PROMISE);\n\t    aFunction$1(executor);\n\t    Internal.call(this);\n\t    var state = getInternalState$3(this);\n\n\t    try {\n\t      executor(bind(internalResolve, this, state), bind(internalReject, this, state));\n\t    } catch (error) {\n\t      internalReject(this, state, error);\n\t    }\n\t  }; // eslint-disable-next-line no-unused-vars\n\n\n\t  Internal = function Promise(executor) {\n\t    setInternalState$4(this, {\n\t      type: PROMISE,\n\t      done: false,\n\t      notified: false,\n\t      parent: false,\n\t      reactions: [],\n\t      rejection: false,\n\t      state: PENDING,\n\t      value: undefined\n\t    });\n\t  };\n\n\t  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n\t    // `Promise.prototype.then` method\n\t    // https://tc39.github.io/ecma262/#sec-promise.prototype.then\n\t    then: function then(onFulfilled, onRejected) {\n\t      var state = getInternalPromiseState(this);\n\t      var reaction = newPromiseCapability$1(speciesConstructor(this, PromiseConstructor));\n\t      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n\t      reaction.fail = typeof onRejected == 'function' && onRejected;\n\t      reaction.domain = IS_NODE$1 ? process$4.domain : undefined;\n\t      state.parent = true;\n\t      state.reactions.push(reaction);\n\t      if (state.state != PENDING) notify$1(this, state, false);\n\t      return reaction.promise;\n\t    },\n\t    // `Promise.prototype.catch` method\n\t    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch\n\t    'catch': function (onRejected) {\n\t      return this.then(undefined, onRejected);\n\t    }\n\t  });\n\n\t  OwnPromiseCapability = function () {\n\t    var promise = new Internal();\n\t    var state = getInternalState$3(promise);\n\t    this.promise = promise;\n\t    this.resolve = bind(internalResolve, promise, state);\n\t    this.reject = bind(internalReject, promise, state);\n\t  };\n\n\t  newPromiseCapability.f = newPromiseCapability$1 = function (C) {\n\t    return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n\t  };\n\n\t  if ( typeof nativePromiseConstructor == 'function') {\n\t    nativeThen = nativePromiseConstructor.prototype.then; // wrap native Promise#then for native async functions\n\n\t    redefine(nativePromiseConstructor.prototype, 'then', function then(onFulfilled, onRejected) {\n\t      var that = this;\n\t      return new PromiseConstructor(function (resolve, reject) {\n\t        nativeThen.call(that, resolve, reject);\n\t      }).then(onFulfilled, onRejected); // https://github.com/zloirock/core-js/issues/640\n\t    }, {\n\t      unsafe: true\n\t    }); // wrap fetch result\n\n\t    if (typeof $fetch == 'function') _export({\n\t      global: true,\n\t      enumerable: true,\n\t      forced: true\n\t    }, {\n\t      // eslint-disable-next-line no-unused-vars\n\t      fetch: function fetch(input\n\t      /* , init */\n\t      ) {\n\t        return promiseResolve(PromiseConstructor, $fetch.apply(global_1, arguments));\n\t      }\n\t    });\n\t  }\n\t}\n\n\t_export({\n\t  global: true,\n\t  wrap: true,\n\t  forced: FORCED$3\n\t}, {\n\t  Promise: PromiseConstructor\n\t});\n\tsetToStringTag(PromiseConstructor, PROMISE, false);\n\tsetSpecies(PROMISE);\n\tPromiseWrapper = getBuiltIn(PROMISE); // statics\n\n\t_export({\n\t  target: PROMISE,\n\t  stat: true,\n\t  forced: FORCED$3\n\t}, {\n\t  // `Promise.reject` method\n\t  // https://tc39.github.io/ecma262/#sec-promise.reject\n\t  reject: function reject(r) {\n\t    var capability = newPromiseCapability$1(this);\n\t    capability.reject.call(undefined, r);\n\t    return capability.promise;\n\t  }\n\t});\n\t_export({\n\t  target: PROMISE,\n\t  stat: true,\n\t  forced:  FORCED$3\n\t}, {\n\t  // `Promise.resolve` method\n\t  // https://tc39.github.io/ecma262/#sec-promise.resolve\n\t  resolve: function resolve(x) {\n\t    return promiseResolve( this, x);\n\t  }\n\t});\n\t_export({\n\t  target: PROMISE,\n\t  stat: true,\n\t  forced: INCORRECT_ITERATION\n\t}, {\n\t  // `Promise.all` method\n\t  // https://tc39.github.io/ecma262/#sec-promise.all\n\t  all: function all(iterable) {\n\t    var C = this;\n\t    var capability = newPromiseCapability$1(C);\n\t    var resolve = capability.resolve;\n\t    var reject = capability.reject;\n\t    var result = perform(function () {\n\t      var $promiseResolve = aFunction$1(C.resolve);\n\t      var values = [];\n\t      var counter = 0;\n\t      var remaining = 1;\n\t      iterate_1(iterable, function (promise) {\n\t        var index = counter++;\n\t        var alreadyCalled = false;\n\t        values.push(undefined);\n\t        remaining++;\n\t        $promiseResolve.call(C, promise).then(function (value) {\n\t          if (alreadyCalled) return;\n\t          alreadyCalled = true;\n\t          values[index] = value;\n\t          --remaining || resolve(values);\n\t        }, reject);\n\t      });\n\t      --remaining || resolve(values);\n\t    });\n\t    if (result.error) reject(result.value);\n\t    return capability.promise;\n\t  },\n\t  // `Promise.race` method\n\t  // https://tc39.github.io/ecma262/#sec-promise.race\n\t  race: function race(iterable) {\n\t    var C = this;\n\t    var capability = newPromiseCapability$1(C);\n\t    var reject = capability.reject;\n\t    var result = perform(function () {\n\t      var $promiseResolve = aFunction$1(C.resolve);\n\t      iterate_1(iterable, function (promise) {\n\t        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n\t      });\n\t    });\n\t    if (result.error) reject(result.value);\n\t    return capability.promise;\n\t  }\n\t});\n\n\tvar getOwnPropertyDescriptor$5 = objectGetOwnPropertyDescriptor.f;\n\tvar nativeStartsWith = ''.startsWith;\n\tvar min$7 = Math.min;\n\tvar CORRECT_IS_REGEXP_LOGIC$1 = correctIsRegexpLogic('startsWith'); // https://github.com/zloirock/core-js/pull/702\n\n\tvar MDN_POLYFILL_BUG$1 =  !CORRECT_IS_REGEXP_LOGIC$1 && !!function () {\n\t  var descriptor = getOwnPropertyDescriptor$5(String.prototype, 'startsWith');\n\t  return descriptor && !descriptor.writable;\n\t}(); // `String.prototype.startsWith` method\n\t// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n\n\t_export({\n\t  target: 'String',\n\t  proto: true,\n\t  forced: !MDN_POLYFILL_BUG$1 && !CORRECT_IS_REGEXP_LOGIC$1\n\t}, {\n\t  startsWith: function startsWith(searchString\n\t  /* , position = 0 */\n\t  ) {\n\t    var that = String(requireObjectCoercible(this));\n\t    notARegexp(searchString);\n\t    var index = toLength(min$7(arguments.length > 1 ? arguments[1] : undefined, that.length));\n\t    var search = String(searchString);\n\t    return nativeStartsWith ? nativeStartsWith.call(that, search, index) : that.slice(index, index + search.length) === search;\n\t  }\n\t});\n\n\tvar non = '\\u200B\\u0085\\u180E'; // check that a method works with the correct list\n\t// of whitespaces and has a correct name\n\n\tvar stringTrimForced = function (METHOD_NAME) {\n\t  return fails(function () {\n\t    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n\t  });\n\t};\n\n\tvar $trim = stringTrim.trim; // `String.prototype.trim` method\n\t// https://tc39.github.io/ecma262/#sec-string.prototype.trim\n\n\t_export({\n\t  target: 'String',\n\t  proto: true,\n\t  forced: stringTrimForced('trim')\n\t}, {\n\t  trim: function trim() {\n\t    return $trim(this);\n\t  }\n\t});\n\n\tvar ITERATOR$6 = wellKnownSymbol('iterator');\n\tvar nativeUrl = !fails(function () {\n\t  var url = new URL('b?a=1&b=2&c=3', 'http://a');\n\t  var searchParams = url.searchParams;\n\t  var result = '';\n\t  url.pathname = 'c%20d';\n\t  searchParams.forEach(function (value, key) {\n\t    searchParams['delete']('b');\n\t    result += key + value;\n\t  });\n\t  return isPure && !url.toJSON || !searchParams.sort || url.href !== 'http://a/c%20d?a=1&c=3' || searchParams.get('c') !== '3' || String(new URLSearchParams('?a=1')) !== 'a=1' || !searchParams[ITERATOR$6] // throws in Edge\n\t  || new URL('https://a@b').username !== 'a' || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b' // not punycoded in Edge\n\t  || new URL('http://тест').host !== 'xn--e1aybc' // not escaped in Chrome 62-\n\t  || new URL('http://a#б').hash !== '#%D0%B1' // fails in Chrome 66-\n\t  || result !== 'a1c3' // throws in Safari\n\t  || new URL('http://x', undefined).host !== 'x';\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-array.from\n\n\n\tvar arrayFrom = function from(arrayLike\n\t/* , mapfn = undefined, thisArg = undefined */\n\t) {\n\t  var O = toObject(arrayLike);\n\t  var C = typeof this == 'function' ? this : Array;\n\t  var argumentsLength = arguments.length;\n\t  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n\t  var mapping = mapfn !== undefined;\n\t  var iteratorMethod = getIteratorMethod(O);\n\t  var index = 0;\n\t  var length, result, step, iterator, next, value;\n\t  if (mapping) mapfn = functionBindContext(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2); // if the target is not iterable or it's an array with the default iterator - use a simple case\n\n\t  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n\t    iterator = iteratorMethod.call(O);\n\t    next = iterator.next;\n\t    result = new C();\n\n\t    for (; !(step = next.call(iterator)).done; index++) {\n\t      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n\t      createProperty(result, index, value);\n\t    }\n\t  } else {\n\t    length = toLength(O.length);\n\t    result = new C(length);\n\n\t    for (; length > index; index++) {\n\t      value = mapping ? mapfn(O[index], index) : O[index];\n\t      createProperty(result, index, value);\n\t    }\n\t  }\n\n\t  result.length = index;\n\t  return result;\n\t};\n\n\tvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n\tvar base = 36;\n\tvar tMin = 1;\n\tvar tMax = 26;\n\tvar skew = 38;\n\tvar damp = 700;\n\tvar initialBias = 72;\n\tvar initialN = 128; // 0x80\n\n\tvar delimiter = '-'; // '\\x2D'\n\n\tvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\n\n\tvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n\tvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\n\tvar baseMinusTMin = base - tMin;\n\tvar floor$2 = Math.floor;\n\tvar stringFromCharCode = String.fromCharCode;\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t */\n\n\tvar ucs2decode = function (string) {\n\t  var output = [];\n\t  var counter = 0;\n\t  var length = string.length;\n\n\t  while (counter < length) {\n\t    var value = string.charCodeAt(counter++);\n\n\t    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t      // It's a high surrogate, and there is a next character.\n\t      var extra = string.charCodeAt(counter++);\n\n\t      if ((extra & 0xFC00) == 0xDC00) {\n\t        // Low surrogate.\n\t        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t      } else {\n\t        // It's an unmatched surrogate; only append this code unit, in case the\n\t        // next code unit is the high surrogate of a surrogate pair.\n\t        output.push(value);\n\t        counter--;\n\t      }\n\t    } else {\n\t      output.push(value);\n\t    }\n\t  }\n\n\t  return output;\n\t};\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t */\n\n\n\tvar digitToBasic = function (digit) {\n\t  //  0..25 map to ASCII a..z or A..Z\n\t  // 26..35 map to ASCII 0..9\n\t  return digit + 22 + 75 * (digit < 26);\n\t};\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t */\n\n\n\tvar adapt = function (delta, numPoints, firstTime) {\n\t  var k = 0;\n\t  delta = firstTime ? floor$2(delta / damp) : delta >> 1;\n\t  delta += floor$2(delta / numPoints);\n\n\t  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t    delta = floor$2(delta / baseMinusTMin);\n\t  }\n\n\t  return floor$2(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t};\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t */\n\t// eslint-disable-next-line  max-statements\n\n\n\tvar encode = function (input) {\n\t  var output = []; // Convert the input in UCS-2 to an array of Unicode code points.\n\n\t  input = ucs2decode(input); // Cache the length.\n\n\t  var inputLength = input.length; // Initialize the state.\n\n\t  var n = initialN;\n\t  var delta = 0;\n\t  var bias = initialBias;\n\t  var i, currentValue; // Handle the basic code points.\n\n\t  for (i = 0; i < input.length; i++) {\n\t    currentValue = input[i];\n\n\t    if (currentValue < 0x80) {\n\t      output.push(stringFromCharCode(currentValue));\n\t    }\n\t  }\n\n\t  var basicLength = output.length; // number of basic code points.\n\n\t  var handledCPCount = basicLength; // number of code points that have been handled;\n\t  // Finish the basic string with a delimiter unless it's empty.\n\n\t  if (basicLength) {\n\t    output.push(delimiter);\n\t  } // Main encoding loop:\n\n\n\t  while (handledCPCount < inputLength) {\n\t    // All non-basic code points < n have been handled already. Find the next larger one:\n\t    var m = maxInt;\n\n\t    for (i = 0; i < input.length; i++) {\n\t      currentValue = input[i];\n\n\t      if (currentValue >= n && currentValue < m) {\n\t        m = currentValue;\n\t      }\n\t    } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n\n\n\t    var handledCPCountPlusOne = handledCPCount + 1;\n\n\t    if (m - n > floor$2((maxInt - delta) / handledCPCountPlusOne)) {\n\t      throw RangeError(OVERFLOW_ERROR);\n\t    }\n\n\t    delta += (m - n) * handledCPCountPlusOne;\n\t    n = m;\n\n\t    for (i = 0; i < input.length; i++) {\n\t      currentValue = input[i];\n\n\t      if (currentValue < n && ++delta > maxInt) {\n\t        throw RangeError(OVERFLOW_ERROR);\n\t      }\n\n\t      if (currentValue == n) {\n\t        // Represent delta as a generalized variable-length integer.\n\t        var q = delta;\n\n\t        for (var k = base;;\n\t        /* no condition */\n\t        k += base) {\n\t          var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\t          if (q < t) break;\n\t          var qMinusT = q - t;\n\t          var baseMinusT = base - t;\n\t          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n\t          q = floor$2(qMinusT / baseMinusT);\n\t        }\n\n\t        output.push(stringFromCharCode(digitToBasic(q)));\n\t        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t        delta = 0;\n\t        ++handledCPCount;\n\t      }\n\t    }\n\n\t    ++delta;\n\t    ++n;\n\t  }\n\n\t  return output.join('');\n\t};\n\n\tvar stringPunycodeToAscii = function (input) {\n\t  var encoded = [];\n\t  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n\t  var i, label;\n\n\t  for (i = 0; i < labels.length; i++) {\n\t    label = labels[i];\n\t    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n\t  }\n\n\t  return encoded.join('.');\n\t};\n\n\tvar getIterator = function (it) {\n\t  var iteratorMethod = getIteratorMethod(it);\n\n\t  if (typeof iteratorMethod != 'function') {\n\t    throw TypeError(String(it) + ' is not iterable');\n\t  }\n\n\t  return anObject(iteratorMethod.call(it));\n\t};\n\n\tvar $fetch$1 = getBuiltIn('fetch');\n\tvar Headers = getBuiltIn('Headers');\n\tvar ITERATOR$7 = wellKnownSymbol('iterator');\n\tvar URL_SEARCH_PARAMS = 'URLSearchParams';\n\tvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\n\tvar setInternalState$5 = internalState.set;\n\tvar getInternalParamsState = internalState.getterFor(URL_SEARCH_PARAMS);\n\tvar getInternalIteratorState = internalState.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\tvar plus = /\\+/g;\n\tvar sequences = Array(4);\n\n\tvar percentSequence = function (bytes) {\n\t  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n\t};\n\n\tvar percentDecode = function (sequence) {\n\t  try {\n\t    return decodeURIComponent(sequence);\n\t  } catch (error) {\n\t    return sequence;\n\t  }\n\t};\n\n\tvar deserialize = function (it) {\n\t  var result = it.replace(plus, ' ');\n\t  var bytes = 4;\n\n\t  try {\n\t    return decodeURIComponent(result);\n\t  } catch (error) {\n\t    while (bytes) {\n\t      result = result.replace(percentSequence(bytes--), percentDecode);\n\t    }\n\n\t    return result;\n\t  }\n\t};\n\n\tvar find = /[!'()~]|%20/g;\n\tvar replace = {\n\t  '!': '%21',\n\t  \"'\": '%27',\n\t  '(': '%28',\n\t  ')': '%29',\n\t  '~': '%7E',\n\t  '%20': '+'\n\t};\n\n\tvar replacer = function (match) {\n\t  return replace[match];\n\t};\n\n\tvar serialize = function (it) {\n\t  return encodeURIComponent(it).replace(find, replacer);\n\t};\n\n\tvar parseSearchParams = function (result, query) {\n\t  if (query) {\n\t    var attributes = query.split('&');\n\t    var index = 0;\n\t    var attribute, entry;\n\n\t    while (index < attributes.length) {\n\t      attribute = attributes[index++];\n\n\t      if (attribute.length) {\n\t        entry = attribute.split('=');\n\t        result.push({\n\t          key: deserialize(entry.shift()),\n\t          value: deserialize(entry.join('='))\n\t        });\n\t      }\n\t    }\n\t  }\n\t};\n\n\tvar updateSearchParams = function (query) {\n\t  this.entries.length = 0;\n\t  parseSearchParams(this.entries, query);\n\t};\n\n\tvar validateArgumentsLength = function (passed, required) {\n\t  if (passed < required) throw TypeError('Not enough arguments');\n\t};\n\n\tvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n\t  setInternalState$5(this, {\n\t    type: URL_SEARCH_PARAMS_ITERATOR,\n\t    iterator: getIterator(getInternalParamsState(params).entries),\n\t    kind: kind\n\t  });\n\t}, 'Iterator', function next() {\n\t  var state = getInternalIteratorState(this);\n\t  var kind = state.kind;\n\t  var step = state.iterator.next();\n\t  var entry = step.value;\n\n\t  if (!step.done) {\n\t    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n\t  }\n\n\t  return step;\n\t}); // `URLSearchParams` constructor\n\t// https://url.spec.whatwg.org/#interface-urlsearchparams\n\n\tvar URLSearchParamsConstructor = function URLSearchParams()\n\t/* init */\n\t{\n\t  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\t  var init = arguments.length > 0 ? arguments[0] : undefined;\n\t  var that = this;\n\t  var entries = [];\n\t  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\t  setInternalState$5(that, {\n\t    type: URL_SEARCH_PARAMS,\n\t    entries: entries,\n\t    updateURL: function () {\n\t      /* empty */\n\t    },\n\t    updateSearchParams: updateSearchParams\n\t  });\n\n\t  if (init !== undefined) {\n\t    if (isObject(init)) {\n\t      iteratorMethod = getIteratorMethod(init);\n\n\t      if (typeof iteratorMethod === 'function') {\n\t        iterator = iteratorMethod.call(init);\n\t        next = iterator.next;\n\n\t        while (!(step = next.call(iterator)).done) {\n\t          entryIterator = getIterator(anObject(step.value));\n\t          entryNext = entryIterator.next;\n\t          if ((first = entryNext.call(entryIterator)).done || (second = entryNext.call(entryIterator)).done || !entryNext.call(entryIterator).done) throw TypeError('Expected sequence with length 2');\n\t          entries.push({\n\t            key: first.value + '',\n\t            value: second.value + ''\n\t          });\n\t        }\n\t      } else for (key in init) if (has(init, key)) entries.push({\n\t        key: key,\n\t        value: init[key] + ''\n\t      });\n\t    } else {\n\t      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n\t    }\n\t  }\n\t};\n\n\tvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\tredefineAll(URLSearchParamsPrototype, {\n\t  // `URLSearchParams.prototype.appent` method\n\t  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n\t  append: function append(name, value) {\n\t    validateArgumentsLength(arguments.length, 2);\n\t    var state = getInternalParamsState(this);\n\t    state.entries.push({\n\t      key: name + '',\n\t      value: value + ''\n\t    });\n\t    state.updateURL();\n\t  },\n\t  // `URLSearchParams.prototype.delete` method\n\t  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n\t  'delete': function (name) {\n\t    validateArgumentsLength(arguments.length, 1);\n\t    var state = getInternalParamsState(this);\n\t    var entries = state.entries;\n\t    var key = name + '';\n\t    var index = 0;\n\n\t    while (index < entries.length) {\n\t      if (entries[index].key === key) entries.splice(index, 1);else index++;\n\t    }\n\n\t    state.updateURL();\n\t  },\n\t  // `URLSearchParams.prototype.get` method\n\t  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n\t  get: function get(name) {\n\t    validateArgumentsLength(arguments.length, 1);\n\t    var entries = getInternalParamsState(this).entries;\n\t    var key = name + '';\n\t    var index = 0;\n\n\t    for (; index < entries.length; index++) {\n\t      if (entries[index].key === key) return entries[index].value;\n\t    }\n\n\t    return null;\n\t  },\n\t  // `URLSearchParams.prototype.getAll` method\n\t  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n\t  getAll: function getAll(name) {\n\t    validateArgumentsLength(arguments.length, 1);\n\t    var entries = getInternalParamsState(this).entries;\n\t    var key = name + '';\n\t    var result = [];\n\t    var index = 0;\n\n\t    for (; index < entries.length; index++) {\n\t      if (entries[index].key === key) result.push(entries[index].value);\n\t    }\n\n\t    return result;\n\t  },\n\t  // `URLSearchParams.prototype.has` method\n\t  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n\t  has: function has(name) {\n\t    validateArgumentsLength(arguments.length, 1);\n\t    var entries = getInternalParamsState(this).entries;\n\t    var key = name + '';\n\t    var index = 0;\n\n\t    while (index < entries.length) {\n\t      if (entries[index++].key === key) return true;\n\t    }\n\n\t    return false;\n\t  },\n\t  // `URLSearchParams.prototype.set` method\n\t  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n\t  set: function set(name, value) {\n\t    validateArgumentsLength(arguments.length, 1);\n\t    var state = getInternalParamsState(this);\n\t    var entries = state.entries;\n\t    var found = false;\n\t    var key = name + '';\n\t    var val = value + '';\n\t    var index = 0;\n\t    var entry;\n\n\t    for (; index < entries.length; index++) {\n\t      entry = entries[index];\n\n\t      if (entry.key === key) {\n\t        if (found) entries.splice(index--, 1);else {\n\t          found = true;\n\t          entry.value = val;\n\t        }\n\t      }\n\t    }\n\n\t    if (!found) entries.push({\n\t      key: key,\n\t      value: val\n\t    });\n\t    state.updateURL();\n\t  },\n\t  // `URLSearchParams.prototype.sort` method\n\t  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n\t  sort: function sort() {\n\t    var state = getInternalParamsState(this);\n\t    var entries = state.entries; // Array#sort is not stable in some engines\n\n\t    var slice = entries.slice();\n\t    var entry, entriesIndex, sliceIndex;\n\t    entries.length = 0;\n\n\t    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n\t      entry = slice[sliceIndex];\n\n\t      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n\t        if (entries[entriesIndex].key > entry.key) {\n\t          entries.splice(entriesIndex, 0, entry);\n\t          break;\n\t        }\n\t      }\n\n\t      if (entriesIndex === sliceIndex) entries.push(entry);\n\t    }\n\n\t    state.updateURL();\n\t  },\n\t  // `URLSearchParams.prototype.forEach` method\n\t  forEach: function forEach(callback\n\t  /* , thisArg */\n\t  ) {\n\t    var entries = getInternalParamsState(this).entries;\n\t    var boundFunction = functionBindContext(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n\t    var index = 0;\n\t    var entry;\n\n\t    while (index < entries.length) {\n\t      entry = entries[index++];\n\t      boundFunction(entry.value, entry.key, this);\n\t    }\n\t  },\n\t  // `URLSearchParams.prototype.keys` method\n\t  keys: function keys() {\n\t    return new URLSearchParamsIterator(this, 'keys');\n\t  },\n\t  // `URLSearchParams.prototype.values` method\n\t  values: function values() {\n\t    return new URLSearchParamsIterator(this, 'values');\n\t  },\n\t  // `URLSearchParams.prototype.entries` method\n\t  entries: function entries() {\n\t    return new URLSearchParamsIterator(this, 'entries');\n\t  }\n\t}, {\n\t  enumerable: true\n\t}); // `URLSearchParams.prototype[@@iterator]` method\n\n\tredefine(URLSearchParamsPrototype, ITERATOR$7, URLSearchParamsPrototype.entries); // `URLSearchParams.prototype.toString` method\n\t// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n\n\tredefine(URLSearchParamsPrototype, 'toString', function toString() {\n\t  var entries = getInternalParamsState(this).entries;\n\t  var result = [];\n\t  var index = 0;\n\t  var entry;\n\n\t  while (index < entries.length) {\n\t    entry = entries[index++];\n\t    result.push(serialize(entry.key) + '=' + serialize(entry.value));\n\t  }\n\n\t  return result.join('&');\n\t}, {\n\t  enumerable: true\n\t});\n\tsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\t_export({\n\t  global: true,\n\t  forced: !nativeUrl\n\t}, {\n\t  URLSearchParams: URLSearchParamsConstructor\n\t}); // Wrap `fetch` for correct work with polyfilled `URLSearchParams`\n\t// https://github.com/zloirock/core-js/issues/674\n\n\tif (!nativeUrl && typeof $fetch$1 == 'function' && typeof Headers == 'function') {\n\t  _export({\n\t    global: true,\n\t    enumerable: true,\n\t    forced: true\n\t  }, {\n\t    fetch: function fetch(input\n\t    /* , init */\n\t    ) {\n\t      var args = [input];\n\t      var init, body, headers;\n\n\t      if (arguments.length > 1) {\n\t        init = arguments[1];\n\n\t        if (isObject(init)) {\n\t          body = init.body;\n\n\t          if (classof(body) === URL_SEARCH_PARAMS) {\n\t            headers = init.headers ? new Headers(init.headers) : new Headers();\n\n\t            if (!headers.has('content-type')) {\n\t              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\t            }\n\n\t            init = objectCreate(init, {\n\t              body: createPropertyDescriptor(0, String(body)),\n\t              headers: createPropertyDescriptor(0, headers)\n\t            });\n\t          }\n\t        }\n\n\t        args.push(init);\n\t      }\n\n\t      return $fetch$1.apply(this, args);\n\t    }\n\t  });\n\t}\n\n\tvar web_urlSearchParams = {\n\t  URLSearchParams: URLSearchParamsConstructor,\n\t  getState: getInternalParamsState\n\t};\n\n\tvar codeAt = stringMultibyte.codeAt;\n\tvar NativeURL = global_1.URL;\n\tvar URLSearchParams$1 = web_urlSearchParams.URLSearchParams;\n\tvar getInternalSearchParamsState = web_urlSearchParams.getState;\n\tvar setInternalState$6 = internalState.set;\n\tvar getInternalURLState = internalState.getterFor('URL');\n\tvar floor$3 = Math.floor;\n\tvar pow = Math.pow;\n\tvar INVALID_AUTHORITY = 'Invalid authority';\n\tvar INVALID_SCHEME = 'Invalid scheme';\n\tvar INVALID_HOST = 'Invalid host';\n\tvar INVALID_PORT = 'Invalid port';\n\tvar ALPHA = /[A-Za-z]/;\n\tvar ALPHANUMERIC = /[\\d+\\-.A-Za-z]/;\n\tvar DIGIT = /\\d/;\n\tvar HEX_START = /^(0x|0X)/;\n\tvar OCT = /^[0-7]+$/;\n\tvar DEC = /^\\d+$/;\n\tvar HEX = /^[\\dA-Fa-f]+$/; // eslint-disable-next-line no-control-regex\n\n\tvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/; // eslint-disable-next-line no-control-regex\n\n\tvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/; // eslint-disable-next-line no-control-regex\n\n\tvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g; // eslint-disable-next-line no-control-regex\n\n\tvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\n\tvar EOF;\n\n\tvar parseHost = function (url, input) {\n\t  var result, codePoints, index;\n\n\t  if (input.charAt(0) == '[') {\n\t    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n\t    result = parseIPv6(input.slice(1, -1));\n\t    if (!result) return INVALID_HOST;\n\t    url.host = result; // opaque host\n\t  } else if (!isSpecial(url)) {\n\t    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n\t    result = '';\n\t    codePoints = arrayFrom(input);\n\n\t    for (index = 0; index < codePoints.length; index++) {\n\t      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n\t    }\n\n\t    url.host = result;\n\t  } else {\n\t    input = stringPunycodeToAscii(input);\n\t    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n\t    result = parseIPv4(input);\n\t    if (result === null) return INVALID_HOST;\n\t    url.host = result;\n\t  }\n\t};\n\n\tvar parseIPv4 = function (input) {\n\t  var parts = input.split('.');\n\t  var partsLength, numbers, index, part, radix, number, ipv4;\n\n\t  if (parts.length && parts[parts.length - 1] == '') {\n\t    parts.pop();\n\t  }\n\n\t  partsLength = parts.length;\n\t  if (partsLength > 4) return input;\n\t  numbers = [];\n\n\t  for (index = 0; index < partsLength; index++) {\n\t    part = parts[index];\n\t    if (part == '') return input;\n\t    radix = 10;\n\n\t    if (part.length > 1 && part.charAt(0) == '0') {\n\t      radix = HEX_START.test(part) ? 16 : 8;\n\t      part = part.slice(radix == 8 ? 1 : 2);\n\t    }\n\n\t    if (part === '') {\n\t      number = 0;\n\t    } else {\n\t      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n\t      number = parseInt(part, radix);\n\t    }\n\n\t    numbers.push(number);\n\t  }\n\n\t  for (index = 0; index < partsLength; index++) {\n\t    number = numbers[index];\n\n\t    if (index == partsLength - 1) {\n\t      if (number >= pow(256, 5 - partsLength)) return null;\n\t    } else if (number > 255) return null;\n\t  }\n\n\t  ipv4 = numbers.pop();\n\n\t  for (index = 0; index < numbers.length; index++) {\n\t    ipv4 += numbers[index] * pow(256, 3 - index);\n\t  }\n\n\t  return ipv4;\n\t}; // eslint-disable-next-line max-statements\n\n\n\tvar parseIPv6 = function (input) {\n\t  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n\t  var pieceIndex = 0;\n\t  var compress = null;\n\t  var pointer = 0;\n\t  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n\t  var char = function () {\n\t    return input.charAt(pointer);\n\t  };\n\n\t  if (char() == ':') {\n\t    if (input.charAt(1) != ':') return;\n\t    pointer += 2;\n\t    pieceIndex++;\n\t    compress = pieceIndex;\n\t  }\n\n\t  while (char()) {\n\t    if (pieceIndex == 8) return;\n\n\t    if (char() == ':') {\n\t      if (compress !== null) return;\n\t      pointer++;\n\t      pieceIndex++;\n\t      compress = pieceIndex;\n\t      continue;\n\t    }\n\n\t    value = length = 0;\n\n\t    while (length < 4 && HEX.test(char())) {\n\t      value = value * 16 + parseInt(char(), 16);\n\t      pointer++;\n\t      length++;\n\t    }\n\n\t    if (char() == '.') {\n\t      if (length == 0) return;\n\t      pointer -= length;\n\t      if (pieceIndex > 6) return;\n\t      numbersSeen = 0;\n\n\t      while (char()) {\n\t        ipv4Piece = null;\n\n\t        if (numbersSeen > 0) {\n\t          if (char() == '.' && numbersSeen < 4) pointer++;else return;\n\t        }\n\n\t        if (!DIGIT.test(char())) return;\n\n\t        while (DIGIT.test(char())) {\n\t          number = parseInt(char(), 10);\n\t          if (ipv4Piece === null) ipv4Piece = number;else if (ipv4Piece == 0) return;else ipv4Piece = ipv4Piece * 10 + number;\n\t          if (ipv4Piece > 255) return;\n\t          pointer++;\n\t        }\n\n\t        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n\t        numbersSeen++;\n\t        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n\t      }\n\n\t      if (numbersSeen != 4) return;\n\t      break;\n\t    } else if (char() == ':') {\n\t      pointer++;\n\t      if (!char()) return;\n\t    } else if (char()) return;\n\n\t    address[pieceIndex++] = value;\n\t  }\n\n\t  if (compress !== null) {\n\t    swaps = pieceIndex - compress;\n\t    pieceIndex = 7;\n\n\t    while (pieceIndex != 0 && swaps > 0) {\n\t      swap = address[pieceIndex];\n\t      address[pieceIndex--] = address[compress + swaps - 1];\n\t      address[compress + --swaps] = swap;\n\t    }\n\t  } else if (pieceIndex != 8) return;\n\n\t  return address;\n\t};\n\n\tvar findLongestZeroSequence = function (ipv6) {\n\t  var maxIndex = null;\n\t  var maxLength = 1;\n\t  var currStart = null;\n\t  var currLength = 0;\n\t  var index = 0;\n\n\t  for (; index < 8; index++) {\n\t    if (ipv6[index] !== 0) {\n\t      if (currLength > maxLength) {\n\t        maxIndex = currStart;\n\t        maxLength = currLength;\n\t      }\n\n\t      currStart = null;\n\t      currLength = 0;\n\t    } else {\n\t      if (currStart === null) currStart = index;\n\t      ++currLength;\n\t    }\n\t  }\n\n\t  if (currLength > maxLength) {\n\t    maxIndex = currStart;\n\t    maxLength = currLength;\n\t  }\n\n\t  return maxIndex;\n\t};\n\n\tvar serializeHost = function (host) {\n\t  var result, index, compress, ignore0; // ipv4\n\n\t  if (typeof host == 'number') {\n\t    result = [];\n\n\t    for (index = 0; index < 4; index++) {\n\t      result.unshift(host % 256);\n\t      host = floor$3(host / 256);\n\t    }\n\n\t    return result.join('.'); // ipv6\n\t  } else if (typeof host == 'object') {\n\t    result = '';\n\t    compress = findLongestZeroSequence(host);\n\n\t    for (index = 0; index < 8; index++) {\n\t      if (ignore0 && host[index] === 0) continue;\n\t      if (ignore0) ignore0 = false;\n\n\t      if (compress === index) {\n\t        result += index ? ':' : '::';\n\t        ignore0 = true;\n\t      } else {\n\t        result += host[index].toString(16);\n\t        if (index < 7) result += ':';\n\t      }\n\t    }\n\n\t    return '[' + result + ']';\n\t  }\n\n\t  return host;\n\t};\n\n\tvar C0ControlPercentEncodeSet = {};\n\tvar fragmentPercentEncodeSet = objectAssign({}, C0ControlPercentEncodeSet, {\n\t  ' ': 1,\n\t  '\"': 1,\n\t  '<': 1,\n\t  '>': 1,\n\t  '`': 1\n\t});\n\tvar pathPercentEncodeSet = objectAssign({}, fragmentPercentEncodeSet, {\n\t  '#': 1,\n\t  '?': 1,\n\t  '{': 1,\n\t  '}': 1\n\t});\n\tvar userinfoPercentEncodeSet = objectAssign({}, pathPercentEncodeSet, {\n\t  '/': 1,\n\t  ':': 1,\n\t  ';': 1,\n\t  '=': 1,\n\t  '@': 1,\n\t  '[': 1,\n\t  '\\\\': 1,\n\t  ']': 1,\n\t  '^': 1,\n\t  '|': 1\n\t});\n\n\tvar percentEncode = function (char, set) {\n\t  var code = codeAt(char, 0);\n\t  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n\t};\n\n\tvar specialSchemes = {\n\t  ftp: 21,\n\t  file: null,\n\t  http: 80,\n\t  https: 443,\n\t  ws: 80,\n\t  wss: 443\n\t};\n\n\tvar isSpecial = function (url) {\n\t  return has(specialSchemes, url.scheme);\n\t};\n\n\tvar includesCredentials = function (url) {\n\t  return url.username != '' || url.password != '';\n\t};\n\n\tvar cannotHaveUsernamePasswordPort = function (url) {\n\t  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n\t};\n\n\tvar isWindowsDriveLetter = function (string, normalized) {\n\t  var second;\n\t  return string.length == 2 && ALPHA.test(string.charAt(0)) && ((second = string.charAt(1)) == ':' || !normalized && second == '|');\n\t};\n\n\tvar startsWithWindowsDriveLetter = function (string) {\n\t  var third;\n\t  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (string.length == 2 || (third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#');\n\t};\n\n\tvar shortenURLsPath = function (url) {\n\t  var path = url.path;\n\t  var pathSize = path.length;\n\n\t  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n\t    path.pop();\n\t  }\n\t};\n\n\tvar isSingleDot = function (segment) {\n\t  return segment === '.' || segment.toLowerCase() === '%2e';\n\t};\n\n\tvar isDoubleDot = function (segment) {\n\t  segment = segment.toLowerCase();\n\t  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n\t}; // States:\n\n\n\tvar SCHEME_START = {};\n\tvar SCHEME = {};\n\tvar NO_SCHEME = {};\n\tvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\n\tvar PATH_OR_AUTHORITY = {};\n\tvar RELATIVE = {};\n\tvar RELATIVE_SLASH = {};\n\tvar SPECIAL_AUTHORITY_SLASHES = {};\n\tvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\n\tvar AUTHORITY = {};\n\tvar HOST = {};\n\tvar HOSTNAME = {};\n\tvar PORT = {};\n\tvar FILE = {};\n\tvar FILE_SLASH = {};\n\tvar FILE_HOST = {};\n\tvar PATH_START = {};\n\tvar PATH = {};\n\tvar CANNOT_BE_A_BASE_URL_PATH = {};\n\tvar QUERY = {};\n\tvar FRAGMENT = {}; // eslint-disable-next-line max-statements\n\n\tvar parseURL = function (url, input, stateOverride, base) {\n\t  var state = stateOverride || SCHEME_START;\n\t  var pointer = 0;\n\t  var buffer = '';\n\t  var seenAt = false;\n\t  var seenBracket = false;\n\t  var seenPasswordToken = false;\n\t  var codePoints, char, bufferCodePoints, failure;\n\n\t  if (!stateOverride) {\n\t    url.scheme = '';\n\t    url.username = '';\n\t    url.password = '';\n\t    url.host = null;\n\t    url.port = null;\n\t    url.path = [];\n\t    url.query = null;\n\t    url.fragment = null;\n\t    url.cannotBeABaseURL = false;\n\t    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n\t  }\n\n\t  input = input.replace(TAB_AND_NEW_LINE, '');\n\t  codePoints = arrayFrom(input);\n\n\t  while (pointer <= codePoints.length) {\n\t    char = codePoints[pointer];\n\n\t    switch (state) {\n\t      case SCHEME_START:\n\t        if (char && ALPHA.test(char)) {\n\t          buffer += char.toLowerCase();\n\t          state = SCHEME;\n\t        } else if (!stateOverride) {\n\t          state = NO_SCHEME;\n\t          continue;\n\t        } else return INVALID_SCHEME;\n\n\t        break;\n\n\t      case SCHEME:\n\t        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n\t          buffer += char.toLowerCase();\n\t        } else if (char == ':') {\n\t          if (stateOverride && (isSpecial(url) != has(specialSchemes, buffer) || buffer == 'file' && (includesCredentials(url) || url.port !== null) || url.scheme == 'file' && !url.host)) return;\n\t          url.scheme = buffer;\n\n\t          if (stateOverride) {\n\t            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n\t            return;\n\t          }\n\n\t          buffer = '';\n\n\t          if (url.scheme == 'file') {\n\t            state = FILE;\n\t          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n\t            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n\t          } else if (isSpecial(url)) {\n\t            state = SPECIAL_AUTHORITY_SLASHES;\n\t          } else if (codePoints[pointer + 1] == '/') {\n\t            state = PATH_OR_AUTHORITY;\n\t            pointer++;\n\t          } else {\n\t            url.cannotBeABaseURL = true;\n\t            url.path.push('');\n\t            state = CANNOT_BE_A_BASE_URL_PATH;\n\t          }\n\t        } else if (!stateOverride) {\n\t          buffer = '';\n\t          state = NO_SCHEME;\n\t          pointer = 0;\n\t          continue;\n\t        } else return INVALID_SCHEME;\n\n\t        break;\n\n\t      case NO_SCHEME:\n\t        if (!base || base.cannotBeABaseURL && char != '#') return INVALID_SCHEME;\n\n\t        if (base.cannotBeABaseURL && char == '#') {\n\t          url.scheme = base.scheme;\n\t          url.path = base.path.slice();\n\t          url.query = base.query;\n\t          url.fragment = '';\n\t          url.cannotBeABaseURL = true;\n\t          state = FRAGMENT;\n\t          break;\n\t        }\n\n\t        state = base.scheme == 'file' ? FILE : RELATIVE;\n\t        continue;\n\n\t      case SPECIAL_RELATIVE_OR_AUTHORITY:\n\t        if (char == '/' && codePoints[pointer + 1] == '/') {\n\t          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n\t          pointer++;\n\t        } else {\n\t          state = RELATIVE;\n\t          continue;\n\t        }\n\n\t        break;\n\n\t      case PATH_OR_AUTHORITY:\n\t        if (char == '/') {\n\t          state = AUTHORITY;\n\t          break;\n\t        } else {\n\t          state = PATH;\n\t          continue;\n\t        }\n\n\t      case RELATIVE:\n\t        url.scheme = base.scheme;\n\n\t        if (char == EOF) {\n\t          url.username = base.username;\n\t          url.password = base.password;\n\t          url.host = base.host;\n\t          url.port = base.port;\n\t          url.path = base.path.slice();\n\t          url.query = base.query;\n\t        } else if (char == '/' || char == '\\\\' && isSpecial(url)) {\n\t          state = RELATIVE_SLASH;\n\t        } else if (char == '?') {\n\t          url.username = base.username;\n\t          url.password = base.password;\n\t          url.host = base.host;\n\t          url.port = base.port;\n\t          url.path = base.path.slice();\n\t          url.query = '';\n\t          state = QUERY;\n\t        } else if (char == '#') {\n\t          url.username = base.username;\n\t          url.password = base.password;\n\t          url.host = base.host;\n\t          url.port = base.port;\n\t          url.path = base.path.slice();\n\t          url.query = base.query;\n\t          url.fragment = '';\n\t          state = FRAGMENT;\n\t        } else {\n\t          url.username = base.username;\n\t          url.password = base.password;\n\t          url.host = base.host;\n\t          url.port = base.port;\n\t          url.path = base.path.slice();\n\t          url.path.pop();\n\t          state = PATH;\n\t          continue;\n\t        }\n\n\t        break;\n\n\t      case RELATIVE_SLASH:\n\t        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n\t          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n\t        } else if (char == '/') {\n\t          state = AUTHORITY;\n\t        } else {\n\t          url.username = base.username;\n\t          url.password = base.password;\n\t          url.host = base.host;\n\t          url.port = base.port;\n\t          state = PATH;\n\t          continue;\n\t        }\n\n\t        break;\n\n\t      case SPECIAL_AUTHORITY_SLASHES:\n\t        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n\t        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n\t        pointer++;\n\t        break;\n\n\t      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n\t        if (char != '/' && char != '\\\\') {\n\t          state = AUTHORITY;\n\t          continue;\n\t        }\n\n\t        break;\n\n\t      case AUTHORITY:\n\t        if (char == '@') {\n\t          if (seenAt) buffer = '%40' + buffer;\n\t          seenAt = true;\n\t          bufferCodePoints = arrayFrom(buffer);\n\n\t          for (var i = 0; i < bufferCodePoints.length; i++) {\n\t            var codePoint = bufferCodePoints[i];\n\n\t            if (codePoint == ':' && !seenPasswordToken) {\n\t              seenPasswordToken = true;\n\t              continue;\n\t            }\n\n\t            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n\t            if (seenPasswordToken) url.password += encodedCodePoints;else url.username += encodedCodePoints;\n\t          }\n\n\t          buffer = '';\n\t        } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url)) {\n\t          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n\t          pointer -= arrayFrom(buffer).length + 1;\n\t          buffer = '';\n\t          state = HOST;\n\t        } else buffer += char;\n\n\t        break;\n\n\t      case HOST:\n\t      case HOSTNAME:\n\t        if (stateOverride && url.scheme == 'file') {\n\t          state = FILE_HOST;\n\t          continue;\n\t        } else if (char == ':' && !seenBracket) {\n\t          if (buffer == '') return INVALID_HOST;\n\t          failure = parseHost(url, buffer);\n\t          if (failure) return failure;\n\t          buffer = '';\n\t          state = PORT;\n\t          if (stateOverride == HOSTNAME) return;\n\t        } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url)) {\n\t          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n\t          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n\t          failure = parseHost(url, buffer);\n\t          if (failure) return failure;\n\t          buffer = '';\n\t          state = PATH_START;\n\t          if (stateOverride) return;\n\t          continue;\n\t        } else {\n\t          if (char == '[') seenBracket = true;else if (char == ']') seenBracket = false;\n\t          buffer += char;\n\t        }\n\n\t        break;\n\n\t      case PORT:\n\t        if (DIGIT.test(char)) {\n\t          buffer += char;\n\t        } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url) || stateOverride) {\n\t          if (buffer != '') {\n\t            var port = parseInt(buffer, 10);\n\t            if (port > 0xFFFF) return INVALID_PORT;\n\t            url.port = isSpecial(url) && port === specialSchemes[url.scheme] ? null : port;\n\t            buffer = '';\n\t          }\n\n\t          if (stateOverride) return;\n\t          state = PATH_START;\n\t          continue;\n\t        } else return INVALID_PORT;\n\n\t        break;\n\n\t      case FILE:\n\t        url.scheme = 'file';\n\t        if (char == '/' || char == '\\\\') state = FILE_SLASH;else if (base && base.scheme == 'file') {\n\t          if (char == EOF) {\n\t            url.host = base.host;\n\t            url.path = base.path.slice();\n\t            url.query = base.query;\n\t          } else if (char == '?') {\n\t            url.host = base.host;\n\t            url.path = base.path.slice();\n\t            url.query = '';\n\t            state = QUERY;\n\t          } else if (char == '#') {\n\t            url.host = base.host;\n\t            url.path = base.path.slice();\n\t            url.query = base.query;\n\t            url.fragment = '';\n\t            state = FRAGMENT;\n\t          } else {\n\t            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n\t              url.host = base.host;\n\t              url.path = base.path.slice();\n\t              shortenURLsPath(url);\n\t            }\n\n\t            state = PATH;\n\t            continue;\n\t          }\n\t        } else {\n\t          state = PATH;\n\t          continue;\n\t        }\n\t        break;\n\n\t      case FILE_SLASH:\n\t        if (char == '/' || char == '\\\\') {\n\t          state = FILE_HOST;\n\t          break;\n\t        }\n\n\t        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n\t          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);else url.host = base.host;\n\t        }\n\n\t        state = PATH;\n\t        continue;\n\n\t      case FILE_HOST:\n\t        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n\t          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n\t            state = PATH;\n\t          } else if (buffer == '') {\n\t            url.host = '';\n\t            if (stateOverride) return;\n\t            state = PATH_START;\n\t          } else {\n\t            failure = parseHost(url, buffer);\n\t            if (failure) return failure;\n\t            if (url.host == 'localhost') url.host = '';\n\t            if (stateOverride) return;\n\t            buffer = '';\n\t            state = PATH_START;\n\t          }\n\n\t          continue;\n\t        } else buffer += char;\n\n\t        break;\n\n\t      case PATH_START:\n\t        if (isSpecial(url)) {\n\t          state = PATH;\n\t          if (char != '/' && char != '\\\\') continue;\n\t        } else if (!stateOverride && char == '?') {\n\t          url.query = '';\n\t          state = QUERY;\n\t        } else if (!stateOverride && char == '#') {\n\t          url.fragment = '';\n\t          state = FRAGMENT;\n\t        } else if (char != EOF) {\n\t          state = PATH;\n\t          if (char != '/') continue;\n\t        }\n\n\t        break;\n\n\t      case PATH:\n\t        if (char == EOF || char == '/' || char == '\\\\' && isSpecial(url) || !stateOverride && (char == '?' || char == '#')) {\n\t          if (isDoubleDot(buffer)) {\n\t            shortenURLsPath(url);\n\n\t            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n\t              url.path.push('');\n\t            }\n\t          } else if (isSingleDot(buffer)) {\n\t            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n\t              url.path.push('');\n\t            }\n\t          } else {\n\t            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n\t              if (url.host) url.host = '';\n\t              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n\t            }\n\n\t            url.path.push(buffer);\n\t          }\n\n\t          buffer = '';\n\n\t          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n\t            while (url.path.length > 1 && url.path[0] === '') {\n\t              url.path.shift();\n\t            }\n\t          }\n\n\t          if (char == '?') {\n\t            url.query = '';\n\t            state = QUERY;\n\t          } else if (char == '#') {\n\t            url.fragment = '';\n\t            state = FRAGMENT;\n\t          }\n\t        } else {\n\t          buffer += percentEncode(char, pathPercentEncodeSet);\n\t        }\n\n\t        break;\n\n\t      case CANNOT_BE_A_BASE_URL_PATH:\n\t        if (char == '?') {\n\t          url.query = '';\n\t          state = QUERY;\n\t        } else if (char == '#') {\n\t          url.fragment = '';\n\t          state = FRAGMENT;\n\t        } else if (char != EOF) {\n\t          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n\t        }\n\n\t        break;\n\n\t      case QUERY:\n\t        if (!stateOverride && char == '#') {\n\t          url.fragment = '';\n\t          state = FRAGMENT;\n\t        } else if (char != EOF) {\n\t          if (char == \"'\" && isSpecial(url)) url.query += '%27';else if (char == '#') url.query += '%23';else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n\t        }\n\n\t        break;\n\n\t      case FRAGMENT:\n\t        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n\t        break;\n\t    }\n\n\t    pointer++;\n\t  }\n\t}; // `URL` constructor\n\t// https://url.spec.whatwg.org/#url-class\n\n\n\tvar URLConstructor = function URL(url\n\t/* , base */\n\t) {\n\t  var that = anInstance(this, URLConstructor, 'URL');\n\t  var base = arguments.length > 1 ? arguments[1] : undefined;\n\t  var urlString = String(url);\n\t  var state = setInternalState$6(that, {\n\t    type: 'URL'\n\t  });\n\t  var baseState, failure;\n\n\t  if (base !== undefined) {\n\t    if (base instanceof URLConstructor) baseState = getInternalURLState(base);else {\n\t      failure = parseURL(baseState = {}, String(base));\n\t      if (failure) throw TypeError(failure);\n\t    }\n\t  }\n\n\t  failure = parseURL(state, urlString, null, baseState);\n\t  if (failure) throw TypeError(failure);\n\t  var searchParams = state.searchParams = new URLSearchParams$1();\n\t  var searchParamsState = getInternalSearchParamsState(searchParams);\n\t  searchParamsState.updateSearchParams(state.query);\n\n\t  searchParamsState.updateURL = function () {\n\t    state.query = String(searchParams) || null;\n\t  };\n\n\t  if (!descriptors) {\n\t    that.href = serializeURL.call(that);\n\t    that.origin = getOrigin.call(that);\n\t    that.protocol = getProtocol.call(that);\n\t    that.username = getUsername.call(that);\n\t    that.password = getPassword.call(that);\n\t    that.host = getHost.call(that);\n\t    that.hostname = getHostname.call(that);\n\t    that.port = getPort.call(that);\n\t    that.pathname = getPathname.call(that);\n\t    that.search = getSearch.call(that);\n\t    that.searchParams = getSearchParams.call(that);\n\t    that.hash = getHash.call(that);\n\t  }\n\t};\n\n\tvar URLPrototype = URLConstructor.prototype;\n\n\tvar serializeURL = function () {\n\t  var url = getInternalURLState(this);\n\t  var scheme = url.scheme;\n\t  var username = url.username;\n\t  var password = url.password;\n\t  var host = url.host;\n\t  var port = url.port;\n\t  var path = url.path;\n\t  var query = url.query;\n\t  var fragment = url.fragment;\n\t  var output = scheme + ':';\n\n\t  if (host !== null) {\n\t    output += '//';\n\n\t    if (includesCredentials(url)) {\n\t      output += username + (password ? ':' + password : '') + '@';\n\t    }\n\n\t    output += serializeHost(host);\n\t    if (port !== null) output += ':' + port;\n\t  } else if (scheme == 'file') output += '//';\n\n\t  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n\t  if (query !== null) output += '?' + query;\n\t  if (fragment !== null) output += '#' + fragment;\n\t  return output;\n\t};\n\n\tvar getOrigin = function () {\n\t  var url = getInternalURLState(this);\n\t  var scheme = url.scheme;\n\t  var port = url.port;\n\t  if (scheme == 'blob') try {\n\t    return new URL(scheme.path[0]).origin;\n\t  } catch (error) {\n\t    return 'null';\n\t  }\n\t  if (scheme == 'file' || !isSpecial(url)) return 'null';\n\t  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n\t};\n\n\tvar getProtocol = function () {\n\t  return getInternalURLState(this).scheme + ':';\n\t};\n\n\tvar getUsername = function () {\n\t  return getInternalURLState(this).username;\n\t};\n\n\tvar getPassword = function () {\n\t  return getInternalURLState(this).password;\n\t};\n\n\tvar getHost = function () {\n\t  var url = getInternalURLState(this);\n\t  var host = url.host;\n\t  var port = url.port;\n\t  return host === null ? '' : port === null ? serializeHost(host) : serializeHost(host) + ':' + port;\n\t};\n\n\tvar getHostname = function () {\n\t  var host = getInternalURLState(this).host;\n\t  return host === null ? '' : serializeHost(host);\n\t};\n\n\tvar getPort = function () {\n\t  var port = getInternalURLState(this).port;\n\t  return port === null ? '' : String(port);\n\t};\n\n\tvar getPathname = function () {\n\t  var url = getInternalURLState(this);\n\t  var path = url.path;\n\t  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n\t};\n\n\tvar getSearch = function () {\n\t  var query = getInternalURLState(this).query;\n\t  return query ? '?' + query : '';\n\t};\n\n\tvar getSearchParams = function () {\n\t  return getInternalURLState(this).searchParams;\n\t};\n\n\tvar getHash = function () {\n\t  var fragment = getInternalURLState(this).fragment;\n\t  return fragment ? '#' + fragment : '';\n\t};\n\n\tvar accessorDescriptor = function (getter, setter) {\n\t  return {\n\t    get: getter,\n\t    set: setter,\n\t    configurable: true,\n\t    enumerable: true\n\t  };\n\t};\n\n\tif (descriptors) {\n\t  objectDefineProperties(URLPrototype, {\n\t    // `URL.prototype.href` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-href\n\t    href: accessorDescriptor(serializeURL, function (href) {\n\t      var url = getInternalURLState(this);\n\t      var urlString = String(href);\n\t      var failure = parseURL(url, urlString);\n\t      if (failure) throw TypeError(failure);\n\t      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n\t    }),\n\t    // `URL.prototype.origin` getter\n\t    // https://url.spec.whatwg.org/#dom-url-origin\n\t    origin: accessorDescriptor(getOrigin),\n\t    // `URL.prototype.protocol` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-protocol\n\t    protocol: accessorDescriptor(getProtocol, function (protocol) {\n\t      var url = getInternalURLState(this);\n\t      parseURL(url, String(protocol) + ':', SCHEME_START);\n\t    }),\n\t    // `URL.prototype.username` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-username\n\t    username: accessorDescriptor(getUsername, function (username) {\n\t      var url = getInternalURLState(this);\n\t      var codePoints = arrayFrom(String(username));\n\t      if (cannotHaveUsernamePasswordPort(url)) return;\n\t      url.username = '';\n\n\t      for (var i = 0; i < codePoints.length; i++) {\n\t        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n\t      }\n\t    }),\n\t    // `URL.prototype.password` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-password\n\t    password: accessorDescriptor(getPassword, function (password) {\n\t      var url = getInternalURLState(this);\n\t      var codePoints = arrayFrom(String(password));\n\t      if (cannotHaveUsernamePasswordPort(url)) return;\n\t      url.password = '';\n\n\t      for (var i = 0; i < codePoints.length; i++) {\n\t        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n\t      }\n\t    }),\n\t    // `URL.prototype.host` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-host\n\t    host: accessorDescriptor(getHost, function (host) {\n\t      var url = getInternalURLState(this);\n\t      if (url.cannotBeABaseURL) return;\n\t      parseURL(url, String(host), HOST);\n\t    }),\n\t    // `URL.prototype.hostname` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-hostname\n\t    hostname: accessorDescriptor(getHostname, function (hostname) {\n\t      var url = getInternalURLState(this);\n\t      if (url.cannotBeABaseURL) return;\n\t      parseURL(url, String(hostname), HOSTNAME);\n\t    }),\n\t    // `URL.prototype.port` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-port\n\t    port: accessorDescriptor(getPort, function (port) {\n\t      var url = getInternalURLState(this);\n\t      if (cannotHaveUsernamePasswordPort(url)) return;\n\t      port = String(port);\n\t      if (port == '') url.port = null;else parseURL(url, port, PORT);\n\t    }),\n\t    // `URL.prototype.pathname` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-pathname\n\t    pathname: accessorDescriptor(getPathname, function (pathname) {\n\t      var url = getInternalURLState(this);\n\t      if (url.cannotBeABaseURL) return;\n\t      url.path = [];\n\t      parseURL(url, pathname + '', PATH_START);\n\t    }),\n\t    // `URL.prototype.search` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-search\n\t    search: accessorDescriptor(getSearch, function (search) {\n\t      var url = getInternalURLState(this);\n\t      search = String(search);\n\n\t      if (search == '') {\n\t        url.query = null;\n\t      } else {\n\t        if ('?' == search.charAt(0)) search = search.slice(1);\n\t        url.query = '';\n\t        parseURL(url, search, QUERY);\n\t      }\n\n\t      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n\t    }),\n\t    // `URL.prototype.searchParams` getter\n\t    // https://url.spec.whatwg.org/#dom-url-searchparams\n\t    searchParams: accessorDescriptor(getSearchParams),\n\t    // `URL.prototype.hash` accessors pair\n\t    // https://url.spec.whatwg.org/#dom-url-hash\n\t    hash: accessorDescriptor(getHash, function (hash) {\n\t      var url = getInternalURLState(this);\n\t      hash = String(hash);\n\n\t      if (hash == '') {\n\t        url.fragment = null;\n\t        return;\n\t      }\n\n\t      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n\t      url.fragment = '';\n\t      parseURL(url, hash, FRAGMENT);\n\t    })\n\t  });\n\t} // `URL.prototype.toJSON` method\n\t// https://url.spec.whatwg.org/#dom-url-tojson\n\n\n\tredefine(URLPrototype, 'toJSON', function toJSON() {\n\t  return serializeURL.call(this);\n\t}, {\n\t  enumerable: true\n\t}); // `URL.prototype.toString` method\n\t// https://url.spec.whatwg.org/#URL-stringification-behavior\n\n\tredefine(URLPrototype, 'toString', function toString() {\n\t  return serializeURL.call(this);\n\t}, {\n\t  enumerable: true\n\t});\n\n\tif (NativeURL) {\n\t  var nativeCreateObjectURL = NativeURL.createObjectURL;\n\t  var nativeRevokeObjectURL = NativeURL.revokeObjectURL; // `URL.createObjectURL` method\n\t  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n\t  // eslint-disable-next-line no-unused-vars\n\n\t  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n\t    return nativeCreateObjectURL.apply(NativeURL, arguments);\n\t  }); // `URL.revokeObjectURL` method\n\t  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n\t  // eslint-disable-next-line no-unused-vars\n\n\t  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n\t    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n\t  });\n\t}\n\n\tsetToStringTag(URLConstructor, 'URL');\n\t_export({\n\t  global: true,\n\t  forced: !nativeUrl,\n\t  sham: !descriptors\n\t}, {\n\t  URL: URLConstructor\n\t});\n\n\t// https://url.spec.whatwg.org/#dom-url-tojson\n\n\n\t_export({\n\t  target: 'URL',\n\t  proto: true,\n\t  enumerable: true\n\t}, {\n\t  toJSON: function toJSON() {\n\t    return URL.prototype.toString.call(this);\n\t  }\n\t});\n\n\tvar createMethod$4 = function (IS_RIGHT) {\n\t  return function (that, callbackfn, argumentsLength, memo) {\n\t    aFunction$1(callbackfn);\n\t    var O = toObject(that);\n\t    var self = indexedObject(O);\n\t    var length = toLength(O.length);\n\t    var index = IS_RIGHT ? length - 1 : 0;\n\t    var i = IS_RIGHT ? -1 : 1;\n\t    if (argumentsLength < 2) while (true) {\n\t      if (index in self) {\n\t        memo = self[index];\n\t        index += i;\n\t        break;\n\t      }\n\n\t      index += i;\n\n\t      if (IS_RIGHT ? index < 0 : length <= index) {\n\t        throw TypeError('Reduce of empty array with no initial value');\n\t      }\n\t    }\n\n\t    for (; IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n\t      memo = callbackfn(memo, self[index], index, O);\n\t    }\n\n\t    return memo;\n\t  };\n\t};\n\n\tvar arrayReduce = {\n\t  // `Array.prototype.reduce` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n\t  left: createMethod$4(false),\n\t  // `Array.prototype.reduceRight` method\n\t  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n\t  right: createMethod$4(true)\n\t};\n\n\tvar $reduce = arrayReduce.left;\n\tvar STRICT_METHOD$4 = arrayMethodIsStrict('reduce');\n\tvar USES_TO_LENGTH$8 = arrayMethodUsesToLength('reduce', {\n\t  1: 0\n\t}); // `Array.prototype.reduce` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: !STRICT_METHOD$4 || !USES_TO_LENGTH$8\n\t}, {\n\t  reduce: function reduce(callbackfn\n\t  /* , initialValue */\n\t  ) {\n\t    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.fill\n\n\n\tvar arrayFill = function fill(value\n\t/* , start = 0, end = @length */\n\t) {\n\t  var O = toObject(this);\n\t  var length = toLength(O.length);\n\t  var argumentsLength = arguments.length;\n\t  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n\t  var end = argumentsLength > 2 ? arguments[2] : undefined;\n\t  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n\n\t  while (endPos > index) O[index++] = value;\n\n\t  return O;\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.fill\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true\n\t}, {\n\t  fill: arrayFill\n\t}); // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\n\taddToUnscopables('fill');\n\n\t/*!!\n\t *  Canvas 2 Svg v1.0.19\n\t *  A low level canvas to SVG converter. Uses a mock canvas context to build an SVG document.\n\t *\n\t *  Licensed under the MIT license:\n\t *  http://www.opensource.org/licenses/mit-license.php\n\t *\n\t *  Author:\n\t *  Kerry Liu\n\t *\n\t *  Copyright (c) 2014 Gliffy Inc.\n\t */\n\n\tvar STYLES, _ctx, CanvasGradient, CanvasPattern, namedEntities; //helper function to format a string\n\n\n\tfunction format(str, args) {\n\t  var keys = Object.keys(args),\n\t      i;\n\n\t  for (i = 0; i < keys.length; i++) {\n\t    str = str.replace(new RegExp(\"\\\\{\" + keys[i] + \"\\\\}\", \"gi\"), args[keys[i]]);\n\t  }\n\n\t  return str;\n\t} //helper function that generates a random string\n\n\n\tfunction randomString(holder) {\n\t  var chars, randomstring, i;\n\n\t  if (!holder) {\n\t    throw new Error(\"cannot create a random attribute name for an undefined object\");\n\t  }\n\n\t  chars = \"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n\t  randomstring = \"\";\n\n\t  do {\n\t    randomstring = \"\";\n\n\t    for (i = 0; i < 12; i++) {\n\t      randomstring += chars[Math.floor(Math.random() * chars.length)];\n\t    }\n\t  } while (holder[randomstring]);\n\n\t  return randomstring;\n\t} //helper function to map named to numbered entities\n\n\n\tfunction createNamedToNumberedLookup(items, radix) {\n\t  var i,\n\t      entity,\n\t      lookup = {},\n\t      base10;\n\t  items = items.split(',');\n\t  radix = radix || 10; // Map from named to numbered entities.\n\n\t  for (i = 0; i < items.length; i += 2) {\n\t    entity = '&' + items[i + 1] + ';';\n\t    base10 = parseInt(items[i], radix);\n\t    lookup[entity] = '&#' + base10 + ';';\n\t  } //FF and IE need to create a regex from hex values ie &nbsp; == \\xa0\n\n\n\t  lookup[\"\\\\xa0\"] = '&#160;';\n\t  return lookup;\n\t} //helper function to map canvas-textAlign to svg-textAnchor\n\n\n\tfunction getTextAnchor(textAlign) {\n\t  //TODO: support rtl languages\n\t  var mapping = {\n\t    \"left\": \"start\",\n\t    \"right\": \"end\",\n\t    \"center\": \"middle\",\n\t    \"start\": \"start\",\n\t    \"end\": \"end\"\n\t  };\n\t  return mapping[textAlign] || mapping.start;\n\t} //helper function to map canvas-textBaseline to svg-dominantBaseline\n\n\n\tfunction getDominantBaseline(textBaseline) {\n\t  //INFO: not supported in all browsers\n\t  var mapping = {\n\t    \"alphabetic\": \"alphabetic\",\n\t    \"hanging\": \"hanging\",\n\t    \"top\": \"text-before-edge\",\n\t    \"bottom\": \"text-after-edge\",\n\t    \"middle\": \"central\"\n\t  };\n\t  return mapping[textBaseline] || mapping.alphabetic;\n\t} // Unpack entities lookup where the numbers are in radix 32 to reduce the size\n\t// entity mapping courtesy of tinymce\n\n\n\tnamedEntities = createNamedToNumberedLookup('50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,' + '5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,' + '5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,' + '5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,' + '68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,' + '6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,' + '6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,' + '75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,' + '7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,' + '7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,' + 'sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,' + 'st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,' + 't9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,' + 'tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,' + 'u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,' + '81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,' + '8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,' + '8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,' + '8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,' + '8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,' + 'nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,' + 'rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,' + 'Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,' + '80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,' + '811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro', 32); //Some basic mappings for attributes and default values.\n\n\tSTYLES = {\n\t  \"strokeStyle\": {\n\t    svgAttr: \"stroke\",\n\t    //corresponding svg attribute\n\t    canvas: \"#000000\",\n\t    //canvas default\n\t    svg: \"none\",\n\t    //svg default\n\t    apply: \"stroke\" //apply on stroke() or fill()\n\n\t  },\n\t  \"fillStyle\": {\n\t    svgAttr: \"fill\",\n\t    canvas: \"#000000\",\n\t    svg: null,\n\t    //svg default is black, but we need to special case this to handle canvas stroke without fill\n\t    apply: \"fill\"\n\t  },\n\t  \"lineCap\": {\n\t    svgAttr: \"stroke-linecap\",\n\t    canvas: \"butt\",\n\t    svg: \"butt\",\n\t    apply: \"stroke\"\n\t  },\n\t  \"lineJoin\": {\n\t    svgAttr: \"stroke-linejoin\",\n\t    canvas: \"miter\",\n\t    svg: \"miter\",\n\t    apply: \"stroke\"\n\t  },\n\t  \"miterLimit\": {\n\t    svgAttr: \"stroke-miterlimit\",\n\t    canvas: 10,\n\t    svg: 4,\n\t    apply: \"stroke\"\n\t  },\n\t  \"lineWidth\": {\n\t    svgAttr: \"stroke-width\",\n\t    canvas: 1,\n\t    svg: 1,\n\t    apply: \"stroke\"\n\t  },\n\t  \"globalAlpha\": {\n\t    svgAttr: \"opacity\",\n\t    canvas: 1,\n\t    svg: 1,\n\t    apply: \"fill stroke\"\n\t  },\n\t  \"font\": {\n\t    //font converts to multiple svg attributes, there is custom logic for this\n\t    canvas: \"10px sans-serif\"\n\t  },\n\t  \"shadowColor\": {\n\t    canvas: \"#000000\"\n\t  },\n\t  \"shadowOffsetX\": {\n\t    canvas: 0\n\t  },\n\t  \"shadowOffsetY\": {\n\t    canvas: 0\n\t  },\n\t  \"shadowBlur\": {\n\t    canvas: 0\n\t  },\n\t  \"textAlign\": {\n\t    canvas: \"start\"\n\t  },\n\t  \"textBaseline\": {\n\t    canvas: \"alphabetic\"\n\t  },\n\t  \"lineDash\": {\n\t    svgAttr: \"stroke-dasharray\",\n\t    canvas: [],\n\t    svg: null,\n\t    apply: \"stroke\"\n\t  }\n\t};\n\t/**\n\t *\n\t * @param gradientNode - reference to the gradient\n\t * @constructor\n\t */\n\n\tCanvasGradient = function CanvasGradient(gradientNode, ctx) {\n\t  this.__root = gradientNode;\n\t  this.__ctx = ctx;\n\t};\n\t/**\n\t * Adds a color stop to the gradient root\n\t */\n\n\n\tCanvasGradient.prototype.addColorStop = function (offset, color) {\n\t  var stop = this.__ctx.__createElement(\"stop\"),\n\t      regex,\n\t      matches;\n\n\t  stop.setAttribute(\"offset\", offset);\n\n\t  if (color && color.indexOf(\"rgba\") !== -1) {\n\t    //separate alpha value, since webkit can't handle it\n\t    regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\n\t    matches = regex.exec(color);\n\t    stop.setAttribute(\"stop-color\", format(\"rgb({r},{g},{b})\", {\n\t      r: matches[1],\n\t      g: matches[2],\n\t      b: matches[3]\n\t    }));\n\t    stop.setAttribute(\"stop-opacity\", matches[4]);\n\t  } else {\n\t    stop.setAttribute(\"stop-color\", color);\n\t  }\n\n\t  this.__root.appendChild(stop);\n\t};\n\n\tCanvasPattern = function CanvasPattern(pattern, ctx) {\n\t  this.__root = pattern;\n\t  this.__ctx = ctx;\n\t};\n\t/**\n\t * The mock canvas context\n\t * @param config - options include:\n\t * ctx - existing Context2D to wrap around\n\t * width - width of your canvas (defaults to 500)\n\t * height - height of your canvas (defaults to 500)\n\t * enableMirroring - enables canvas mirroring (get image data) (defaults to false)\n\t * document - the document object (defaults to the current document)\n\t */\n\n\n\t_ctx = function ctx(config) {\n\t  if (!(this instanceof _ctx)) {\n\t    //did someone call this without new?\n\t    return new _ctx(config);\n\t  } // clone config\n\n\n\t  this.config = config; //setup options\n\n\t  this.width = config.width;\n\t  this.height = config.height;\n\t  this.enableMirroring = config.enableMirroring || false;\n\t  this.canvas = this; ///point back to this instance!\n\n\t  this.__document = document; // allow passing in an existing context to wrap around\n\t  // if a context is passed in, we know a canvas already exist\n\n\t  if (config.ctx) {\n\t    this.__ctx = config.ctx;\n\t  } else {\n\t    this.__canvas = this.__document.createElement(\"canvas\");\n\t    this.__ctx = this.__canvas.getContext(\"2d\");\n\t  } // give this canvas a type\n\n\n\t  this.isSVG = true;\n\n\t  this.__setDefaultStyles();\n\n\t  this.__stack = [this.__getStyleState()];\n\t  this.__groupStack = []; // root svg element\n\n\t  this.__root = this.__createElement(\"svg\");\n\n\t  this.__root.setAttribute(\"width\", this.width);\n\n\t  this.__root.setAttribute(\"height\", this.height); // allow contents to overflow svg bbox\n\n\n\t  this.__root.setAttribute('overflow', 'visible'); // viewbox\n\n\n\t  if (config.viewbox) {\n\t    var str = config.viewbox.x + ' ' + config.viewbox.y + ' ' + config.viewbox.width + ' ' + config.viewbox.height;\n\n\t    this.__root.setAttribute(\"viewBox\", str);\n\n\t    this.viewbox = config.viewbox;\n\t  } // make sure we don't generate the same ids in defs\n\n\n\t  this.__ids = {}; // defs\n\n\t  this.__defs = this.__createElement(\"defs\");\n\n\t  this.__root.appendChild(this.__defs);\n\n\t  this.multiLocusGap = config.multiLocusGap; // svg background color\n\n\t  var backdropConfig = {\n\t    id: 'svg_output_backdrop',\n\t    width: '100%',\n\t    height: '100%',\n\t    fill: config.backdropColor || 'white'\n\t  };\n\n\t  var backdropRect = this.__createElement('rect', backdropConfig);\n\n\t  this.__root.appendChild(backdropRect); // root group\n\n\n\t  this.__rootGroup = this.__createElement('g', {\n\t    id: 'root-group'\n\t  });\n\n\t  this.__root.appendChild(this.__rootGroup); // point current element to root group\n\n\n\t  this.__currentElement = this.__rootGroup;\n\t};\n\n\t_ctx.prototype.setWidth = function (width) {\n\t  this.width = width;\n\n\t  this.__root.setAttribute(\"width\", this.width);\n\n\t  var str = this.config.viewbox.x + ' ' + this.config.viewbox.y + ' ' + width + ' ' + this.config.viewbox.height;\n\n\t  this.__root.setAttribute(\"viewBox\", str);\n\t};\n\n\t_ctx.prototype.setHeight = function (height) {\n\t  this.height = height;\n\n\t  this.__root.setAttribute(\"height\", this.height);\n\n\t  var str = this.config.viewbox.x + ' ' + this.config.viewbox.y + ' ' + this.config.viewbox.width + ' ' + height;\n\n\t  this.__root.setAttribute(\"viewBox\", str);\n\t};\n\t/**\n\t * Creates the specified svg element\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__createElement = function (elementName, properties, resetFill) {\n\t  if (typeof properties === \"undefined\") {\n\t    properties = {};\n\t  }\n\n\t  var element = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", elementName);\n\n\t  if (resetFill) {\n\t    //if fill or stroke is not specified, the svg element should not display. By default SVG's fill is black.\n\t    element.setAttribute(\"fill\", \"none\");\n\t    element.setAttribute(\"stroke\", \"none\");\n\t  }\n\n\t  for (var _i = 0, _Object$keys = Object.keys(properties); _i < _Object$keys.length; _i++) {\n\t    var key = _Object$keys[_i];\n\t    element.setAttribute(key, properties[key]);\n\t  }\n\n\t  return element;\n\t};\n\t/**\n\t * Applies default canvas styles to the context\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__setDefaultStyles = function () {\n\t  //default 2d canvas context properties see:http://www.w3.org/TR/2dcontext/\n\t  var keys = Object.keys(STYLES),\n\t      i,\n\t      key;\n\n\t  for (i = 0; i < keys.length; i++) {\n\t    key = keys[i];\n\t    this[key] = STYLES[key].canvas;\n\t  }\n\t};\n\t/**\n\t * Applies styles on restore\n\t * @param styleState\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__applyStyleState = function (styleState) {\n\t  var keys = Object.keys(styleState),\n\t      i,\n\t      key;\n\n\t  for (i = 0; i < keys.length; i++) {\n\t    key = keys[i];\n\t    this[key] = styleState[key];\n\t  }\n\t};\n\t/**\n\t * Gets the current style state\n\t * @return {Object}\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__getStyleState = function () {\n\t  var i,\n\t      styleState = {},\n\t      keys = Object.keys(STYLES),\n\t      key;\n\n\t  for (i = 0; i < keys.length; i++) {\n\t    key = keys[i];\n\t    styleState[key] = this[key];\n\t  }\n\n\t  return styleState;\n\t};\n\t/**\n\t * Apples the current styles to the current SVG element. On \"ctx.fill\" or \"ctx.stroke\"\n\t * @param type\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__applyStyleToCurrentElement = function (type) {\n\t  var currentElement = this.__currentElement;\n\t  var currentStyleGroup = this.__currentElementsToStyle;\n\n\t  if (currentStyleGroup) {\n\t    currentElement.setAttribute(type, \"\");\n\t    currentElement = currentStyleGroup.element;\n\t    currentStyleGroup.children.forEach(function (node) {\n\t      node.setAttribute(type, \"\");\n\t    });\n\t  }\n\n\t  var keys = Object.keys(STYLES),\n\t      i,\n\t      style,\n\t      value,\n\t      id,\n\t      regex,\n\t      matches;\n\n\t  for (i = 0; i < keys.length; i++) {\n\t    style = STYLES[keys[i]];\n\t    value = this[keys[i]];\n\n\t    if (style.apply) {\n\t      //is this a gradient or pattern?\n\t      if (value instanceof CanvasPattern) {\n\t        //pattern\n\t        if (value.__ctx) {\n\t          //copy over defs\n\t          while (value.__ctx.__defs.childNodes.length) {\n\t            id = value.__ctx.__defs.childNodes[0].getAttribute(\"id\");\n\t            this.__ids[id] = id;\n\n\t            this.__defs.appendChild(value.__ctx.__defs.childNodes[0]);\n\t          }\n\t        }\n\n\t        currentElement.setAttribute(style.apply, format(\"url(#{id})\", {\n\t          id: value.__root.getAttribute(\"id\")\n\t        }));\n\t      } else if (value instanceof CanvasGradient) {\n\t        //gradient\n\t        currentElement.setAttribute(style.apply, format(\"url(#{id})\", {\n\t          id: value.__root.getAttribute(\"id\")\n\t        }));\n\t      } else if (style && style.apply.indexOf(type) !== -1 && style.svg !== value) {\n\t        if ((style.svgAttr === \"stroke\" || style.svgAttr === \"fill\") && value && value.indexOf(\"rgba\") !== -1) {\n\t          //separate alpha value, since illustrator can't handle it\n\t          regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\n\t          matches = regex.exec(value);\n\t          currentElement.setAttribute(style.svgAttr, format(\"rgb({r},{g},{b})\", {\n\t            r: matches[1],\n\t            g: matches[2],\n\t            b: matches[3]\n\t          })); //should take globalAlpha here\n\n\t          var opacity = matches[4];\n\t          var globalAlpha = this.globalAlpha;\n\n\t          if (globalAlpha != null) {\n\t            opacity *= globalAlpha;\n\t          }\n\n\t          currentElement.setAttribute(style.svgAttr + \"-opacity\", opacity);\n\t        } else {\n\t          var attr = style.svgAttr;\n\n\t          if (keys[i] === 'globalAlpha') {\n\t            attr = type + '-' + style.svgAttr;\n\n\t            if (currentElement.getAttribute(attr)) {\n\t              //fill-opacity or stroke-opacity has already been set by stroke or fill.\n\t              continue;\n\t            }\n\t          } //otherwise only update attribute if right type, and not svg default\n\n\n\t          currentElement.setAttribute(attr, value);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t/**\n\t * Will return the closest group or svg node. May return the current element.\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__closestGroupOrSvg = function (node) {\n\t  node = node || this.__currentElement;\n\n\t  if (node.nodeName === \"g\" || node.nodeName === \"svg\") {\n\t    return node;\n\t  } else {\n\t    return this.__closestGroupOrSvg(node.parentNode);\n\t  }\n\t};\n\t/**\n\t * Returns the serialized value of the svg so far\n\t * @param fixNamedEntities - Standalone SVG doesn't support named entities, which document.createTextNode encodes.\n\t *                           If true, we attempt to find all named entities and encode it as a numeric entity.\n\t * @return serialized svg\n\t */\n\n\n\t_ctx.prototype.getSerializedSvg = function (fixNamedEntities) {\n\t  var serialized = new XMLSerializer().serializeToString(this.__root),\n\t      keys,\n\t      i,\n\t      key,\n\t      value,\n\t      regexp;\n\t //IE search for a duplicate xmnls because they didn't implement setAttributeNS correctly\n\t  // xmlns = /xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\".+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg/gi;\n\t  // if (xmlns.test(serialized)) {\n\t  //     serialized = serialized.replace('xmlns=\"http://www.w3.org/2000/svg','xmlns:xlink=\"http://www.w3.org/1999/xlink');\n\t  // }\n\n\t  if (fixNamedEntities) {\n\t    keys = Object.keys(namedEntities); //loop over each named entity and replace with the proper equivalent.\n\n\t    for (i = 0; i < keys.length; i++) {\n\t      key = keys[i];\n\t      value = namedEntities[key];\n\t      regexp = new RegExp(key, \"gi\");\n\n\t      if (regexp.test(serialized)) {\n\t        serialized = serialized.replace(regexp, value);\n\t      }\n\t    }\n\t  }\n\n\t  return serialized;\n\t};\n\t/**\n\t * Returns the root svg\n\t * @return\n\t */\n\n\n\t_ctx.prototype.getSvg = function () {\n\t  return this.__root;\n\t};\n\t/**\n\t * Will generate a group tag.\n\t */\n\n\n\t_ctx.prototype.save = function () {\n\t  var group = this.__createElement(\"g\");\n\n\t  var parent = this.__closestGroupOrSvg();\n\n\t  this.__groupStack.push(parent);\n\n\t  parent.appendChild(group);\n\t  this.__currentElement = group;\n\n\t  this.__stack.push(this.__getStyleState());\n\t};\n\t/**\n\t * Sets current element to parent, or just root if already root\n\t */\n\n\n\t_ctx.prototype.restore = function () {\n\t  this.__currentElement = this.__groupStack.pop();\n\t  this.__currentElementsToStyle = null; //Clearing canvas will make the poped group invalid, currentElement is set to the root group node.\n\n\t  if (!this.__currentElement) {\n\t    this.__currentElement = this.__root.childNodes[1];\n\t  }\n\n\t  var state = this.__stack.pop();\n\n\t  this.__applyStyleState(state);\n\t};\n\t/**\n\t * Helper method to add transform\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__addTransform = function (t) {\n\t  //if the current element has siblings, add another group\n\t  var parent = this.__closestGroupOrSvg();\n\n\t  if (parent.childNodes.length > 0) {\n\t    if (this.__currentElement.nodeName === \"path\") {\n\t      if (!this.__currentElementsToStyle) this.__currentElementsToStyle = {\n\t        element: parent,\n\t        children: []\n\t      };\n\n\t      this.__currentElementsToStyle.children.push(this.__currentElement);\n\n\t      this.__applyCurrentDefaultPath();\n\t    }\n\n\t    var group = this.__createElement(\"g\");\n\n\t    parent.appendChild(group);\n\t    this.__currentElement = group;\n\t  }\n\n\t  var transform = this.__currentElement.getAttribute(\"transform\");\n\n\t  if (transform) {\n\t    transform += \" \";\n\t  } else {\n\t    transform = \"\";\n\t  }\n\n\t  transform += t;\n\n\t  this.__currentElement.setAttribute(\"transform\", transform);\n\t};\n\n\t_ctx.prototype.addTrackGroupWithTranslationAndClipRect = function (id, tx, ty, width, height, clipYOffset) {\n\t  // clip rect\n\t  var clip_id = id + '_clip_rect';\n\n\t  var clipPath = this.__createElement('clipPath', {\n\t    id: clip_id\n\t  });\n\n\t  this.__defs.appendChild(clipPath);\n\n\t  clipPath.appendChild(this.__createElement('rect', {\n\t    x: '0',\n\t    y: clipYOffset.toString(),\n\t    width: width.toString(),\n\t    height: height.toString()\n\t  }));\n\n\t  var group = this.__createElement('g');\n\n\t  this.__rootGroup.appendChild(group);\n\n\t  group.setAttribute('transform', format('translate({x},{y})', {\n\t    x: tx,\n\t    y: ty\n\t  }));\n\t  group.setAttribute('id', id + '_group'); // add clip rect\n\n\t  group.setAttribute('clip-path', format('url(#{id})', {\n\t    id: clip_id\n\t  }));\n\t  this.__currentElement = group;\n\t};\n\t/**\n\t *  scales the current element\n\t */\n\n\n\t_ctx.prototype.scale = function (x, y) {\n\t  if (y === undefined) {\n\t    y = x;\n\t  }\n\n\t  this.__addTransform(format(\"scale({x},{y})\", {\n\t    x: x,\n\t    y: y\n\t  }));\n\t};\n\t/**\n\t * rotates the current element\n\t */\n\n\n\t_ctx.prototype.rotate = function (angle) {\n\t  var degrees = angle * 180 / Math.PI;\n\n\t  this.__addTransform(format(\"rotate({angle},{cx},{cy})\", {\n\t    angle: degrees,\n\t    cx: 0,\n\t    cy: 0\n\t  }));\n\t};\n\t/**\n\t * translates the current element\n\t */\n\n\n\t_ctx.prototype.translate = function (x, y) {\n\t  this.__addTransform(format(\"translate({x},{y})\", {\n\t    x: x,\n\t    y: y\n\t  }));\n\t};\n\t/**\n\t * applies a transform to the current element\n\t */\n\n\n\t_ctx.prototype.transform = function (a, b, c, d, e, f) {\n\t  this.__addTransform(format(\"matrix({a},{b},{c},{d},{e},{f})\", {\n\t    a: a,\n\t    b: b,\n\t    c: c,\n\t    d: d,\n\t    e: e,\n\t    f: f\n\t  }));\n\t};\n\t/**\n\t * Create a new Path Element\n\t */\n\n\n\t_ctx.prototype.beginPath = function () {\n\t  var path, parent; // Note that there is only one current default path, it is not part of the drawing state.\n\t  // See also: https://html.spec.whatwg.org/multipage/scripting.html#current-default-path\n\n\t  this.__currentDefaultPath = \"\";\n\t  this.__currentPosition = {};\n\t  path = this.__createElement(\"path\", {}, true);\n\t  parent = this.__closestGroupOrSvg();\n\t  parent.appendChild(path);\n\t  this.__currentElement = path;\n\t};\n\t/**\n\t * Helper function to apply currentDefaultPath to current path element\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__applyCurrentDefaultPath = function () {\n\t  var currentElement = this.__currentElement;\n\n\t  if (currentElement.nodeName === \"path\") {\n\t    currentElement.setAttribute(\"d\", this.__currentDefaultPath);\n\t  } else {\n\t    console.error(\"Attempted to apply path command to node\", currentElement.nodeName);\n\t  }\n\t};\n\t/**\n\t * Helper function to add path command\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__addPathCommand = function (command) {\n\t  this.__currentDefaultPath += \" \";\n\t  this.__currentDefaultPath += command;\n\t};\n\t/**\n\t * Adds the move command to the current path element,\n\t * if the currentPathElement is not empty create a new path element\n\t */\n\n\n\t_ctx.prototype.moveTo = function (x, y) {\n\t  if (this.__currentElement.nodeName !== \"path\") {\n\t    this.beginPath();\n\t  } // creates a new subpath with the given point\n\n\n\t  this.__currentPosition = {\n\t    x: x,\n\t    y: y\n\t  };\n\n\t  this.__addPathCommand(format(\"M {x} {y}\", {\n\t    x: x,\n\t    y: y\n\t  }));\n\t};\n\t/**\n\t * Closes the current path\n\t */\n\n\n\t_ctx.prototype.closePath = function () {\n\t  if (this.__currentDefaultPath) {\n\t    this.__addPathCommand(\"Z\");\n\t  }\n\t};\n\t/**\n\t * Adds a line to command\n\t */\n\n\n\t_ctx.prototype.lineTo = function (x, y) {\n\t  this.__currentPosition = {\n\t    x: x,\n\t    y: y\n\t  };\n\n\t  if (this.__currentDefaultPath && this.__currentDefaultPath.indexOf('M') > -1) {\n\t    this.__addPathCommand(format(\"L {x} {y}\", {\n\t      x: x,\n\t      y: y\n\t    }));\n\t  } else {\n\t    this.__addPathCommand(format(\"M {x} {y}\", {\n\t      x: x,\n\t      y: y\n\t    }));\n\t  }\n\t};\n\t/**\n\t * Add a bezier command\n\t */\n\n\n\t_ctx.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t  this.__currentPosition = {\n\t    x: x,\n\t    y: y\n\t  };\n\n\t  this.__addPathCommand(format(\"C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}\", {\n\t    cp1x: cp1x,\n\t    cp1y: cp1y,\n\t    cp2x: cp2x,\n\t    cp2y: cp2y,\n\t    x: x,\n\t    y: y\n\t  }));\n\t};\n\t/**\n\t * Adds a quadratic curve to command\n\t */\n\n\n\t_ctx.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\n\t  this.__currentPosition = {\n\t    x: x,\n\t    y: y\n\t  };\n\n\t  this.__addPathCommand(format(\"Q {cpx} {cpy} {x} {y}\", {\n\t    cpx: cpx,\n\t    cpy: cpy,\n\t    x: x,\n\t    y: y\n\t  }));\n\t};\n\t/**\n\t * Return a new normalized vector of given vector\n\t */\n\n\n\tvar normalize$1 = function normalize(vector) {\n\t  var len = Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1]);\n\t  return [vector[0] / len, vector[1] / len];\n\t};\n\t/**\n\t * Adds the arcTo to the current path\n\t *\n\t * @see http://www.w3.org/TR/2015/WD-2dcontext-20150514/#dom-context-2d-arcto\n\t */\n\n\n\t_ctx.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n\t  // Let the point (x0, y0) be the last point in the subpath.\n\t  var x0 = this.__currentPosition && this.__currentPosition.x;\n\t  var y0 = this.__currentPosition && this.__currentPosition.y; // First ensure there is a subpath for (x1, y1).\n\n\t  if (typeof x0 == \"undefined\" || typeof y0 == \"undefined\") {\n\t    return;\n\t  } // Negative values for radius must cause the implementation to throw an IndexSizeError exception.\n\n\n\t  if (radius < 0) {\n\t    throw new Error(\"IndexSizeError: The radius provided (\" + radius + \") is negative.\");\n\t  } // If the point (x0, y0) is equal to the point (x1, y1),\n\t  // or if the point (x1, y1) is equal to the point (x2, y2),\n\t  // or if the radius radius is zero,\n\t  // then the method must add the point (x1, y1) to the subpath,\n\t  // and connect that point to the previous point (x0, y0) by a straight line.\n\n\n\t  if (x0 === x1 && y0 === y1 || x1 === x2 && y1 === y2 || radius === 0) {\n\t    this.lineTo(x1, y1);\n\t    return;\n\t  } // Otherwise, if the points (x0, y0), (x1, y1), and (x2, y2) all lie on a single straight line,\n\t  // then the method must add the point (x1, y1) to the subpath,\n\t  // and connect that point to the previous point (x0, y0) by a straight line.\n\n\n\t  var unit_vec_p1_p0 = normalize$1([x0 - x1, y0 - y1]);\n\t  var unit_vec_p1_p2 = normalize$1([x2 - x1, y2 - y1]);\n\n\t  if (unit_vec_p1_p0[0] * unit_vec_p1_p2[1] === unit_vec_p1_p0[1] * unit_vec_p1_p2[0]) {\n\t    this.lineTo(x1, y1);\n\t    return;\n\t  } // Otherwise, let The Arc be the shortest arc given by circumference of the circle that has radius radius,\n\t  // and that has one point tangent to the half-infinite line that crosses the point (x0, y0) and ends at the point (x1, y1),\n\t  // and that has a different point tangent to the half-infinite line that ends at the point (x1, y1), and crosses the point (x2, y2).\n\t  // The points at which this circle touches these two lines are called the start and end tangent points respectively.\n\t  // note that both vectors are unit vectors, so the length is 1\n\n\n\t  var cos = unit_vec_p1_p0[0] * unit_vec_p1_p2[0] + unit_vec_p1_p0[1] * unit_vec_p1_p2[1];\n\t  var theta = Math.acos(Math.abs(cos)); // Calculate origin\n\n\t  var unit_vec_p1_origin = normalize$1([unit_vec_p1_p0[0] + unit_vec_p1_p2[0], unit_vec_p1_p0[1] + unit_vec_p1_p2[1]]);\n\t  var len_p1_origin = radius / Math.sin(theta / 2);\n\t  var x = x1 + len_p1_origin * unit_vec_p1_origin[0];\n\t  var y = y1 + len_p1_origin * unit_vec_p1_origin[1]; // Calculate start angle and end angle\n\t  // rotate 90deg clockwise (note that y axis points to its down)\n\n\t  var unit_vec_origin_start_tangent = [-unit_vec_p1_p0[1], unit_vec_p1_p0[0]]; // rotate 90deg counter clockwise (note that y axis points to its down)\n\n\t  var unit_vec_origin_end_tangent = [unit_vec_p1_p2[1], -unit_vec_p1_p2[0]];\n\n\t  var getAngle = function getAngle(vector) {\n\t    // get angle (clockwise) between vector and (1, 0)\n\t    var x = vector[0];\n\t    var y = vector[1];\n\n\t    if (y >= 0) {\n\t      // note that y axis points to its down\n\t      return Math.acos(x);\n\t    } else {\n\t      return -Math.acos(x);\n\t    }\n\t  };\n\n\t  var startAngle = getAngle(unit_vec_origin_start_tangent);\n\t  var endAngle = getAngle(unit_vec_origin_end_tangent); // Connect the point (x0, y0) to the start tangent point by a straight line\n\n\t  this.lineTo(x + unit_vec_origin_start_tangent[0] * radius, y + unit_vec_origin_start_tangent[1] * radius); // Connect the start tangent point to the end tangent point by arc\n\t  // and adding the end tangent point to the subpath.\n\n\t  this.arc(x, y, radius, startAngle, endAngle);\n\t};\n\t/**\n\t * Sets the stroke property on the current element\n\t */\n\n\n\t_ctx.prototype.stroke = function () {\n\t  if (this.__currentElement.nodeName === \"path\") {\n\t    this.__currentElement.setAttribute(\"paint-order\", \"fill stroke markers\");\n\t  }\n\n\t  this.__applyCurrentDefaultPath();\n\n\t  this.__applyStyleToCurrentElement(\"stroke\");\n\t};\n\t/**\n\t * Sets fill properties on the current element\n\t */\n\n\n\t_ctx.prototype.fill = function () {\n\t  if (this.__currentElement.nodeName === \"path\") {\n\t    this.__currentElement.setAttribute(\"paint-order\", \"stroke fill markers\");\n\t  }\n\n\t  this.__applyCurrentDefaultPath();\n\n\t  this.__applyStyleToCurrentElement(\"fill\");\n\t};\n\t/**\n\t *  Adds a rectangle to the path.\n\t */\n\n\n\t_ctx.prototype.rect = function (x, y, width, height) {\n\t  if (this.__currentElement.nodeName !== \"path\") {\n\t    this.beginPath();\n\t  }\n\n\t  this.moveTo(x, y);\n\t  this.lineTo(x + width, y);\n\t  this.lineTo(x + width, y + height);\n\t  this.lineTo(x, y + height);\n\t  this.lineTo(x, y);\n\t  this.closePath();\n\t};\n\t/**\n\t * adds a rectangle element\n\t */\n\n\n\t_ctx.prototype.fillRect = function (x, y, width, height) {\n\t  // See if rect instersects current viewbox\n\t  var r2 = {\n\t    x: x,\n\t    y: y,\n\t    width: width,\n\t    height: height\n\t  };\n\n\t  if (this.viewbox) {\n\t    if (!intersectRect(this.viewbox, r2)) {\n\t      return;\n\t    }\n\t  }\n\n\t  var rect, parent;\n\t  rect = this.__createElement(\"rect\", r2, true);\n\t  parent = this.__closestGroupOrSvg();\n\t  parent.appendChild(rect);\n\t  this.__currentElement = rect;\n\n\t  this.__applyStyleToCurrentElement(\"fill\");\n\t};\n\n\tfunction intersectRect(rect1, rect2) {\n\t  return rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x && rect1.y < rect2.y + rect2.height && rect1.y + rect1.height > rect2.y;\n\t}\n\t/**\n\t * Draws a rectangle with no fill\n\t * @param x\n\t * @param y\n\t * @param width\n\t * @param height\n\t */\n\n\n\t_ctx.prototype.strokeRect = function (x, y, width, height) {\n\t  var rect, parent;\n\t  rect = this.__createElement(\"rect\", {\n\t    x: x,\n\t    y: y,\n\t    width: width,\n\t    height: height\n\t  }, true);\n\t  parent = this.__closestGroupOrSvg();\n\t  parent.appendChild(rect);\n\t  this.__currentElement = rect;\n\n\t  this.__applyStyleToCurrentElement(\"stroke\");\n\t};\n\t/**\n\t * Clear entire canvas:\n\t * 1. save current transforms\n\t * 2. remove all the childNodes of the root g element\n\t */\n\n\n\t_ctx.prototype.__clearCanvas = function () {\n\t  var current = this.__closestGroupOrSvg(),\n\t      transform = current.getAttribute(\"transform\");\n\n\t  var rootGroup = this.__root.childNodes[1];\n\t  var childNodes = rootGroup.childNodes;\n\n\t  for (var i = childNodes.length - 1; i >= 0; i--) {\n\t    if (childNodes[i]) {\n\t      rootGroup.removeChild(childNodes[i]);\n\t    }\n\t  }\n\n\t  this.__currentElement = rootGroup; //reset __groupStack as all the child group nodes are all removed.\n\n\t  this.__groupStack = [];\n\n\t  if (transform) {\n\t    this.__addTransform(transform);\n\t  }\n\t};\n\t/**\n\t * \"Clears\" a canvas by just drawing a white rectangle in the current group.\n\t */\n\n\n\t_ctx.prototype.clearRect = function (x, y, width, height) {\n\t  //clear entire canvas\n\t  if (x === 0 && y === 0 && width === this.width && height === this.height) {\n\t    this.__clearCanvas();\n\n\t    return;\n\t  }\n\n\t  var rect,\n\t      parent = this.__closestGroupOrSvg();\n\n\t  rect = this.__createElement(\"rect\", {\n\t    x: x,\n\t    y: y,\n\t    width: width,\n\t    height: height,\n\t    fill: \"#FFFFFF\"\n\t  }, true);\n\t  parent.appendChild(rect);\n\t};\n\t/**\n\t * Adds a linear gradient to a defs tag.\n\t * Returns a canvas gradient object that has a reference to it's parent def\n\t */\n\n\n\t_ctx.prototype.createLinearGradient = function (x1, y1, x2, y2) {\n\t  var grad = this.__createElement(\"linearGradient\", {\n\t    id: randomString(this.__ids),\n\t    x1: x1 + \"px\",\n\t    x2: x2 + \"px\",\n\t    y1: y1 + \"px\",\n\t    y2: y2 + \"px\",\n\t    \"gradientUnits\": \"userSpaceOnUse\"\n\t  }, false);\n\n\t  this.__defs.appendChild(grad);\n\n\t  return new CanvasGradient(grad, this);\n\t};\n\t/**\n\t * Adds a radial gradient to a defs tag.\n\t * Returns a canvas gradient object that has a reference to it's parent def\n\t */\n\n\n\t_ctx.prototype.createRadialGradient = function (x0, y0, r0, x1, y1, r1) {\n\t  var grad = this.__createElement(\"radialGradient\", {\n\t    id: randomString(this.__ids),\n\t    cx: x1 + \"px\",\n\t    cy: y1 + \"px\",\n\t    r: r1 + \"px\",\n\t    fx: x0 + \"px\",\n\t    fy: y0 + \"px\",\n\t    \"gradientUnits\": \"userSpaceOnUse\"\n\t  }, false);\n\n\t  this.__defs.appendChild(grad);\n\n\t  return new CanvasGradient(grad, this);\n\t};\n\t/**\n\t * Parses the font string and returns svg mapping\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__parseFont = function () {\n\t  var regex = /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\'\\\"\\sa-z0-9]+?)\\s*$/i;\n\t  var fontPart = regex.exec(this.font);\n\t  var data = {\n\t    style: fontPart[1] || 'normal',\n\t    size: fontPart[4] || '10px',\n\t    family: fontPart[6] || 'sans-serif',\n\t    weight: fontPart[3] || 'normal',\n\t    decoration: fontPart[2] || 'normal',\n\t    href: null\n\t  }; //canvas doesn't support underline natively, but we can pass this attribute\n\n\t  if (this.__fontUnderline === \"underline\") {\n\t    data.decoration = \"underline\";\n\t  } //canvas also doesn't support linking, but we can pass this as well\n\n\n\t  if (this.__fontHref) {\n\t    data.href = this.__fontHref;\n\t  }\n\n\t  return data;\n\t};\n\t/**\n\t * Helper to link text fragments\n\t * @param font\n\t * @param element\n\t * @return {*}\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__wrapTextLink = function (font, element) {\n\t  if (font.href) {\n\t    var a = this.__createElement(\"a\");\n\n\t    a.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", font.href);\n\t    a.appendChild(element);\n\t    return a;\n\t  }\n\n\t  return element;\n\t};\n\t/**\n\t * Fills or strokes text\n\t * @param text\n\t * @param x\n\t * @param y\n\t * @param action - stroke or fill\n\t * @private\n\t */\n\n\n\t_ctx.prototype.__applyText = function (text, x, y, action) {\n\t  var font = this.__parseFont(),\n\t      parent = this.__closestGroupOrSvg(),\n\t      textElement = this.__createElement(\"text\", {\n\t    \"font-family\": font.family,\n\t    \"font-size\": font.size,\n\t    \"font-style\": font.style,\n\t    \"font-weight\": font.weight,\n\t    \"text-decoration\": font.decoration,\n\t    \"x\": x,\n\t    \"y\": y,\n\t    \"text-anchor\": getTextAnchor(this.textAlign),\n\t    \"dominant-baseline\": getDominantBaseline(this.textBaseline)\n\t  }, true);\n\n\t  textElement.appendChild(this.__document.createTextNode(text));\n\t  this.__currentElement = textElement;\n\n\t  this.__applyStyleToCurrentElement(action);\n\n\t  parent.appendChild(this.__wrapTextLink(font, textElement));\n\t};\n\t/**\n\t * Creates a text element\n\t * @param text\n\t * @param x\n\t * @param y\n\t */\n\n\n\t_ctx.prototype.fillText = function (text, x, y) {\n\t  this.__applyText(text, x, y, \"fill\");\n\t};\n\t/**\n\t * Strokes text\n\t * @param text\n\t * @param x\n\t * @param y\n\t */\n\n\n\t_ctx.prototype.strokeText = function (text, x, y) {\n\t  this.__applyText(text, x, y, \"stroke\");\n\t};\n\t/**\n\t * No need to implement this for svg.\n\t * @param text\n\t * @return {TextMetrics}\n\t */\n\n\n\t_ctx.prototype.measureText = function (text) {\n\t  this.__ctx.font = this.font;\n\t  return this.__ctx.measureText(text);\n\t};\n\t/**\n\t *  Arc command!\n\t */\n\n\n\t_ctx.prototype.arc = function (x, y, radius, startAngle, endAngle, counterClockwise) {\n\t  // in canvas no circle is drawn if no angle is provided.\n\t  if (startAngle === endAngle) {\n\t    return;\n\t  }\n\n\t  startAngle = startAngle % (2 * Math.PI);\n\t  endAngle = endAngle % (2 * Math.PI);\n\n\t  if (startAngle === endAngle) {\n\t    //circle time! subtract some of the angle so svg is happy (svg elliptical arc can't draw a full circle)\n\t    endAngle = (endAngle + 2 * Math.PI - 0.001 * (counterClockwise ? -1 : 1)) % (2 * Math.PI);\n\t  }\n\n\t  var endX = x + radius * Math.cos(endAngle),\n\t      endY = y + radius * Math.sin(endAngle),\n\t      startX = x + radius * Math.cos(startAngle),\n\t      startY = y + radius * Math.sin(startAngle),\n\t      sweepFlag = counterClockwise ? 0 : 1,\n\t      largeArcFlag = 0,\n\t      diff = endAngle - startAngle; // https://github.com/gliffy/canvas2svg/issues/4\n\n\t  if (diff < 0) {\n\t    diff += 2 * Math.PI;\n\t  }\n\n\t  if (counterClockwise) {\n\t    largeArcFlag = diff > Math.PI ? 0 : 1;\n\t  } else {\n\t    largeArcFlag = diff > Math.PI ? 1 : 0;\n\t  }\n\n\t  this.lineTo(startX, startY);\n\n\t  this.__addPathCommand(format(\"A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}\", {\n\t    rx: radius,\n\t    ry: radius,\n\t    xAxisRotation: 0,\n\t    largeArcFlag: largeArcFlag,\n\t    sweepFlag: sweepFlag,\n\t    endX: endX,\n\t    endY: endY\n\t  }));\n\n\t  this.__currentPosition = {\n\t    x: endX,\n\t    y: endY\n\t  };\n\t};\n\t/**\n\t * Generates a ClipPath from the clip command.\n\t */\n\n\n\t_ctx.prototype.clip = function () {\n\t  var group = this.__closestGroupOrSvg(),\n\t      clipPath = this.__createElement(\"clipPath\"),\n\t      id = randomString(this.__ids),\n\t      newGroup = this.__createElement(\"g\");\n\n\t  this.__applyCurrentDefaultPath();\n\n\t  group.removeChild(this.__currentElement);\n\t  clipPath.setAttribute(\"id\", id);\n\t  clipPath.appendChild(this.__currentElement);\n\n\t  this.__defs.appendChild(clipPath); //set the clip path to this group\n\n\n\t  group.setAttribute(\"clip-path\", format(\"url(#{id})\", {\n\t    id: id\n\t  })); //clip paths can be scaled and transformed, we need to add another wrapper group to avoid later transformations\n\t  // to this path\n\n\t  group.appendChild(newGroup);\n\t  this.__currentElement = newGroup;\n\t};\n\t/**\n\t * Draws a canvas, image or mock context to this canvas.\n\t * Note that all svg dom manipulation uses node.childNodes rather than node.children for IE support.\n\t * http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-drawimage\n\t */\n\n\n\t_ctx.prototype.drawImage = function () {\n\t  //convert arguments to a real array\n\t  var args = Array.prototype.slice.call(arguments),\n\t      image = args[0],\n\t      dx,\n\t      dy,\n\t      dw,\n\t      dh,\n\t      sx = 0,\n\t      sy = 0,\n\t      sw,\n\t      sh,\n\t      parent,\n\t      svg,\n\t      defs,\n\t      group,\n\t      currentElement,\n\t      svgImage,\n\t      canvas,\n\t      context,\n\t      id;\n\n\t  if (args.length === 3) {\n\t    dx = args[1];\n\t    dy = args[2];\n\t    sw = image.width;\n\t    sh = image.height;\n\t    dw = sw;\n\t    dh = sh;\n\t  } else if (args.length === 5) {\n\t    dx = args[1];\n\t    dy = args[2];\n\t    dw = args[3];\n\t    dh = args[4];\n\t    sw = image.width;\n\t    sh = image.height;\n\t  } else if (args.length === 9) {\n\t    sx = args[1];\n\t    sy = args[2];\n\t    sw = args[3];\n\t    sh = args[4];\n\t    dx = args[5];\n\t    dy = args[6];\n\t    dw = args[7];\n\t    dh = args[8];\n\t  } else {\n\t    throw new Error(\"Invalid number of arguments passed to drawImage: \" + arguments.length);\n\t  }\n\n\t  parent = this.__closestGroupOrSvg();\n\t  currentElement = this.__currentElement;\n\t  var translateDirective = \"translate(\" + dx + \", \" + dy + \")\";\n\n\t  if (image instanceof _ctx) {\n\t    //canvas2svg mock canvas context. In the future we may want to clone nodes instead.\n\t    //also I'm currently ignoring dw, dh, sw, sh, sx, sy for a mock context.\n\t    svg = image.getSvg().cloneNode(true);\n\n\t    if (svg.childNodes && svg.childNodes.length > 1) {\n\t      defs = svg.childNodes[0];\n\n\t      while (defs.childNodes.length) {\n\t        id = defs.childNodes[0].getAttribute(\"id\");\n\t        this.__ids[id] = id;\n\n\t        this.__defs.appendChild(defs.childNodes[0]);\n\t      }\n\n\t      group = svg.childNodes[1];\n\n\t      if (group) {\n\t        //save original transform\n\t        var originTransform = group.getAttribute(\"transform\");\n\t        var transformDirective;\n\n\t        if (originTransform) {\n\t          transformDirective = originTransform + \" \" + translateDirective;\n\t        } else {\n\t          transformDirective = translateDirective;\n\t        }\n\n\t        group.setAttribute(\"transform\", transformDirective);\n\t        parent.appendChild(group);\n\t      }\n\t    }\n\t  } else if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\n\t    //canvas or image\n\t    svgImage = this.__createElement(\"image\");\n\t    svgImage.setAttribute(\"width\", dw);\n\t    svgImage.setAttribute(\"height\", dh);\n\t    svgImage.setAttribute(\"preserveAspectRatio\", \"none\");\n\n\t    if (sx || sy || sw !== image.width || sh !== image.height) {\n\t      //crop the image using a temporary canvas\n\t      canvas = this.__document.createElement(\"canvas\");\n\t      canvas.width = dw;\n\t      canvas.height = dh;\n\t      context = canvas.getContext(\"2d\");\n\t      context.drawImage(image, sx, sy, sw, sh, 0, 0, dw, dh);\n\t      image = canvas;\n\t    }\n\n\t    svgImage.setAttribute(\"transform\", translateDirective);\n\t    svgImage.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", image.nodeName === \"CANVAS\" ? image.toDataURL() : image.getAttribute(\"src\"));\n\t    parent.appendChild(svgImage);\n\t  }\n\t};\n\t/**\n\t * Generates a pattern tag\n\t */\n\n\n\t_ctx.prototype.createPattern = function (image, repetition) {\n\t  var pattern = this.__document.__createElement(\"pattern\");\n\n\t  var id = randomString(this.__ids);\n\t  var img;\n\t  pattern.setAttribute(\"id\", id);\n\t  pattern.setAttribute(\"width\", image.width);\n\t  pattern.setAttribute(\"height\", image.height);\n\n\t  if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\n\t    img = this.__createElement(\"image\");\n\t    img.setAttribute(\"width\", image.width);\n\t    img.setAttribute(\"height\", image.height);\n\t    img.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", image.nodeName === \"CANVAS\" ? image.toDataURL() : image.getAttribute(\"src\"));\n\t    pattern.appendChild(img);\n\n\t    this.__defs.appendChild(pattern);\n\t  } else if (image instanceof _ctx) {\n\t    pattern.appendChild(image.__root.childNodes[1]);\n\n\t    this.__defs.appendChild(pattern);\n\t  }\n\n\t  return new CanvasPattern(pattern, this);\n\t};\n\n\t_ctx.prototype.setLineDash = function (dashArray) {\n\t  if (dashArray && dashArray.length > 0) {\n\t    this.lineDash = dashArray.join(\",\");\n\t  } else {\n\t    this.lineDash = null;\n\t  }\n\t};\n\t/**\n\t * Not yet implemented\n\t */\n\n\n\t_ctx.prototype.drawFocusRing = function () {};\n\n\t_ctx.prototype.createImageData = function () {};\n\n\t_ctx.prototype.getImageData = function () {};\n\n\t_ctx.prototype.putImageData = function () {};\n\n\t_ctx.prototype.globalCompositeOperation = function () {};\n\n\t_ctx.prototype.setTransform = function () {};\n\n\tvar C2S = _ctx;\n\n\t/**\n\t * Make the target element movable by clicking and dragging on the handle.  This is not a general purprose function,\n\t * it makes several options specific to igv dialogs, the primary one being that the\n\t * target is absolutely positioned in pixel coordinates\n\n\t */\n\n\tvar namespace = \".igv_drag\";\n\tvar dragData; // Its assumed we are only dragging one element at a time.\n\n\tfunction makeDraggable(target, handle) {\n\t  $(handle).on('mousedown' + namespace, dragStart.bind(target));\n\t}\n\n\tfunction dragStart(event) {\n\t  event.stopPropagation();\n\t  event.preventDefault();\n\t  var styleX = Math.round(parseFloat(this.style.left.replace(\"px\", \"\")));\n\t  var styleY = Math.round(parseFloat(this.style.top.replace(\"px\", \"\")));\n\t  var dragFunction = drag.bind(this);\n\t  var dragEndFunction = dragEnd.bind(this);\n\t  dragData = {\n\t    dragFunction: dragFunction,\n\t    dragEndFunction: dragEndFunction,\n\t    dx: styleX - event.screenX,\n\t    dy: styleY - event.screenY\n\t  };\n\t  $(document).on('mousemove' + namespace, dragFunction);\n\t  $(document).on('mouseup' + namespace, dragEndFunction);\n\t  $(document).on('mouseleave' + namespace, dragEndFunction);\n\t  $(document).on('mouseexit' + namespace, dragEndFunction);\n\t}\n\n\tfunction drag(event) {\n\t  if (!dragData) {\n\t    return;\n\t  }\n\n\t  event.stopPropagation();\n\t  event.preventDefault();\n\t  var styleX = dragData.dx + event.screenX;\n\t  var styleY = dragData.dy + event.screenY;\n\t  this.style.left = styleX + \"px\";\n\t  this.style.top = styleY + \"px\"; // console.log('drag ' + 'x ' + styleX + ' y ' + styleY);\n\t}\n\n\tfunction dragEnd(event) {\n\t  if (!dragData) {\n\t    return;\n\t  }\n\n\t  event.stopPropagation();\n\t  event.preventDefault();\n\t  var styleX = dragData.dx + event.screenX;\n\t  var styleY = dragData.dy + event.screenY; // console.log('drag end ' + 'x ' + styleX + ' y ' + styleY);\n\n\t  this.style.left = styleX + \"px\";\n\t  this.style.top = styleY + \"px\";\n\t  $(document).off(namespace);\n\t  dragData = undefined;\n\t}\n\n\tvar trim$1 = stringTrim.trim;\n\tvar $parseInt = global_1.parseInt;\n\tvar hex = /^[+-]?0[Xx]/;\n\tvar FORCED$4 = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22; // `parseInt` method\n\t// https://tc39.github.io/ecma262/#sec-parseint-string-radix\n\n\tvar numberParseInt = FORCED$4 ? function parseInt(string, radix) {\n\t  var S = trim$1(String(string));\n\t  return $parseInt(S, radix >>> 0 || (hex.test(S) ? 16 : 10));\n\t} : $parseInt;\n\n\t// https://tc39.github.io/ecma262/#sec-number.parseint\n\n\t_export({\n\t  target: 'Number',\n\t  stat: true,\n\t  forced: Number.parseInt != numberParseInt\n\t}, {\n\t  parseInt: numberParseInt\n\t});\n\n\tvar freezing = !fails(function () {\n\t  return Object.isExtensible(Object.preventExtensions({}));\n\t});\n\n\tvar internalMetadata = createCommonjsModule(function (module) {\n\t  var defineProperty = objectDefineProperty.f;\n\t  var METADATA = uid('meta');\n\t  var id = 0;\n\n\t  var isExtensible = Object.isExtensible || function () {\n\t    return true;\n\t  };\n\n\t  var setMetadata = function (it) {\n\t    defineProperty(it, METADATA, {\n\t      value: {\n\t        objectID: 'O' + ++id,\n\t        // object ID\n\t        weakData: {} // weak collections IDs\n\n\t      }\n\t    });\n\t  };\n\n\t  var fastKey = function (it, create) {\n\t    // return a primitive with prefix\n\t    if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n\n\t    if (!has(it, METADATA)) {\n\t      // can't set metadata to uncaught frozen object\n\t      if (!isExtensible(it)) return 'F'; // not necessary to add metadata\n\n\t      if (!create) return 'E'; // add missing metadata\n\n\t      setMetadata(it); // return object ID\n\t    }\n\n\t    return it[METADATA].objectID;\n\t  };\n\n\t  var getWeakData = function (it, create) {\n\t    if (!has(it, METADATA)) {\n\t      // can't set metadata to uncaught frozen object\n\t      if (!isExtensible(it)) return true; // not necessary to add metadata\n\n\t      if (!create) return false; // add missing metadata\n\n\t      setMetadata(it); // return the store of weak collections IDs\n\t    }\n\n\t    return it[METADATA].weakData;\n\t  }; // add metadata on freeze-family methods calling\n\n\n\t  var onFreeze = function (it) {\n\t    if (freezing && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n\t    return it;\n\t  };\n\n\t  var meta = module.exports = {\n\t    REQUIRED: false,\n\t    fastKey: fastKey,\n\t    getWeakData: getWeakData,\n\t    onFreeze: onFreeze\n\t  };\n\t  hiddenKeys[METADATA] = true;\n\t});\n\tvar internalMetadata_1 = internalMetadata.REQUIRED;\n\tvar internalMetadata_2 = internalMetadata.fastKey;\n\tvar internalMetadata_3 = internalMetadata.getWeakData;\n\tvar internalMetadata_4 = internalMetadata.onFreeze;\n\n\tvar collection = function (CONSTRUCTOR_NAME, wrapper, common) {\n\t  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n\t  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n\t  var ADDER = IS_MAP ? 'set' : 'add';\n\t  var NativeConstructor = global_1[CONSTRUCTOR_NAME];\n\t  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n\t  var Constructor = NativeConstructor;\n\t  var exported = {};\n\n\t  var fixMethod = function (KEY) {\n\t    var nativeMethod = NativePrototype[KEY];\n\t    redefine(NativePrototype, KEY, KEY == 'add' ? function add(value) {\n\t      nativeMethod.call(this, value === 0 ? 0 : value);\n\t      return this;\n\t    } : KEY == 'delete' ? function (key) {\n\t      return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n\t    } : KEY == 'get' ? function get(key) {\n\t      return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n\t    } : KEY == 'has' ? function has(key) {\n\t      return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n\t    } : function set(key, value) {\n\t      nativeMethod.call(this, key === 0 ? 0 : key, value);\n\t      return this;\n\t    });\n\t  }; // eslint-disable-next-line max-len\n\n\n\t  if (isForced_1(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n\t    new NativeConstructor().entries().next();\n\t  })))) {\n\t    // create collection constructor\n\t    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n\t    internalMetadata.REQUIRED = true;\n\t  } else if (isForced_1(CONSTRUCTOR_NAME, true)) {\n\t    var instance = new Constructor(); // early implementations not supports chaining\n\n\t    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance; // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n\n\t    var THROWS_ON_PRIMITIVES = fails(function () {\n\t      instance.has(1);\n\t    }); // most early implementations doesn't supports iterables, most modern - not close it correctly\n\t    // eslint-disable-next-line no-new\n\n\t    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) {\n\t      new NativeConstructor(iterable);\n\t    }); // for early implementations -0 and +0 not the same\n\n\t    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n\t      // V8 ~ Chromium 42- fails only with 5+ elements\n\t      var $instance = new NativeConstructor();\n\t      var index = 5;\n\n\t      while (index--) $instance[ADDER](index, index);\n\n\t      return !$instance.has(-0);\n\t    });\n\n\t    if (!ACCEPT_ITERABLES) {\n\t      Constructor = wrapper(function (dummy, iterable) {\n\t        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n\t        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n\t        if (iterable != undefined) iterate_1(iterable, that[ADDER], that, IS_MAP);\n\t        return that;\n\t      });\n\t      Constructor.prototype = NativePrototype;\n\t      NativePrototype.constructor = Constructor;\n\t    }\n\n\t    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n\t      fixMethod('delete');\n\t      fixMethod('has');\n\t      IS_MAP && fixMethod('get');\n\t    }\n\n\t    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER); // weak collections should not contains .clear method\n\n\t    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n\t  }\n\n\t  exported[CONSTRUCTOR_NAME] = Constructor;\n\t  _export({\n\t    global: true,\n\t    forced: Constructor != NativeConstructor\n\t  }, exported);\n\t  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\t  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\t  return Constructor;\n\t};\n\n\tvar defineProperty$8 = objectDefineProperty.f;\n\tvar fastKey = internalMetadata.fastKey;\n\tvar setInternalState$7 = internalState.set;\n\tvar internalStateGetterFor = internalState.getterFor;\n\tvar collectionStrong = {\n\t  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n\t    var C = wrapper(function (that, iterable) {\n\t      anInstance(that, C, CONSTRUCTOR_NAME);\n\t      setInternalState$7(that, {\n\t        type: CONSTRUCTOR_NAME,\n\t        index: objectCreate(null),\n\t        first: undefined,\n\t        last: undefined,\n\t        size: 0\n\t      });\n\t      if (!descriptors) that.size = 0;\n\t      if (iterable != undefined) iterate_1(iterable, that[ADDER], that, IS_MAP);\n\t    });\n\t    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n\t    var define = function (that, key, value) {\n\t      var state = getInternalState(that);\n\t      var entry = getEntry(that, key);\n\t      var previous, index; // change existing entry\n\n\t      if (entry) {\n\t        entry.value = value; // create new entry\n\t      } else {\n\t        state.last = entry = {\n\t          index: index = fastKey(key, true),\n\t          key: key,\n\t          value: value,\n\t          previous: previous = state.last,\n\t          next: undefined,\n\t          removed: false\n\t        };\n\t        if (!state.first) state.first = entry;\n\t        if (previous) previous.next = entry;\n\t        if (descriptors) state.size++;else that.size++; // add to index\n\n\t        if (index !== 'F') state.index[index] = entry;\n\t      }\n\n\t      return that;\n\t    };\n\n\t    var getEntry = function (that, key) {\n\t      var state = getInternalState(that); // fast case\n\n\t      var index = fastKey(key);\n\t      var entry;\n\t      if (index !== 'F') return state.index[index]; // frozen object case\n\n\t      for (entry = state.first; entry; entry = entry.next) {\n\t        if (entry.key == key) return entry;\n\t      }\n\t    };\n\n\t    redefineAll(C.prototype, {\n\t      // 23.1.3.1 Map.prototype.clear()\n\t      // 23.2.3.2 Set.prototype.clear()\n\t      clear: function clear() {\n\t        var that = this;\n\t        var state = getInternalState(that);\n\t        var data = state.index;\n\t        var entry = state.first;\n\n\t        while (entry) {\n\t          entry.removed = true;\n\t          if (entry.previous) entry.previous = entry.previous.next = undefined;\n\t          delete data[entry.index];\n\t          entry = entry.next;\n\t        }\n\n\t        state.first = state.last = undefined;\n\t        if (descriptors) state.size = 0;else that.size = 0;\n\t      },\n\t      // 23.1.3.3 Map.prototype.delete(key)\n\t      // 23.2.3.4 Set.prototype.delete(value)\n\t      'delete': function (key) {\n\t        var that = this;\n\t        var state = getInternalState(that);\n\t        var entry = getEntry(that, key);\n\n\t        if (entry) {\n\t          var next = entry.next;\n\t          var prev = entry.previous;\n\t          delete state.index[entry.index];\n\t          entry.removed = true;\n\t          if (prev) prev.next = next;\n\t          if (next) next.previous = prev;\n\t          if (state.first == entry) state.first = next;\n\t          if (state.last == entry) state.last = prev;\n\t          if (descriptors) state.size--;else that.size--;\n\t        }\n\n\t        return !!entry;\n\t      },\n\t      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n\t      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n\t      forEach: function forEach(callbackfn\n\t      /* , that = undefined */\n\t      ) {\n\t        var state = getInternalState(this);\n\t        var boundFunction = functionBindContext(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n\t        var entry;\n\n\t        while (entry = entry ? entry.next : state.first) {\n\t          boundFunction(entry.value, entry.key, this); // revert to the last existing entry\n\n\t          while (entry && entry.removed) entry = entry.previous;\n\t        }\n\t      },\n\t      // 23.1.3.7 Map.prototype.has(key)\n\t      // 23.2.3.7 Set.prototype.has(value)\n\t      has: function has(key) {\n\t        return !!getEntry(this, key);\n\t      }\n\t    });\n\t    redefineAll(C.prototype, IS_MAP ? {\n\t      // 23.1.3.6 Map.prototype.get(key)\n\t      get: function get(key) {\n\t        var entry = getEntry(this, key);\n\t        return entry && entry.value;\n\t      },\n\t      // 23.1.3.9 Map.prototype.set(key, value)\n\t      set: function set(key, value) {\n\t        return define(this, key === 0 ? 0 : key, value);\n\t      }\n\t    } : {\n\t      // 23.2.3.1 Set.prototype.add(value)\n\t      add: function add(value) {\n\t        return define(this, value = value === 0 ? 0 : value, value);\n\t      }\n\t    });\n\t    if (descriptors) defineProperty$8(C.prototype, 'size', {\n\t      get: function () {\n\t        return getInternalState(this).size;\n\t      }\n\t    });\n\t    return C;\n\t  },\n\t  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n\t    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n\t    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\t    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME); // add .keys, .values, .entries, [@@iterator]\n\t    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n\n\t    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n\t      setInternalState$7(this, {\n\t        type: ITERATOR_NAME,\n\t        target: iterated,\n\t        state: getInternalCollectionState(iterated),\n\t        kind: kind,\n\t        last: undefined\n\t      });\n\t    }, function () {\n\t      var state = getInternalIteratorState(this);\n\t      var kind = state.kind;\n\t      var entry = state.last; // revert to the last existing entry\n\n\t      while (entry && entry.removed) entry = entry.previous; // get next entry\n\n\n\t      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n\t        // or finish the iteration\n\t        state.target = undefined;\n\t        return {\n\t          value: undefined,\n\t          done: true\n\t        };\n\t      } // return step by kind\n\n\n\t      if (kind == 'keys') return {\n\t        value: entry.key,\n\t        done: false\n\t      };\n\t      if (kind == 'values') return {\n\t        value: entry.value,\n\t        done: false\n\t      };\n\t      return {\n\t        value: [entry.key, entry.value],\n\t        done: false\n\t      };\n\t    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true); // add [@@species], 23.1.2.2, 23.2.2.2\n\n\t    setSpecies(CONSTRUCTOR_NAME);\n\t  }\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-set-objects\n\n\n\tvar es_set = collection('Set', function (init) {\n\t  return function Set() {\n\t    return init(this, arguments.length ? arguments[0] : undefined);\n\t  };\n\t}, collectionStrong);\n\n\t/**\n\t * Configure item list for track \"gear\" menu.\n\t * @param trackView\n\t */\n\n\tvar MenuUtils = {\n\t  trackMenuItemList: function trackMenuItemList(trackView) {\n\t    var vizWindowTypes = new Set(['alignment', 'annotation', 'variant', 'eqtl', 'snp']);\n\t    var hasVizWindow = trackView.track.config && trackView.track.config.visibilityWindow !== undefined;\n\t    var menuItems = [];\n\n\t    if (trackView.track.config.type !== 'sequence') {\n\t      menuItems.push(trackRenameMenuItem(trackView));\n\t      menuItems.push(trackHeightMenuItem(trackView));\n\t    }\n\n\t    if (doProvideColoSwatchWidget(trackView.track)) {\n\t      menuItems.push(colorPickerMenuItem(trackView));\n\t    }\n\n\t    if (trackView.track.menuItemList) {\n\t      menuItems = menuItems.concat(trackView.track.menuItemList());\n\t    }\n\n\t    if (hasVizWindow || vizWindowTypes.has(trackView.track.config.type)) {\n\t      menuItems.push('<hr/>');\n\t      menuItems.push(visibilityWindowMenuItem(trackView));\n\t    }\n\n\t    if (trackView.track.removable !== false) {\n\t      menuItems.push('<hr/>');\n\t      menuItems.push(trackRemovalMenuItem(trackView));\n\t    }\n\n\t    return menuItems;\n\t  },\n\t  dataRangeMenuItem: function dataRangeMenuItem(trackView) {\n\t    var $e, clickHandler;\n\t    $e = $('<div>');\n\t    $e.text('Set data range');\n\n\t    clickHandler = function clickHandler() {\n\t      trackView.browser.dataRangeDialog.configure({\n\t        trackView: trackView\n\t      });\n\t      trackView.browser.dataRangeDialog.present($(trackView.trackDiv));\n\t    };\n\n\t    return {\n\t      object: $e,\n\t      click: clickHandler\n\t    };\n\t  },\n\t  trackMenuItemListHelper: function trackMenuItemListHelper(itemList, $popover) {\n\t    var list = [];\n\n\t    if (itemList.length > 0) {\n\t      list = itemList.map(function (item, i) {\n\t        var $e; // name and object fields checked for backward compatibility\n\n\t        if (item.name) {\n\t          $e = $('<div>');\n\t          $e.text(item.name);\n\t        } else if (item.object) {\n\t          $e = item.object;\n\t        } else if (typeof item.label === 'string') {\n\t          $e = $('<div>');\n\t          $e.html(item.label);\n\t        } else if (typeof item === 'string') {\n\t          if (item.startsWith(\"<\")) {\n\t            $e = $(item);\n\t          } else {\n\t            $e = $(\"<div>\" + item + \"</div>\");\n\t          }\n\t        }\n\n\t        if (0 === i) {\n\t          $e.addClass('igv-track-menu-border-top');\n\t        }\n\n\t        if (item.click) {\n\t          $e.on('click', handleClick);\n\t          $e.on('touchend', function (e) {\n\t            handleClick(e);\n\t          });\n\t          $e.on('mouseup', function (e) {\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\t          }); // eslint-disable-next-line no-inner-declarations\n\n\t          function handleClick(e) {\n\t            item.click(e);\n\t            $popover.hide();\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\t          }\n\t        }\n\n\t        return {\n\t          object: $e,\n\t          init: item.init || undefined\n\t        };\n\t      });\n\t    }\n\n\t    return list;\n\t  }\n\t};\n\n\tfunction doProvideColoSwatchWidget(track) {\n\t  return \"alignment\" === track.type || \"annotation\" === track.type || \"variant\" === track.type || \"wig\" === track.type;\n\t}\n\n\tfunction visibilityWindowMenuItem(trackView) {\n\t  var menuClickHandler = function menuClickHandler() {\n\t    var dialogClickHandler = function dialogClickHandler() {\n\t      var value = trackView.browser.inputDialog.$input.val().trim();\n\n\t      if ('' === value || undefined === value) {\n\t        value = -1;\n\t      }\n\n\t      value = Number.parseInt(value);\n\t      trackView.track.visibilityWindow = value;\n\t      trackView.track.config.visibilityWindow = value;\n\t      trackView.updateViews();\n\t    };\n\n\t    trackView.browser.inputDialog.configure({\n\t      label: 'Visibility Window',\n\t      input: trackView.track.visibilityWindow,\n\t      click: dialogClickHandler\n\t    });\n\t    trackView.browser.inputDialog.present($(trackView.trackDiv));\n\t  };\n\n\t  var $e = $('<div>');\n\t  $e.text('Set visibility window');\n\t  return {\n\t    object: $e,\n\t    click: menuClickHandler\n\t  };\n\t}\n\n\tfunction trackRemovalMenuItem(trackView) {\n\t  var $e, menuClickHandler;\n\t  $e = $('<div>');\n\t  $e.text('Remove track');\n\n\t  menuClickHandler = function menuClickHandler() {\n\t    trackView.browser.removeTrack(trackView.track);\n\t  };\n\n\t  return {\n\t    object: $e,\n\t    click: menuClickHandler\n\t  };\n\t}\n\n\tfunction colorPickerMenuItem(trackView) {\n\t  var $e, clickHandler;\n\t  $e = $('<div>');\n\t  $e.text('Set track color');\n\n\t  clickHandler = function clickHandler() {\n\t    trackView.presentColorPicker();\n\t  };\n\n\t  return {\n\t    object: $e,\n\t    click: clickHandler\n\t  };\n\t}\n\n\tfunction trackRenameMenuItem(trackView) {\n\t  var $e, menuClickHandler;\n\t  $e = $('<div>');\n\t  $e.text('Set track name');\n\n\t  menuClickHandler = function menuClickHandler() {\n\t    var dialogClickHandler;\n\n\t    dialogClickHandler = function dialogClickHandler() {\n\t      var value;\n\t      value = trackView.browser.inputDialog.$input.val().trim();\n\t      value = '' === value || undefined === value ? 'untitled' : value;\n\t      trackView.browser.setTrackLabelName(trackView, value);\n\t    };\n\n\t    trackView.browser.inputDialog.configure({\n\t      label: 'Track Name',\n\t      input: getTrackLabelText(trackView.track) || 'unnamed',\n\t      click: dialogClickHandler\n\t    });\n\t    trackView.browser.inputDialog.present($(trackView.trackDiv));\n\t  };\n\n\t  return {\n\t    object: $e,\n\t    click: menuClickHandler\n\t  };\n\t}\n\n\tfunction trackHeightMenuItem(trackView) {\n\t  var $e, menuClickHandler;\n\t  $e = $('<div>');\n\t  $e.text('Set track height');\n\n\t  menuClickHandler = function menuClickHandler() {\n\t    var dialogClickHandler;\n\n\t    dialogClickHandler = function dialogClickHandler() {\n\t      var number;\n\t      number = parseFloat(trackView.browser.inputDialog.$input.val(), 10);\n\n\t      if (undefined !== number) {\n\t        // If explicitly setting the height adust min or max, if neccessary.\n\t        if (trackView.track.minHeight !== undefined && trackView.track.minHeight > number) {\n\t          trackView.track.minHeight = number;\n\t        }\n\n\t        if (trackView.track.maxHeight !== undefined && trackView.track.maxHeight < number) {\n\t          trackView.track.minHeight = number;\n\t        }\n\n\t        trackView.setTrackHeight(number, true, true); // Explicitly setting track height turns off autoHeight\n\n\t        trackView.track.autoHeight = false;\n\t      }\n\t    };\n\n\t    trackView.browser.inputDialog.configure({\n\t      label: 'Track Height',\n\t      input: trackView.trackDiv.clientHeight,\n\t      click: dialogClickHandler\n\t    });\n\t    trackView.browser.inputDialog.present($(trackView.trackDiv));\n\t  };\n\n\t  return {\n\t    object: $e,\n\t    click: menuClickHandler\n\t  };\n\t}\n\n\tfunction getTrackLabelText(track) {\n\t  var vp, txt;\n\t  vp = track.trackView.viewports[0];\n\t  txt = vp.$trackLabel.text();\n\t  return txt;\n\t}\n\t/**\n\t * Configure item list for contextual (right-click) track popup menu.\n\t * @param viewport\n\t * @param genomicLocation - (bp)\n\t * @param xOffset - (pixels) within track extent\n\t * @param yOffset - (pixels) within track extent\n\t */\n\t// igv.trackContextMenuItemList = function (viewport, genomicLocation, xOffset, yOffset) {\n\t//\n\t//     var config,\n\t//         menuItems;\n\t//\n\t//     config =\n\t//         {\n\t//             viewport: viewport,\n\t//             genomicState: viewport.genomicState,\n\t//             genomicLocation: genomicLocation,\n\t//             x: xOffset,\n\t//             y: yOffset\n\t//         };\n\t//\n\t//     menuItems = [];\n\t//     if (typeof viewport.trackView.track.contextMenuItemList === \"function\") {\n\t//         menuItems = viewport.trackView.track.contextMenuItemList(config);\n\t//     }\n\t//\n\t//     return menuItems;\n\t// };\n\n\t/**\n\t * Configure item for track \"gear\" menu.\n\t * @param trackView\n\t * @param menuItemLabel - menu item string\n\t * @param dialogLabelHandler - dialog label creation handler\n\t * @param dialogInputValue\n\t * @param dialogClickHandler\n\t */\n\t// function trackMenuItem(trackView, menuItemLabel, dialogLabelHandler, dialogInputValue, dialogClickHandler) {\n\t//\n\t//     var $e,\n\t//         clickHandler;\n\t//\n\t//     $e = $('<div>');\n\t//\n\t//     $e.text(menuItemLabel);\n\t//\n\t//     clickHandler = function () {\n\t//\n\t//         trackView.browser.inputDialog.configure(dialogLabelHandler, dialogInputValue, dialogClickHandler, undefined, undefined);\n\t//         trackView.browser.inputDialog.show($(trackView.trackDiv));\n\t//\n\t//     };\n\t//\n\t//     return {object: $e, click: clickHandler};\n\t// };\n\n\tvar propertyIsEnumerable = objectPropertyIsEnumerable.f; // `Object.{ entries, values }` methods implementation\n\n\tvar createMethod$5 = function (TO_ENTRIES) {\n\t  return function (it) {\n\t    var O = toIndexedObject(it);\n\t    var keys = objectKeys(O);\n\t    var length = keys.length;\n\t    var i = 0;\n\t    var result = [];\n\t    var key;\n\n\t    while (length > i) {\n\t      key = keys[i++];\n\n\t      if (!descriptors || propertyIsEnumerable.call(O, key)) {\n\t        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n\t      }\n\t    }\n\n\t    return result;\n\t  };\n\t};\n\n\tvar objectToArray = {\n\t  // `Object.entries` method\n\t  // https://tc39.github.io/ecma262/#sec-object.entries\n\t  entries: createMethod$5(true),\n\t  // `Object.values` method\n\t  // https://tc39.github.io/ecma262/#sec-object.values\n\t  values: createMethod$5(false)\n\t};\n\n\tvar $values = objectToArray.values; // `Object.values` method\n\t// https://tc39.github.io/ecma262/#sec-object.values\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true\n\t}, {\n\t  values: function values(O) {\n\t    return $values(O);\n\t  }\n\t});\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016-2017 The Regents of the University of California\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t *\n\t *\n\t * This class uses icons from Font Awesome\n\t * Font Awesome Free 5.0.8 by @fontawesome - https://fontawesome.com\n\t * License - https://fontawesome.com/license (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n\t */\n\n\tfunction createCheckbox(name, initialState) {\n\t  var $container = $('<div>', {\n\t    class: 'igv-trackgear-popover-check-container'\n\t  });\n\t  var $div = $('<div>');\n\t  $container.append($div);\n\t  var $svg = iconMarkup('check', true === initialState ? '#444' : 'transparent');\n\t  $div.append($svg);\n\t  var $label = $('<div>'\n\t  /*, { class: 'igv-some-label-class' }*/\n\t  );\n\t  $label.text(name);\n\t  $container.append($label);\n\t  return $container;\n\t}\n\n\tfunction createIcon(name, color) {\n\t  return $(iconMarkup(name, color));\n\t}\n\n\tfunction iconMarkup(name, color) {\n\t  color = color || \"currentColor\";\n\t  var icon = icons[name];\n\n\t  if (!icon) {\n\t    console.error(\"No icon named: \".concat(name));\n\t    icon = icons[\"question\"];\n\t  }\n\n\t  var svg = '<svg ' + 'viewBox=\"0 0 ' + icon[0] + ' ' + icon[1] + '\">';\n\t  svg += '<path fill=\"' + color + '\" ' + 'd=\"' + icon[4] + '\">' + '</path>';\n\t  svg += '</svg>';\n\t  return svg;\n\t}\n\n\tvar icons = {\n\t  \"check\": [512, 512, [], \"f00c\", \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"],\n\t  \"cog\": [512, 512, [], \"f013\", \"M444.788 291.1l42.616 24.599c4.867 2.809 7.126 8.618 5.459 13.985-11.07 35.642-29.97 67.842-54.689 94.586a12.016 12.016 0 0 1-14.832 2.254l-42.584-24.595a191.577 191.577 0 0 1-60.759 35.13v49.182a12.01 12.01 0 0 1-9.377 11.718c-34.956 7.85-72.499 8.256-109.219.007-5.49-1.233-9.403-6.096-9.403-11.723v-49.184a191.555 191.555 0 0 1-60.759-35.13l-42.584 24.595a12.016 12.016 0 0 1-14.832-2.254c-24.718-26.744-43.619-58.944-54.689-94.586-1.667-5.366.592-11.175 5.459-13.985L67.212 291.1a193.48 193.48 0 0 1 0-70.199l-42.616-24.599c-4.867-2.809-7.126-8.618-5.459-13.985 11.07-35.642 29.97-67.842 54.689-94.586a12.016 12.016 0 0 1 14.832-2.254l42.584 24.595a191.577 191.577 0 0 1 60.759-35.13V25.759a12.01 12.01 0 0 1 9.377-11.718c34.956-7.85 72.499-8.256 109.219-.007 5.49 1.233 9.403 6.096 9.403 11.723v49.184a191.555 191.555 0 0 1 60.759 35.13l42.584-24.595a12.016 12.016 0 0 1 14.832 2.254c24.718 26.744 43.619 58.944 54.689 94.586 1.667 5.366-.592 11.175-5.459 13.985L444.788 220.9a193.485 193.485 0 0 1 0 70.2zM336 256c0-44.112-35.888-80-80-80s-80 35.888-80 80 35.888 80 80 80 80-35.888 80-80z\"],\n\t  \"exclamation\": [192, 512, [], \"f12a\", \"M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z\"],\n\t  \"exclamation-circle\": [512, 512, [], \"f06a\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n\t  \"exclamation-triangle\": [576, 512, [], \"f071\", \"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n\t  \"minus\": [448, 512, [], \"f068\", \"M424 318.2c13.3 0 24-10.7 24-24v-76.4c0-13.3-10.7-24-24-24H24c-13.3 0-24 10.7-24 24v76.4c0 13.3 10.7 24 24 24h400z\"],\n\t  \"minus-circle\": [512, 512, [], \"f056\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z\"],\n\t  \"minus-square\": [448, 512, [], \"f146\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z\"],\n\t  \"plus\": [448, 512, [], \"f067\", \"M448 294.2v-76.4c0-13.3-10.7-24-24-24H286.2V56c0-13.3-10.7-24-24-24h-76.4c-13.3 0-24 10.7-24 24v137.8H24c-13.3 0-24 10.7-24 24v76.4c0 13.3 10.7 24 24 24h137.8V456c0 13.3 10.7 24 24 24h76.4c13.3 0 24-10.7 24-24V318.2H424c13.3 0 24-10.7 24-24z\"],\n\t  \"plus-circle\": [512, 512, [], \"f055\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n\t  \"plus-square\": [448, 512, [], \"f0fe\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n\t  \"question\": [384, 512, [], \"f128\", \"M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z\"],\n\t  \"save\": [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\"],\n\t  \"search\": [512, 512, [], \"f002\", \"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"],\n\t  \"share\": [512, 512, [], \"f064\", \"M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z\"],\n\t  \"spinner\": [512, 512, [], \"f110\", \"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"],\n\t  \"square\": [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n\t  \"square-full\": [512, 512, [], \"f45c\", \"M512 512H0V0h512v512z\"],\n\t  \"times\": [384, 512, [], \"f00d\", \"M323.1 441l53.9-53.9c9.4-9.4 9.4-24.5 0-33.9L279.8 256l97.2-97.2c9.4-9.4 9.4-24.5 0-33.9L323.1 71c-9.4-9.4-24.5-9.4-33.9 0L192 168.2 94.8 71c-9.4-9.4-24.5-9.4-33.9 0L7 124.9c-9.4 9.4-9.4 24.5 0 33.9l97.2 97.2L7 353.2c-9.4 9.4-9.4 24.5 0 33.9L60.9 441c9.4 9.4 24.5 9.4 33.9 0l97.2-97.2 97.2 97.2c9.3 9.3 24.5 9.3 33.9 0z\"],\n\t  \"times-circle\": [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"],\n\t  \"wrench\": [512, 512, [], \"f0ad\", \"M481.156 200c9.3 0 15.12 10.155 10.325 18.124C466.295 259.992 420.419 288 368 288c-79.222 0-143.501-63.974-143.997-143.079C223.505 65.469 288.548-.001 368.002 0c52.362.001 98.196 27.949 123.4 69.743C496.24 77.766 490.523 88 481.154 88H376l-40 56 40 56h105.156zm-171.649 93.003L109.255 493.255c-24.994 24.993-65.515 24.994-90.51 0-24.993-24.994-24.993-65.516 0-90.51L218.991 202.5c16.16 41.197 49.303 74.335 90.516 90.503zM104 432c0-13.255-10.745-24-24-24s-24 10.745-24 24 10.745 24 24 24 24-10.745 24-24z\"]\n\t};\n\n\tvar appleCrayonPalette = {\n\t  licorice: \"#000000\",\n\t  lead: \"#1e1e1e\",\n\t  tungsten: \"#3a3a3a\",\n\t  iron: \"#545453\",\n\t  steel: \"#6e6e6e\",\n\t  tin: \"#878687\",\n\t  nickel: \"#888787\",\n\t  aluminum: \"#a09fa0\",\n\t  magnesium: \"#b8b8b8\",\n\t  silver: \"#d0d0d0\",\n\t  mercury: \"#e8e8e8\",\n\t  snow: \"white\",\n\t  //\n\t  cayenne: \"#891100\",\n\t  mocha: \"#894800\",\n\t  aspargus: \"#888501\",\n\t  fern: \"#458401\",\n\t  clover: \"#028401\",\n\t  moss: \"#018448\",\n\t  teal: \"#008688\",\n\t  ocean: \"#004a88\",\n\t  midnight: \"#001888\",\n\t  eggplant: \"#491a88\",\n\t  plum: \"#891e88\",\n\t  maroon: \"#891648\",\n\t  //\n\t  maraschino: \"#ff2101\",\n\t  tangerine: \"#ff8802\",\n\t  lemon: \"#fffa03\",\n\t  lime: \"#83f902\",\n\t  spring: \"#05f802\",\n\t  seam_foam: \"#03f987\",\n\t  turquoise: \"#00fdff\",\n\t  aqua: \"#008cff\",\n\t  blueberry: \"#002eff\",\n\t  grape: \"#8931ff\",\n\t  magenta: \"#ff39ff\",\n\t  strawberry: \"#ff2987\",\n\t  //\n\t  salmon: \"#ff726e\",\n\t  cantaloupe: \"#ffce6e\",\n\t  banana: \"#fffb6d\",\n\t  honeydew: \"#cefa6e\",\n\t  flora: \"#68f96e\",\n\t  spindrift: \"#68fbd0\",\n\t  ice: \"#68fdff\",\n\t  sky: \"#6acfff\",\n\t  orchid: \"#6e76ff\",\n\t  lavender: \"#d278ff\",\n\t  bubblegum: \"#ff7aff\",\n\t  carnation: \"#ff7fd3\"\n\t};\n\tvar nucleotideColorComponents = {\n\t  \"A\": [0, 200, 0],\n\t  \"C\": [0, 0, 200],\n\t  \"T\": [255, 0, 0],\n\t  \"G\": [209, 113, 5],\n\t  \"a\": [0, 200, 0],\n\t  \"c\": [0, 0, 200],\n\t  \"t\": [255, 0, 0],\n\t  \"g\": [209, 113, 5],\n\t  \"N\": [80, 80, 80]\n\t};\n\tvar nucleotideColors = {\n\t  \"A\": \"rgb(  0, 200,   0)\",\n\t  \"C\": \"rgb(  0,   0, 200)\",\n\t  \"T\": \"rgb(255,   0,   0)\",\n\t  \"G\": \"rgb(209, 113,   5)\",\n\t  \"a\": \"rgb(  0, 200,   0)\",\n\t  \"c\": \"rgb(  0,   0, 200)\",\n\t  \"t\": \"rgb(255,   0,   0)\",\n\t  \"g\": \"rgb(209, 113,   5)\",\n\t  \"N\": \"rgb(80, 80, 80)\"\n\t};\n\tvar colorPalettes = {\n\t  Set1: [\"rgb(228,26,28)\", \"rgb(55,126,184)\", \"rgb(77,175,74)\", \"rgb(166,86,40)\", \"rgb(152,78,163)\", \"rgb(255,127,0)\", \"rgb(247,129,191)\", \"rgb(153,153,153)\", \"rgb(255,255,51)\"],\n\t  Dark2: [\"rgb(27,158,119)\", \"rgb(217,95,2)\", \"rgb(117,112,179)\", \"rgb(231,41,138)\", \"rgb(102,166,30)\", \"rgb(230,171,2)\", \"rgb(166,118,29)\", \"rgb(102,102,102)\"],\n\t  Set2: [\"rgb(102, 194,165)\", \"rgb(252,141,98)\", \"rgb(141,160,203)\", \"rgb(231,138,195)\", \"rgb(166,216,84)\", \"rgb(255,217,47)\", \"rgb(229,196,148)\", \"rgb(179,179,179)\"],\n\t  Set3: [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\", \"rgb(253,180,98)\", \"rgb(179,222,105)\", \"rgb(252,205,229)\", \"rgb(217,217,217)\", \"rgb(188,128,189)\", \"rgb(204,235,197)\", \"rgb(255,237,111)\"],\n\t  Pastel1: [\"rgb(251,180,174)\", \"rgb(179,205,227)\", \"rgb(204,235,197)\", \"rgb(222,203,228)\", \"rgb(254,217,166)\", \"rgb(255,255,204)\", \"rgb(229,216,189)\", \"rgb(253,218,236)\"],\n\t  Pastel2: [\"rgb(173,226,207)\", \"rgb(253,205,172)\", \"rgb(203,213,232)\", \"rgb(244,202,228)\", \"rgb(230,245,201)\", \"rgb(255,242,174)\", \"rgb(243,225,206)\"],\n\t  Accent: [\"rgb(127,201,127)\", \"rgb(190,174,212)\", \"rgb(253,192,134)\", \"rgb(255,255,153)\", \"rgb(56,108,176)\", \"rgb(240,2,127)\", \"rgb(191,91,23)\"]\n\t};\n\n\tfunction PaletteColorTable(palette) {\n\t  this.colors = colorPalettes[palette];\n\t  if (!Array.isArray(this.colors)) this.colors = [];\n\t  this.colorTable = {};\n\t  this.nextIdx = 0;\n\t  this.colorGenerator = new RandomColorGenerator();\n\t}\n\n\tPaletteColorTable.prototype.getColor = function (key) {\n\t  if (!this.colorTable.hasOwnProperty(key)) {\n\t    if (this.nextIdx < this.colors.length) {\n\t      this.colorTable[key] = this.colors[this.nextIdx];\n\t    } else {\n\t      this.colorTable[key] = this.colorGenerator.get();\n\t    }\n\n\t    this.nextIdx++;\n\t  }\n\n\t  return this.colorTable[key];\n\t}; // Random color generator from https://github.com/sterlingwes/RandomColor/blob/master/rcolor.js\n\t// Free to use & distribute under the MIT license\n\t// Wes Johnson (@SterlingWes)\n\t//\n\t// inspired by http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n\n\n\tfunction RandomColorGenerator() {\n\t  this.hue = Math.random();\n\t  this.goldenRatio = 0.618033988749895;\n\t  this.hexwidth = 2;\n\t}\n\n\tRandomColorGenerator.prototype.hsvToRgb = function (h, s, v) {\n\t  var h_i = Math.floor(h * 6),\n\t      f = h * 6 - h_i,\n\t      p = v * (1 - s),\n\t      q = v * (1 - f * s),\n\t      t = v * (1 - (1 - f) * s),\n\t      r = 255,\n\t      g = 255,\n\t      b = 255;\n\n\t  switch (h_i) {\n\t    case 0:\n\t      r = v, g = t, b = p;\n\t      break;\n\n\t    case 1:\n\t      r = q, g = v, b = p;\n\t      break;\n\n\t    case 2:\n\t      r = p, g = v, b = t;\n\t      break;\n\n\t    case 3:\n\t      r = p, g = q, b = v;\n\t      break;\n\n\t    case 4:\n\t      r = t, g = p, b = v;\n\t      break;\n\n\t    case 5:\n\t      r = v, g = p, b = q;\n\t      break;\n\t  }\n\n\t  return [Math.floor(r * 256), Math.floor(g * 256), Math.floor(b * 256)];\n\t};\n\n\tRandomColorGenerator.prototype.padHex = function (str) {\n\t  if (str.length > this.hexwidth) return str;\n\t  return new Array(this.hexwidth - str.length + 1).join('0') + str;\n\t};\n\n\tRandomColorGenerator.prototype.get = function (saturation, value) {\n\t  this.hue += this.goldenRatio;\n\t  this.hue %= 1;\n\t  if (typeof saturation !== \"number\") saturation = 0.5;\n\t  if (typeof value !== \"number\") value = 0.95;\n\t  var rgb = this.hsvToRgb(this.hue, saturation, value);\n\t  return \"#\" + this.padHex(rgb[0].toString(16)) + this.padHex(rgb[1].toString(16)) + this.padHex(rgb[2].toString(16));\n\t}; // Returns a random number between min (inclusive) and max (exclusive)\n\n\tvar $includes = arrayIncludes.includes;\n\tvar USES_TO_LENGTH$9 = arrayMethodUsesToLength('indexOf', {\n\t  ACCESSORS: true,\n\t  1: 0\n\t}); // `Array.prototype.includes` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: !USES_TO_LENGTH$9\n\t}, {\n\t  includes: function includes(el\n\t  /* , fromIndex = 0 */\n\t  ) {\n\t    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t}); // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\n\taddToUnscopables('includes');\n\n\t// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n\n\n\t_export({\n\t  target: 'String',\n\t  proto: true,\n\t  forced: !correctIsRegexpLogic('includes')\n\t}, {\n\t  includes: function includes(searchString\n\t  /* , position = 0 */\n\t  ) {\n\t    return !!~String(requireObjectCoercible(this)).indexOf(notARegexp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016-2017 The Regents of the University of California\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tvar IGVMath = {\n\t  lerp: function lerp(v0, v1, t) {\n\t    return (1 - t) * v0 + t * v1;\n\t  },\n\t  mean: function mean(array) {\n\t    var t = 0,\n\t        n = 0,\n\t        i;\n\n\t    for (i = 0; i < array.length; i++) {\n\t      if (!isNaN(array[i])) {\n\t        t += array[i];\n\t        n++;\n\t      }\n\t    }\n\n\t    return n > 0 ? t / n : 0;\n\t  },\n\t  meanAndStdev: function meanAndStdev(array) {\n\t    var v,\n\t        t = 0,\n\t        t2 = 0,\n\t        n = 0,\n\t        i;\n\n\t    for (i = 0; i < array.length; i++) {\n\t      v = array[i];\n\n\t      if (!isNaN(v)) {\n\t        t += v;\n\t        t2 += v * v;\n\t        n++;\n\t      }\n\t    }\n\n\t    return n > 0 ? {\n\t      mean: t / n,\n\t      stdev: Math.sqrt(t2 - t * t / n)\n\t    } : {\n\t      mean: 0,\n\t      stdev: 0\n\t    };\n\t  },\n\t  median: function median(numbers) {\n\t    // median of [3, 5, 4, 4, 1, 1, 2, 3] = 3\n\t    var median = 0,\n\t        numsLen = numbers.length;\n\t    numbers.sort();\n\n\t    if (numsLen % 2 === 0 // is even\n\t    ) {\n\t        // average of two middle numbers\n\t        median = (numbers[numsLen / 2 - 1] + numbers[numsLen / 2]) / 2;\n\t      } else {\n\t      // is odd\n\t      // middle number only\n\t      median = numbers[(numsLen - 1) / 2];\n\t    }\n\n\t    return median;\n\t  },\n\t  // Fast percentile function for \"p\" near edges.  This needs profiled for p in middle (e.g. median)\n\t  percentile: function percentile(array, p) {\n\t    if (array.length === 0) return undefined;\n\t    var k = Math.floor(array.length * ((100 - p) / 100));\n\n\t    if (k === 0) {\n\t      array.sort(function (a, b) {\n\t        return b - a;\n\t      });\n\t      return array[k];\n\t    } else {\n\t      return selectElement(array, k);\n\t    }\n\t  },\n\t  clamp: function clamp(value, min, max) {\n\t    return Math.min(Math.max(value, min), max);\n\t  },\n\t  log2: function log2(x) {\n\t    return Math.log(x) / Math.LN2;\n\t  }\n\t};\n\n\tfunction selectElement(array, k) {\n\t  // Credit Steve Hanov http://stevehanov.ca/blog/index.php?id=122\n\t  var heap = new BinaryHeap(),\n\t      i;\n\n\t  for (i = 0; i < array.length; i++) {\n\t    var item = array[i]; // If we have not yet found k items, or the current item is larger than\n\t    // the smallest item on the heap, add current item\n\n\t    if (heap.content.length < k || item > heap.content[0]) {\n\t      // If the heap is full, remove the smallest element on the heap.\n\t      if (heap.content.length === k) {\n\t        var r = heap.pop();\n\t      }\n\n\t      heap.push(item);\n\t    }\n\t  }\n\n\t  return heap.content[0];\n\t}\n\n\tfunction BinaryHeap() {\n\t  this.content = [];\n\t}\n\n\tBinaryHeap.prototype = {\n\t  push: function push(element) {\n\t    // Add the new element to the end of the array.\n\t    this.content.push(element); // Allow it to bubble up.\n\n\t    this.bubbleUp(this.content.length - 1);\n\t  },\n\t  pop: function pop() {\n\t    // Store the first element so we can return it later.\n\t    var result = this.content[0]; // Get the element at the end of the array.\n\n\t    var end = this.content.pop(); // If there are any elements left, put the end element at the\n\t    // start, and let it sink down.\n\n\t    if (this.content.length > 0) {\n\t      this.content[0] = end;\n\t      this.sinkDown(0);\n\t    }\n\n\t    return result;\n\t  },\n\t  remove: function remove(node) {\n\t    var length = this.content.length; // To remove a value, we must search through the array to find\n\t    // it.\n\n\t    for (var i = 0; i < length; i++) {\n\t      if (this.content[i] !== node) continue; // When it is found, the process seen in 'pop' is repeated\n\t      // to fill up the hole.\n\n\t      var end = this.content.pop(); // If the element we popped was the one we needed to remove,\n\t      // we're done.\n\n\t      if (i === length - 1) break; // Otherwise, we replace the removed element with the popped\n\t      // one, and allow it to float up or sink down as appropriate.\n\n\t      this.content[i] = end;\n\t      this.bubbleUp(i);\n\t      this.sinkDown(i);\n\t      break;\n\t    }\n\t  },\n\t  size: function size() {\n\t    return this.content.length;\n\t  },\n\t  bubbleUp: function bubbleUp(n) {\n\t    // Fetch the element that has to be moved.\n\t    var element = this.content[n],\n\t        score = element; // When at 0, an element can not go up any further.\n\n\t    while (n > 0) {\n\t      // Compute the parent element's index, and fetch it.\n\t      var parentN = Math.floor((n + 1) / 2) - 1,\n\t          parent = this.content[parentN]; // If the parent has a lesser score, things are in order and we\n\t      // are done.\n\n\t      if (score >= parent) break; // Otherwise, swap the parent with the current element and\n\t      // continue.\n\n\t      this.content[parentN] = element;\n\t      this.content[n] = parent;\n\t      n = parentN;\n\t    }\n\t  },\n\t  sinkDown: function sinkDown(n) {\n\t    // Look up the target element and its score.\n\t    var length = this.content.length,\n\t        element = this.content[n],\n\t        elemScore = element;\n\n\t    while (true) {\n\t      // Compute the indices of the child elements.\n\t      var child2N = (n + 1) * 2,\n\t          child1N = child2N - 1; // This is used to store the new position of the element,\n\t      // if any.\n\n\t      var swap = null; // If the first child exists (is inside the array)...\n\n\t      if (child1N < length) {\n\t        // Look it up and compute its score.\n\t        var child1 = this.content[child1N],\n\t            child1Score = child1; // If the score is less than our element's, we need to swap.\n\n\t        if (child1Score < elemScore) swap = child1N;\n\t      } // Do the same checks for the other child.\n\n\n\t      if (child2N < length) {\n\t        var child2 = this.content[child2N],\n\t            child2Score = child2;\n\t        if (child2Score < (swap == null ? elemScore : child1Score)) swap = child2N;\n\t      } // No need to swap further, we are done.\n\n\n\t      if (swap == null) break; // Otherwise, swap and continue.\n\n\t      this.content[n] = this.content[swap];\n\t      this.content[swap] = element;\n\t      n = swap;\n\t    }\n\t  }\n\t};\n\n\tvar UNSUPPORTED_Y$3 = regexpStickyHelpers.UNSUPPORTED_Y; // `RegExp.prototype.flags` getter\n\t// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\n\n\tif (descriptors && (/./g.flags != 'g' || UNSUPPORTED_Y$3)) {\n\t  objectDefineProperty.f(RegExp.prototype, 'flags', {\n\t    configurable: true,\n\t    get: regexpFlags\n\t  });\n\t}\n\n\tvar arrayBufferNative = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';\n\n\tvar defineProperty$9 = objectDefineProperty.f;\n\tvar Int8Array$1 = global_1.Int8Array;\n\tvar Int8ArrayPrototype = Int8Array$1 && Int8Array$1.prototype;\n\tvar Uint8ClampedArray = global_1.Uint8ClampedArray;\n\tvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\n\tvar TypedArray = Int8Array$1 && objectGetPrototypeOf(Int8Array$1);\n\tvar TypedArrayPrototype = Int8ArrayPrototype && objectGetPrototypeOf(Int8ArrayPrototype);\n\tvar ObjectPrototype$2 = Object.prototype;\n\tvar isPrototypeOf = ObjectPrototype$2.isPrototypeOf;\n\tvar TO_STRING_TAG$4 = wellKnownSymbol('toStringTag');\n\tvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG'); // Fixing native typed arrays in Opera Presto crashes the browser, see #595\n\n\tvar NATIVE_ARRAY_BUFFER_VIEWS = arrayBufferNative && !!objectSetPrototypeOf && classof(global_1.opera) !== 'Opera';\n\tvar TYPED_ARRAY_TAG_REQIRED = false;\n\tvar NAME$1;\n\tvar TypedArrayConstructorsList = {\n\t  Int8Array: 1,\n\t  Uint8Array: 1,\n\t  Uint8ClampedArray: 1,\n\t  Int16Array: 2,\n\t  Uint16Array: 2,\n\t  Int32Array: 4,\n\t  Uint32Array: 4,\n\t  Float32Array: 4,\n\t  Float64Array: 8\n\t};\n\n\tvar isView = function isView(it) {\n\t  var klass = classof(it);\n\t  return klass === 'DataView' || has(TypedArrayConstructorsList, klass);\n\t};\n\n\tvar isTypedArray = function (it) {\n\t  return isObject(it) && has(TypedArrayConstructorsList, classof(it));\n\t};\n\n\tvar aTypedArray = function (it) {\n\t  if (isTypedArray(it)) return it;\n\t  throw TypeError('Target is not a typed array');\n\t};\n\n\tvar aTypedArrayConstructor = function (C) {\n\t  if (objectSetPrototypeOf) {\n\t    if (isPrototypeOf.call(TypedArray, C)) return C;\n\t  } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME$1)) {\n\t    var TypedArrayConstructor = global_1[ARRAY];\n\n\t    if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {\n\t      return C;\n\t    }\n\t  }\n\n\t  throw TypeError('Target is not a typed array constructor');\n\t};\n\n\tvar exportTypedArrayMethod = function (KEY, property, forced) {\n\t  if (!descriptors) return;\n\t  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n\t    var TypedArrayConstructor = global_1[ARRAY];\n\n\t    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {\n\t      delete TypedArrayConstructor.prototype[KEY];\n\t    }\n\t  }\n\n\t  if (!TypedArrayPrototype[KEY] || forced) {\n\t    redefine(TypedArrayPrototype, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\n\t  }\n\t};\n\n\tvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n\t  var ARRAY, TypedArrayConstructor;\n\t  if (!descriptors) return;\n\n\t  if (objectSetPrototypeOf) {\n\t    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n\t      TypedArrayConstructor = global_1[ARRAY];\n\n\t      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {\n\t        delete TypedArrayConstructor[KEY];\n\t      }\n\t    }\n\n\t    if (!TypedArray[KEY] || forced) {\n\t      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n\t      try {\n\t        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array$1[KEY] || property);\n\t      } catch (error) {\n\t        /* empty */\n\t      }\n\t    } else return;\n\t  }\n\n\t  for (ARRAY in TypedArrayConstructorsList) {\n\t    TypedArrayConstructor = global_1[ARRAY];\n\n\t    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n\t      redefine(TypedArrayConstructor, KEY, property);\n\t    }\n\t  }\n\t};\n\n\tfor (NAME$1 in TypedArrayConstructorsList) {\n\t  if (!global_1[NAME$1]) NATIVE_ARRAY_BUFFER_VIEWS = false;\n\t} // WebKit bug - typed arrays constructors prototype is Object.prototype\n\n\n\tif (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {\n\t  // eslint-disable-next-line no-shadow\n\t  TypedArray = function TypedArray() {\n\t    throw TypeError('Incorrect invocation');\n\t  };\n\n\t  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME$1 in TypedArrayConstructorsList) {\n\t    if (global_1[NAME$1]) objectSetPrototypeOf(global_1[NAME$1], TypedArray);\n\t  }\n\t}\n\n\tif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype$2) {\n\t  TypedArrayPrototype = TypedArray.prototype;\n\t  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME$1 in TypedArrayConstructorsList) {\n\t    if (global_1[NAME$1]) objectSetPrototypeOf(global_1[NAME$1].prototype, TypedArrayPrototype);\n\t  }\n\t} // WebKit bug - one more object in Uint8ClampedArray prototype chain\n\n\n\tif (NATIVE_ARRAY_BUFFER_VIEWS && objectGetPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n\t  objectSetPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n\t}\n\n\tif (descriptors && !has(TypedArrayPrototype, TO_STRING_TAG$4)) {\n\t  TYPED_ARRAY_TAG_REQIRED = true;\n\t  defineProperty$9(TypedArrayPrototype, TO_STRING_TAG$4, {\n\t    get: function () {\n\t      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n\t    }\n\t  });\n\n\t  for (NAME$1 in TypedArrayConstructorsList) if (global_1[NAME$1]) {\n\t    createNonEnumerableProperty(global_1[NAME$1], TYPED_ARRAY_TAG, NAME$1);\n\t  }\n\t}\n\n\tvar arrayBufferViewCore = {\n\t  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n\t  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\n\t  aTypedArray: aTypedArray,\n\t  aTypedArrayConstructor: aTypedArrayConstructor,\n\t  exportTypedArrayMethod: exportTypedArrayMethod,\n\t  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n\t  isView: isView,\n\t  isTypedArray: isTypedArray,\n\t  TypedArray: TypedArray,\n\t  TypedArrayPrototype: TypedArrayPrototype\n\t};\n\n\t/* eslint-disable no-new */\n\n\tvar NATIVE_ARRAY_BUFFER_VIEWS$1 = arrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\n\tvar ArrayBuffer$1 = global_1.ArrayBuffer;\n\tvar Int8Array$2 = global_1.Int8Array;\n\tvar typedArrayConstructorsRequireWrappers = !NATIVE_ARRAY_BUFFER_VIEWS$1 || !fails(function () {\n\t  Int8Array$2(1);\n\t}) || !fails(function () {\n\t  new Int8Array$2(-1);\n\t}) || !checkCorrectnessOfIteration(function (iterable) {\n\t  new Int8Array$2();\n\t  new Int8Array$2(null);\n\t  new Int8Array$2(1.5);\n\t  new Int8Array$2(iterable);\n\t}, true) || fails(function () {\n\t  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill\n\t  return new Int8Array$2(new ArrayBuffer$1(2), 1, undefined).length !== 1;\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-toindex\n\n\tvar toIndex = function (it) {\n\t  if (it === undefined) return 0;\n\t  var number = toInteger(it);\n\t  var length = toLength(number);\n\t  if (number !== length) throw RangeError('Wrong length or index');\n\t  return length;\n\t};\n\n\t// IEEE754 conversions based on https://github.com/feross/ieee754\n\t// eslint-disable-next-line no-shadow-restricted-names\n\tvar Infinity$1 = 1 / 0;\n\tvar abs = Math.abs;\n\tvar pow$1 = Math.pow;\n\tvar floor$4 = Math.floor;\n\tvar log = Math.log;\n\tvar LN2 = Math.LN2;\n\n\tvar pack = function (number, mantissaLength, bytes) {\n\t  var buffer = new Array(bytes);\n\t  var exponentLength = bytes * 8 - mantissaLength - 1;\n\t  var eMax = (1 << exponentLength) - 1;\n\t  var eBias = eMax >> 1;\n\t  var rt = mantissaLength === 23 ? pow$1(2, -24) - pow$1(2, -77) : 0;\n\t  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;\n\t  var index = 0;\n\t  var exponent, mantissa, c;\n\t  number = abs(number); // eslint-disable-next-line no-self-compare\n\n\t  if (number != number || number === Infinity$1) {\n\t    // eslint-disable-next-line no-self-compare\n\t    mantissa = number != number ? 1 : 0;\n\t    exponent = eMax;\n\t  } else {\n\t    exponent = floor$4(log(number) / LN2);\n\n\t    if (number * (c = pow$1(2, -exponent)) < 1) {\n\t      exponent--;\n\t      c *= 2;\n\t    }\n\n\t    if (exponent + eBias >= 1) {\n\t      number += rt / c;\n\t    } else {\n\t      number += rt * pow$1(2, 1 - eBias);\n\t    }\n\n\t    if (number * c >= 2) {\n\t      exponent++;\n\t      c /= 2;\n\t    }\n\n\t    if (exponent + eBias >= eMax) {\n\t      mantissa = 0;\n\t      exponent = eMax;\n\t    } else if (exponent + eBias >= 1) {\n\t      mantissa = (number * c - 1) * pow$1(2, mantissaLength);\n\t      exponent = exponent + eBias;\n\t    } else {\n\t      mantissa = number * pow$1(2, eBias - 1) * pow$1(2, mantissaLength);\n\t      exponent = 0;\n\t    }\n\t  }\n\n\t  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);\n\n\t  exponent = exponent << mantissaLength | mantissa;\n\t  exponentLength += mantissaLength;\n\n\t  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);\n\n\t  buffer[--index] |= sign * 128;\n\t  return buffer;\n\t};\n\n\tvar unpack = function (buffer, mantissaLength) {\n\t  var bytes = buffer.length;\n\t  var exponentLength = bytes * 8 - mantissaLength - 1;\n\t  var eMax = (1 << exponentLength) - 1;\n\t  var eBias = eMax >> 1;\n\t  var nBits = exponentLength - 7;\n\t  var index = bytes - 1;\n\t  var sign = buffer[index--];\n\t  var exponent = sign & 127;\n\t  var mantissa;\n\t  sign >>= 7;\n\n\t  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);\n\n\t  mantissa = exponent & (1 << -nBits) - 1;\n\t  exponent >>= -nBits;\n\t  nBits += mantissaLength;\n\n\t  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);\n\n\t  if (exponent === 0) {\n\t    exponent = 1 - eBias;\n\t  } else if (exponent === eMax) {\n\t    return mantissa ? NaN : sign ? -Infinity$1 : Infinity$1;\n\t  } else {\n\t    mantissa = mantissa + pow$1(2, mantissaLength);\n\t    exponent = exponent - eBias;\n\t  }\n\n\t  return (sign ? -1 : 1) * mantissa * pow$1(2, exponent - mantissaLength);\n\t};\n\n\tvar ieee754 = {\n\t  pack: pack,\n\t  unpack: unpack\n\t};\n\n\tvar getOwnPropertyNames$2 = objectGetOwnPropertyNames.f;\n\tvar defineProperty$a = objectDefineProperty.f;\n\tvar getInternalState$4 = internalState.get;\n\tvar setInternalState$8 = internalState.set;\n\tvar ARRAY_BUFFER = 'ArrayBuffer';\n\tvar DATA_VIEW = 'DataView';\n\tvar PROTOTYPE$2 = 'prototype';\n\tvar WRONG_LENGTH = 'Wrong length';\n\tvar WRONG_INDEX = 'Wrong index';\n\tvar NativeArrayBuffer = global_1[ARRAY_BUFFER];\n\tvar $ArrayBuffer = NativeArrayBuffer;\n\tvar $DataView = global_1[DATA_VIEW];\n\tvar $DataViewPrototype = $DataView && $DataView[PROTOTYPE$2];\n\tvar ObjectPrototype$3 = Object.prototype;\n\tvar RangeError$1 = global_1.RangeError;\n\tvar packIEEE754 = ieee754.pack;\n\tvar unpackIEEE754 = ieee754.unpack;\n\n\tvar packInt8 = function (number) {\n\t  return [number & 0xFF];\n\t};\n\n\tvar packInt16 = function (number) {\n\t  return [number & 0xFF, number >> 8 & 0xFF];\n\t};\n\n\tvar packInt32 = function (number) {\n\t  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];\n\t};\n\n\tvar unpackInt32 = function (buffer) {\n\t  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];\n\t};\n\n\tvar packFloat32 = function (number) {\n\t  return packIEEE754(number, 23, 4);\n\t};\n\n\tvar packFloat64 = function (number) {\n\t  return packIEEE754(number, 52, 8);\n\t};\n\n\tvar addGetter = function (Constructor, key) {\n\t  defineProperty$a(Constructor[PROTOTYPE$2], key, {\n\t    get: function () {\n\t      return getInternalState$4(this)[key];\n\t    }\n\t  });\n\t};\n\n\tvar get$1 = function (view, count, index, isLittleEndian) {\n\t  var intIndex = toIndex(index);\n\t  var store = getInternalState$4(view);\n\t  if (intIndex + count > store.byteLength) throw RangeError$1(WRONG_INDEX);\n\t  var bytes = getInternalState$4(store.buffer).bytes;\n\t  var start = intIndex + store.byteOffset;\n\t  var pack = bytes.slice(start, start + count);\n\t  return isLittleEndian ? pack : pack.reverse();\n\t};\n\n\tvar set$2 = function (view, count, index, conversion, value, isLittleEndian) {\n\t  var intIndex = toIndex(index);\n\t  var store = getInternalState$4(view);\n\t  if (intIndex + count > store.byteLength) throw RangeError$1(WRONG_INDEX);\n\t  var bytes = getInternalState$4(store.buffer).bytes;\n\t  var start = intIndex + store.byteOffset;\n\t  var pack = conversion(+value);\n\n\t  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];\n\t};\n\n\tif (!arrayBufferNative) {\n\t  $ArrayBuffer = function ArrayBuffer(length) {\n\t    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n\t    var byteLength = toIndex(length);\n\t    setInternalState$8(this, {\n\t      bytes: arrayFill.call(new Array(byteLength), 0),\n\t      byteLength: byteLength\n\t    });\n\t    if (!descriptors) this.byteLength = byteLength;\n\t  };\n\n\t  $DataView = function DataView(buffer, byteOffset, byteLength) {\n\t    anInstance(this, $DataView, DATA_VIEW);\n\t    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n\t    var bufferLength = getInternalState$4(buffer).byteLength;\n\t    var offset = toInteger(byteOffset);\n\t    if (offset < 0 || offset > bufferLength) throw RangeError$1('Wrong offset');\n\t    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n\t    if (offset + byteLength > bufferLength) throw RangeError$1(WRONG_LENGTH);\n\t    setInternalState$8(this, {\n\t      buffer: buffer,\n\t      byteLength: byteLength,\n\t      byteOffset: offset\n\t    });\n\n\t    if (!descriptors) {\n\t      this.buffer = buffer;\n\t      this.byteLength = byteLength;\n\t      this.byteOffset = offset;\n\t    }\n\t  };\n\n\t  if (descriptors) {\n\t    addGetter($ArrayBuffer, 'byteLength');\n\t    addGetter($DataView, 'buffer');\n\t    addGetter($DataView, 'byteLength');\n\t    addGetter($DataView, 'byteOffset');\n\t  }\n\n\t  redefineAll($DataView[PROTOTYPE$2], {\n\t    getInt8: function getInt8(byteOffset) {\n\t      return get$1(this, 1, byteOffset)[0] << 24 >> 24;\n\t    },\n\t    getUint8: function getUint8(byteOffset) {\n\t      return get$1(this, 1, byteOffset)[0];\n\t    },\n\t    getInt16: function getInt16(byteOffset\n\t    /* , littleEndian */\n\t    ) {\n\t      var bytes = get$1(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n\t      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n\t    },\n\t    getUint16: function getUint16(byteOffset\n\t    /* , littleEndian */\n\t    ) {\n\t      var bytes = get$1(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n\t      return bytes[1] << 8 | bytes[0];\n\t    },\n\t    getInt32: function getInt32(byteOffset\n\t    /* , littleEndian */\n\t    ) {\n\t      return unpackInt32(get$1(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));\n\t    },\n\t    getUint32: function getUint32(byteOffset\n\t    /* , littleEndian */\n\t    ) {\n\t      return unpackInt32(get$1(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;\n\t    },\n\t    getFloat32: function getFloat32(byteOffset\n\t    /* , littleEndian */\n\t    ) {\n\t      return unpackIEEE754(get$1(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);\n\t    },\n\t    getFloat64: function getFloat64(byteOffset\n\t    /* , littleEndian */\n\t    ) {\n\t      return unpackIEEE754(get$1(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);\n\t    },\n\t    setInt8: function setInt8(byteOffset, value) {\n\t      set$2(this, 1, byteOffset, packInt8, value);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value) {\n\t      set$2(this, 1, byteOffset, packInt8, value);\n\t    },\n\t    setInt16: function setInt16(byteOffset, value\n\t    /* , littleEndian */\n\t    ) {\n\t      set$2(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setUint16: function setUint16(byteOffset, value\n\t    /* , littleEndian */\n\t    ) {\n\t      set$2(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setInt32: function setInt32(byteOffset, value\n\t    /* , littleEndian */\n\t    ) {\n\t      set$2(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setUint32: function setUint32(byteOffset, value\n\t    /* , littleEndian */\n\t    ) {\n\t      set$2(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setFloat32: function setFloat32(byteOffset, value\n\t    /* , littleEndian */\n\t    ) {\n\t      set$2(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setFloat64: function setFloat64(byteOffset, value\n\t    /* , littleEndian */\n\t    ) {\n\t      set$2(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    }\n\t  });\n\t} else {\n\t  if (!fails(function () {\n\t    NativeArrayBuffer(1);\n\t  }) || !fails(function () {\n\t    new NativeArrayBuffer(-1); // eslint-disable-line no-new\n\t  }) || fails(function () {\n\t    new NativeArrayBuffer(); // eslint-disable-line no-new\n\n\t    new NativeArrayBuffer(1.5); // eslint-disable-line no-new\n\n\t    new NativeArrayBuffer(NaN); // eslint-disable-line no-new\n\n\t    return NativeArrayBuffer.name != ARRAY_BUFFER;\n\t  })) {\n\t    $ArrayBuffer = function ArrayBuffer(length) {\n\t      anInstance(this, $ArrayBuffer);\n\t      return new NativeArrayBuffer(toIndex(length));\n\t    };\n\n\t    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE$2] = NativeArrayBuffer[PROTOTYPE$2];\n\n\t    for (var keys$3 = getOwnPropertyNames$2(NativeArrayBuffer), j$1 = 0, key$1; keys$3.length > j$1;) {\n\t      if (!((key$1 = keys$3[j$1++]) in $ArrayBuffer)) {\n\t        createNonEnumerableProperty($ArrayBuffer, key$1, NativeArrayBuffer[key$1]);\n\t      }\n\t    }\n\n\t    ArrayBufferPrototype.constructor = $ArrayBuffer;\n\t  } // WebKit bug - the same parent prototype for typed arrays and data view\n\n\n\t  if (objectSetPrototypeOf && objectGetPrototypeOf($DataViewPrototype) !== ObjectPrototype$3) {\n\t    objectSetPrototypeOf($DataViewPrototype, ObjectPrototype$3);\n\t  } // iOS Safari 7.x bug\n\n\n\t  var testView = new $DataView(new $ArrayBuffer(2));\n\t  var nativeSetInt8 = $DataViewPrototype.setInt8;\n\t  testView.setInt8(0, 2147483648);\n\t  testView.setInt8(1, 2147483649);\n\t  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataViewPrototype, {\n\t    setInt8: function setInt8(byteOffset, value) {\n\t      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value) {\n\t      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);\n\t    }\n\t  }, {\n\t    unsafe: true\n\t  });\n\t}\n\n\tsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\n\tsetToStringTag($DataView, DATA_VIEW);\n\tvar arrayBuffer = {\n\t  ArrayBuffer: $ArrayBuffer,\n\t  DataView: $DataView\n\t};\n\n\tvar toPositiveInteger = function (it) {\n\t  var result = toInteger(it);\n\t  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n\t  return result;\n\t};\n\n\tvar toOffset = function (it, BYTES) {\n\t  var offset = toPositiveInteger(it);\n\t  if (offset % BYTES) throw RangeError('Wrong offset');\n\t  return offset;\n\t};\n\n\tvar aTypedArrayConstructor$1 = arrayBufferViewCore.aTypedArrayConstructor;\n\n\tvar typedArrayFrom = function from(source\n\t/* , mapfn, thisArg */\n\t) {\n\t  var O = toObject(source);\n\t  var argumentsLength = arguments.length;\n\t  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n\t  var mapping = mapfn !== undefined;\n\t  var iteratorMethod = getIteratorMethod(O);\n\t  var i, length, result, step, iterator, next;\n\n\t  if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {\n\t    iterator = iteratorMethod.call(O);\n\t    next = iterator.next;\n\t    O = [];\n\n\t    while (!(step = next.call(iterator)).done) {\n\t      O.push(step.value);\n\t    }\n\t  }\n\n\t  if (mapping && argumentsLength > 2) {\n\t    mapfn = functionBindContext(mapfn, arguments[2], 2);\n\t  }\n\n\t  length = toLength(O.length);\n\t  result = new (aTypedArrayConstructor$1(this))(length);\n\n\t  for (i = 0; length > i; i++) {\n\t    result[i] = mapping ? mapfn(O[i], i) : O[i];\n\t  }\n\n\t  return result;\n\t};\n\n\tvar typedArrayConstructor = createCommonjsModule(function (module) {\n\n\t  var getOwnPropertyNames = objectGetOwnPropertyNames.f;\n\t  var forEach = arrayIteration.forEach;\n\t  var getInternalState = internalState.get;\n\t  var setInternalState = internalState.set;\n\t  var nativeDefineProperty = objectDefineProperty.f;\n\t  var nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\n\t  var round = Math.round;\n\t  var RangeError = global_1.RangeError;\n\t  var ArrayBuffer = arrayBuffer.ArrayBuffer;\n\t  var DataView = arrayBuffer.DataView;\n\t  var NATIVE_ARRAY_BUFFER_VIEWS = arrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\n\t  var TYPED_ARRAY_TAG = arrayBufferViewCore.TYPED_ARRAY_TAG;\n\t  var TypedArray = arrayBufferViewCore.TypedArray;\n\t  var TypedArrayPrototype = arrayBufferViewCore.TypedArrayPrototype;\n\t  var aTypedArrayConstructor = arrayBufferViewCore.aTypedArrayConstructor;\n\t  var isTypedArray = arrayBufferViewCore.isTypedArray;\n\t  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n\t  var WRONG_LENGTH = 'Wrong length';\n\n\t  var fromList = function (C, list) {\n\t    var index = 0;\n\t    var length = list.length;\n\t    var result = new (aTypedArrayConstructor(C))(length);\n\n\t    while (length > index) result[index] = list[index++];\n\n\t    return result;\n\t  };\n\n\t  var addGetter = function (it, key) {\n\t    nativeDefineProperty(it, key, {\n\t      get: function () {\n\t        return getInternalState(this)[key];\n\t      }\n\t    });\n\t  };\n\n\t  var isArrayBuffer = function (it) {\n\t    var klass;\n\t    return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';\n\t  };\n\n\t  var isTypedArrayIndex = function (target, key) {\n\t    return isTypedArray(target) && typeof key != 'symbol' && key in target && String(+key) == String(key);\n\t  };\n\n\t  var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {\n\t    return isTypedArrayIndex(target, key = toPrimitive(key, true)) ? createPropertyDescriptor(2, target[key]) : nativeGetOwnPropertyDescriptor(target, key);\n\t  };\n\n\t  var wrappedDefineProperty = function defineProperty(target, key, descriptor) {\n\t    if (isTypedArrayIndex(target, key = toPrimitive(key, true)) && isObject(descriptor) && has(descriptor, 'value') && !has(descriptor, 'get') && !has(descriptor, 'set') // TODO: add validation descriptor w/o calling accessors\n\t    && !descriptor.configurable && (!has(descriptor, 'writable') || descriptor.writable) && (!has(descriptor, 'enumerable') || descriptor.enumerable)) {\n\t      target[key] = descriptor.value;\n\t      return target;\n\t    }\n\n\t    return nativeDefineProperty(target, key, descriptor);\n\t  };\n\n\t  if (descriptors) {\n\t    if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n\t      objectGetOwnPropertyDescriptor.f = wrappedGetOwnPropertyDescriptor;\n\t      objectDefineProperty.f = wrappedDefineProperty;\n\t      addGetter(TypedArrayPrototype, 'buffer');\n\t      addGetter(TypedArrayPrototype, 'byteOffset');\n\t      addGetter(TypedArrayPrototype, 'byteLength');\n\t      addGetter(TypedArrayPrototype, 'length');\n\t    }\n\n\t    _export({\n\t      target: 'Object',\n\t      stat: true,\n\t      forced: !NATIVE_ARRAY_BUFFER_VIEWS\n\t    }, {\n\t      getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,\n\t      defineProperty: wrappedDefineProperty\n\t    });\n\n\t    module.exports = function (TYPE, wrapper, CLAMPED) {\n\t      var BYTES = TYPE.match(/\\d+$/)[0] / 8;\n\t      var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';\n\t      var GETTER = 'get' + TYPE;\n\t      var SETTER = 'set' + TYPE;\n\t      var NativeTypedArrayConstructor = global_1[CONSTRUCTOR_NAME];\n\t      var TypedArrayConstructor = NativeTypedArrayConstructor;\n\t      var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;\n\t      var exported = {};\n\n\t      var getter = function (that, index) {\n\t        var data = getInternalState(that);\n\t        return data.view[GETTER](index * BYTES + data.byteOffset, true);\n\t      };\n\n\t      var setter = function (that, index, value) {\n\t        var data = getInternalState(that);\n\t        if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;\n\t        data.view[SETTER](index * BYTES + data.byteOffset, value, true);\n\t      };\n\n\t      var addElement = function (that, index) {\n\t        nativeDefineProperty(that, index, {\n\t          get: function () {\n\t            return getter(this, index);\n\t          },\n\t          set: function (value) {\n\t            return setter(this, index, value);\n\t          },\n\t          enumerable: true\n\t        });\n\t      };\n\n\t      if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n\t        TypedArrayConstructor = wrapper(function (that, data, offset, $length) {\n\t          anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n\t          var index = 0;\n\t          var byteOffset = 0;\n\t          var buffer, byteLength, length;\n\n\t          if (!isObject(data)) {\n\t            length = toIndex(data);\n\t            byteLength = length * BYTES;\n\t            buffer = new ArrayBuffer(byteLength);\n\t          } else if (isArrayBuffer(data)) {\n\t            buffer = data;\n\t            byteOffset = toOffset(offset, BYTES);\n\t            var $len = data.byteLength;\n\n\t            if ($length === undefined) {\n\t              if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n\t              byteLength = $len - byteOffset;\n\t              if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n\t            } else {\n\t              byteLength = toLength($length) * BYTES;\n\t              if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);\n\t            }\n\n\t            length = byteLength / BYTES;\n\t          } else if (isTypedArray(data)) {\n\t            return fromList(TypedArrayConstructor, data);\n\t          } else {\n\t            return typedArrayFrom.call(TypedArrayConstructor, data);\n\t          }\n\n\t          setInternalState(that, {\n\t            buffer: buffer,\n\t            byteOffset: byteOffset,\n\t            byteLength: byteLength,\n\t            length: length,\n\t            view: new DataView(buffer)\n\t          });\n\n\t          while (index < length) addElement(that, index++);\n\t        });\n\t        if (objectSetPrototypeOf) objectSetPrototypeOf(TypedArrayConstructor, TypedArray);\n\t        TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = objectCreate(TypedArrayPrototype);\n\t      } else if (typedArrayConstructorsRequireWrappers) {\n\t        TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {\n\t          anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);\n\t          return inheritIfRequired(function () {\n\t            if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));\n\t            if (isArrayBuffer(data)) return $length !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length) : typedArrayOffset !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES)) : new NativeTypedArrayConstructor(data);\n\t            if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);\n\t            return typedArrayFrom.call(TypedArrayConstructor, data);\n\t          }(), dummy, TypedArrayConstructor);\n\t        });\n\t        if (objectSetPrototypeOf) objectSetPrototypeOf(TypedArrayConstructor, TypedArray);\n\t        forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {\n\t          if (!(key in TypedArrayConstructor)) {\n\t            createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);\n\t          }\n\t        });\n\t        TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;\n\t      }\n\n\t      if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {\n\t        createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);\n\t      }\n\n\t      if (TYPED_ARRAY_TAG) {\n\t        createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);\n\t      }\n\n\t      exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;\n\t      _export({\n\t        global: true,\n\t        forced: TypedArrayConstructor != NativeTypedArrayConstructor,\n\t        sham: !NATIVE_ARRAY_BUFFER_VIEWS\n\t      }, exported);\n\n\t      if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {\n\t        createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);\n\t      }\n\n\t      if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {\n\t        createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);\n\t      }\n\n\t      setSpecies(CONSTRUCTOR_NAME);\n\t    };\n\t  } else module.exports = function () {\n\t    /* empty */\n\t  };\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-typedarray-objects\n\n\ttypedArrayConstructor('Uint8', function (init) {\n\t  return function Uint8Array(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-typedarray-objects\n\n\ttypedArrayConstructor('Uint16', function (init) {\n\t  return function Uint16Array(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-typedarray-objects\n\n\ttypedArrayConstructor('Uint32', function (init) {\n\t  return function Uint32Array(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n\tvar min$8 = Math.min; // `Array.prototype.copyWithin` method implementation\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin\n\n\tvar arrayCopyWithin = [].copyWithin || function copyWithin(target\n\t/* = 0 */\n\t, start\n\t/* = 0, end = @length */\n\t) {\n\t  var O = toObject(this);\n\t  var len = toLength(O.length);\n\t  var to = toAbsoluteIndex(target, len);\n\t  var from = toAbsoluteIndex(start, len);\n\t  var end = arguments.length > 2 ? arguments[2] : undefined;\n\t  var count = min$8((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n\t  var inc = 1;\n\n\t  if (from < to && to < from + count) {\n\t    inc = -1;\n\t    from += count - 1;\n\t    to += count - 1;\n\t  }\n\n\t  while (count-- > 0) {\n\t    if (from in O) O[to] = O[from];else delete O[to];\n\t    to += inc;\n\t    from += inc;\n\t  }\n\n\t  return O;\n\t};\n\n\tvar aTypedArray$1 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$1 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.copyWithin` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.copywithin\n\n\texportTypedArrayMethod$1('copyWithin', function copyWithin(target, start\n\t/* , end */\n\t) {\n\t  return arrayCopyWithin.call(aTypedArray$1(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n\t});\n\n\tvar $every = arrayIteration.every;\n\tvar aTypedArray$2 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$2 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.every` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.every\n\n\texportTypedArrayMethod$2('every', function every(callbackfn\n\t/* , thisArg */\n\t) {\n\t  return $every(aTypedArray$2(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar aTypedArray$3 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$3 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.fill` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.fill\n\t// eslint-disable-next-line no-unused-vars\n\n\texportTypedArrayMethod$3('fill', function fill(value\n\t/* , start, end */\n\t) {\n\t  return arrayFill.apply(aTypedArray$3(this), arguments);\n\t});\n\n\tvar $filter$1 = arrayIteration.filter;\n\tvar aTypedArray$4 = arrayBufferViewCore.aTypedArray;\n\tvar aTypedArrayConstructor$2 = arrayBufferViewCore.aTypedArrayConstructor;\n\tvar exportTypedArrayMethod$4 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.filter` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter\n\n\texportTypedArrayMethod$4('filter', function filter(callbackfn\n\t/* , thisArg */\n\t) {\n\t  var list = $filter$1(aTypedArray$4(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  var C = speciesConstructor(this, this.constructor);\n\t  var index = 0;\n\t  var length = list.length;\n\t  var result = new (aTypedArrayConstructor$2(C))(length);\n\n\t  while (length > index) result[index] = list[index++];\n\n\t  return result;\n\t});\n\n\tvar $find$1 = arrayIteration.find;\n\tvar aTypedArray$5 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$5 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.find` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.find\n\n\texportTypedArrayMethod$5('find', function find(predicate\n\t/* , thisArg */\n\t) {\n\t  return $find$1(aTypedArray$5(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $findIndex = arrayIteration.findIndex;\n\tvar aTypedArray$6 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$6 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.findIndex` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.findindex\n\n\texportTypedArrayMethod$6('findIndex', function findIndex(predicate\n\t/* , thisArg */\n\t) {\n\t  return $findIndex(aTypedArray$6(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $forEach$2 = arrayIteration.forEach;\n\tvar aTypedArray$7 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$7 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.forEach` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.foreach\n\n\texportTypedArrayMethod$7('forEach', function forEach(callbackfn\n\t/* , thisArg */\n\t) {\n\t  $forEach$2(aTypedArray$7(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $includes$1 = arrayIncludes.includes;\n\tvar aTypedArray$8 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$8 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.includes` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.includes\n\n\texportTypedArrayMethod$8('includes', function includes(searchElement\n\t/* , fromIndex */\n\t) {\n\t  return $includes$1(aTypedArray$8(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $indexOf$1 = arrayIncludes.indexOf;\n\tvar aTypedArray$9 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$9 = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.indexOf` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.indexof\n\n\texportTypedArrayMethod$9('indexOf', function indexOf(searchElement\n\t/* , fromIndex */\n\t) {\n\t  return $indexOf$1(aTypedArray$9(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar ITERATOR$8 = wellKnownSymbol('iterator');\n\tvar Uint8Array$1 = global_1.Uint8Array;\n\tvar arrayValues = es_array_iterator.values;\n\tvar arrayKeys = es_array_iterator.keys;\n\tvar arrayEntries = es_array_iterator.entries;\n\tvar aTypedArray$a = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$a = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar nativeTypedArrayIterator = Uint8Array$1 && Uint8Array$1.prototype[ITERATOR$8];\n\tvar CORRECT_ITER_NAME = !!nativeTypedArrayIterator && (nativeTypedArrayIterator.name == 'values' || nativeTypedArrayIterator.name == undefined);\n\n\tvar typedArrayValues = function values() {\n\t  return arrayValues.call(aTypedArray$a(this));\n\t}; // `%TypedArray%.prototype.entries` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.entries\n\n\n\texportTypedArrayMethod$a('entries', function entries() {\n\t  return arrayEntries.call(aTypedArray$a(this));\n\t}); // `%TypedArray%.prototype.keys` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.keys\n\n\texportTypedArrayMethod$a('keys', function keys() {\n\t  return arrayKeys.call(aTypedArray$a(this));\n\t}); // `%TypedArray%.prototype.values` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.values\n\n\texportTypedArrayMethod$a('values', typedArrayValues, !CORRECT_ITER_NAME); // `%TypedArray%.prototype[@@iterator]` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype-@@iterator\n\n\texportTypedArrayMethod$a(ITERATOR$8, typedArrayValues, !CORRECT_ITER_NAME);\n\n\tvar aTypedArray$b = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$b = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar $join = [].join; // `%TypedArray%.prototype.join` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.join\n\t// eslint-disable-next-line no-unused-vars\n\n\texportTypedArrayMethod$b('join', function join(separator) {\n\t  return $join.apply(aTypedArray$b(this), arguments);\n\t});\n\n\tvar aTypedArray$c = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$c = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.lastIndexOf` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.lastindexof\n\t// eslint-disable-next-line no-unused-vars\n\n\texportTypedArrayMethod$c('lastIndexOf', function lastIndexOf(searchElement\n\t/* , fromIndex */\n\t) {\n\t  return arrayLastIndexOf.apply(aTypedArray$c(this), arguments);\n\t});\n\n\tvar $map$1 = arrayIteration.map;\n\tvar aTypedArray$d = arrayBufferViewCore.aTypedArray;\n\tvar aTypedArrayConstructor$3 = arrayBufferViewCore.aTypedArrayConstructor;\n\tvar exportTypedArrayMethod$d = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.map` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map\n\n\texportTypedArrayMethod$d('map', function map(mapfn\n\t/* , thisArg */\n\t) {\n\t  return $map$1(aTypedArray$d(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {\n\t    return new (aTypedArrayConstructor$3(speciesConstructor(O, O.constructor)))(length);\n\t  });\n\t});\n\n\tvar $reduce$1 = arrayReduce.left;\n\tvar aTypedArray$e = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$e = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.reduce` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduce\n\n\texportTypedArrayMethod$e('reduce', function reduce(callbackfn\n\t/* , initialValue */\n\t) {\n\t  return $reduce$1(aTypedArray$e(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $reduceRight = arrayReduce.right;\n\tvar aTypedArray$f = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$f = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.reduceRicht` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduceright\n\n\texportTypedArrayMethod$f('reduceRight', function reduceRight(callbackfn\n\t/* , initialValue */\n\t) {\n\t  return $reduceRight(aTypedArray$f(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar aTypedArray$g = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$g = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar floor$5 = Math.floor; // `%TypedArray%.prototype.reverse` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reverse\n\n\texportTypedArrayMethod$g('reverse', function reverse() {\n\t  var that = this;\n\t  var length = aTypedArray$g(that).length;\n\t  var middle = floor$5(length / 2);\n\t  var index = 0;\n\t  var value;\n\n\t  while (index < middle) {\n\t    value = that[index];\n\t    that[index++] = that[--length];\n\t    that[length] = value;\n\t  }\n\n\t  return that;\n\t});\n\n\tvar aTypedArray$h = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$h = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar FORCED$5 = fails(function () {\n\t  // eslint-disable-next-line no-undef\n\t  new Int8Array(1).set({});\n\t}); // `%TypedArray%.prototype.set` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.set\n\n\texportTypedArrayMethod$h('set', function set(arrayLike\n\t/* , offset */\n\t) {\n\t  aTypedArray$h(this);\n\t  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n\t  var length = this.length;\n\t  var src = toObject(arrayLike);\n\t  var len = toLength(src.length);\n\t  var index = 0;\n\t  if (len + offset > length) throw RangeError('Wrong length');\n\n\t  while (index < len) this[offset + index] = src[index++];\n\t}, FORCED$5);\n\n\tvar aTypedArray$i = arrayBufferViewCore.aTypedArray;\n\tvar aTypedArrayConstructor$4 = arrayBufferViewCore.aTypedArrayConstructor;\n\tvar exportTypedArrayMethod$i = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar $slice = [].slice;\n\tvar FORCED$6 = fails(function () {\n\t  // eslint-disable-next-line no-undef\n\t  new Int8Array(1).slice();\n\t}); // `%TypedArray%.prototype.slice` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.slice\n\n\texportTypedArrayMethod$i('slice', function slice(start, end) {\n\t  var list = $slice.call(aTypedArray$i(this), start, end);\n\t  var C = speciesConstructor(this, this.constructor);\n\t  var index = 0;\n\t  var length = list.length;\n\t  var result = new (aTypedArrayConstructor$4(C))(length);\n\n\t  while (length > index) result[index] = list[index++];\n\n\t  return result;\n\t}, FORCED$6);\n\n\tvar $some = arrayIteration.some;\n\tvar aTypedArray$j = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$j = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.some` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.some\n\n\texportTypedArrayMethod$j('some', function some(callbackfn\n\t/* , thisArg */\n\t) {\n\t  return $some(aTypedArray$j(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar aTypedArray$k = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$k = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar $sort = [].sort; // `%TypedArray%.prototype.sort` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.sort\n\n\texportTypedArrayMethod$k('sort', function sort(comparefn) {\n\t  return $sort.call(aTypedArray$k(this), comparefn);\n\t});\n\n\tvar aTypedArray$l = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$l = arrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.subarray` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray\n\n\texportTypedArrayMethod$l('subarray', function subarray(begin, end) {\n\t  var O = aTypedArray$l(this);\n\t  var length = O.length;\n\t  var beginIndex = toAbsoluteIndex(begin, length);\n\t  return new (speciesConstructor(O, O.constructor))(O.buffer, O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex));\n\t});\n\n\tvar Int8Array$3 = global_1.Int8Array;\n\tvar aTypedArray$m = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$m = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar $toLocaleString = [].toLocaleString;\n\tvar $slice$1 = [].slice; // iOS Safari 6.x fails here\n\n\tvar TO_LOCALE_STRING_BUG = !!Int8Array$3 && fails(function () {\n\t  $toLocaleString.call(new Int8Array$3(1));\n\t});\n\tvar FORCED$7 = fails(function () {\n\t  return [1, 2].toLocaleString() != new Int8Array$3([1, 2]).toLocaleString();\n\t}) || !fails(function () {\n\t  Int8Array$3.prototype.toLocaleString.call([1, 2]);\n\t}); // `%TypedArray%.prototype.toLocaleString` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring\n\n\texportTypedArrayMethod$m('toLocaleString', function toLocaleString() {\n\t  return $toLocaleString.apply(TO_LOCALE_STRING_BUG ? $slice$1.call(aTypedArray$m(this)) : aTypedArray$m(this), arguments);\n\t}, FORCED$7);\n\n\tvar exportTypedArrayMethod$n = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar Uint8Array$2 = global_1.Uint8Array;\n\tvar Uint8ArrayPrototype = Uint8Array$2 && Uint8Array$2.prototype || {};\n\tvar arrayToString = [].toString;\n\tvar arrayJoin = [].join;\n\n\tif (fails(function () {\n\t  arrayToString.call({});\n\t})) {\n\t  arrayToString = function toString() {\n\t    return arrayJoin.call(this);\n\t  };\n\t}\n\n\tvar IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString; // `%TypedArray%.prototype.toString` method\n\t// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tostring\n\n\texportTypedArrayMethod$n('toString', arrayToString, IS_NOT_ARRAY_METHOD);\n\n\tvar ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE = 65000;\n\tvar Zlib = {\n\t  Huffman: {},\n\t  Util: {},\n\t  CRC32: {}\n\t};\n\t/**\n\t * Compression Method\n\t * @enum {number}\n\t */\n\n\tZlib.CompressionMethod = {\n\t  DEFLATE: 8,\n\t  RESERVED: 15\n\t};\n\t/**\n\t * @param {Object=} opt_params options.\n\t * @constructor\n\t */\n\n\tZlib.Zip = function (opt_params) {\n\t  opt_params = opt_params || {};\n\t  /** @type {Array.<{\n\t   *   buffer: !(Array.<number>|Uint8Array),\n\t   *   option: Object,\n\t   *   compressed: boolean,\n\t   *   encrypted: boolean,\n\t   *   size: number,\n\t   *   crc32: number\n\t   * }>} */\n\n\t  this.files = [];\n\t  /** @type {(Array.<number>|Uint8Array)} */\n\n\t  this.comment = opt_params['comment'];\n\t  /** @type {(Array.<number>|Uint8Array)} */\n\n\t  this.password;\n\t};\n\t/**\n\t * @enum {number}\n\t */\n\n\n\tZlib.Zip.CompressionMethod = {\n\t  STORE: 0,\n\t  DEFLATE: 8\n\t};\n\t/**\n\t * @enum {number}\n\t */\n\n\tZlib.Zip.OperatingSystem = {\n\t  MSDOS: 0,\n\t  UNIX: 3,\n\t  MACINTOSH: 7\n\t};\n\t/**\n\t * @enum {number}\n\t */\n\n\tZlib.Zip.Flags = {\n\t  ENCRYPT: 0x0001,\n\t  DESCRIPTOR: 0x0008,\n\t  UTF8: 0x0800\n\t};\n\t/**\n\t * @type {Array.<number>}\n\t * @const\n\t */\n\n\tZlib.Zip.FileHeaderSignature = [0x50, 0x4b, 0x01, 0x02];\n\t/**\n\t * @type {Array.<number>}\n\t * @const\n\t */\n\n\tZlib.Zip.LocalFileHeaderSignature = [0x50, 0x4b, 0x03, 0x04];\n\t/**\n\t * @type {Array.<number>}\n\t * @const\n\t */\n\n\tZlib.Zip.CentralDirectorySignature = [0x50, 0x4b, 0x05, 0x06];\n\t/**\n\t * @param {Array.<number>|Uint8Array} input\n\t * @param {Object=} opt_params options.\n\t */\n\n\tZlib.Zip.prototype.addFile = function (input, opt_params) {\n\t  opt_params = opt_params || {};\n\t  /** @type {string} */\n\n\t  var filename =  opt_params['filename'];\n\t  /** @type {boolean} */\n\n\t  var compressed;\n\t  /** @type {number} */\n\n\t  var size = input.length;\n\t  /** @type {number} */\n\n\t  var crc32 = 0;\n\n\t  if ( input instanceof Array) {\n\t    input = new Uint8Array(input);\n\t  } // default\n\n\n\t  if (typeof opt_params['compressionMethod'] !== 'number') {\n\t    opt_params['compressionMethod'] = Zlib.Zip.CompressionMethod.DEFLATE;\n\t  } // その場で圧縮する場合\n\n\n\t  if (opt_params['compress']) {\n\t    switch (opt_params['compressionMethod']) {\n\t      case Zlib.Zip.CompressionMethod.STORE:\n\t        break;\n\n\t      case Zlib.Zip.CompressionMethod.DEFLATE:\n\t        crc32 = Zlib.CRC32.calc(input);\n\t        input = this.deflateWithOption(input, opt_params);\n\t        compressed = true;\n\t        break;\n\n\t      default:\n\t        throw new Error('unknown compression method:' + opt_params['compressionMethod']);\n\t    }\n\t  }\n\n\t  this.files.push({\n\t    buffer: input,\n\t    option: opt_params,\n\t    compressed: compressed,\n\t    encrypted: false,\n\t    size: size,\n\t    crc32: crc32\n\t  });\n\t};\n\t/**\n\t * @param {(Array.<number>|Uint8Array)} password\n\t */\n\n\n\tZlib.Zip.prototype.setPassword = function (password) {\n\t  this.password = password;\n\t};\n\n\tZlib.Zip.prototype.compress = function () {\n\t  /** @type {Array.<{\n\t   *   buffer: !(Array.<number>|Uint8Array),\n\t   *   option: Object,\n\t   *   compressed: boolean,\n\t   *   encrypted: boolean,\n\t   *   size: number,\n\t   *   crc32: number\n\t   * }>} */\n\t  var files = this.files;\n\t  /** @type {{\n\t   *   buffer: !(Array.<number>|Uint8Array),\n\t   *   option: Object,\n\t   *   compressed: boolean,\n\t   *   encrypted: boolean,\n\t   *   size: number,\n\t   *   crc32: number\n\t   * }} */\n\n\t  var file;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var output;\n\t  /** @type {number} */\n\n\t  var op1;\n\t  /** @type {number} */\n\n\t  var op2;\n\t  /** @type {number} */\n\n\t  var op3;\n\t  /** @type {number} */\n\n\t  var localFileSize = 0;\n\t  /** @type {number} */\n\n\t  var centralDirectorySize = 0;\n\t  /** @type {number} */\n\n\t  var endOfCentralDirectorySize;\n\t  /** @type {number} */\n\n\t  var offset;\n\t  /** @type {number} */\n\n\t  var needVersion;\n\t  /** @type {number} */\n\n\t  var flags;\n\t  /** @type {Zlib.Zip.CompressionMethod} */\n\n\t  var compressionMethod;\n\t  /** @type {Date} */\n\n\t  var date;\n\t  /** @type {number} */\n\n\t  var crc32;\n\t  /** @type {number} */\n\n\t  var size;\n\t  /** @type {number} */\n\n\t  var plainSize;\n\t  /** @type {number} */\n\n\t  var filenameLength;\n\t  /** @type {number} */\n\n\t  var extraFieldLength;\n\t  /** @type {number} */\n\n\t  var commentLength;\n\t  /** @type {(Array.<number>|Uint8Array)} */\n\n\t  var filename;\n\t  /** @type {(Array.<number>|Uint8Array)} */\n\n\t  var extraField;\n\t  /** @type {(Array.<number>|Uint8Array)} */\n\n\t  var comment;\n\t  /** @type {(Array.<number>|Uint8Array)} */\n\n\t  var buffer;\n\t  /** @type {*} */\n\n\t  var tmp;\n\t  /** @type {Array.<number>|Uint32Array|Object} */\n\n\t  var key;\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var il;\n\t  /** @type {number} */\n\n\t  var j;\n\t  /** @type {number} */\n\n\t  var jl; // ファイルの圧縮\n\n\t  for (i = 0, il = files.length; i < il; ++i) {\n\t    file = files[i];\n\t    filenameLength = file.option['filename'] ? file.option['filename'].length : 0;\n\t    extraFieldLength = file.option['extraField'] ? file.option['extraField'].length : 0;\n\t    commentLength = file.option['comment'] ? file.option['comment'].length : 0; // 圧縮されていなかったら圧縮\n\n\t    if (!file.compressed) {\n\t      // 圧縮前に CRC32 の計算をしておく\n\t      file.crc32 = Zlib.CRC32.calc(file.buffer);\n\n\t      switch (file.option['compressionMethod']) {\n\t        case Zlib.Zip.CompressionMethod.STORE:\n\t          break;\n\n\t        case Zlib.Zip.CompressionMethod.DEFLATE:\n\t          file.buffer = this.deflateWithOption(file.buffer, file.option);\n\t          file.compressed = true;\n\t          break;\n\n\t        default:\n\t          throw new Error('unknown compression method:' + file.option['compressionMethod']);\n\t      }\n\t    } // encryption\n\n\n\t    if (file.option['password'] !== void 0 || this.password !== void 0) {\n\t      // init encryption\n\t      key = this.createEncryptionKey(file.option['password'] || this.password); // add header\n\n\t      buffer = file.buffer;\n\n\t      {\n\t        tmp = new Uint8Array(buffer.length + 12);\n\t        tmp.set(buffer, 12);\n\t        buffer = tmp;\n\t      }\n\n\t      for (j = 0; j < 12; ++j) {\n\t        buffer[j] = this.encode(key, i === 11 ? file.crc32 & 0xff : Math.random() * 256 | 0);\n\t      } // data encryption\n\n\n\t      for (jl = buffer.length; j < jl; ++j) {\n\t        buffer[j] = this.encode(key, buffer[j]);\n\t      }\n\n\t      file.buffer = buffer;\n\t    } // 必要バッファサイズの計算\n\n\n\t    localFileSize += // local file header\n\t    30 + filenameLength + // file data\n\t    file.buffer.length;\n\t    centralDirectorySize += // file header\n\t    46 + filenameLength + commentLength;\n\t  } // end of central directory\n\n\n\t  endOfCentralDirectorySize = 22 + (this.comment ? this.comment.length : 0);\n\t  output = new ( Uint8Array )(localFileSize + centralDirectorySize + endOfCentralDirectorySize);\n\t  op1 = 0;\n\t  op2 = localFileSize;\n\t  op3 = op2 + centralDirectorySize; // ファイルの圧縮\n\n\t  for (i = 0, il = files.length; i < il; ++i) {\n\t    file = files[i];\n\t    filenameLength = file.option['filename'] ? file.option['filename'].length : 0;\n\t    extraFieldLength = 0; // TODO\n\n\t    commentLength = file.option['comment'] ? file.option['comment'].length : 0; //-------------------------------------------------------------------------\n\t    // local file header & file header\n\t    //-------------------------------------------------------------------------\n\n\t    offset = op1; // signature\n\t    // local file header\n\n\t    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[0];\n\t    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[1];\n\t    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[2];\n\t    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[3]; // file header\n\n\t    output[op2++] = Zlib.Zip.FileHeaderSignature[0];\n\t    output[op2++] = Zlib.Zip.FileHeaderSignature[1];\n\t    output[op2++] = Zlib.Zip.FileHeaderSignature[2];\n\t    output[op2++] = Zlib.Zip.FileHeaderSignature[3]; // compressor info\n\n\t    needVersion = 20;\n\t    output[op2++] = needVersion & 0xff;\n\t    output[op2++] =\n\t    /** @type {Zlib.Zip.OperatingSystem} */\n\t    file.option['os'] || Zlib.Zip.OperatingSystem.MSDOS; // need version\n\n\t    output[op1++] = output[op2++] = needVersion & 0xff;\n\t    output[op1++] = output[op2++] = needVersion >> 8 & 0xff; // general purpose bit flag\n\n\t    flags = 0;\n\n\t    if (file.option['password'] || this.password) {\n\t      flags |= Zlib.Zip.Flags.ENCRYPT;\n\t    }\n\n\t    output[op1++] = output[op2++] = flags & 0xff;\n\t    output[op1++] = output[op2++] = flags >> 8 & 0xff; // compression method\n\n\t    compressionMethod =\n\t    /** @type {Zlib.Zip.CompressionMethod} */\n\t    file.option['compressionMethod'];\n\t    output[op1++] = output[op2++] = compressionMethod & 0xff;\n\t    output[op1++] = output[op2++] = compressionMethod >> 8 & 0xff; // date\n\n\t    date =\n\t    /** @type {(Date|undefined)} */\n\t    file.option['date'] || new Date();\n\t    output[op1++] = output[op2++] = (date.getMinutes() & 0x7) << 5 | (date.getSeconds() / 2 | 0);\n\t    output[op1++] = output[op2++] = date.getHours() << 3 | date.getMinutes() >> 3; //\n\n\t    output[op1++] = output[op2++] = (date.getMonth() + 1 & 0x7) << 5 | date.getDate();\n\t    output[op1++] = output[op2++] = (date.getFullYear() - 1980 & 0x7f) << 1 | date.getMonth() + 1 >> 3; // CRC-32\n\n\t    crc32 = file.crc32;\n\t    output[op1++] = output[op2++] = crc32 & 0xff;\n\t    output[op1++] = output[op2++] = crc32 >> 8 & 0xff;\n\t    output[op1++] = output[op2++] = crc32 >> 16 & 0xff;\n\t    output[op1++] = output[op2++] = crc32 >> 24 & 0xff; // compressed size\n\n\t    size = file.buffer.length;\n\t    output[op1++] = output[op2++] = size & 0xff;\n\t    output[op1++] = output[op2++] = size >> 8 & 0xff;\n\t    output[op1++] = output[op2++] = size >> 16 & 0xff;\n\t    output[op1++] = output[op2++] = size >> 24 & 0xff; // uncompressed size\n\n\t    plainSize = file.size;\n\t    output[op1++] = output[op2++] = plainSize & 0xff;\n\t    output[op1++] = output[op2++] = plainSize >> 8 & 0xff;\n\t    output[op1++] = output[op2++] = plainSize >> 16 & 0xff;\n\t    output[op1++] = output[op2++] = plainSize >> 24 & 0xff; // filename length\n\n\t    output[op1++] = output[op2++] = filenameLength & 0xff;\n\t    output[op1++] = output[op2++] = filenameLength >> 8 & 0xff; // extra field length\n\n\t    output[op1++] = output[op2++] = extraFieldLength & 0xff;\n\t    output[op1++] = output[op2++] = extraFieldLength >> 8 & 0xff; // file comment length\n\n\t    output[op2++] = commentLength & 0xff;\n\t    output[op2++] = commentLength >> 8 & 0xff; // disk number start\n\n\t    output[op2++] = 0;\n\t    output[op2++] = 0; // internal file attributes\n\n\t    output[op2++] = 0;\n\t    output[op2++] = 0; // external file attributes\n\n\t    output[op2++] = 0;\n\t    output[op2++] = 0;\n\t    output[op2++] = 0;\n\t    output[op2++] = 0; // relative offset of local header\n\n\t    output[op2++] = offset & 0xff;\n\t    output[op2++] = offset >> 8 & 0xff;\n\t    output[op2++] = offset >> 16 & 0xff;\n\t    output[op2++] = offset >> 24 & 0xff; // filename\n\n\t    filename = file.option['filename'];\n\n\t    if (filename) {\n\t      {\n\t        output.set(filename, op1);\n\t        output.set(filename, op2);\n\t        op1 += filenameLength;\n\t        op2 += filenameLength;\n\t      }\n\t    } // extra field\n\n\n\t    extraField = file.option['extraField'];\n\n\t    if (extraField) {\n\t      {\n\t        output.set(extraField, op1);\n\t        output.set(extraField, op2);\n\t        op1 += extraFieldLength;\n\t        op2 += extraFieldLength;\n\t      }\n\t    } // comment\n\n\n\t    comment = file.option['comment'];\n\n\t    if (comment) {\n\t      {\n\t        output.set(comment, op2);\n\t        op2 += commentLength;\n\t      }\n\t    } //-------------------------------------------------------------------------\n\t    // file data\n\t    //-------------------------------------------------------------------------\n\n\n\t    {\n\t      output.set(file.buffer, op1);\n\t      op1 += file.buffer.length;\n\t    }\n\t  } //-------------------------------------------------------------------------\n\t  // end of central directory\n\t  //-------------------------------------------------------------------------\n\t  // signature\n\n\n\t  output[op3++] = Zlib.Zip.CentralDirectorySignature[0];\n\t  output[op3++] = Zlib.Zip.CentralDirectorySignature[1];\n\t  output[op3++] = Zlib.Zip.CentralDirectorySignature[2];\n\t  output[op3++] = Zlib.Zip.CentralDirectorySignature[3]; // number of this disk\n\n\t  output[op3++] = 0;\n\t  output[op3++] = 0; // number of the disk with the start of the central directory\n\n\t  output[op3++] = 0;\n\t  output[op3++] = 0; // total number of entries in the central directory on this disk\n\n\t  output[op3++] = il & 0xff;\n\t  output[op3++] = il >> 8 & 0xff; // total number of entries in the central directory\n\n\t  output[op3++] = il & 0xff;\n\t  output[op3++] = il >> 8 & 0xff; // size of the central directory\n\n\t  output[op3++] = centralDirectorySize & 0xff;\n\t  output[op3++] = centralDirectorySize >> 8 & 0xff;\n\t  output[op3++] = centralDirectorySize >> 16 & 0xff;\n\t  output[op3++] = centralDirectorySize >> 24 & 0xff; // offset of start of central directory with respect to the starting disk number\n\n\t  output[op3++] = localFileSize & 0xff;\n\t  output[op3++] = localFileSize >> 8 & 0xff;\n\t  output[op3++] = localFileSize >> 16 & 0xff;\n\t  output[op3++] = localFileSize >> 24 & 0xff; // .ZIP file comment length\n\n\t  commentLength = this.comment ? this.comment.length : 0;\n\t  output[op3++] = commentLength & 0xff;\n\t  output[op3++] = commentLength >> 8 & 0xff; // .ZIP file comment\n\n\t  if (this.comment) {\n\t    {\n\t      output.set(this.comment, op3);\n\t      op3 += commentLength;\n\t    }\n\t  }\n\n\t  return output;\n\t};\n\t/**\n\t * @param {!(Array.<number>|Uint8Array)} input\n\t * @param {Object=} opt_params options.\n\t * @return {!(Array.<number>|Uint8Array)}\n\t */\n\n\n\tZlib.Zip.prototype.deflateWithOption = function (input, opt_params) {\n\t  /** @type {Zlib.RawDeflate} */\n\t  var deflator = new Zlib.RawDeflate(input, opt_params['deflateOption']);\n\t  return deflator.compress();\n\t};\n\t/**\n\t * @param {(Array.<number>|Uint32Array)} key\n\t * @return {number}\n\t */\n\n\n\tZlib.Zip.prototype.getByte = function (key) {\n\t  /** @type {number} */\n\t  var tmp = key[2] & 0xffff | 2;\n\t  return tmp * (tmp ^ 1) >> 8 & 0xff;\n\t};\n\t/**\n\t * @param {(Array.<number>|Uint32Array|Object)} key\n\t * @param {number} n\n\t * @return {number}\n\t */\n\n\n\tZlib.Zip.prototype.encode = function (key, n) {\n\t  /** @type {number} */\n\t  var tmp = this.getByte(\n\t  /** @type {(Array.<number>|Uint32Array)} */\n\t  key);\n\t  this.updateKeys(\n\t  /** @type {(Array.<number>|Uint32Array)} */\n\t  key, n);\n\t  return tmp ^ n;\n\t};\n\t/**\n\t * @param {(Array.<number>|Uint32Array)} key\n\t * @param {number} n\n\t */\n\n\n\tZlib.Zip.prototype.updateKeys = function (key, n) {\n\t  key[0] = Zlib.CRC32.single(key[0], n);\n\t  key[1] = (((key[1] + (key[0] & 0xff)) * 20173 >>> 0) * 6681 >>> 0) + 1 >>> 0;\n\t  key[2] = Zlib.CRC32.single(key[2], key[1] >>> 24);\n\t};\n\t/**\n\t * @param {(Array.<number>|Uint8Array)} password\n\t * @return {!(Array.<number>|Uint32Array|Object)}\n\t */\n\n\n\tZlib.Zip.prototype.createEncryptionKey = function (password) {\n\t  /** @type {!(Array.<number>|Uint32Array)} */\n\t  var key = [305419896, 591751049, 878082192];\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var il;\n\n\t  {\n\t    key = new Uint32Array(key);\n\t  }\n\n\t  for (i = 0, il = password.length; i < il; ++i) {\n\t    this.updateKeys(key, password[i] & 0xff);\n\t  }\n\n\t  return key;\n\t};\n\t/**\n\t * build huffman table from length list.\n\t * @param {!(Array.<number>|Uint8Array)} lengths length list.\n\t * @return {!Array} huffman table.\n\t */\n\n\n\tZlib.Huffman.buildHuffmanTable = function (lengths) {\n\t  /** @type {number} length list size. */\n\t  var listSize = lengths.length;\n\t  /** @type {number} max code length for table size. */\n\n\t  var maxCodeLength = 0;\n\t  /** @type {number} min code length for table size. */\n\n\t  var minCodeLength = Number.POSITIVE_INFINITY;\n\t  /** @type {number} table size. */\n\n\t  var size;\n\t  /** @type {!(Array|Uint8Array)} huffman code table. */\n\n\t  var table;\n\t  /** @type {number} bit length. */\n\n\t  var bitLength;\n\t  /** @type {number} huffman code. */\n\n\t  var code;\n\t  /**\n\t   * サイズが 2^maxlength 個のテーブルを埋めるためのスキップ長.\n\t   * @type {number} skip length for table filling.\n\t   */\n\n\t  var skip;\n\t  /** @type {number} reversed code. */\n\n\t  var reversed;\n\t  /** @type {number} reverse temp. */\n\n\t  var rtemp;\n\t  /** @type {number} loop counter. */\n\n\t  var i;\n\t  /** @type {number} loop limit. */\n\n\t  var il;\n\t  /** @type {number} loop counter. */\n\n\t  var j;\n\t  /** @type {number} table value. */\n\n\t  var value; // Math.max は遅いので最長の値は for-loop で取得する\n\n\t  for (i = 0, il = listSize; i < il; ++i) {\n\t    if (lengths[i] > maxCodeLength) {\n\t      maxCodeLength = lengths[i];\n\t    }\n\n\t    if (lengths[i] < minCodeLength) {\n\t      minCodeLength = lengths[i];\n\t    }\n\t  }\n\n\t  size = 1 << maxCodeLength;\n\t  table = new ( Uint32Array )(size); // ビット長の短い順からハフマン符号を割り当てる\n\n\t  for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {\n\t    for (i = 0; i < listSize; ++i) {\n\t      if (lengths[i] === bitLength) {\n\t        // ビットオーダーが逆になるためビット長分並びを反転する\n\t        for (reversed = 0, rtemp = code, j = 0; j < bitLength; ++j) {\n\t          reversed = reversed << 1 | rtemp & 1;\n\t          rtemp >>= 1;\n\t        } // 最大ビット長をもとにテーブルを作るため、\n\t        // 最大ビット長以外では 0 / 1 どちらでも良い箇所ができる\n\t        // そのどちらでも良い場所は同じ値で埋めることで\n\t        // 本来のビット長以上のビット数取得しても問題が起こらないようにする\n\n\n\t        value = bitLength << 16 | i;\n\n\t        for (j = reversed; j < size; j += skip) {\n\t          table[j] = value;\n\t        }\n\n\t        ++code;\n\t      }\n\t    } // 次のビット長へ\n\n\n\t    ++bitLength;\n\t    code <<= 1;\n\t    skip <<= 1;\n\t  }\n\n\t  return [table, maxCodeLength, minCodeLength];\n\t}; //-----------------------------------------------------------------------------\n\n\t/** @define {number} buffer block size. */\n\n\n\tvar ZLIB_RAW_INFLATE_BUFFER_SIZE = 0x8000; // [ 0x8000 >= ZLIB_BUFFER_BLOCK_SIZE ]\n\t//-----------------------------------------------------------------------------\n\n\tvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\t/**\n\t * @constructor\n\t * @param {!(Uint8Array|Array.<number>)} input input buffer.\n\t * @param {Object} opt_params option parameter.\n\t *\n\t * opt_params は以下のプロパティを指定する事ができます。\n\t *   - index: input buffer の deflate コンテナの開始位置.\n\t *   - blockSize: バッファのブロックサイズ.\n\t *   - bufferType: Zlib.RawInflate.BufferType の値によってバッファの管理方法を指定する.\n\t *   - resize: 確保したバッファが実際の大きさより大きかった場合に切り詰める.\n\t */\n\n\tZlib.RawInflate = function (input, opt_params) {\n\t  /** @type {!(Array.<number>|Uint8Array)} inflated buffer */\n\t  this.buffer;\n\t  /** @type {!Array.<(Array.<number>|Uint8Array)>} */\n\n\t  this.blocks = [];\n\t  /** @type {number} block size. */\n\n\t  this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE;\n\t  /** @type {!number} total output buffer pointer. */\n\n\t  this.totalpos = 0;\n\t  /** @type {!number} input buffer pointer. */\n\n\t  this.ip = 0;\n\t  /** @type {!number} bit stream reader buffer. */\n\n\t  this.bitsbuf = 0;\n\t  /** @type {!number} bit stream reader buffer size. */\n\n\t  this.bitsbuflen = 0;\n\t  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n\n\t  this.input =  new Uint8Array(input) ;\n\t  /** @type {!(Uint8Array|Array.<number>)} output buffer. */\n\n\t  this.output;\n\t  /** @type {!number} output buffer pointer. */\n\n\t  this.op;\n\t  /** @type {boolean} is final block flag. */\n\n\t  this.bfinal = false;\n\t  /** @type {Zlib.RawInflate.BufferType} buffer management. */\n\n\t  this.bufferType = Zlib.RawInflate.BufferType.ADAPTIVE;\n\t  /** @type {boolean} resize flag for memory size optimization. */\n\n\t  this.resize = false; // option parameters\n\n\t  if (opt_params || !(opt_params = {})) {\n\t    if (opt_params['index']) {\n\t      this.ip = opt_params['index'];\n\t    }\n\n\t    if (opt_params['bufferSize']) {\n\t      this.bufferSize = opt_params['bufferSize'];\n\t    }\n\n\t    if (opt_params['bufferType']) {\n\t      this.bufferType = opt_params['bufferType'];\n\t    }\n\n\t    if (opt_params['resize']) {\n\t      this.resize = opt_params['resize'];\n\t    }\n\t  } // initialize\n\n\n\t  switch (this.bufferType) {\n\t    case Zlib.RawInflate.BufferType.BLOCK:\n\t      this.op = Zlib.RawInflate.MaxBackwardLength;\n\t      this.output = new ( Uint8Array )(Zlib.RawInflate.MaxBackwardLength + this.bufferSize + Zlib.RawInflate.MaxCopyLength);\n\t      break;\n\n\t    case Zlib.RawInflate.BufferType.ADAPTIVE:\n\t      this.op = 0;\n\t      this.output = new ( Uint8Array )(this.bufferSize);\n\t      break;\n\n\t    default:\n\t      throw new Error('invalid inflate mode');\n\t  }\n\t};\n\t/**\n\t * @enum {number}\n\t */\n\n\n\tZlib.RawInflate.BufferType = {\n\t  BLOCK: 0,\n\t  ADAPTIVE: 1\n\t};\n\t/**\n\t * decompress.\n\t * @return {!(Uint8Array|Array.<number>)} inflated buffer.\n\t */\n\n\tZlib.RawInflate.prototype.decompress = function () {\n\t  while (!this.bfinal) {\n\t    this.parseBlock();\n\t  }\n\n\t  switch (this.bufferType) {\n\t    case Zlib.RawInflate.BufferType.BLOCK:\n\t      return this.concatBufferBlock();\n\n\t    case Zlib.RawInflate.BufferType.ADAPTIVE:\n\t      return this.concatBufferDynamic();\n\n\t    default:\n\t      throw new Error('invalid inflate mode');\n\t  }\n\t};\n\t/**\n\t * @const\n\t * @type {number} max backward length for LZ77.\n\t */\n\n\n\tZlib.RawInflate.MaxBackwardLength = 32768;\n\t/**\n\t * @const\n\t * @type {number} max copy length for LZ77.\n\t */\n\n\tZlib.RawInflate.MaxCopyLength = 258;\n\t/**\n\t * huffman order\n\t * @const\n\t * @type {!(Array.<number>|Uint8Array)}\n\t */\n\n\tZlib.RawInflate.Order = function (table) {\n\t  return  new Uint16Array(table) ;\n\t}([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\t/**\n\t * huffman length code table.\n\t * @const\n\t * @type {!(Array.<number>|Uint16Array)}\n\t */\n\n\n\tZlib.RawInflate.LengthCodeTable = function (table) {\n\t  return  new Uint16Array(table) ;\n\t}([0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b, 0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3, 0x00e3, 0x0102, 0x0102, 0x0102]);\n\t/**\n\t * huffman length extra-bits table.\n\t * @const\n\t * @type {!(Array.<number>|Uint8Array)}\n\t */\n\n\n\tZlib.RawInflate.LengthExtraTable = function (table) {\n\t  return  new Uint8Array(table) ;\n\t}([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0]);\n\t/**\n\t * huffman dist code table.\n\t * @const\n\t * @type {!(Array.<number>|Uint16Array)}\n\t */\n\n\n\tZlib.RawInflate.DistCodeTable = function (table) {\n\t  return  new Uint16Array(table) ;\n\t}([0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011, 0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181, 0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001, 0x3001, 0x4001, 0x6001]);\n\t/**\n\t * huffman dist extra-bits table.\n\t * @const\n\t * @type {!(Array.<number>|Uint8Array)}\n\t */\n\n\n\tZlib.RawInflate.DistExtraTable = function (table) {\n\t  return  new Uint8Array(table) ;\n\t}([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]);\n\t/**\n\t * fixed huffman length code table\n\t * @const\n\t * @type {!Array}\n\t */\n\n\n\tZlib.RawInflate.FixedLiteralLengthTable = function (table) {\n\t  return table;\n\t}(function () {\n\t  var lengths = new ( Uint8Array )(288);\n\t  var i, il;\n\n\t  for (i = 0, il = lengths.length; i < il; ++i) {\n\t    lengths[i] = i <= 143 ? 8 : i <= 255 ? 9 : i <= 279 ? 7 : 8;\n\t  }\n\n\t  return buildHuffmanTable(lengths);\n\t}());\n\t/**\n\t * fixed huffman distance code table\n\t * @const\n\t * @type {!Array}\n\t */\n\n\n\tZlib.RawInflate.FixedDistanceTable = function (table) {\n\t  return table;\n\t}(function () {\n\t  var lengths = new ( Uint8Array )(30);\n\t  var i, il;\n\n\t  for (i = 0, il = lengths.length; i < il; ++i) {\n\t    lengths[i] = 5;\n\t  }\n\n\t  return buildHuffmanTable(lengths);\n\t}());\n\t/**\n\t * parse deflated block.\n\t */\n\n\n\tZlib.RawInflate.prototype.parseBlock = function () {\n\t  /** @type {number} header */\n\t  var hdr = this.readBits(3); // BFINAL\n\n\t  if (hdr & 0x1) {\n\t    this.bfinal = true;\n\t  } // BTYPE\n\n\n\t  hdr >>>= 1;\n\n\t  switch (hdr) {\n\t    // uncompressed\n\t    case 0:\n\t      this.parseUncompressedBlock();\n\t      break;\n\t    // fixed huffman\n\n\t    case 1:\n\t      this.parseFixedHuffmanBlock();\n\t      break;\n\t    // dynamic huffman\n\n\t    case 2:\n\t      this.parseDynamicHuffmanBlock();\n\t      break;\n\t    // reserved or other\n\n\t    default:\n\t      throw new Error('unknown BTYPE: ' + hdr);\n\t  }\n\t};\n\t/**\n\t * read inflate bits\n\t * @param {number} length bits length.\n\t * @return {number} read bits.\n\t */\n\n\n\tZlib.RawInflate.prototype.readBits = function (length) {\n\t  var bitsbuf = this.bitsbuf;\n\t  var bitsbuflen = this.bitsbuflen;\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  /** @type {number} */\n\n\t  var inputLength = input.length;\n\t  /** @type {number} input and output byte. */\n\n\t  var octet; // input byte\n\n\t  if (ip + (length - bitsbuflen + 7 >> 3) >= inputLength) {\n\t    throw new Error('input buffer is broken');\n\t  } // not enough buffer\n\n\n\t  while (bitsbuflen < length) {\n\t    bitsbuf |= input[ip++] << bitsbuflen;\n\t    bitsbuflen += 8;\n\t  } // output byte\n\n\n\t  octet = bitsbuf &\n\t  /* MASK */\n\t  (1 << length) - 1;\n\t  bitsbuf >>>= length;\n\t  bitsbuflen -= length;\n\t  this.bitsbuf = bitsbuf;\n\t  this.bitsbuflen = bitsbuflen;\n\t  this.ip = ip;\n\t  return octet;\n\t};\n\t/**\n\t * read huffman code using table\n\t * @param {!(Array.<number>|Uint8Array|Uint16Array)} table huffman code table.\n\t * @return {number} huffman code.\n\t */\n\n\n\tZlib.RawInflate.prototype.readCodeByTable = function (table) {\n\t  var bitsbuf = this.bitsbuf;\n\t  var bitsbuflen = this.bitsbuflen;\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  /** @type {number} */\n\n\t  var inputLength = input.length;\n\t  /** @type {!(Array.<number>|Uint8Array)} huffman code table */\n\n\t  var codeTable = table[0];\n\t  /** @type {number} */\n\n\t  var maxCodeLength = table[1];\n\t  /** @type {number} code length & code (16bit, 16bit) */\n\n\t  var codeWithLength;\n\t  /** @type {number} code bits length */\n\n\t  var codeLength; // not enough buffer\n\n\t  while (bitsbuflen < maxCodeLength) {\n\t    if (ip >= inputLength) {\n\t      break;\n\t    }\n\n\t    bitsbuf |= input[ip++] << bitsbuflen;\n\t    bitsbuflen += 8;\n\t  } // read max length\n\n\n\t  codeWithLength = codeTable[bitsbuf & (1 << maxCodeLength) - 1];\n\t  codeLength = codeWithLength >>> 16;\n\n\t  if (codeLength > bitsbuflen) {\n\t    throw new Error('invalid code length: ' + codeLength);\n\t  }\n\n\t  this.bitsbuf = bitsbuf >> codeLength;\n\t  this.bitsbuflen = bitsbuflen - codeLength;\n\t  this.ip = ip;\n\t  return codeWithLength & 0xffff;\n\t};\n\t/**\n\t * parse uncompressed block.\n\t */\n\n\n\tZlib.RawInflate.prototype.parseUncompressedBlock = function () {\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  var output = this.output;\n\t  var op = this.op;\n\t  /** @type {number} */\n\n\t  var inputLength = input.length;\n\t  /** @type {number} block length */\n\n\t  var len;\n\t  /** @type {number} number for check block length */\n\n\t  var nlen;\n\t  /** @type {number} output buffer length */\n\n\t  var olength = output.length;\n\t  /** @type {number} copy counter */\n\n\t  var preCopy; // skip buffered header bits\n\n\t  this.bitsbuf = 0;\n\t  this.bitsbuflen = 0; // len\n\n\t  if (ip + 1 >= inputLength) {\n\t    throw new Error('invalid uncompressed block header: LEN');\n\t  }\n\n\t  len = input[ip++] | input[ip++] << 8; // nlen\n\n\t  if (ip + 1 >= inputLength) {\n\t    throw new Error('invalid uncompressed block header: NLEN');\n\t  }\n\n\t  nlen = input[ip++] | input[ip++] << 8; // check len & nlen\n\n\t  if (len === ~nlen) {\n\t    throw new Error('invalid uncompressed block header: length verify');\n\t  } // check size\n\n\n\t  if (ip + len > input.length) {\n\t    throw new Error('input buffer is broken');\n\t  } // expand buffer\n\n\n\t  switch (this.bufferType) {\n\t    case Zlib.RawInflate.BufferType.BLOCK:\n\t      // pre copy\n\t      while (op + len > output.length) {\n\t        preCopy = olength - op;\n\t        len -= preCopy;\n\n\t        {\n\t          output.set(input.subarray(ip, ip + preCopy), op);\n\t          op += preCopy;\n\t          ip += preCopy;\n\t        }\n\n\t        this.op = op;\n\t        output = this.expandBufferBlock();\n\t        op = this.op;\n\t      }\n\n\t      break;\n\n\t    case Zlib.RawInflate.BufferType.ADAPTIVE:\n\t      while (op + len > output.length) {\n\t        output = this.expandBufferAdaptive({\n\t          fixRatio: 2\n\t        });\n\t      }\n\n\t      break;\n\n\t    default:\n\t      throw new Error('invalid inflate mode');\n\t  } // copy\n\n\n\t  {\n\t    output.set(input.subarray(ip, ip + len), op);\n\t    op += len;\n\t    ip += len;\n\t  }\n\n\t  this.ip = ip;\n\t  this.op = op;\n\t  this.output = output;\n\t};\n\t/**\n\t * parse fixed huffman block.\n\t */\n\n\n\tZlib.RawInflate.prototype.parseFixedHuffmanBlock = function () {\n\t  switch (this.bufferType) {\n\t    case Zlib.RawInflate.BufferType.ADAPTIVE:\n\t      this.decodeHuffmanAdaptive(Zlib.RawInflate.FixedLiteralLengthTable, Zlib.RawInflate.FixedDistanceTable);\n\t      break;\n\n\t    case Zlib.RawInflate.BufferType.BLOCK:\n\t      this.decodeHuffmanBlock(Zlib.RawInflate.FixedLiteralLengthTable, Zlib.RawInflate.FixedDistanceTable);\n\t      break;\n\n\t    default:\n\t      throw new Error('invalid inflate mode');\n\t  }\n\t};\n\t/**\n\t * parse dynamic huffman block.\n\t */\n\n\n\tZlib.RawInflate.prototype.parseDynamicHuffmanBlock = function () {\n\t  /** @type {number} number of literal and length codes. */\n\t  var hlit = this.readBits(5) + 257;\n\t  /** @type {number} number of distance codes. */\n\n\t  var hdist = this.readBits(5) + 1;\n\t  /** @type {number} number of code lengths. */\n\n\t  var hclen = this.readBits(4) + 4;\n\t  /** @type {!(Uint8Array|Array.<number>)} code lengths. */\n\n\t  var codeLengths = new ( Uint8Array )(Zlib.RawInflate.Order.length);\n\t  /** @type {!Array} code lengths table. */\n\n\t  var codeLengthsTable;\n\t  /** @type {!(Uint8Array|Array.<number>)} literal and length code table. */\n\n\t  var litlenTable;\n\t  /** @type {!(Uint8Array|Array.<number>)} distance code table. */\n\n\t  var distTable;\n\t  /** @type {!(Uint8Array|Array.<number>)} code length table. */\n\n\t  var lengthTable;\n\t  /** @type {number} */\n\n\t  var code;\n\t  /** @type {number} */\n\n\t  var prev;\n\t  /** @type {number} */\n\n\t  var repeat;\n\t  /** @type {number} loop counter. */\n\n\t  var i;\n\t  /** @type {number} loop limit. */\n\n\t  var il; // decode code lengths\n\n\t  for (i = 0; i < hclen; ++i) {\n\t    codeLengths[Zlib.RawInflate.Order[i]] = this.readBits(3);\n\t  }\n\n\n\t  codeLengthsTable = buildHuffmanTable(codeLengths);\n\t  lengthTable = new ( Uint8Array )(hlit + hdist);\n\n\t  for (i = 0, il = hlit + hdist; i < il;) {\n\t    code = this.readCodeByTable(codeLengthsTable);\n\n\t    switch (code) {\n\t      case 16:\n\t        repeat = 3 + this.readBits(2);\n\n\t        while (repeat--) {\n\t          lengthTable[i++] = prev;\n\t        }\n\n\t        break;\n\n\t      case 17:\n\t        repeat = 3 + this.readBits(3);\n\n\t        while (repeat--) {\n\t          lengthTable[i++] = 0;\n\t        }\n\n\t        prev = 0;\n\t        break;\n\n\t      case 18:\n\t        repeat = 11 + this.readBits(7);\n\n\t        while (repeat--) {\n\t          lengthTable[i++] = 0;\n\t        }\n\n\t        prev = 0;\n\t        break;\n\n\t      default:\n\t        lengthTable[i++] = code;\n\t        prev = code;\n\t        break;\n\t    }\n\t  }\n\n\t  litlenTable =  buildHuffmanTable(lengthTable.subarray(0, hlit)) ;\n\t  distTable =  buildHuffmanTable(lengthTable.subarray(hlit)) ;\n\n\t  switch (this.bufferType) {\n\t    case Zlib.RawInflate.BufferType.ADAPTIVE:\n\t      this.decodeHuffmanAdaptive(litlenTable, distTable);\n\t      break;\n\n\t    case Zlib.RawInflate.BufferType.BLOCK:\n\t      this.decodeHuffmanBlock(litlenTable, distTable);\n\t      break;\n\n\t    default:\n\t      throw new Error('invalid inflate mode');\n\t  }\n\t};\n\t/**\n\t * decode huffman code\n\t * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n\t * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n\t */\n\n\n\tZlib.RawInflate.prototype.decodeHuffmanBlock = function (litlen, dist) {\n\t  var output = this.output;\n\t  var op = this.op;\n\t  this.currentLitlenTable = litlen;\n\t  /** @type {number} output position limit. */\n\n\t  var olength = output.length - Zlib.RawInflate.MaxCopyLength;\n\t  /** @type {number} huffman code. */\n\n\t  var code;\n\t  /** @type {number} table index. */\n\n\t  var ti;\n\t  /** @type {number} huffman code distination. */\n\n\t  var codeDist;\n\t  /** @type {number} huffman code length. */\n\n\t  var codeLength;\n\t  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n\t  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n\t  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n\t  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n\t  while ((code = this.readCodeByTable(litlen)) !== 256) {\n\t    // literal\n\t    if (code < 256) {\n\t      if (op >= olength) {\n\t        this.op = op;\n\t        output = this.expandBufferBlock();\n\t        op = this.op;\n\t      }\n\n\t      output[op++] = code;\n\t      continue;\n\t    } // length code\n\n\n\t    ti = code - 257;\n\t    codeLength = lengthCodeTable[ti];\n\n\t    if (lengthExtraTable[ti] > 0) {\n\t      codeLength += this.readBits(lengthExtraTable[ti]);\n\t    } // dist code\n\n\n\t    code = this.readCodeByTable(dist);\n\t    codeDist = distCodeTable[code];\n\n\t    if (distExtraTable[code] > 0) {\n\t      codeDist += this.readBits(distExtraTable[code]);\n\t    } // lz77 decode\n\n\n\t    if (op >= olength) {\n\t      this.op = op;\n\t      output = this.expandBufferBlock();\n\t      op = this.op;\n\t    }\n\n\t    while (codeLength--) {\n\t      output[op] = output[op++ - codeDist];\n\t    }\n\t  }\n\n\t  while (this.bitsbuflen >= 8) {\n\t    this.bitsbuflen -= 8;\n\t    this.ip--;\n\t  }\n\n\t  this.op = op;\n\t};\n\t/**\n\t * decode huffman code (adaptive)\n\t * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n\t * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n\t */\n\n\n\tZlib.RawInflate.prototype.decodeHuffmanAdaptive = function (litlen, dist) {\n\t  var output = this.output;\n\t  var op = this.op;\n\t  this.currentLitlenTable = litlen;\n\t  /** @type {number} output position limit. */\n\n\t  var olength = output.length;\n\t  /** @type {number} huffman code. */\n\n\t  var code;\n\t  /** @type {number} table index. */\n\n\t  var ti;\n\t  /** @type {number} huffman code distination. */\n\n\t  var codeDist;\n\t  /** @type {number} huffman code length. */\n\n\t  var codeLength;\n\t  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n\t  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n\t  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n\t  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n\t  while ((code = this.readCodeByTable(litlen)) !== 256) {\n\t    // literal\n\t    if (code < 256) {\n\t      if (op >= olength) {\n\t        output = this.expandBufferAdaptive();\n\t        olength = output.length;\n\t      }\n\n\t      output[op++] = code;\n\t      continue;\n\t    } // length code\n\n\n\t    ti = code - 257;\n\t    codeLength = lengthCodeTable[ti];\n\n\t    if (lengthExtraTable[ti] > 0) {\n\t      codeLength += this.readBits(lengthExtraTable[ti]);\n\t    } // dist code\n\n\n\t    code = this.readCodeByTable(dist);\n\t    codeDist = distCodeTable[code];\n\n\t    if (distExtraTable[code] > 0) {\n\t      codeDist += this.readBits(distExtraTable[code]);\n\t    } // lz77 decode\n\n\n\t    if (op + codeLength > olength) {\n\t      output = this.expandBufferAdaptive();\n\t      olength = output.length;\n\t    }\n\n\t    while (codeLength--) {\n\t      output[op] = output[op++ - codeDist];\n\t    }\n\t  }\n\n\t  while (this.bitsbuflen >= 8) {\n\t    this.bitsbuflen -= 8;\n\t    this.ip--;\n\t  }\n\n\t  this.op = op;\n\t};\n\t/**\n\t * expand output buffer.\n\t * @param {Object=} opt_param option parameters.\n\t * @return {!(Array.<number>|Uint8Array)} output buffer.\n\t */\n\n\n\tZlib.RawInflate.prototype.expandBufferBlock = function (opt_param) {\n\t  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n\t  var buffer = new ( Uint8Array )(this.op - Zlib.RawInflate.MaxBackwardLength);\n\t  /** @type {number} backward base point */\n\n\t  var backward = this.op - Zlib.RawInflate.MaxBackwardLength;\n\t  var output = this.output; // copy to output buffer\n\n\t  {\n\t    buffer.set(output.subarray(Zlib.RawInflate.MaxBackwardLength, buffer.length));\n\t  }\n\n\t  this.blocks.push(buffer);\n\t  this.totalpos += buffer.length; // copy to backward buffer\n\n\t  {\n\t    output.set(output.subarray(backward, backward + Zlib.RawInflate.MaxBackwardLength));\n\t  }\n\n\t  this.op = Zlib.RawInflate.MaxBackwardLength;\n\t  return output;\n\t};\n\t/**\n\t * expand output buffer. (adaptive)\n\t * @param {Object=} opt_param option parameters.\n\t * @return {!(Array.<number>|Uint8Array)} output buffer pointer.\n\t */\n\n\n\tZlib.RawInflate.prototype.expandBufferAdaptive = function (opt_param) {\n\t  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n\t  var buffer;\n\t  /** @type {number} expantion ratio. */\n\n\t  var ratio = this.input.length / this.ip + 1 | 0;\n\t  /** @type {number} maximum number of huffman code. */\n\n\t  var maxHuffCode;\n\t  /** @type {number} new output buffer size. */\n\n\t  var newSize;\n\t  /** @type {number} max inflate size. */\n\n\t  var maxInflateSize;\n\t  var input = this.input;\n\t  var output = this.output;\n\n\t  if (opt_param) {\n\t    if (typeof opt_param.fixRatio === 'number') {\n\t      ratio = opt_param.fixRatio;\n\t    }\n\n\t    if (typeof opt_param.addRatio === 'number') {\n\t      ratio += opt_param.addRatio;\n\t    }\n\t  } // calculate new buffer size\n\n\n\t  if (ratio < 2) {\n\t    maxHuffCode = (input.length - this.ip) / this.currentLitlenTable[2];\n\t    maxInflateSize = maxHuffCode / 2 * 258 | 0;\n\t    newSize = maxInflateSize < output.length ? output.length + maxInflateSize : output.length << 1;\n\t  } else {\n\t    newSize = output.length * ratio;\n\t  } // buffer expantion\n\n\n\t  {\n\t    buffer = new Uint8Array(newSize);\n\t    buffer.set(output);\n\t  }\n\n\t  this.output = buffer;\n\t  return this.output;\n\t};\n\t/**\n\t * concat output buffer.\n\t * @return {!(Array.<number>|Uint8Array)} output buffer.\n\t */\n\n\n\tZlib.RawInflate.prototype.concatBufferBlock = function () {\n\t  /** @type {number} buffer pointer. */\n\t  var pos = 0;\n\t  /** @type {number} buffer pointer. */\n\n\t  var limit = this.totalpos + (this.op - Zlib.RawInflate.MaxBackwardLength);\n\t  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n\n\t  var output = this.output;\n\t  /** @type {!Array} blocks array. */\n\n\t  var blocks = this.blocks;\n\t  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n\n\t  var block;\n\t  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n\n\t  var buffer = new ( Uint8Array )(limit);\n\t  /** @type {number} loop counter. */\n\n\t  var i;\n\t  /** @type {number} loop limiter. */\n\n\t  var il;\n\t  /** @type {number} loop counter. */\n\n\t  var j;\n\t  /** @type {number} loop limiter. */\n\n\t  var jl; // single buffer\n\n\t  if (blocks.length === 0) {\n\t    return  this.output.subarray(Zlib.RawInflate.MaxBackwardLength, this.op) ;\n\t  } // copy to buffer\n\n\n\t  for (i = 0, il = blocks.length; i < il; ++i) {\n\t    block = blocks[i];\n\n\t    for (j = 0, jl = block.length; j < jl; ++j) {\n\t      buffer[pos++] = block[j];\n\t    }\n\t  } // current buffer\n\n\n\t  for (i = Zlib.RawInflate.MaxBackwardLength, il = this.op; i < il; ++i) {\n\t    buffer[pos++] = output[i];\n\t  }\n\n\t  this.blocks = [];\n\t  this.buffer = buffer;\n\t  return this.buffer;\n\t};\n\t/**\n\t * concat output buffer. (dynamic)\n\t * @return {!(Array.<number>|Uint8Array)} output buffer.\n\t */\n\n\n\tZlib.RawInflate.prototype.concatBufferDynamic = function () {\n\t  /** @type {Array.<number>|Uint8Array} output buffer. */\n\t  var buffer;\n\t  var op = this.op;\n\n\t  {\n\t    if (this.resize) {\n\t      buffer = new Uint8Array(op);\n\t      buffer.set(this.output.subarray(0, op));\n\t    } else {\n\t      buffer = this.output.subarray(0, op);\n\t    }\n\t  }\n\n\t  this.buffer = buffer;\n\t  return this.buffer;\n\t};\n\n\tvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\t/**\n\t * @param {!(Uint8Array|Array.<number>)} input input buffer.\n\t * @param {number} ip input buffer pointer.\n\t * @param {number=} opt_buffersize buffer block size.\n\t * @constructor\n\t */\n\n\tZlib.RawInflateStream = function (input, ip, opt_buffersize) {\n\t  /** @type {!Array.<(Array|Uint8Array)>} */\n\t  this.blocks = [];\n\t  /** @type {number} block size. */\n\n\t  this.bufferSize = opt_buffersize ? opt_buffersize : ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE;\n\t  /** @type {!number} total output buffer pointer. */\n\n\t  this.totalpos = 0;\n\t  /** @type {!number} input buffer pointer. */\n\n\t  this.ip = ip === void 0 ? 0 : ip;\n\t  /** @type {!number} bit stream reader buffer. */\n\n\t  this.bitsbuf = 0;\n\t  /** @type {!number} bit stream reader buffer size. */\n\n\t  this.bitsbuflen = 0;\n\t  /** @type {!(Array|Uint8Array)} input buffer. */\n\n\t  this.input =  new Uint8Array(input) ;\n\t  /** @type {!(Uint8Array|Array)} output buffer. */\n\n\t  this.output = new ( Uint8Array )(this.bufferSize);\n\t  /** @type {!number} output buffer pointer. */\n\n\t  this.op = 0;\n\t  /** @type {boolean} is final block flag. */\n\n\t  this.bfinal = false;\n\t  /** @type {number} uncompressed block length. */\n\n\t  this.blockLength;\n\t  /** @type {boolean} resize flag for memory size optimization. */\n\n\t  this.resize = false;\n\t  /** @type {Array} */\n\n\t  this.litlenTable;\n\t  /** @type {Array} */\n\n\t  this.distTable;\n\t  /** @type {number} */\n\n\t  this.sp = 0; // stream pointer\n\n\t  /** @type {Zlib.RawInflateStream.Status} */\n\n\t  this.status = Zlib.RawInflateStream.Status.INITIALIZED; //\n\t  // backup\n\t  //\n\n\t  /** @type {!number} */\n\n\t  this.ip_;\n\t  /** @type {!number} */\n\n\t  this.bitsbuflen_;\n\t  /** @type {!number} */\n\n\t  this.bitsbuf_;\n\t};\n\t/**\n\t * @enum {number}\n\t */\n\n\n\tZlib.RawInflateStream.BlockType = {\n\t  UNCOMPRESSED: 0,\n\t  FIXED: 1,\n\t  DYNAMIC: 2\n\t};\n\t/**\n\t * @enum {number}\n\t */\n\n\tZlib.RawInflateStream.Status = {\n\t  INITIALIZED: 0,\n\t  BLOCK_HEADER_START: 1,\n\t  BLOCK_HEADER_END: 2,\n\t  BLOCK_BODY_START: 3,\n\t  BLOCK_BODY_END: 4,\n\t  DECODE_BLOCK_START: 5,\n\t  DECODE_BLOCK_END: 6\n\t};\n\t/**\n\t * decompress.\n\t * @return {!(Uint8Array|Array)} inflated buffer.\n\t */\n\n\tZlib.RawInflateStream.prototype.decompress = function (newInput, ip) {\n\t  /** @type {boolean} */\n\t  var stop = false;\n\n\t  if (newInput !== void 0) {\n\t    this.input = newInput;\n\t  }\n\n\t  if (ip !== void 0) {\n\t    this.ip = ip;\n\t  } // decompress\n\n\n\t  while (!stop) {\n\t    switch (this.status) {\n\t      // block header\n\t      case Zlib.RawInflateStream.Status.INITIALIZED:\n\t      case Zlib.RawInflateStream.Status.BLOCK_HEADER_START:\n\t        if (this.readBlockHeader() < 0) {\n\t          stop = true;\n\t        }\n\n\t        break;\n\t      // block body\n\n\t      case Zlib.RawInflateStream.Status.BLOCK_HEADER_END:\n\t      /* FALLTHROUGH */\n\n\t      case Zlib.RawInflateStream.Status.BLOCK_BODY_START:\n\t        switch (this.currentBlockType) {\n\t          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n\t            if (this.readUncompressedBlockHeader() < 0) {\n\t              stop = true;\n\t            }\n\n\t            break;\n\n\t          case Zlib.RawInflateStream.BlockType.FIXED:\n\t            if (this.parseFixedHuffmanBlock() < 0) {\n\t              stop = true;\n\t            }\n\n\t            break;\n\n\t          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n\t            if (this.parseDynamicHuffmanBlock() < 0) {\n\t              stop = true;\n\t            }\n\n\t            break;\n\t        }\n\n\t        break;\n\t      // decode data\n\n\t      case Zlib.RawInflateStream.Status.BLOCK_BODY_END:\n\t      case Zlib.RawInflateStream.Status.DECODE_BLOCK_START:\n\t        switch (this.currentBlockType) {\n\t          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n\t            if (this.parseUncompressedBlock() < 0) {\n\t              stop = true;\n\t            }\n\n\t            break;\n\n\t          case Zlib.RawInflateStream.BlockType.FIXED:\n\t          /* FALLTHROUGH */\n\n\t          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n\t            if (this.decodeHuffman() < 0) {\n\t              stop = true;\n\t            }\n\n\t            break;\n\t        }\n\n\t        break;\n\n\t      case Zlib.RawInflateStream.Status.DECODE_BLOCK_END:\n\t        if (this.bfinal) {\n\t          stop = true;\n\t        } else {\n\t          this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n\t        }\n\n\t        break;\n\t    }\n\t  }\n\n\t  return this.concatBuffer();\n\t};\n\t/**\n\t * @const\n\t * @type {number} max backward length for LZ77.\n\t */\n\n\n\tZlib.RawInflateStream.MaxBackwardLength = 32768;\n\t/**\n\t * @const\n\t * @type {number} max copy length for LZ77.\n\t */\n\n\tZlib.RawInflateStream.MaxCopyLength = 258;\n\t/**\n\t * huffman order\n\t * @const\n\t * @type {!(Array.<number>|Uint8Array)}\n\t */\n\n\tZlib.RawInflateStream.Order = function (table) {\n\t  return  new Uint16Array(table) ;\n\t}([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\t/**\n\t * huffman length code table.\n\t * @const\n\t * @type {!(Array.<number>|Uint16Array)}\n\t */\n\n\n\tZlib.RawInflateStream.LengthCodeTable = function (table) {\n\t  return  new Uint16Array(table) ;\n\t}([0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b, 0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3, 0x00e3, 0x0102, 0x0102, 0x0102]);\n\t/**\n\t * huffman length extra-bits table.\n\t * @const\n\t * @type {!(Array.<number>|Uint8Array)}\n\t */\n\n\n\tZlib.RawInflateStream.LengthExtraTable = function (table) {\n\t  return  new Uint8Array(table) ;\n\t}([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0]);\n\t/**\n\t * huffman dist code table.\n\t * @const\n\t * @type {!(Array.<number>|Uint16Array)}\n\t */\n\n\n\tZlib.RawInflateStream.DistCodeTable = function (table) {\n\t  return  new Uint16Array(table) ;\n\t}([0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011, 0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181, 0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001, 0x3001, 0x4001, 0x6001]);\n\t/**\n\t * huffman dist extra-bits table.\n\t * @const\n\t * @type {!(Array.<number>|Uint8Array)}\n\t */\n\n\n\tZlib.RawInflateStream.DistExtraTable = function (table) {\n\t  return  new Uint8Array(table) ;\n\t}([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]);\n\t/**\n\t * fixed huffman length code table\n\t * @const\n\t * @type {!Array}\n\t */\n\n\n\tZlib.RawInflateStream.FixedLiteralLengthTable = function (table) {\n\t  return table;\n\t}(function () {\n\t  var lengths = new ( Uint8Array )(288);\n\t  var i, il;\n\n\t  for (i = 0, il = lengths.length; i < il; ++i) {\n\t    lengths[i] = i <= 143 ? 8 : i <= 255 ? 9 : i <= 279 ? 7 : 8;\n\t  }\n\n\t  return buildHuffmanTable(lengths);\n\t}());\n\t/**\n\t * fixed huffman distance code table\n\t * @const\n\t * @type {!Array}\n\t */\n\n\n\tZlib.RawInflateStream.FixedDistanceTable = function (table) {\n\t  return table;\n\t}(function () {\n\t  var lengths = new ( Uint8Array )(30);\n\t  var i, il;\n\n\t  for (i = 0, il = lengths.length; i < il; ++i) {\n\t    lengths[i] = 5;\n\t  }\n\n\t  return buildHuffmanTable(lengths);\n\t}());\n\t/**\n\t * parse deflated block.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.readBlockHeader = function () {\n\t  /** @type {number} header */\n\t  var hdr;\n\t  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_START;\n\t  this.save_();\n\n\t  if ((hdr = this.readBits(3)) < 0) {\n\t    this.restore_();\n\t    return -1;\n\t  } // BFINAL\n\n\n\t  if (hdr & 0x1) {\n\t    this.bfinal = true;\n\t  } // BTYPE\n\n\n\t  hdr >>>= 1;\n\n\t  switch (hdr) {\n\t    case 0:\n\t      // uncompressed\n\t      this.currentBlockType = Zlib.RawInflateStream.BlockType.UNCOMPRESSED;\n\t      break;\n\n\t    case 1:\n\t      // fixed huffman\n\t      this.currentBlockType = Zlib.RawInflateStream.BlockType.FIXED;\n\t      break;\n\n\t    case 2:\n\t      // dynamic huffman\n\t      this.currentBlockType = Zlib.RawInflateStream.BlockType.DYNAMIC;\n\t      break;\n\n\t    default:\n\t      // reserved or other\n\t      throw new Error('unknown BTYPE: ' + hdr);\n\t  }\n\n\t  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_END;\n\t};\n\t/**\n\t * read inflate bits\n\t * @param {number} length bits length.\n\t * @return {number} read bits.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.readBits = function (length) {\n\t  var bitsbuf = this.bitsbuf;\n\t  var bitsbuflen = this.bitsbuflen;\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  /** @type {number} input and output byte. */\n\n\t  var octet; // not enough buffer\n\n\t  while (bitsbuflen < length) {\n\t    // input byte\n\t    if (input.length <= ip) {\n\t      return -1;\n\t    }\n\n\t    octet = input[ip++]; // concat octet\n\n\t    bitsbuf |= octet << bitsbuflen;\n\t    bitsbuflen += 8;\n\t  } // output byte\n\n\n\t  octet = bitsbuf &\n\t  /* MASK */\n\t  (1 << length) - 1;\n\t  bitsbuf >>>= length;\n\t  bitsbuflen -= length;\n\t  this.bitsbuf = bitsbuf;\n\t  this.bitsbuflen = bitsbuflen;\n\t  this.ip = ip;\n\t  return octet;\n\t};\n\t/**\n\t * read huffman code using table\n\t * @param {Array} table huffman code table.\n\t * @return {number} huffman code.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.readCodeByTable = function (table) {\n\t  var bitsbuf = this.bitsbuf;\n\t  var bitsbuflen = this.bitsbuflen;\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  /** @type {!(Array|Uint8Array)} huffman code table */\n\n\t  var codeTable = table[0];\n\t  /** @type {number} */\n\n\t  var maxCodeLength = table[1];\n\t  /** @type {number} input byte */\n\n\t  var octet;\n\t  /** @type {number} code length & code (16bit, 16bit) */\n\n\t  var codeWithLength;\n\t  /** @type {number} code bits length */\n\n\t  var codeLength; // not enough buffer\n\n\t  while (bitsbuflen < maxCodeLength) {\n\t    if (input.length <= ip) {\n\t      return -1;\n\t    }\n\n\t    octet = input[ip++];\n\t    bitsbuf |= octet << bitsbuflen;\n\t    bitsbuflen += 8;\n\t  } // read max length\n\n\n\t  codeWithLength = codeTable[bitsbuf & (1 << maxCodeLength) - 1];\n\t  codeLength = codeWithLength >>> 16;\n\n\t  if (codeLength > bitsbuflen) {\n\t    throw new Error('invalid code length: ' + codeLength);\n\t  }\n\n\t  this.bitsbuf = bitsbuf >> codeLength;\n\t  this.bitsbuflen = bitsbuflen - codeLength;\n\t  this.ip = ip;\n\t  return codeWithLength & 0xffff;\n\t};\n\t/**\n\t * read uncompressed block header\n\t */\n\n\n\tZlib.RawInflateStream.prototype.readUncompressedBlockHeader = function () {\n\t  /** @type {number} block length */\n\t  var len;\n\t  /** @type {number} number for check block length */\n\n\t  var nlen;\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n\t  if (ip + 4 >= input.length) {\n\t    return -1;\n\t  }\n\n\t  len = input[ip++] | input[ip++] << 8;\n\t  nlen = input[ip++] | input[ip++] << 8; // check len & nlen\n\n\t  if (len === ~nlen) {\n\t    throw new Error('invalid uncompressed block header: length verify');\n\t  } // skip buffered header bits\n\n\n\t  this.bitsbuf = 0;\n\t  this.bitsbuflen = 0;\n\t  this.ip = ip;\n\t  this.blockLength = len;\n\t  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\t};\n\t/**\n\t * parse uncompressed block.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.parseUncompressedBlock = function () {\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  var output = this.output;\n\t  var op = this.op;\n\t  var len = this.blockLength;\n\t  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START; // copy\n\t  // XXX: とりあえず素直にコピー\n\n\t  while (len--) {\n\t    if (op === output.length) {\n\t      output = this.expandBuffer({\n\t        fixRatio: 2\n\t      });\n\t    } // not enough input buffer\n\n\n\t    if (ip >= input.length) {\n\t      this.ip = ip;\n\t      this.op = op;\n\t      this.blockLength = len + 1; // コピーしてないので戻す\n\n\t      return -1;\n\t    }\n\n\t    output[op++] = input[ip++];\n\t  }\n\n\t  if (len < 0) {\n\t    this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n\t  }\n\n\t  this.ip = ip;\n\t  this.op = op;\n\t  return 0;\n\t};\n\t/**\n\t * parse fixed huffman block.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.parseFixedHuffmanBlock = function () {\n\t  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\t  this.litlenTable = Zlib.RawInflateStream.FixedLiteralLengthTable;\n\t  this.distTable = Zlib.RawInflateStream.FixedDistanceTable;\n\t  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\t  return 0;\n\t};\n\t/**\n\t * オブジェクトのコンテキストを別のプロパティに退避する.\n\t * @private\n\t */\n\n\n\tZlib.RawInflateStream.prototype.save_ = function () {\n\t  this.ip_ = this.ip;\n\t  this.bitsbuflen_ = this.bitsbuflen;\n\t  this.bitsbuf_ = this.bitsbuf;\n\t};\n\t/**\n\t * 別のプロパティに退避したコンテキストを復元する.\n\t * @private\n\t */\n\n\n\tZlib.RawInflateStream.prototype.restore_ = function () {\n\t  this.ip = this.ip_;\n\t  this.bitsbuflen = this.bitsbuflen_;\n\t  this.bitsbuf = this.bitsbuf_;\n\t};\n\t/**\n\t * parse dynamic huffman block.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.parseDynamicHuffmanBlock = function () {\n\t  /** @type {number} number of literal and length codes. */\n\t  var hlit;\n\t  /** @type {number} number of distance codes. */\n\n\t  var hdist;\n\t  /** @type {number} number of code lengths. */\n\n\t  var hclen;\n\t  /** @type {!(Uint8Array|Array)} code lengths. */\n\n\t  var codeLengths = new ( Uint8Array )(Zlib.RawInflateStream.Order.length);\n\t  /** @type {!Array} code lengths table. */\n\n\t  var codeLengthsTable;\n\t  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\t  this.save_();\n\t  hlit = this.readBits(5) + 257;\n\t  hdist = this.readBits(5) + 1;\n\t  hclen = this.readBits(4) + 4;\n\n\t  if (hlit < 0 || hdist < 0 || hclen < 0) {\n\t    this.restore_();\n\t    return -1;\n\t  }\n\n\t  try {\n\t    parseDynamicHuffmanBlockImpl.call(this);\n\t  } catch (e) {\n\t    this.restore_();\n\t    return -1;\n\t  }\n\n\t  function parseDynamicHuffmanBlockImpl() {\n\t    /** @type {number} */\n\t    var bits;\n\t    var code;\n\t    var prev = 0;\n\t    var repeat;\n\t    /** @type {!(Uint8Array|Array.<number>)} code length table. */\n\n\t    var lengthTable;\n\t    /** @type {number} loop counter. */\n\n\t    var i;\n\t    /** @type {number} loop limit. */\n\n\t    var il; // decode code lengths\n\n\t    for (i = 0; i < hclen; ++i) {\n\t      if ((bits = this.readBits(3)) < 0) {\n\t        throw new Error('not enough input');\n\t      }\n\n\t      codeLengths[Zlib.RawInflateStream.Order[i]] = bits;\n\t    } // decode length table\n\n\n\t    codeLengthsTable = buildHuffmanTable(codeLengths);\n\t    lengthTable = new ( Uint8Array )(hlit + hdist);\n\n\t    for (i = 0, il = hlit + hdist; i < il;) {\n\t      code = this.readCodeByTable(codeLengthsTable);\n\n\t      if (code < 0) {\n\t        throw new Error('not enough input');\n\t      }\n\n\t      switch (code) {\n\t        case 16:\n\t          if ((bits = this.readBits(2)) < 0) {\n\t            throw new Error('not enough input');\n\t          }\n\n\t          repeat = 3 + bits;\n\n\t          while (repeat--) {\n\t            lengthTable[i++] = prev;\n\t          }\n\n\t          break;\n\n\t        case 17:\n\t          if ((bits = this.readBits(3)) < 0) {\n\t            throw new Error('not enough input');\n\t          }\n\n\t          repeat = 3 + bits;\n\n\t          while (repeat--) {\n\t            lengthTable[i++] = 0;\n\t          }\n\n\t          prev = 0;\n\t          break;\n\n\t        case 18:\n\t          if ((bits = this.readBits(7)) < 0) {\n\t            throw new Error('not enough input');\n\t          }\n\n\t          repeat = 11 + bits;\n\n\t          while (repeat--) {\n\t            lengthTable[i++] = 0;\n\t          }\n\n\t          prev = 0;\n\t          break;\n\n\t        default:\n\t          lengthTable[i++] = code;\n\t          prev = code;\n\t          break;\n\t      }\n\t    } // literal and length code\n\t    this.litlenTable =  buildHuffmanTable(lengthTable.subarray(0, hlit)) ;\n\t    this.distTable =  buildHuffmanTable(lengthTable.subarray(hlit)) ;\n\t  }\n\n\t  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\t  return 0;\n\t};\n\t/**\n\t * decode huffman code (dynamic)\n\t * @return {(number|undefined)} -1 is error.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.decodeHuffman = function () {\n\t  var output = this.output;\n\t  var op = this.op;\n\t  /** @type {number} huffman code. */\n\n\t  var code;\n\t  /** @type {number} table index. */\n\n\t  var ti;\n\t  /** @type {number} huffman code distination. */\n\n\t  var codeDist;\n\t  /** @type {number} huffman code length. */\n\n\t  var codeLength;\n\t  var litlen = this.litlenTable;\n\t  var dist = this.distTable;\n\t  var olength = output.length;\n\t  var bits;\n\t  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n\t  while (true) {\n\t    this.save_();\n\t    code = this.readCodeByTable(litlen);\n\n\t    if (code < 0) {\n\t      this.op = op;\n\t      this.restore_();\n\t      return -1;\n\t    }\n\n\t    if (code === 256) {\n\t      break;\n\t    } // literal\n\n\n\t    if (code < 256) {\n\t      if (op === olength) {\n\t        output = this.expandBuffer();\n\t        olength = output.length;\n\t      }\n\n\t      output[op++] = code;\n\t      continue;\n\t    } // length code\n\n\n\t    ti = code - 257;\n\t    codeLength = Zlib.RawInflateStream.LengthCodeTable[ti];\n\n\t    if (Zlib.RawInflateStream.LengthExtraTable[ti] > 0) {\n\t      bits = this.readBits(Zlib.RawInflateStream.LengthExtraTable[ti]);\n\n\t      if (bits < 0) {\n\t        this.op = op;\n\t        this.restore_();\n\t        return -1;\n\t      }\n\n\t      codeLength += bits;\n\t    } // dist code\n\n\n\t    code = this.readCodeByTable(dist);\n\n\t    if (code < 0) {\n\t      this.op = op;\n\t      this.restore_();\n\t      return -1;\n\t    }\n\n\t    codeDist = Zlib.RawInflateStream.DistCodeTable[code];\n\n\t    if (Zlib.RawInflateStream.DistExtraTable[code] > 0) {\n\t      bits = this.readBits(Zlib.RawInflateStream.DistExtraTable[code]);\n\n\t      if (bits < 0) {\n\t        this.op = op;\n\t        this.restore_();\n\t        return -1;\n\t      }\n\n\t      codeDist += bits;\n\t    } // lz77 decode\n\n\n\t    if (op + codeLength >= olength) {\n\t      output = this.expandBuffer();\n\t      olength = output.length;\n\t    }\n\n\t    while (codeLength--) {\n\t      output[op] = output[op++ - codeDist];\n\t    } // break\n\n\n\t    if (this.ip === this.input.length) {\n\t      this.op = op;\n\t      return -1;\n\t    }\n\t  }\n\n\t  while (this.bitsbuflen >= 8) {\n\t    this.bitsbuflen -= 8;\n\t    this.ip--;\n\t  }\n\n\t  this.op = op;\n\t  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n\t};\n\t/**\n\t * expand output buffer. (dynamic)\n\t * @param {Object=} opt_param option parameters.\n\t * @return {!(Array|Uint8Array)} output buffer pointer.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.expandBuffer = function (opt_param) {\n\t  /** @type {!(Array|Uint8Array)} store buffer. */\n\t  var buffer;\n\t  /** @type {number} expantion ratio. */\n\n\t  var ratio = this.input.length / this.ip + 1 | 0;\n\t  /** @type {number} maximum number of huffman code. */\n\n\t  var maxHuffCode;\n\t  /** @type {number} new output buffer size. */\n\n\t  var newSize;\n\t  /** @type {number} max inflate size. */\n\n\t  var maxInflateSize;\n\t  var input = this.input;\n\t  var output = this.output;\n\n\t  if (opt_param) {\n\t    if (typeof opt_param.fixRatio === 'number') {\n\t      ratio = opt_param.fixRatio;\n\t    }\n\n\t    if (typeof opt_param.addRatio === 'number') {\n\t      ratio += opt_param.addRatio;\n\t    }\n\t  } // calculate new buffer size\n\n\n\t  if (ratio < 2) {\n\t    maxHuffCode = (input.length - this.ip) / this.litlenTable[2];\n\t    maxInflateSize = maxHuffCode / 2 * 258 | 0;\n\t    newSize = maxInflateSize < output.length ? output.length + maxInflateSize : output.length << 1;\n\t  } else {\n\t    newSize = output.length * ratio;\n\t  } // buffer expantion\n\n\n\t  {\n\t    buffer = new Uint8Array(newSize);\n\t    buffer.set(output);\n\t  }\n\n\t  this.output = buffer;\n\t  return this.output;\n\t};\n\t/**\n\t * concat output buffer. (dynamic)\n\t * @return {!(Array|Uint8Array)} output buffer.\n\t */\n\n\n\tZlib.RawInflateStream.prototype.concatBuffer = function () {\n\t  /** @type {!(Array|Uint8Array)} output buffer. */\n\t  var buffer;\n\t  /** @type {number} */\n\n\t  var op = this.op;\n\t  /** @type {Uint8Array} */\n\n\t  var tmp;\n\n\t  if (this.resize) {\n\t    {\n\t      buffer = new Uint8Array(this.output.subarray(this.sp, op));\n\t    }\n\t  } else {\n\t    buffer =  this.output.subarray(this.sp, op) ;\n\t  }\n\n\t  this.sp = op; // compaction\n\n\t  if (op > Zlib.RawInflateStream.MaxBackwardLength + this.bufferSize) {\n\t    this.op = this.sp = Zlib.RawInflateStream.MaxBackwardLength;\n\n\t    {\n\t      tmp =\n\t      /** @type {Uint8Array} */\n\t      this.output;\n\t      this.output = new Uint8Array(this.bufferSize + Zlib.RawInflateStream.MaxBackwardLength);\n\t      this.output.set(tmp.subarray(op - Zlib.RawInflateStream.MaxBackwardLength, op));\n\t    }\n\t  }\n\n\t  return buffer;\n\t};\n\t/**\n\t * @constructor\n\t * @param {!(Uint8Array|Array)} input deflated buffer.\n\t * @param {Object=} opt_params option parameters.\n\t *\n\t * opt_params は以下のプロパティを指定する事ができます。\n\t *   - index: input buffer の deflate コンテナの開始位置.\n\t *   - blockSize: バッファのブロックサイズ.\n\t *   - verify: 伸張が終わった後 adler-32 checksum の検証を行うか.\n\t *   - bufferType: Zlib.Inflate.BufferType の値によってバッファの管理方法を指定する.\n\t *       Zlib.Inflate.BufferType は Zlib.RawInflate.BufferType のエイリアス.\n\t */\n\n\n\tZlib.Inflate = function (input, opt_params) {\n\t  /** @type {number} */\n\n\t  var cmf;\n\t  /** @type {number} */\n\n\t  var flg;\n\t  /** @type {!(Uint8Array|Array)} */\n\n\t  this.input = input;\n\t  /** @type {number} */\n\n\t  this.ip = 0;\n\t  /** @type {Zlib.RawInflate} */\n\n\t  this.rawinflate;\n\t  /** @type {(boolean|undefined)} verify flag. */\n\n\t  this.verify; // option parameters\n\n\t  if (opt_params || !(opt_params = {})) {\n\t    if (opt_params['index']) {\n\t      this.ip = opt_params['index'];\n\t    }\n\n\t    if (opt_params['verify']) {\n\t      this.verify = opt_params['verify'];\n\t    }\n\t  } // Compression Method and Flags\n\n\n\t  cmf = input[this.ip++];\n\t  flg = input[this.ip++]; // compression method\n\n\t  switch (cmf & 0x0f) {\n\t    case Zlib.CompressionMethod.DEFLATE:\n\t      this.method = Zlib.CompressionMethod.DEFLATE;\n\t      break;\n\n\t    default:\n\t      throw new Error('unsupported compression method');\n\t  } // fcheck\n\n\n\t  if (((cmf << 8) + flg) % 31 !== 0) {\n\t    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n\t  } // fdict (not supported)\n\n\n\t  if (flg & 0x20) {\n\t    throw new Error('fdict flag is not supported');\n\t  } // RawInflate\n\n\n\t  this.rawinflate = new Zlib.RawInflate(input, {\n\t    'index': this.ip,\n\t    'bufferSize': opt_params['bufferSize'],\n\t    'bufferType': opt_params['bufferType'],\n\t    'resize': opt_params['resize']\n\t  });\n\t};\n\t/**\n\t * @enum {number}\n\t */\n\n\n\tZlib.Inflate.BufferType = Zlib.RawInflate.BufferType;\n\t/**\n\t * decompress.\n\t * @return {!(Uint8Array|Array)} inflated buffer.\n\t */\n\n\tZlib.Inflate.prototype.decompress = function () {\n\t  /** @type {!(Array|Uint8Array)} input buffer. */\n\t  var input = this.input;\n\t  /** @type {!(Uint8Array|Array)} inflated buffer. */\n\n\t  var buffer;\n\t  /** @type {number} adler-32 checksum */\n\n\t  var adler32;\n\t  buffer = this.rawinflate.decompress();\n\t  this.ip = this.rawinflate.ip; // verify adler-32\n\n\t  if (this.verify) {\n\t    adler32 = (input[this.ip++] << 24 | input[this.ip++] << 16 | input[this.ip++] << 8 | input[this.ip++]) >>> 0;\n\n\t    if (adler32 !== Zlib.Adler32(buffer)) {\n\t      throw new Error('invalid adler-32 checksum');\n\t    }\n\t  }\n\n\t  return buffer;\n\t};\n\t/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\t/**\n\t * @param {!(Uint8Array|Array)} input deflated buffer.\n\t * @constructor\n\t */\n\n\n\tZlib.InflateStream = function (input) {\n\t  /** @type {!(Uint8Array|Array)} */\n\t  this.input = input === void 0 ? new ( Uint8Array )() : input;\n\t  /** @type {number} */\n\n\t  this.ip = 0;\n\t  /** @type {Zlib.RawInflateStream} */\n\n\t  this.rawinflate = new Zlib.RawInflateStream(this.input, this.ip);\n\t  /** @type {Zlib.CompressionMethod} */\n\n\t  this.method;\n\t  /** @type {!(Array|Uint8Array)} */\n\n\t  this.output = this.rawinflate.output;\n\t};\n\t/**\n\t * decompress.\n\t * @return {!(Uint8Array|Array)} inflated buffer.\n\t */\n\n\n\tZlib.InflateStream.prototype.decompress = function (input) {\n\t  /** @type {!(Uint8Array|Array)} inflated buffer. */\n\t  var buffer;\n\t  // XXX Array, Uint8Array のチェックを行うか確認する\n\n\t  if (input !== void 0) {\n\t    {\n\t      var tmp = new Uint8Array(this.input.length + input.length);\n\t      tmp.set(this.input, 0);\n\t      tmp.set(input, this.input.length);\n\t      this.input = tmp;\n\t    }\n\t  }\n\n\t  if (this.method === void 0) {\n\t    if (this.readHeader() < 0) {\n\t      return new ( Uint8Array )();\n\t    }\n\t  }\n\n\t  buffer = this.rawinflate.decompress(this.input, this.ip);\n\n\t  if (this.rawinflate.ip !== 0) {\n\t    this.input =  this.input.subarray(this.rawinflate.ip) ;\n\t    this.ip = 0;\n\t  } // verify adler-32\n\n\t  /*\n\t  if (this.verify) {\n\t    adler32 =\n\t      input[this.ip++] << 24 | input[this.ip++] << 16 |\n\t      input[this.ip++] << 8 | input[this.ip++];\n\t     if (adler32 !== Zlib.Adler32(buffer)) {\n\t      throw new Error('invalid adler-32 checksum');\n\t    }\n\t  }\n\t  */\n\n\n\t  return buffer;\n\t};\n\n\tZlib.InflateStream.prototype.readHeader = function () {\n\t  var ip = this.ip;\n\t  var input = this.input; // Compression Method and Flags\n\n\t  var cmf = input[ip++];\n\t  var flg = input[ip++];\n\n\t  if (cmf === void 0 || flg === void 0) {\n\t    return -1;\n\t  } // compression method\n\n\n\t  switch (cmf & 0x0f) {\n\t    case Zlib.CompressionMethod.DEFLATE:\n\t      this.method = Zlib.CompressionMethod.DEFLATE;\n\t      break;\n\n\t    default:\n\t      throw new Error('unsupported compression method');\n\t  } // fcheck\n\n\n\t  if (((cmf << 8) + flg) % 31 !== 0) {\n\t    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n\t  } // fdict (not supported)\n\n\n\t  if (flg & 0x20) {\n\t    throw new Error('fdict flag is not supported');\n\t  }\n\n\t  this.ip = ip;\n\t};\n\t/**\n\t * @fileoverview GZIP (RFC1952) 展開コンテナ実装.\n\t */\n\n\t/**\n\t * @constructor\n\t * @param {!(Array|Uint8Array)} input input buffer.\n\t * @param {Object=} opt_params option parameters.\n\t */\n\n\n\tZlib.Gunzip = function (input, opt_params) {\n\t  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n\t  this.input = input;\n\t  /** @type {number} input buffer pointer. */\n\n\t  this.ip = 0;\n\t  /** @type {Array.<Zlib.GunzipMember>} */\n\n\t  this.member = [];\n\t  /** @type {boolean} */\n\n\t  this.decompressed = false;\n\t};\n\t/**\n\t * @return {Array.<Zlib.GunzipMember>}\n\t */\n\n\n\tZlib.Gunzip.prototype.getMembers = function () {\n\t  if (!this.decompressed) {\n\t    this.decompress();\n\t  }\n\n\t  return this.member.slice();\n\t};\n\t/**\n\t * inflate gzip data.\n\t * @return {!(Array.<number>|Uint8Array)} inflated buffer.\n\t */\n\n\n\tZlib.Gunzip.prototype.decompress = function () {\n\t  /** @type {number} input length. */\n\t  var il = this.input.length;\n\n\t  while (this.ip < il) {\n\t    this.decodeMember();\n\t  }\n\n\t  this.decompressed = true;\n\t  return this.concatMember();\n\t};\n\t/**\n\t * decode gzip member.\n\t */\n\n\n\tZlib.Gunzip.prototype.decodeMember = function () {\n\t  /** @type {Zlib.GunzipMember} */\n\t  var member = new Zlib.GunzipMember();\n\t  /** @type {number} */\n\n\t  var isize;\n\t  /** @type {Zlib.RawInflate} RawInflate implementation. */\n\n\t  var rawinflate;\n\t  /** @type {!(Array.<number>|Uint8Array)} inflated data. */\n\n\t  var inflated;\n\t  /** @type {number} inflate size */\n\n\t  var inflen;\n\t  /** @type {number} character code */\n\n\t  var c;\n\t  /** @type {number} character index in string. */\n\n\t  var ci;\n\t  /** @type {Array.<string>} character array. */\n\n\t  var str;\n\t  /** @type {number} modification time. */\n\n\t  var mtime;\n\t  /** @type {number} */\n\n\t  var crc32;\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  member.id1 = input[ip++];\n\t  member.id2 = input[ip++]; // check signature\n\n\t  if (member.id1 !== 0x1f || member.id2 !== 0x8b) {\n\t    throw new Error('invalid file signature:' + member.id1 + ',' + member.id2);\n\t  } // check compression method\n\n\n\t  member.cm = input[ip++];\n\n\t  switch (member.cm) {\n\t    case 8:\n\t      /* XXX: use Zlib const */\n\t      break;\n\n\t    default:\n\t      throw new Error('unknown compression method: ' + member.cm);\n\t  } // flags\n\n\n\t  member.flg = input[ip++]; // modification time\n\n\t  mtime = input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24;\n\t  member.mtime = new Date(mtime * 1000); // extra flags\n\n\t  member.xfl = input[ip++]; // operating system\n\n\t  member.os = input[ip++]; // extra\n\n\t  if ((member.flg & Zlib.Gzip.FlagsMask.FEXTRA) > 0) {\n\t    member.xlen = input[ip++] | input[ip++] << 8;\n\t    ip = this.decodeSubField(ip, member.xlen);\n\t  } // fname\n\n\n\t  if ((member.flg & Zlib.Gzip.FlagsMask.FNAME) > 0) {\n\t    for (str = [], ci = 0; (c = input[ip++]) > 0;) {\n\t      str[ci++] = String.fromCharCode(c);\n\t    }\n\n\t    member.name = str.join('');\n\t  } // fcomment\n\n\n\t  if ((member.flg & Zlib.Gzip.FlagsMask.FCOMMENT) > 0) {\n\t    for (str = [], ci = 0; (c = input[ip++]) > 0;) {\n\t      str[ci++] = String.fromCharCode(c);\n\t    }\n\n\t    member.comment = str.join('');\n\t  } // fhcrc\n\n\n\t  if ((member.flg & Zlib.Gzip.FlagsMask.FHCRC) > 0) {\n\t    member.crc16 = Zlib.CRC32.calc(input, 0, ip) & 0xffff;\n\n\t    if (member.crc16 !== (input[ip++] | input[ip++] << 8)) {\n\t      throw new Error('invalid header crc16');\n\t    }\n\t  } // isize を事前に取得すると展開後のサイズが分かるため、\n\t  // inflate処理のバッファサイズが事前に分かり、高速になる\n\n\n\t  isize = input[input.length - 4] | input[input.length - 3] << 8 | input[input.length - 2] << 16 | input[input.length - 1] << 24; // isize の妥当性チェック\n\t  // ハフマン符号では最小 2-bit のため、最大で 1/4 になる\n\t  // LZ77 符号では 長さと距離 2-Byte で最大 258-Byte を表現できるため、\n\t  // 1/128 になるとする\n\t  // ここから入力バッファの残りが isize の 512 倍以上だったら\n\t  // サイズ指定のバッファ確保は行わない事とする\n\n\t  if (input.length - ip -\n\t  /* CRC-32 */\n\t  4 -\n\t  /* ISIZE */\n\t  4 < isize * 512) {\n\t    inflen = isize;\n\t  } // compressed block\n\n\n\t  rawinflate = new Zlib.RawInflate(input, {\n\t    'index': ip,\n\t    'bufferSize': inflen\n\t  });\n\t  member.data = inflated = rawinflate.decompress();\n\t  ip = rawinflate.ip; // crc32\n\n\t  member.crc32 = crc32 = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0;\n\n\t  if (Zlib.CRC32.calc(inflated) !== crc32) {\n\t    throw new Error('invalid CRC-32 checksum: 0x' + Zlib.CRC32.calc(inflated).toString(16) + ' / 0x' + crc32.toString(16));\n\t  } // input size\n\n\n\t  member.isize = isize = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0;\n\n\t  if ((inflated.length & 0xffffffff) !== isize) {\n\t    throw new Error('invalid input size: ' + (inflated.length & 0xffffffff) + ' / ' + isize);\n\t  }\n\n\t  this.member.push(member);\n\t  this.ip = ip;\n\t};\n\t/**\n\t * サブフィールドのデコード\n\t * XXX: 現在は何もせずスキップする\n\t */\n\n\n\tZlib.Gunzip.prototype.decodeSubField = function (ip, length) {\n\t  return ip + length;\n\t};\n\t/**\n\t * @return {!(Array.<number>|Uint8Array)}\n\t */\n\n\n\tZlib.Gunzip.prototype.concatMember = function () {\n\t  /** @type {Array.<Zlib.GunzipMember>} */\n\t  var member = this.member;\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var il;\n\t  /** @type {number} */\n\n\t  var p = 0;\n\t  /** @type {number} */\n\n\t  var size = 0;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var buffer;\n\n\t  for (i = 0, il = member.length; i < il; ++i) {\n\t    size += member[i].data.length;\n\t  }\n\n\t  {\n\t    buffer = new Uint8Array(size);\n\n\t    for (i = 0; i < il; ++i) {\n\t      buffer.set(member[i].data, p);\n\t      p += member[i].data.length;\n\t    }\n\t  }\n\n\t  return buffer;\n\t};\n\t/**\n\t * @constructor\n\t */\n\n\n\tZlib.GunzipMember = function () {\n\t  /** @type {number} signature first byte. */\n\t  this.id1;\n\t  /** @type {number} signature second byte. */\n\n\t  this.id2;\n\t  /** @type {number} compression method. */\n\n\t  this.cm;\n\t  /** @type {number} flags. */\n\n\t  this.flg;\n\t  /** @type {Date} modification time. */\n\n\t  this.mtime;\n\t  /** @type {number} extra flags. */\n\n\t  this.xfl;\n\t  /** @type {number} operating system number. */\n\n\t  this.os;\n\t  /** @type {number} CRC-16 value for FHCRC flag. */\n\n\t  this.crc16;\n\t  /** @type {number} extra length. */\n\n\t  this.xlen;\n\t  /** @type {number} CRC-32 value for verification. */\n\n\t  this.crc32;\n\t  /** @type {number} input size modulo 32 value. */\n\n\t  this.isize;\n\t  /** @type {string} filename. */\n\n\t  this.name;\n\t  /** @type {string} comment. */\n\n\t  this.comment;\n\t  /** @type {!(Uint8Array|Array.<number>)} */\n\n\t  this.data;\n\t};\n\n\tZlib.GunzipMember.prototype.getName = function () {\n\t  return this.name;\n\t};\n\n\tZlib.GunzipMember.prototype.getData = function () {\n\t  return this.data;\n\t};\n\n\tZlib.GunzipMember.prototype.getMtime = function () {\n\t  return this.mtime;\n\t};\n\t/**\n\t * @fileoverview GZIP (RFC1952) 実装.\n\t */\n\n\t/**\n\t * @constructor\n\t * @param {!(Array|Uint8Array)} input input buffer.\n\t * @param {Object=} opt_params option parameters.\n\t */\n\n\n\tZlib.Gzip = function (input, opt_params) {\n\t  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n\t  this.input = input;\n\t  /** @type {number} input buffer pointer. */\n\n\t  this.ip = 0;\n\t  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n\n\t  this.output;\n\t  /** @type {number} output buffer. */\n\n\t  this.op = 0;\n\t  /** @type {!Object} flags option flags. */\n\n\t  this.flags = {};\n\t  /** @type {!string} filename. */\n\n\t  this.filename;\n\t  /** @type {!string} comment. */\n\n\t  this.comment;\n\t  /** @type {!Object} deflate options. */\n\n\t  this.deflateOptions; // option parameters\n\n\t  if (opt_params) {\n\t    if (opt_params['flags']) {\n\t      this.flags = opt_params['flags'];\n\t    }\n\n\t    if (typeof opt_params['filename'] === 'string') {\n\t      this.filename = opt_params['filename'];\n\t    }\n\n\t    if (typeof opt_params['comment'] === 'string') {\n\t      this.comment = opt_params['comment'];\n\t    }\n\n\t    if (opt_params['deflateOptions']) {\n\t      this.deflateOptions = opt_params['deflateOptions'];\n\t    }\n\t  }\n\n\t  if (!this.deflateOptions) {\n\t    this.deflateOptions = {};\n\t  }\n\t};\n\t/**\n\t * @type {number}\n\t * @const\n\t */\n\n\n\tZlib.Gzip.DefaultBufferSize = 0x8000;\n\t/**\n\t * encode gzip members.\n\t * @return {!(Array|Uint8Array)} gzip binary array.\n\t */\n\n\tZlib.Gzip.prototype.compress = function () {\n\t  /** @type {number} flags. */\n\t  var flg;\n\t  /** @type {number} modification time. */\n\n\t  var mtime;\n\t  /** @type {number} CRC-16 value for FHCRC flag. */\n\n\t  var crc16;\n\t  /** @type {number} CRC-32 value for verification. */\n\n\t  var crc32;\n\t  /** @type {!Zlib.RawDeflate} raw deflate object. */\n\n\t  var rawdeflate;\n\t  /** @type {number} character code */\n\n\t  var c;\n\t  /** @type {number} loop counter. */\n\n\t  var i;\n\t  /** @type {number} loop limiter. */\n\n\t  var il;\n\t  /** @type {!(Array|Uint8Array)} output buffer. */\n\n\t  var output = new ( Uint8Array )(Zlib.Gzip.DefaultBufferSize);\n\t  /** @type {number} output buffer pointer. */\n\n\t  var op = 0;\n\t  var input = this.input;\n\t  var ip = this.ip;\n\t  var filename = this.filename;\n\t  var comment = this.comment; // check signature\n\n\t  output[op++] = 0x1f;\n\t  output[op++] = 0x8b; // check compression method\n\n\t  output[op++] = 8;\n\t  /* XXX: use Zlib const */\n\t  // flags\n\n\t  flg = 0;\n\t  if (this.flags['fname']) flg |= Zlib.Gzip.FlagsMask.FNAME;\n\t  if (this.flags['fcomment']) flg |= Zlib.Gzip.FlagsMask.FCOMMENT;\n\t  if (this.flags['fhcrc']) flg |= Zlib.Gzip.FlagsMask.FHCRC; // XXX: FTEXT\n\t  // XXX: FEXTRA\n\n\t  output[op++] = flg; // modification time\n\n\t  mtime = (Date.now ? Date.now() : +new Date()) / 1000 | 0;\n\t  output[op++] = mtime & 0xff;\n\t  output[op++] = mtime >>> 8 & 0xff;\n\t  output[op++] = mtime >>> 16 & 0xff;\n\t  output[op++] = mtime >>> 24 & 0xff; // extra flags\n\n\t  output[op++] = 0; // operating system\n\n\t  output[op++] = Zlib.Gzip.OperatingSystem.UNKNOWN; // extra\n\n\t  /* NOP */\n\t  // fname\n\n\t  if (this.flags['fname'] !== void 0) {\n\t    for (i = 0, il = filename.length; i < il; ++i) {\n\t      c = filename.charCodeAt(i);\n\n\t      if (c > 0xff) {\n\t        output[op++] = c >>> 8 & 0xff;\n\t      }\n\n\t      output[op++] = c & 0xff;\n\t    }\n\n\t    output[op++] = 0; // null termination\n\t  } // fcomment\n\n\n\t  if (this.flags['comment']) {\n\t    for (i = 0, il = comment.length; i < il; ++i) {\n\t      c = comment.charCodeAt(i);\n\n\t      if (c > 0xff) {\n\t        output[op++] = c >>> 8 & 0xff;\n\t      }\n\n\t      output[op++] = c & 0xff;\n\t    }\n\n\t    output[op++] = 0; // null termination\n\t  } // fhcrc\n\n\n\t  if (this.flags['fhcrc']) {\n\t    crc16 = Zlib.CRC32.calc(output, 0, op) & 0xffff;\n\t    output[op++] = crc16 & 0xff;\n\t    output[op++] = crc16 >>> 8 & 0xff;\n\t  } // add compress option\n\n\n\t  this.deflateOptions['outputBuffer'] = output;\n\t  this.deflateOptions['outputIndex'] = op; // compress\n\n\t  rawdeflate = new Zlib.RawDeflate(input, this.deflateOptions);\n\t  output = rawdeflate.compress();\n\t  op = rawdeflate.op; // expand buffer\n\n\t  {\n\t    if (op + 8 > output.buffer.byteLength) {\n\t      this.output = new Uint8Array(op + 8);\n\t      this.output.set(new Uint8Array(output.buffer));\n\t      output = this.output;\n\t    } else {\n\t      output = new Uint8Array(output.buffer);\n\t    }\n\t  } // crc32\n\n\n\t  crc32 = Zlib.CRC32.calc(input);\n\t  output[op++] = crc32 & 0xff;\n\t  output[op++] = crc32 >>> 8 & 0xff;\n\t  output[op++] = crc32 >>> 16 & 0xff;\n\t  output[op++] = crc32 >>> 24 & 0xff; // input size\n\n\t  il = input.length;\n\t  output[op++] = il & 0xff;\n\t  output[op++] = il >>> 8 & 0xff;\n\t  output[op++] = il >>> 16 & 0xff;\n\t  output[op++] = il >>> 24 & 0xff;\n\t  this.ip = ip;\n\n\t  if ( op < output.length) {\n\t    this.output = output = output.subarray(0, op);\n\t  }\n\n\t  return output;\n\t};\n\t/** @enum {number} */\n\n\n\tZlib.Gzip.OperatingSystem = {\n\t  FAT: 0,\n\t  AMIGA: 1,\n\t  VMS: 2,\n\t  UNIX: 3,\n\t  VM_CMS: 4,\n\t  ATARI_TOS: 5,\n\t  HPFS: 6,\n\t  MACINTOSH: 7,\n\t  Z_SYSTEM: 8,\n\t  CP_M: 9,\n\t  TOPS_20: 10,\n\t  NTFS: 11,\n\t  QDOS: 12,\n\t  ACORN_RISCOS: 13,\n\t  UNKNOWN: 255\n\t};\n\t/** @enum {number} */\n\n\tZlib.Gzip.FlagsMask = {\n\t  FTEXT: 0x01,\n\t  FHCRC: 0x02,\n\t  FEXTRA: 0x04,\n\t  FNAME: 0x08,\n\t  FCOMMENT: 0x10\n\t};\n\t/**\n\t * @fileoverview Heap Sort 実装. ハフマン符号化で使用する.\n\t */\n\n\t/**\n\t * カスタムハフマン符号で使用するヒープ実装\n\t * @param {number} length ヒープサイズ.\n\t * @constructor\n\t */\n\n\tZlib.Heap = function (length) {\n\t  this.buffer = new ( Uint16Array )(length * 2);\n\t  this.length = 0;\n\t};\n\t/**\n\t * 親ノードの index 取得\n\t * @param {number} index 子ノードの index.\n\t * @return {number} 親ノードの index.\n\t *\n\t */\n\n\n\tZlib.Heap.prototype.getParent = function (index) {\n\t  return ((index - 2) / 4 | 0) * 2;\n\t};\n\t/**\n\t * 子ノードの index 取得\n\t * @param {number} index 親ノードの index.\n\t * @return {number} 子ノードの index.\n\t */\n\n\n\tZlib.Heap.prototype.getChild = function (index) {\n\t  return 2 * index + 2;\n\t};\n\t/**\n\t * Heap に値を追加する\n\t * @param {number} index キー index.\n\t * @param {number} value 値.\n\t * @return {number} 現在のヒープ長.\n\t */\n\n\n\tZlib.Heap.prototype.push = function (index, value) {\n\t  var current,\n\t      parent,\n\t      heap = this.buffer,\n\t      swap;\n\t  current = this.length;\n\t  heap[this.length++] = value;\n\t  heap[this.length++] = index; // ルートノードにたどり着くまで入れ替えを試みる\n\n\t  while (current > 0) {\n\t    parent = this.getParent(current); // 親ノードと比較して親の方が小さければ入れ替える\n\n\t    if (heap[current] > heap[parent]) {\n\t      swap = heap[current];\n\t      heap[current] = heap[parent];\n\t      heap[parent] = swap;\n\t      swap = heap[current + 1];\n\t      heap[current + 1] = heap[parent + 1];\n\t      heap[parent + 1] = swap;\n\t      current = parent; // 入れ替えが必要なくなったらそこで抜ける\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\n\t  return this.length;\n\t};\n\t/**\n\t * Heapから一番大きい値を返す\n\t * @return {{index: number, value: number, length: number}} {index: キーindex,\n\t *     value: 値, length: ヒープ長} の Object.\n\t */\n\n\n\tZlib.Heap.prototype.pop = function () {\n\t  var index,\n\t      value,\n\t      heap = this.buffer,\n\t      swap,\n\t      current,\n\t      parent;\n\t  value = heap[0];\n\t  index = heap[1]; // 後ろから値を取る\n\n\t  this.length -= 2;\n\t  heap[0] = heap[this.length];\n\t  heap[1] = heap[this.length + 1];\n\t  parent = 0; // ルートノードから下がっていく\n\n\t  while (true) {\n\t    current = this.getChild(parent); // 範囲チェック\n\n\t    if (current >= this.length) {\n\t      break;\n\t    } // 隣のノードと比較して、隣の方が値が大きければ隣を現在ノードとして選択\n\n\n\t    if (current + 2 < this.length && heap[current + 2] > heap[current]) {\n\t      current += 2;\n\t    } // 親ノードと比較して親の方が小さい場合は入れ替える\n\n\n\t    if (heap[current] > heap[parent]) {\n\t      swap = heap[parent];\n\t      heap[parent] = heap[current];\n\t      heap[current] = swap;\n\t      swap = heap[parent + 1];\n\t      heap[parent + 1] = heap[current + 1];\n\t      heap[current + 1] = swap;\n\t    } else {\n\t      break;\n\t    }\n\n\t    parent = current;\n\t  }\n\n\t  return {\n\t    index: index,\n\t    value: value,\n\t    length: this.length\n\t  };\n\t};\n\t/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\t/**\n\t * @fileoverview Deflate (RFC1951) 符号化アルゴリズム実装.\n\t */\n\n\t/**\n\t * Raw Deflate 実装\n\t *\n\t * @constructor\n\t * @param {!(Array.<number>|Uint8Array)} input 符号化する対象のバッファ.\n\t * @param {Object=} opt_params option parameters.\n\t *\n\t * typed array が使用可能なとき、outputBuffer が Array は自動的に Uint8Array に\n\t * 変換されます.\n\t * 別のオブジェクトになるため出力バッファを参照している変数などは\n\t * 更新する必要があります.\n\t */\n\n\n\tZlib.RawDeflate = function (input, opt_params) {\n\t  /** @type {Zlib.RawDeflate.CompressionType} */\n\t  this.compressionType = Zlib.RawDeflate.CompressionType.DYNAMIC;\n\t  /** @type {number} */\n\n\t  this.lazy = 0;\n\t  /** @type {!(Array.<number>|Uint32Array)} */\n\n\t  this.freqsLitLen;\n\t  /** @type {!(Array.<number>|Uint32Array)} */\n\n\t  this.freqsDist;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  this.input =  input instanceof Array ? new Uint8Array(input) : input;\n\t  /** @type {!(Array.<number>|Uint8Array)} output output buffer. */\n\n\t  this.output;\n\t  /** @type {number} pos output buffer position. */\n\n\t  this.op = 0; // option parameters\n\n\t  if (opt_params) {\n\t    if (opt_params['lazy']) {\n\t      this.lazy = opt_params['lazy'];\n\t    }\n\n\t    if (typeof opt_params['compressionType'] === 'number') {\n\t      this.compressionType = opt_params['compressionType'];\n\t    }\n\n\t    if (opt_params['outputBuffer']) {\n\t      this.output =  opt_params['outputBuffer'] instanceof Array ? new Uint8Array(opt_params['outputBuffer']) : opt_params['outputBuffer'];\n\t    }\n\n\t    if (typeof opt_params['outputIndex'] === 'number') {\n\t      this.op = opt_params['outputIndex'];\n\t    }\n\t  }\n\n\t  if (!this.output) {\n\t    this.output = new ( Uint8Array )(0x8000);\n\t  }\n\t};\n\t/**\n\t * @enum {number}\n\t */\n\n\n\tZlib.RawDeflate.CompressionType = {\n\t  NONE: 0,\n\t  FIXED: 1,\n\t  DYNAMIC: 2,\n\t  RESERVED: 3\n\t};\n\t/**\n\t * LZ77 の最小マッチ長\n\t * @const\n\t * @type {number}\n\t */\n\n\tZlib.RawDeflate.Lz77MinLength = 3;\n\t/**\n\t * LZ77 の最大マッチ長\n\t * @const\n\t * @type {number}\n\t */\n\n\tZlib.RawDeflate.Lz77MaxLength = 258;\n\t/**\n\t * LZ77 のウィンドウサイズ\n\t * @const\n\t * @type {number}\n\t */\n\n\tZlib.RawDeflate.WindowSize = 0x8000;\n\t/**\n\t * 最長の符号長\n\t * @const\n\t * @type {number}\n\t */\n\n\tZlib.RawDeflate.MaxCodeLength = 16;\n\t/**\n\t * ハフマン符号の最大数値\n\t * @const\n\t * @type {number}\n\t */\n\n\tZlib.RawDeflate.HUFMAX = 286;\n\t/**\n\t * 固定ハフマン符号の符号化テーブル\n\t * @const\n\t * @type {Array.<Array.<number, number>>}\n\t */\n\n\tZlib.RawDeflate.FixedHuffmanTable = function () {\n\t  var table = [],\n\t      i;\n\n\t  for (i = 0; i < 288; i++) {\n\t    switch (true) {\n\t      case i <= 143:\n\t        table.push([i + 0x030, 8]);\n\t        break;\n\n\t      case i <= 255:\n\t        table.push([i - 144 + 0x190, 9]);\n\t        break;\n\n\t      case i <= 279:\n\t        table.push([i - 256 + 0x000, 7]);\n\t        break;\n\n\t      case i <= 287:\n\t        table.push([i - 280 + 0x0C0, 8]);\n\t        break;\n\n\t      default:\n\t        throw 'invalid literal: ' + i;\n\t    }\n\t  }\n\n\t  return table;\n\t}();\n\t/**\n\t * DEFLATE ブロックの作成\n\t * @return {!(Array.<number>|Uint8Array)} 圧縮済み byte array.\n\t */\n\n\n\tZlib.RawDeflate.prototype.compress = function () {\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\t  var blockArray;\n\t  /** @type {number} */\n\n\t  var position;\n\t  /** @type {number} */\n\n\t  var length;\n\t  var input = this.input; // compression\n\n\t  switch (this.compressionType) {\n\t    case Zlib.RawDeflate.CompressionType.NONE:\n\t      // each 65535-Byte (length header: 16-bit)\n\t      for (position = 0, length = input.length; position < length;) {\n\t        blockArray =  input.subarray(position, position + 0xffff) ;\n\t        position += blockArray.length;\n\t        this.makeNocompressBlock(blockArray, position === length);\n\t      }\n\n\t      break;\n\n\t    case Zlib.RawDeflate.CompressionType.FIXED:\n\t      this.output = this.makeFixedHuffmanBlock(input, true);\n\t      this.op = this.output.length;\n\t      break;\n\n\t    case Zlib.RawDeflate.CompressionType.DYNAMIC:\n\t      this.output = this.makeDynamicHuffmanBlock(input, true);\n\t      this.op = this.output.length;\n\t      break;\n\n\t    default:\n\t      throw 'invalid compression type';\n\t  }\n\n\t  return this.output;\n\t};\n\t/**\n\t * 非圧縮ブロックの作成\n\t * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n\t * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n\t * @return {!(Array.<number>|Uint8Array)} 非圧縮ブロック byte array.\n\t */\n\n\n\tZlib.RawDeflate.prototype.makeNocompressBlock = function (blockArray, isFinalBlock) {\n\t  /** @type {number} */\n\t  var bfinal;\n\t  /** @type {Zlib.RawDeflate.CompressionType} */\n\n\t  var btype;\n\t  /** @type {number} */\n\n\t  var len;\n\t  /** @type {number} */\n\n\t  var nlen;\n\t  var output = this.output;\n\t  var op = this.op; // expand buffer\n\n\t  {\n\t    output = new Uint8Array(this.output.buffer);\n\n\t    while (output.length <= op + blockArray.length + 5) {\n\t      output = new Uint8Array(output.length << 1);\n\t    }\n\n\t    output.set(this.output);\n\t  } // header\n\n\n\t  bfinal = isFinalBlock ? 1 : 0;\n\t  btype = Zlib.RawDeflate.CompressionType.NONE;\n\t  output[op++] = bfinal | btype << 1; // length\n\n\t  len = blockArray.length;\n\t  nlen = ~len + 0x10000 & 0xffff;\n\t  output[op++] = len & 0xff;\n\t  output[op++] = len >>> 8 & 0xff;\n\t  output[op++] = nlen & 0xff;\n\t  output[op++] = nlen >>> 8 & 0xff; // copy buffer\n\n\t  {\n\t    output.set(blockArray, op);\n\t    op += blockArray.length;\n\t    output = output.subarray(0, op);\n\t  }\n\n\t  this.op = op;\n\t  this.output = output;\n\t  return output;\n\t};\n\t/**\n\t * 固定ハフマンブロックの作成\n\t * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n\t * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n\t * @return {!(Array.<number>|Uint8Array)} 固定ハフマン符号化ブロック byte array.\n\t */\n\n\n\tZlib.RawDeflate.prototype.makeFixedHuffmanBlock = function (blockArray, isFinalBlock) {\n\t  /** @type {Zlib.BitStream} */\n\t  var stream = new Zlib.BitStream( new Uint8Array(this.output.buffer) , this.op);\n\t  /** @type {number} */\n\n\t  var bfinal;\n\t  /** @type {Zlib.RawDeflate.CompressionType} */\n\n\t  var btype;\n\t  /** @type {!(Array.<number>|Uint16Array)} */\n\n\t  var data; // header\n\n\t  bfinal = isFinalBlock ? 1 : 0;\n\t  btype = Zlib.RawDeflate.CompressionType.FIXED;\n\t  stream.writeBits(bfinal, 1, true);\n\t  stream.writeBits(btype, 2, true);\n\t  data = this.lz77(blockArray);\n\t  this.fixedHuffman(data, stream);\n\t  return stream.finish();\n\t};\n\t/**\n\t * 動的ハフマンブロックの作成\n\t * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n\t * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n\t * @return {!(Array.<number>|Uint8Array)} 動的ハフマン符号ブロック byte array.\n\t */\n\n\n\tZlib.RawDeflate.prototype.makeDynamicHuffmanBlock = function (blockArray, isFinalBlock) {\n\t  /** @type {Zlib.BitStream} */\n\t  var stream = new Zlib.BitStream( new Uint8Array(this.output.buffer) , this.op);\n\t  /** @type {number} */\n\n\t  var bfinal;\n\t  /** @type {Zlib.RawDeflate.CompressionType} */\n\n\t  var btype;\n\t  /** @type {!(Array.<number>|Uint16Array)} */\n\n\t  var data;\n\t  /** @type {number} */\n\n\t  var hlit;\n\t  /** @type {number} */\n\n\t  var hdist;\n\t  /** @type {number} */\n\n\t  var hclen;\n\t  /** @const @type {Array.<number>} */\n\n\t  var hclenOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var litLenLengths;\n\t  /** @type {!(Array.<number>|Uint16Array)} */\n\n\t  var litLenCodes;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var distLengths;\n\t  /** @type {!(Array.<number>|Uint16Array)} */\n\n\t  var distCodes;\n\t  /** @type {{\n\t   *   codes: !(Array.<number>|Uint32Array),\n\t   *   freqs: !(Array.<number>|Uint8Array)\n\t   * }} */\n\n\t  var treeSymbols;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var treeLengths;\n\t  /** @type {Array} */\n\n\t  var transLengths = new Array(19);\n\t  /** @type {!(Array.<number>|Uint16Array)} */\n\n\t  var treeCodes;\n\t  /** @type {number} */\n\n\t  var code;\n\t  /** @type {number} */\n\n\t  var bitlen;\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var il; // header\n\n\t  bfinal = isFinalBlock ? 1 : 0;\n\t  btype = Zlib.RawDeflate.CompressionType.DYNAMIC;\n\t  stream.writeBits(bfinal, 1, true);\n\t  stream.writeBits(btype, 2, true);\n\t  data = this.lz77(blockArray); // リテラル・長さ, 距離のハフマン符号と符号長の算出\n\n\t  litLenLengths = this.getLengths_(this.freqsLitLen, 15);\n\t  litLenCodes = this.getCodesFromLengths_(litLenLengths);\n\t  distLengths = this.getLengths_(this.freqsDist, 7);\n\t  distCodes = this.getCodesFromLengths_(distLengths); // HLIT, HDIST の決定\n\n\t  for (hlit = 286; hlit > 257 && litLenLengths[hlit - 1] === 0; hlit--) {}\n\n\t  for (hdist = 30; hdist > 1 && distLengths[hdist - 1] === 0; hdist--) {} // HCLEN\n\n\n\t  treeSymbols = this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);\n\t  treeLengths = this.getLengths_(treeSymbols.freqs, 7);\n\n\t  for (i = 0; i < 19; i++) {\n\t    transLengths[i] = treeLengths[hclenOrder[i]];\n\t  }\n\n\t  for (hclen = 19; hclen > 4 && transLengths[hclen - 1] === 0; hclen--) {}\n\n\t  treeCodes = this.getCodesFromLengths_(treeLengths); // 出力\n\n\t  stream.writeBits(hlit - 257, 5, true);\n\t  stream.writeBits(hdist - 1, 5, true);\n\t  stream.writeBits(hclen - 4, 4, true);\n\n\t  for (i = 0; i < hclen; i++) {\n\t    stream.writeBits(transLengths[i], 3, true);\n\t  } // ツリーの出力\n\n\n\t  for (i = 0, il = treeSymbols.codes.length; i < il; i++) {\n\t    code = treeSymbols.codes[i];\n\t    stream.writeBits(treeCodes[code], treeLengths[code], true); // extra bits\n\n\t    if (code >= 16) {\n\t      i++;\n\n\t      switch (code) {\n\t        case 16:\n\t          bitlen = 2;\n\t          break;\n\n\t        case 17:\n\t          bitlen = 3;\n\t          break;\n\n\t        case 18:\n\t          bitlen = 7;\n\t          break;\n\n\t        default:\n\t          throw 'invalid code: ' + code;\n\t      }\n\n\t      stream.writeBits(treeSymbols.codes[i], bitlen, true);\n\t    }\n\t  }\n\n\t  this.dynamicHuffman(data, [litLenCodes, litLenLengths], [distCodes, distLengths], stream);\n\t  return stream.finish();\n\t};\n\t/**\n\t * 動的ハフマン符号化(カスタムハフマンテーブル)\n\t * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n\t * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n\t * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n\t */\n\n\n\tZlib.RawDeflate.prototype.dynamicHuffman = function (dataArray, litLen, dist, stream) {\n\t  /** @type {number} */\n\t  var index;\n\t  /** @type {number} */\n\n\t  var length;\n\t  /** @type {number} */\n\n\t  var literal;\n\t  /** @type {number} */\n\n\t  var code;\n\t  /** @type {number} */\n\n\t  var litLenCodes;\n\t  /** @type {number} */\n\n\t  var litLenLengths;\n\t  /** @type {number} */\n\n\t  var distCodes;\n\t  /** @type {number} */\n\n\t  var distLengths;\n\t  litLenCodes = litLen[0];\n\t  litLenLengths = litLen[1];\n\t  distCodes = dist[0];\n\t  distLengths = dist[1]; // 符号を BitStream に書き込んでいく\n\n\t  for (index = 0, length = dataArray.length; index < length; ++index) {\n\t    literal = dataArray[index]; // literal or length\n\n\t    stream.writeBits(litLenCodes[literal], litLenLengths[literal], true); // 長さ・距離符号\n\n\t    if (literal > 256) {\n\t      // length extra\n\t      stream.writeBits(dataArray[++index], dataArray[++index], true); // distance\n\n\t      code = dataArray[++index];\n\t      stream.writeBits(distCodes[code], distLengths[code], true); // distance extra\n\n\t      stream.writeBits(dataArray[++index], dataArray[++index], true); // 終端\n\t    } else if (literal === 256) {\n\t      break;\n\t    }\n\t  }\n\n\t  return stream;\n\t};\n\t/**\n\t * 固定ハフマン符号化\n\t * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n\t * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n\t * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n\t */\n\n\n\tZlib.RawDeflate.prototype.fixedHuffman = function (dataArray, stream) {\n\t  /** @type {number} */\n\t  var index;\n\t  /** @type {number} */\n\n\t  var length;\n\t  /** @type {number} */\n\n\t  var literal; // 符号を BitStream に書き込んでいく\n\n\t  for (index = 0, length = dataArray.length; index < length; index++) {\n\t    literal = dataArray[index]; // 符号の書き込み\n\n\t    Zlib.BitStream.prototype.writeBits.apply(stream, Zlib.RawDeflate.FixedHuffmanTable[literal]); // 長さ・距離符号\n\n\t    if (literal > 0x100) {\n\t      // length extra\n\t      stream.writeBits(dataArray[++index], dataArray[++index], true); // distance\n\n\t      stream.writeBits(dataArray[++index], 5); // distance extra\n\n\t      stream.writeBits(dataArray[++index], dataArray[++index], true); // 終端\n\t    } else if (literal === 0x100) {\n\t      break;\n\t    }\n\t  }\n\n\t  return stream;\n\t};\n\t/**\n\t * マッチ情報\n\t * @param {!number} length マッチした長さ.\n\t * @param {!number} backwardDistance マッチ位置との距離.\n\t * @constructor\n\t */\n\n\n\tZlib.RawDeflate.Lz77Match = function (length, backwardDistance) {\n\t  /** @type {number} match length. */\n\t  this.length = length;\n\t  /** @type {number} backward distance. */\n\n\t  this.backwardDistance = backwardDistance;\n\t};\n\t/**\n\t * 長さ符号テーブル.\n\t * [コード, 拡張ビット, 拡張ビット長] の配列となっている.\n\t * @const\n\t * @type {!(Array.<number>|Uint32Array)}\n\t */\n\n\n\tZlib.RawDeflate.Lz77Match.LengthCodeTable = function (table) {\n\t  return  new Uint32Array(table) ;\n\t}(function () {\n\t  /** @type {!Array} */\n\t  var table = [];\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {!Array.<number>} */\n\n\t  var c;\n\n\t  for (i = 3; i <= 258; i++) {\n\t    c = code(i);\n\t    table[i] = c[2] << 24 | c[1] << 16 | c[0];\n\t  }\n\t  /**\n\t   * @param {number} length lz77 length.\n\t   * @return {!Array.<number>} lz77 codes.\n\t   */\n\n\n\t  function code(length) {\n\t    switch (true) {\n\t      case length === 3:\n\t        return [257, length - 3, 0];\n\n\t      case length === 4:\n\t        return [258, length - 4, 0];\n\n\t      case length === 5:\n\t        return [259, length - 5, 0];\n\n\t      case length === 6:\n\t        return [260, length - 6, 0];\n\n\t      case length === 7:\n\t        return [261, length - 7, 0];\n\n\t      case length === 8:\n\t        return [262, length - 8, 0];\n\n\t      case length === 9:\n\t        return [263, length - 9, 0];\n\n\t      case length === 10:\n\t        return [264, length - 10, 0];\n\n\t      case length <= 12:\n\t        return [265, length - 11, 1];\n\n\t      case length <= 14:\n\t        return [266, length - 13, 1];\n\n\t      case length <= 16:\n\t        return [267, length - 15, 1];\n\n\t      case length <= 18:\n\t        return [268, length - 17, 1];\n\n\t      case length <= 22:\n\t        return [269, length - 19, 2];\n\n\t      case length <= 26:\n\t        return [270, length - 23, 2];\n\n\t      case length <= 30:\n\t        return [271, length - 27, 2];\n\n\t      case length <= 34:\n\t        return [272, length - 31, 2];\n\n\t      case length <= 42:\n\t        return [273, length - 35, 3];\n\n\t      case length <= 50:\n\t        return [274, length - 43, 3];\n\n\t      case length <= 58:\n\t        return [275, length - 51, 3];\n\n\t      case length <= 66:\n\t        return [276, length - 59, 3];\n\n\t      case length <= 82:\n\t        return [277, length - 67, 4];\n\n\t      case length <= 98:\n\t        return [278, length - 83, 4];\n\n\t      case length <= 114:\n\t        return [279, length - 99, 4];\n\n\t      case length <= 130:\n\t        return [280, length - 115, 4];\n\n\t      case length <= 162:\n\t        return [281, length - 131, 5];\n\n\t      case length <= 194:\n\t        return [282, length - 163, 5];\n\n\t      case length <= 226:\n\t        return [283, length - 195, 5];\n\n\t      case length <= 257:\n\t        return [284, length - 227, 5];\n\n\t      case length === 258:\n\t        return [285, length - 258, 0];\n\n\t      default:\n\t        throw 'invalid length: ' + length;\n\t    }\n\t  }\n\n\t  return table;\n\t}());\n\t/**\n\t * 距離符号テーブル\n\t * @param {!number} dist 距離.\n\t * @return {!Array.<number>} コード、拡張ビット、拡張ビット長の配列.\n\t * @private\n\t */\n\n\n\tZlib.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function (dist) {\n\t  /** @type {!Array.<number>} distance code table. */\n\t  var r;\n\n\t  switch (true) {\n\t    case dist === 1:\n\t      r = [0, dist - 1, 0];\n\t      break;\n\n\t    case dist === 2:\n\t      r = [1, dist - 2, 0];\n\t      break;\n\n\t    case dist === 3:\n\t      r = [2, dist - 3, 0];\n\t      break;\n\n\t    case dist === 4:\n\t      r = [3, dist - 4, 0];\n\t      break;\n\n\t    case dist <= 6:\n\t      r = [4, dist - 5, 1];\n\t      break;\n\n\t    case dist <= 8:\n\t      r = [5, dist - 7, 1];\n\t      break;\n\n\t    case dist <= 12:\n\t      r = [6, dist - 9, 2];\n\t      break;\n\n\t    case dist <= 16:\n\t      r = [7, dist - 13, 2];\n\t      break;\n\n\t    case dist <= 24:\n\t      r = [8, dist - 17, 3];\n\t      break;\n\n\t    case dist <= 32:\n\t      r = [9, dist - 25, 3];\n\t      break;\n\n\t    case dist <= 48:\n\t      r = [10, dist - 33, 4];\n\t      break;\n\n\t    case dist <= 64:\n\t      r = [11, dist - 49, 4];\n\t      break;\n\n\t    case dist <= 96:\n\t      r = [12, dist - 65, 5];\n\t      break;\n\n\t    case dist <= 128:\n\t      r = [13, dist - 97, 5];\n\t      break;\n\n\t    case dist <= 192:\n\t      r = [14, dist - 129, 6];\n\t      break;\n\n\t    case dist <= 256:\n\t      r = [15, dist - 193, 6];\n\t      break;\n\n\t    case dist <= 384:\n\t      r = [16, dist - 257, 7];\n\t      break;\n\n\t    case dist <= 512:\n\t      r = [17, dist - 385, 7];\n\t      break;\n\n\t    case dist <= 768:\n\t      r = [18, dist - 513, 8];\n\t      break;\n\n\t    case dist <= 1024:\n\t      r = [19, dist - 769, 8];\n\t      break;\n\n\t    case dist <= 1536:\n\t      r = [20, dist - 1025, 9];\n\t      break;\n\n\t    case dist <= 2048:\n\t      r = [21, dist - 1537, 9];\n\t      break;\n\n\t    case dist <= 3072:\n\t      r = [22, dist - 2049, 10];\n\t      break;\n\n\t    case dist <= 4096:\n\t      r = [23, dist - 3073, 10];\n\t      break;\n\n\t    case dist <= 6144:\n\t      r = [24, dist - 4097, 11];\n\t      break;\n\n\t    case dist <= 8192:\n\t      r = [25, dist - 6145, 11];\n\t      break;\n\n\t    case dist <= 12288:\n\t      r = [26, dist - 8193, 12];\n\t      break;\n\n\t    case dist <= 16384:\n\t      r = [27, dist - 12289, 12];\n\t      break;\n\n\t    case dist <= 24576:\n\t      r = [28, dist - 16385, 13];\n\t      break;\n\n\t    case dist <= 32768:\n\t      r = [29, dist - 24577, 13];\n\t      break;\n\n\t    default:\n\t      throw 'invalid distance';\n\t  }\n\n\t  return r;\n\t};\n\t/**\n\t * マッチ情報を LZ77 符号化配列で返す.\n\t * なお、ここでは以下の内部仕様で符号化している\n\t * [ CODE, EXTRA-BIT-LEN, EXTRA, CODE, EXTRA-BIT-LEN, EXTRA ]\n\t * @return {!Array.<number>} LZ77 符号化 byte array.\n\t */\n\n\n\tZlib.RawDeflate.Lz77Match.prototype.toLz77Array = function () {\n\t  /** @type {number} */\n\t  var length = this.length;\n\t  /** @type {number} */\n\n\t  var dist = this.backwardDistance;\n\t  /** @type {Array} */\n\n\t  var codeArray = [];\n\t  /** @type {number} */\n\n\t  var pos = 0;\n\t  /** @type {!Array.<number>} */\n\n\t  var code; // length\n\n\t  code = Zlib.RawDeflate.Lz77Match.LengthCodeTable[length];\n\t  codeArray[pos++] = code & 0xffff;\n\t  codeArray[pos++] = code >> 16 & 0xff;\n\t  codeArray[pos++] = code >> 24; // distance\n\n\t  code = this.getDistanceCode_(dist);\n\t  codeArray[pos++] = code[0];\n\t  codeArray[pos++] = code[1];\n\t  codeArray[pos++] = code[2];\n\t  return codeArray;\n\t};\n\t/**\n\t * LZ77 実装\n\t * @param {!(Array.<number>|Uint8Array)} dataArray LZ77 符号化するバイト配列.\n\t * @return {!(Array.<number>|Uint16Array)} LZ77 符号化した配列.\n\t */\n\n\n\tZlib.RawDeflate.prototype.lz77 = function (dataArray) {\n\t  /** @type {number} input position */\n\t  var position;\n\t  /** @type {number} input length */\n\n\t  var length;\n\t  /** @type {number} loop counter */\n\n\t  var i;\n\t  /** @type {number} loop limiter */\n\n\t  var il;\n\t  /** @type {number} chained-hash-table key */\n\n\t  var matchKey;\n\t  /** @type {Object.<number, Array.<number>>} chained-hash-table */\n\n\t  var table = {};\n\t  /** @const @type {number} */\n\n\t  var windowSize = Zlib.RawDeflate.WindowSize;\n\t  /** @type {Array.<number>} match list */\n\n\t  var matchList;\n\t  /** @type {Zlib.RawDeflate.Lz77Match} longest match */\n\n\t  var longestMatch;\n\t  /** @type {Zlib.RawDeflate.Lz77Match} previous longest match */\n\n\t  var prevMatch;\n\t  /** @type {!(Array.<number>|Uint16Array)} lz77 buffer */\n\n\t  var lz77buf =  new Uint16Array(dataArray.length * 2) ;\n\t  /** @type {number} lz77 output buffer pointer */\n\n\t  var pos = 0;\n\t  /** @type {number} lz77 skip length */\n\n\t  var skipLength = 0;\n\t  /** @type {!(Array.<number>|Uint32Array)} */\n\n\t  var freqsLitLen = new ( Uint32Array )(286);\n\t  /** @type {!(Array.<number>|Uint32Array)} */\n\n\t  var freqsDist = new ( Uint32Array )(30);\n\t  /** @type {number} */\n\n\t  var lazy = this.lazy;\n\t  /** @type {*} temporary variable */\n\n\t  var tmp; // 初期化\n\n\t  freqsLitLen[256] = 1; // EOB の最低出現回数は 1\n\n\t  /**\n\t   * マッチデータの書き込み\n\t   * @param {Zlib.RawDeflate.Lz77Match} match LZ77 Match data.\n\t   * @param {!number} offset スキップ開始位置(相対指定).\n\t   * @private\n\t   */\n\n\t  function writeMatch(match, offset) {\n\t    /** @type {Array.<number>} */\n\t    var lz77Array = match.toLz77Array();\n\t    /** @type {number} */\n\n\t    var i;\n\t    /** @type {number} */\n\n\t    var il;\n\n\t    for (i = 0, il = lz77Array.length; i < il; ++i) {\n\t      lz77buf[pos++] = lz77Array[i];\n\t    }\n\n\t    freqsLitLen[lz77Array[0]]++;\n\t    freqsDist[lz77Array[3]]++;\n\t    skipLength = match.length + offset - 1;\n\t    prevMatch = null;\n\t  } // LZ77 符号化\n\n\n\t  for (position = 0, length = dataArray.length; position < length; ++position) {\n\t    // ハッシュキーの作成\n\t    for (matchKey = 0, i = 0, il = Zlib.RawDeflate.Lz77MinLength; i < il; ++i) {\n\t      if (position + i === length) {\n\t        break;\n\t      }\n\n\t      matchKey = matchKey << 8 | dataArray[position + i];\n\t    } // テーブルが未定義だったら作成する\n\n\n\t    if (table[matchKey] === void 0) {\n\t      table[matchKey] = [];\n\t    }\n\n\t    matchList = table[matchKey]; // skip\n\n\t    if (skipLength-- > 0) {\n\t      matchList.push(position);\n\t      continue;\n\t    } // マッチテーブルの更新 (最大戻り距離を超えているものを削除する)\n\n\n\t    while (matchList.length > 0 && position - matchList[0] > windowSize) {\n\t      matchList.shift();\n\t    } // データ末尾でマッチしようがない場合はそのまま流しこむ\n\n\n\t    if (position + Zlib.RawDeflate.Lz77MinLength >= length) {\n\t      if (prevMatch) {\n\t        writeMatch(prevMatch, -1);\n\t      }\n\n\t      for (i = 0, il = length - position; i < il; ++i) {\n\t        tmp = dataArray[position + i];\n\t        lz77buf[pos++] = tmp;\n\t        ++freqsLitLen[tmp];\n\t      }\n\n\t      break;\n\t    } // マッチ候補から最長のものを探す\n\n\n\t    if (matchList.length > 0) {\n\t      longestMatch = this.searchLongestMatch_(dataArray, position, matchList);\n\n\t      if (prevMatch) {\n\t        // 現在のマッチの方が前回のマッチよりも長い\n\t        if (prevMatch.length < longestMatch.length) {\n\t          // write previous literal\n\t          tmp = dataArray[position - 1];\n\t          lz77buf[pos++] = tmp;\n\t          ++freqsLitLen[tmp]; // write current match\n\n\t          writeMatch(longestMatch, 0);\n\t        } else {\n\t          // write previous match\n\t          writeMatch(prevMatch, -1);\n\t        }\n\t      } else if (longestMatch.length < lazy) {\n\t        prevMatch = longestMatch;\n\t      } else {\n\t        writeMatch(longestMatch, 0);\n\t      } // 前回マッチしていて今回マッチがなかったら前回のを採用\n\n\t    } else if (prevMatch) {\n\t      writeMatch(prevMatch, -1);\n\t    } else {\n\t      tmp = dataArray[position];\n\t      lz77buf[pos++] = tmp;\n\t      ++freqsLitLen[tmp];\n\t    }\n\n\t    matchList.push(position); // マッチテーブルに現在の位置を保存\n\t  } // 終端処理\n\n\n\t  lz77buf[pos++] = 256;\n\t  freqsLitLen[256]++;\n\t  this.freqsLitLen = freqsLitLen;\n\t  this.freqsDist = freqsDist;\n\t  return (\n\t    /** @type {!(Uint16Array|Array.<number>)} */\n\t     lz77buf.subarray(0, pos) \n\t  );\n\t};\n\t/**\n\t * マッチした候補の中から最長一致を探す\n\t * @param {!Object} data plain data byte array.\n\t * @param {!number} position plain data byte array position.\n\t * @param {!Array.<number>} matchList 候補となる位置の配列.\n\t * @return {!Zlib.RawDeflate.Lz77Match} 最長かつ最短距離のマッチオブジェクト.\n\t * @private\n\t */\n\n\n\tZlib.RawDeflate.prototype.searchLongestMatch_ = function (data, position, matchList) {\n\t  var match,\n\t      currentMatch,\n\t      matchMax = 0,\n\t      matchLength,\n\t      i,\n\t      j,\n\t      l,\n\t      dl = data.length; // 候補を後ろから 1 つずつ絞り込んでゆく\n\n\t  permatch: for (i = 0, l = matchList.length; i < l; i++) {\n\t    match = matchList[l - i - 1];\n\t    matchLength = Zlib.RawDeflate.Lz77MinLength; // 前回までの最長一致を末尾から一致検索する\n\n\t    if (matchMax > Zlib.RawDeflate.Lz77MinLength) {\n\t      for (j = matchMax; j > Zlib.RawDeflate.Lz77MinLength; j--) {\n\t        if (data[match + j - 1] !== data[position + j - 1]) {\n\t          continue permatch;\n\t        }\n\t      }\n\n\t      matchLength = matchMax;\n\t    } // 最長一致探索\n\n\n\t    while (matchLength < Zlib.RawDeflate.Lz77MaxLength && position + matchLength < dl && data[match + matchLength] === data[position + matchLength]) {\n\t      ++matchLength;\n\t    } // マッチ長が同じ場合は後方を優先\n\n\n\t    if (matchLength > matchMax) {\n\t      currentMatch = match;\n\t      matchMax = matchLength;\n\t    } // 最長が確定したら後の処理は省略\n\n\n\t    if (matchLength === Zlib.RawDeflate.Lz77MaxLength) {\n\t      break;\n\t    }\n\t  }\n\n\t  return new Zlib.RawDeflate.Lz77Match(matchMax, position - currentMatch);\n\t};\n\t/**\n\t * Tree-Transmit Symbols の算出\n\t * reference: PuTTY Deflate implementation\n\t * @param {number} hlit HLIT.\n\t * @param {!(Array.<number>|Uint8Array)} litlenLengths リテラルと長さ符号の符号長配列.\n\t * @param {number} hdist HDIST.\n\t * @param {!(Array.<number>|Uint8Array)} distLengths 距離符号の符号長配列.\n\t * @return {{\n\t *   codes: !(Array.<number>|Uint32Array),\n\t *   freqs: !(Array.<number>|Uint8Array)\n\t * }} Tree-Transmit Symbols.\n\t */\n\n\n\tZlib.RawDeflate.prototype.getTreeSymbols_ = function (hlit, litlenLengths, hdist, distLengths) {\n\t  var src = new ( Uint32Array )(hlit + hdist),\n\t      i,\n\t      j,\n\t      runLength,\n\t      l,\n\t      result = new ( Uint32Array )(286 + 30),\n\t      nResult,\n\t      rpt,\n\t      freqs = new ( Uint8Array )(19);\n\t  j = 0;\n\n\t  for (i = 0; i < hlit; i++) {\n\t    src[j++] = litlenLengths[i];\n\t  }\n\n\t  for (i = 0; i < hdist; i++) {\n\t    src[j++] = distLengths[i];\n\t  } // 初期化\n\n\n\t  nResult = 0;\n\n\t  for (i = 0, l = src.length; i < l; i += j) {\n\t    // Run Length Encoding\n\t    for (j = 1; i + j < l && src[i + j] === src[i]; ++j) {}\n\n\t    runLength = j;\n\n\t    if (src[i] === 0) {\n\t      // 0 の繰り返しが 3 回未満ならばそのまま\n\t      if (runLength < 3) {\n\t        while (runLength-- > 0) {\n\t          result[nResult++] = 0;\n\t          freqs[0]++;\n\t        }\n\t      } else {\n\t        while (runLength > 0) {\n\t          // 繰り返しは最大 138 までなので切り詰める\n\t          rpt = runLength < 138 ? runLength : 138;\n\n\t          if (rpt > runLength - 3 && rpt < runLength) {\n\t            rpt = runLength - 3;\n\t          } // 3-10 回 -> 17\n\n\n\t          if (rpt <= 10) {\n\t            result[nResult++] = 17;\n\t            result[nResult++] = rpt - 3;\n\t            freqs[17]++; // 11-138 回 -> 18\n\t          } else {\n\t            result[nResult++] = 18;\n\t            result[nResult++] = rpt - 11;\n\t            freqs[18]++;\n\t          }\n\n\t          runLength -= rpt;\n\t        }\n\t      }\n\t    } else {\n\t      result[nResult++] = src[i];\n\t      freqs[src[i]]++;\n\t      runLength--; // 繰り返し回数が3回未満ならばランレングス符号は要らない\n\n\t      if (runLength < 3) {\n\t        while (runLength-- > 0) {\n\t          result[nResult++] = src[i];\n\t          freqs[src[i]]++;\n\t        } // 3 回以上ならばランレングス符号化\n\n\t      } else {\n\t        while (runLength > 0) {\n\t          // runLengthを 3-6 で分割\n\t          rpt = runLength < 6 ? runLength : 6;\n\n\t          if (rpt > runLength - 3 && rpt < runLength) {\n\t            rpt = runLength - 3;\n\t          }\n\n\t          result[nResult++] = 16;\n\t          result[nResult++] = rpt - 3;\n\t          freqs[16]++;\n\t          runLength -= rpt;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  return {\n\t    codes:  result.subarray(0, nResult) ,\n\t    freqs: freqs\n\t  };\n\t};\n\t/**\n\t * ハフマン符号の長さを取得する\n\t * @param {!(Array.<number>|Uint8Array|Uint32Array)} freqs 出現カウント.\n\t * @param {number} limit 符号長の制限.\n\t * @return {!(Array.<number>|Uint8Array)} 符号長配列.\n\t * @private\n\t */\n\n\n\tZlib.RawDeflate.prototype.getLengths_ = function (freqs, limit) {\n\t  /** @type {number} */\n\t  var nSymbols = freqs.length;\n\t  /** @type {Zlib.Heap} */\n\n\t  var heap = new Zlib.Heap(2 * Zlib.RawDeflate.HUFMAX);\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var length = new ( Uint8Array )(nSymbols);\n\t  /** @type {Array} */\n\n\t  var nodes;\n\t  /** @type {!(Array.<number>|Uint32Array)} */\n\n\t  var values;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var codeLength;\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var il; // 配列の初期化\n\n\n\t  for (i = 0; i < nSymbols; ++i) {\n\t    if (freqs[i] > 0) {\n\t      heap.push(i, freqs[i]);\n\t    }\n\t  }\n\n\t  nodes = new Array(heap.length / 2);\n\t  values = new ( Uint32Array )(heap.length / 2); // 非 0 の要素が一つだけだった場合は、そのシンボルに符号長 1 を割り当てて終了\n\n\t  if (nodes.length === 1) {\n\t    length[heap.pop().index] = 1;\n\t    return length;\n\t  } // Reverse Package Merge Algorithm による Canonical Huffman Code の符号長決定\n\n\n\t  for (i = 0, il = heap.length / 2; i < il; ++i) {\n\t    nodes[i] = heap.pop();\n\t    values[i] = nodes[i].value;\n\t  }\n\n\t  codeLength = this.reversePackageMerge_(values, values.length, limit);\n\n\t  for (i = 0, il = nodes.length; i < il; ++i) {\n\t    length[nodes[i].index] = codeLength[i];\n\t  }\n\n\t  return length;\n\t};\n\t/**\n\t * Reverse Package Merge Algorithm.\n\t * @param {!(Array.<number>|Uint32Array)} freqs sorted probability.\n\t * @param {number} symbols number of symbols.\n\t * @param {number} limit code length limit.\n\t * @return {!(Array.<number>|Uint8Array)} code lengths.\n\t */\n\n\n\tZlib.RawDeflate.prototype.reversePackageMerge_ = function (freqs, symbols, limit) {\n\t  /** @type {!(Array.<number>|Uint16Array)} */\n\t  var minimumCost = new ( Uint16Array )(limit);\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var flag = new ( Uint8Array )(limit);\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var codeLength = new ( Uint8Array )(symbols);\n\t  /** @type {Array} */\n\n\t  var value = new Array(limit);\n\t  /** @type {Array} */\n\n\t  var type = new Array(limit);\n\t  /** @type {Array.<number>} */\n\n\t  var currentPosition = new Array(limit);\n\t  /** @type {number} */\n\n\t  var excess = (1 << limit) - symbols;\n\t  /** @type {number} */\n\n\t  var half = 1 << limit - 1;\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var j;\n\t  /** @type {number} */\n\n\t  var t;\n\t  /** @type {number} */\n\n\t  var weight;\n\t  /** @type {number} */\n\n\t  var next;\n\t  /**\n\t   * @param {number} j\n\t   */\n\n\t  function takePackage(j) {\n\t    /** @type {number} */\n\t    var x = type[j][currentPosition[j]];\n\n\t    if (x === symbols) {\n\t      takePackage(j + 1);\n\t      takePackage(j + 1);\n\t    } else {\n\t      --codeLength[x];\n\t    }\n\n\t    ++currentPosition[j];\n\t  }\n\n\t  minimumCost[limit - 1] = symbols;\n\n\t  for (j = 0; j < limit; ++j) {\n\t    if (excess < half) {\n\t      flag[j] = 0;\n\t    } else {\n\t      flag[j] = 1;\n\t      excess -= half;\n\t    }\n\n\t    excess <<= 1;\n\t    minimumCost[limit - 2 - j] = (minimumCost[limit - 1 - j] / 2 | 0) + symbols;\n\t  }\n\n\t  minimumCost[0] = flag[0];\n\t  value[0] = new Array(minimumCost[0]);\n\t  type[0] = new Array(minimumCost[0]);\n\n\t  for (j = 1; j < limit; ++j) {\n\t    if (minimumCost[j] > 2 * minimumCost[j - 1] + flag[j]) {\n\t      minimumCost[j] = 2 * minimumCost[j - 1] + flag[j];\n\t    }\n\n\t    value[j] = new Array(minimumCost[j]);\n\t    type[j] = new Array(minimumCost[j]);\n\t  }\n\n\t  for (i = 0; i < symbols; ++i) {\n\t    codeLength[i] = limit;\n\t  }\n\n\t  for (t = 0; t < minimumCost[limit - 1]; ++t) {\n\t    value[limit - 1][t] = freqs[t];\n\t    type[limit - 1][t] = t;\n\t  }\n\n\t  for (i = 0; i < limit; ++i) {\n\t    currentPosition[i] = 0;\n\t  }\n\n\t  if (flag[limit - 1] === 1) {\n\t    --codeLength[0];\n\t    ++currentPosition[limit - 1];\n\t  }\n\n\t  for (j = limit - 2; j >= 0; --j) {\n\t    i = 0;\n\t    weight = 0;\n\t    next = currentPosition[j + 1];\n\n\t    for (t = 0; t < minimumCost[j]; t++) {\n\t      weight = value[j + 1][next] + value[j + 1][next + 1];\n\n\t      if (weight > freqs[i]) {\n\t        value[j][t] = weight;\n\t        type[j][t] = symbols;\n\t        next += 2;\n\t      } else {\n\t        value[j][t] = freqs[i];\n\t        type[j][t] = i;\n\t        ++i;\n\t      }\n\t    }\n\n\t    currentPosition[j] = 0;\n\n\t    if (flag[j] === 1) {\n\t      takePackage(j);\n\t    }\n\t  }\n\n\t  return codeLength;\n\t};\n\t/**\n\t * 符号長配列からハフマン符号を取得する\n\t * reference: PuTTY Deflate implementation\n\t * @param {!(Array.<number>|Uint8Array)} lengths 符号長配列.\n\t * @return {!(Array.<number>|Uint16Array)} ハフマン符号配列.\n\t * @private\n\t */\n\n\n\tZlib.RawDeflate.prototype.getCodesFromLengths_ = function (lengths) {\n\t  var codes = new ( Uint16Array )(lengths.length),\n\t      count = [],\n\t      startCode = [],\n\t      code = 0,\n\t      i,\n\t      il,\n\t      j,\n\t      m; // Count the codes of each length.\n\n\t  for (i = 0, il = lengths.length; i < il; i++) {\n\t    count[lengths[i]] = (count[lengths[i]] | 0) + 1;\n\t  } // Determine the starting code for each length block.\n\n\n\t  for (i = 1, il = Zlib.RawDeflate.MaxCodeLength; i <= il; i++) {\n\t    startCode[i] = code;\n\t    code += count[i] | 0;\n\t    code <<= 1;\n\t  } // Determine the code for each symbol. Mirrored, of course.\n\n\n\t  for (i = 0, il = lengths.length; i < il; i++) {\n\t    code = startCode[lengths[i]];\n\t    startCode[lengths[i]] += 1;\n\t    codes[i] = 0;\n\n\t    for (j = 0, m = lengths[i]; j < m; j++) {\n\t      codes[i] = codes[i] << 1 | code & 1;\n\t      code >>>= 1;\n\t    }\n\t  }\n\n\t  return codes;\n\t};\n\t/**\n\t * @param {!(Array.<number>|Uint8Array)} input input buffer.\n\t * @param {Object=} opt_params options.\n\t * @constructor\n\t */\n\n\n\tZlib.Unzip = function (input, opt_params) {\n\t  opt_params = opt_params || {};\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  this.input =  input instanceof Array ? new Uint8Array(input) : input;\n\t  /** @type {number} */\n\n\t  this.ip = 0;\n\t  /** @type {number} */\n\n\t  this.eocdrOffset;\n\t  /** @type {number} */\n\n\t  this.numberOfThisDisk;\n\t  /** @type {number} */\n\n\t  this.startDisk;\n\t  /** @type {number} */\n\n\t  this.totalEntriesThisDisk;\n\t  /** @type {number} */\n\n\t  this.totalEntries;\n\t  /** @type {number} */\n\n\t  this.centralDirectorySize;\n\t  /** @type {number} */\n\n\t  this.centralDirectoryOffset;\n\t  /** @type {number} */\n\n\t  this.commentLength;\n\t  /** @type {(Array.<number>|Uint8Array)} */\n\n\t  this.comment;\n\t  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n\n\t  this.fileHeaderList;\n\t  /** @type {Object.<string, number>} */\n\n\t  this.filenameToIndex;\n\t  /** @type {boolean} */\n\n\t  this.verify = opt_params['verify'] || false;\n\t  /** @type {(Array.<number>|Uint8Array)} */\n\n\t  this.password = opt_params['password'];\n\t};\n\n\tZlib.Unzip.CompressionMethod = Zlib.Zip.CompressionMethod;\n\t/**\n\t * @type {Array.<number>}\n\t * @const\n\t */\n\n\tZlib.Unzip.FileHeaderSignature = Zlib.Zip.FileHeaderSignature;\n\t/**\n\t * @type {Array.<number>}\n\t * @const\n\t */\n\n\tZlib.Unzip.LocalFileHeaderSignature = Zlib.Zip.LocalFileHeaderSignature;\n\t/**\n\t * @type {Array.<number>}\n\t * @const\n\t */\n\n\tZlib.Unzip.CentralDirectorySignature = Zlib.Zip.CentralDirectorySignature;\n\t/**\n\t * @param {!(Array.<number>|Uint8Array)} input input buffer.\n\t * @param {number} ip input position.\n\t * @constructor\n\t */\n\n\tZlib.Unzip.FileHeader = function (input, ip) {\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\t  this.input = input;\n\t  /** @type {number} */\n\n\t  this.offset = ip;\n\t  /** @type {number} */\n\n\t  this.length;\n\t  /** @type {number} */\n\n\t  this.version;\n\t  /** @type {number} */\n\n\t  this.os;\n\t  /** @type {number} */\n\n\t  this.needVersion;\n\t  /** @type {number} */\n\n\t  this.flags;\n\t  /** @type {number} */\n\n\t  this.compression;\n\t  /** @type {number} */\n\n\t  this.time;\n\t  /** @type {number} */\n\n\t  this.date;\n\t  /** @type {number} */\n\n\t  this.crc32;\n\t  /** @type {number} */\n\n\t  this.compressedSize;\n\t  /** @type {number} */\n\n\t  this.plainSize;\n\t  /** @type {number} */\n\n\t  this.fileNameLength;\n\t  /** @type {number} */\n\n\t  this.extraFieldLength;\n\t  /** @type {number} */\n\n\t  this.fileCommentLength;\n\t  /** @type {number} */\n\n\t  this.diskNumberStart;\n\t  /** @type {number} */\n\n\t  this.internalFileAttributes;\n\t  /** @type {number} */\n\n\t  this.externalFileAttributes;\n\t  /** @type {number} */\n\n\t  this.relativeOffset;\n\t  /** @type {string} */\n\n\t  this.filename;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  this.extraField;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  this.comment;\n\t};\n\n\tZlib.Unzip.FileHeader.prototype.parse = function () {\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\t  var input = this.input;\n\t  /** @type {number} */\n\n\t  var ip = this.offset; // central file header signature\n\n\t  if (input[ip++] !== Zlib.Unzip.FileHeaderSignature[0] || input[ip++] !== Zlib.Unzip.FileHeaderSignature[1] || input[ip++] !== Zlib.Unzip.FileHeaderSignature[2] || input[ip++] !== Zlib.Unzip.FileHeaderSignature[3]) {\n\t    throw new Error('invalid file header signature');\n\t  } // version made by\n\n\n\t  this.version = input[ip++];\n\t  this.os = input[ip++]; // version needed to extract\n\n\t  this.needVersion = input[ip++] | input[ip++] << 8; // general purpose bit flag\n\n\t  this.flags = input[ip++] | input[ip++] << 8; // compression method\n\n\t  this.compression = input[ip++] | input[ip++] << 8; // last mod file time\n\n\t  this.time = input[ip++] | input[ip++] << 8; //last mod file date\n\n\t  this.date = input[ip++] | input[ip++] << 8; // crc-32\n\n\t  this.crc32 = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // compressed size\n\n\t  this.compressedSize = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // uncompressed size\n\n\t  this.plainSize = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // file name length\n\n\t  this.fileNameLength = input[ip++] | input[ip++] << 8; // extra field length\n\n\t  this.extraFieldLength = input[ip++] | input[ip++] << 8; // file comment length\n\n\t  this.fileCommentLength = input[ip++] | input[ip++] << 8; // disk number start\n\n\t  this.diskNumberStart = input[ip++] | input[ip++] << 8; // internal file attributes\n\n\t  this.internalFileAttributes = input[ip++] | input[ip++] << 8; // external file attributes\n\n\t  this.externalFileAttributes = input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24; // relative offset of local header\n\n\t  this.relativeOffset = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // file name\n\n\t  this.filename = String.fromCharCode.apply(null,  input.subarray(ip, ip += this.fileNameLength) ); // extra field\n\n\t  this.extraField =  input.subarray(ip, ip += this.extraFieldLength) ; // file comment\n\n\t  this.comment =  input.subarray(ip, ip + this.fileCommentLength) ;\n\t  this.length = ip - this.offset;\n\t};\n\t/**\n\t * @param {!(Array.<number>|Uint8Array)} input input buffer.\n\t * @param {number} ip input position.\n\t * @constructor\n\t */\n\n\n\tZlib.Unzip.LocalFileHeader = function (input, ip) {\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\t  this.input = input;\n\t  /** @type {number} */\n\n\t  this.offset = ip;\n\t  /** @type {number} */\n\n\t  this.length;\n\t  /** @type {number} */\n\n\t  this.needVersion;\n\t  /** @type {number} */\n\n\t  this.flags;\n\t  /** @type {number} */\n\n\t  this.compression;\n\t  /** @type {number} */\n\n\t  this.time;\n\t  /** @type {number} */\n\n\t  this.date;\n\t  /** @type {number} */\n\n\t  this.crc32;\n\t  /** @type {number} */\n\n\t  this.compressedSize;\n\t  /** @type {number} */\n\n\t  this.plainSize;\n\t  /** @type {number} */\n\n\t  this.fileNameLength;\n\t  /** @type {number} */\n\n\t  this.extraFieldLength;\n\t  /** @type {string} */\n\n\t  this.filename;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  this.extraField;\n\t};\n\n\tZlib.Unzip.LocalFileHeader.Flags = Zlib.Zip.Flags;\n\n\tZlib.Unzip.LocalFileHeader.prototype.parse = function () {\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\t  var input = this.input;\n\t  /** @type {number} */\n\n\t  var ip = this.offset; // local file header signature\n\n\t  if (input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[0] || input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[1] || input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[2] || input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[3]) {\n\t    throw new Error('invalid local file header signature');\n\t  } // version needed to extract\n\n\n\t  this.needVersion = input[ip++] | input[ip++] << 8; // general purpose bit flag\n\n\t  this.flags = input[ip++] | input[ip++] << 8; // compression method\n\n\t  this.compression = input[ip++] | input[ip++] << 8; // last mod file time\n\n\t  this.time = input[ip++] | input[ip++] << 8; //last mod file date\n\n\t  this.date = input[ip++] | input[ip++] << 8; // crc-32\n\n\t  this.crc32 = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // compressed size\n\n\t  this.compressedSize = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // uncompressed size\n\n\t  this.plainSize = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // file name length\n\n\t  this.fileNameLength = input[ip++] | input[ip++] << 8; // extra field length\n\n\t  this.extraFieldLength = input[ip++] | input[ip++] << 8; // file name\n\n\t  this.filename = String.fromCharCode.apply(null,  input.subarray(ip, ip += this.fileNameLength) ); // extra field\n\n\t  this.extraField =  input.subarray(ip, ip += this.extraFieldLength) ;\n\t  this.length = ip - this.offset;\n\t};\n\n\tZlib.Unzip.prototype.searchEndOfCentralDirectoryRecord = function () {\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\t  var input = this.input;\n\t  /** @type {number} */\n\n\t  var ip;\n\n\t  for (ip = input.length - 12; ip > 0; --ip) {\n\t    if (input[ip] === Zlib.Unzip.CentralDirectorySignature[0] && input[ip + 1] === Zlib.Unzip.CentralDirectorySignature[1] && input[ip + 2] === Zlib.Unzip.CentralDirectorySignature[2] && input[ip + 3] === Zlib.Unzip.CentralDirectorySignature[3]) {\n\t      this.eocdrOffset = ip;\n\t      return;\n\t    }\n\t  }\n\n\t  throw new Error('End of Central Directory Record not found');\n\t};\n\n\tZlib.Unzip.prototype.parseEndOfCentralDirectoryRecord = function () {\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\t  var input = this.input;\n\t  /** @type {number} */\n\n\t  var ip;\n\n\t  if (!this.eocdrOffset) {\n\t    this.searchEndOfCentralDirectoryRecord();\n\t  }\n\n\t  ip = this.eocdrOffset; // signature\n\n\t  if (input[ip++] !== Zlib.Unzip.CentralDirectorySignature[0] || input[ip++] !== Zlib.Unzip.CentralDirectorySignature[1] || input[ip++] !== Zlib.Unzip.CentralDirectorySignature[2] || input[ip++] !== Zlib.Unzip.CentralDirectorySignature[3]) {\n\t    throw new Error('invalid signature');\n\t  } // number of this disk\n\n\n\t  this.numberOfThisDisk = input[ip++] | input[ip++] << 8; // number of the disk with the start of the central directory\n\n\t  this.startDisk = input[ip++] | input[ip++] << 8; // total number of entries in the central directory on this disk\n\n\t  this.totalEntriesThisDisk = input[ip++] | input[ip++] << 8; // total number of entries in the central directory\n\n\t  this.totalEntries = input[ip++] | input[ip++] << 8; // size of the central directory\n\n\t  this.centralDirectorySize = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // offset of start of central directory with respect to the starting disk number\n\n\t  this.centralDirectoryOffset = (input[ip++] | input[ip++] << 8 | input[ip++] << 16 | input[ip++] << 24) >>> 0; // .ZIP file comment length\n\n\t  this.commentLength = input[ip++] | input[ip++] << 8; // .ZIP file comment\n\n\t  this.comment =  input.subarray(ip, ip + this.commentLength) ;\n\t};\n\n\tZlib.Unzip.prototype.parseFileHeader = function () {\n\t  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n\t  var filelist = [];\n\t  /** @type {Object.<string, number>} */\n\n\t  var filetable = {};\n\t  /** @type {number} */\n\n\t  var ip;\n\t  /** @type {Zlib.Unzip.FileHeader} */\n\n\t  var fileHeader;\n\t  /*: @type {number} */\n\n\t  var i;\n\t  /*: @type {number} */\n\n\t  var il;\n\n\t  if (this.fileHeaderList) {\n\t    return;\n\t  }\n\n\t  if (this.centralDirectoryOffset === void 0) {\n\t    this.parseEndOfCentralDirectoryRecord();\n\t  }\n\n\t  ip = this.centralDirectoryOffset;\n\n\t  for (i = 0, il = this.totalEntries; i < il; ++i) {\n\t    fileHeader = new Zlib.Unzip.FileHeader(this.input, ip);\n\t    fileHeader.parse();\n\t    ip += fileHeader.length;\n\t    filelist[i] = fileHeader;\n\t    filetable[fileHeader.filename] = i;\n\t  }\n\n\t  if (this.centralDirectorySize < ip - this.centralDirectoryOffset) {\n\t    throw new Error('invalid file header size');\n\t  }\n\n\t  this.fileHeaderList = filelist;\n\t  this.filenameToIndex = filetable;\n\t};\n\t/**\n\t * @param {number} index file header index.\n\t * @param {Object=} opt_params\n\t * @return {!(Array.<number>|Uint8Array)} file data.\n\t */\n\n\n\tZlib.Unzip.prototype.getFileData = function (index, opt_params) {\n\t  opt_params = opt_params || {};\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var input = this.input;\n\t  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n\n\t  var fileHeaderList = this.fileHeaderList;\n\t  /** @type {Zlib.Unzip.LocalFileHeader} */\n\n\t  var localFileHeader;\n\t  /** @type {number} */\n\n\t  var offset;\n\t  /** @type {number} */\n\n\t  var length;\n\t  /** @type {!(Array.<number>|Uint8Array)} */\n\n\t  var buffer;\n\t  /** @type {number} */\n\n\t  var crc32;\n\t  /** @type {Array.<number>|Uint32Array|Object} */\n\n\t  var key;\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var il;\n\n\t  if (!fileHeaderList) {\n\t    this.parseFileHeader();\n\t  }\n\n\t  if (fileHeaderList[index] === void 0) {\n\t    throw new Error('wrong index');\n\t  }\n\n\t  offset = fileHeaderList[index].relativeOffset;\n\t  localFileHeader = new Zlib.Unzip.LocalFileHeader(this.input, offset);\n\t  localFileHeader.parse();\n\t  offset += localFileHeader.length;\n\t  length = localFileHeader.compressedSize; // decryption\n\n\t  if ((localFileHeader.flags & Zlib.Unzip.LocalFileHeader.Flags.ENCRYPT) !== 0) {\n\t    if (!(opt_params['password'] || this.password)) {\n\t      throw new Error('please set password');\n\t    }\n\n\t    key = this.createDecryptionKey(opt_params['password'] || this.password); // encryption header\n\n\t    for (i = offset, il = offset + 12; i < il; ++i) {\n\t      this.decode(key, input[i]);\n\t    }\n\n\t    offset += 12;\n\t    length -= 12; // decryption\n\n\t    for (i = offset, il = offset + length; i < il; ++i) {\n\t      input[i] = this.decode(key, input[i]);\n\t    }\n\t  }\n\n\t  switch (localFileHeader.compression) {\n\t    case Zlib.Unzip.CompressionMethod.STORE:\n\t      buffer =  this.input.subarray(offset, offset + length) ;\n\t      break;\n\n\t    case Zlib.Unzip.CompressionMethod.DEFLATE:\n\t      buffer = new Zlib.RawInflate(this.input, {\n\t        'index': offset,\n\t        'bufferSize': localFileHeader.plainSize\n\t      }).decompress();\n\t      break;\n\n\t    default:\n\t      throw new Error('unknown compression type');\n\t  }\n\n\t  if (this.verify) {\n\t    crc32 = Zlib.CRC32.calc(buffer);\n\n\t    if (localFileHeader.crc32 !== crc32) {\n\t      throw new Error('wrong crc: file=0x' + localFileHeader.crc32.toString(16) + ', data=0x' + crc32.toString(16));\n\t    }\n\t  }\n\n\t  return buffer;\n\t};\n\t/**\n\t * @return {Array.<string>}\n\t */\n\n\n\tZlib.Unzip.prototype.getFilenames = function () {\n\t  /** @type {Array.<string>} */\n\t  var filenameList = [];\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var il;\n\t  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n\n\t  var fileHeaderList;\n\n\t  if (!this.fileHeaderList) {\n\t    this.parseFileHeader();\n\t  }\n\n\t  fileHeaderList = this.fileHeaderList;\n\n\t  for (i = 0, il = fileHeaderList.length; i < il; ++i) {\n\t    filenameList[i] = fileHeaderList[i].filename;\n\t  }\n\n\t  return filenameList;\n\t};\n\t/**\n\t * @param {string} filename extract filename.\n\t * @param {Object=} opt_params\n\t * @return {!(Array.<number>|Uint8Array)} decompressed data.\n\t */\n\n\n\tZlib.Unzip.prototype.decompress = function (filename, opt_params) {\n\t  /** @type {number} */\n\t  var index;\n\n\t  if (!this.filenameToIndex) {\n\t    this.parseFileHeader();\n\t  }\n\n\t  index = this.filenameToIndex[filename];\n\n\t  if (index === void 0) {\n\t    throw new Error(filename + ' not found');\n\t  }\n\n\t  return this.getFileData(index, opt_params);\n\t};\n\t/**\n\t * @param {(Array.<number>|Uint8Array)} password\n\t */\n\n\n\tZlib.Unzip.prototype.setPassword = function (password) {\n\t  this.password = password;\n\t};\n\t/**\n\t * @param {(Array.<number>|Uint32Array|Object)} key\n\t * @param {number} n\n\t * @return {number}\n\t */\n\n\n\tZlib.Unzip.prototype.decode = function (key, n) {\n\t  n ^= this.getByte(\n\t  /** @type {(Array.<number>|Uint32Array)} */\n\t  key);\n\t  this.updateKeys(\n\t  /** @type {(Array.<number>|Uint32Array)} */\n\t  key, n);\n\t  return n;\n\t}; // common method\n\n\n\tZlib.Unzip.prototype.updateKeys = Zlib.Zip.prototype.updateKeys;\n\tZlib.Unzip.prototype.createDecryptionKey = Zlib.Zip.prototype.createEncryptionKey;\n\tZlib.Unzip.prototype.getByte = Zlib.Zip.prototype.getByte;\n\t/**\n\t * @fileoverview 雑多な関数群をまとめたモジュール実装.\n\t */\n\n\t/**\n\t * Byte String から Byte Array に変換.\n\t * @param {!string} str byte string.\n\t * @return {!Array.<number>} byte array.\n\t */\n\n\tZlib.Util.stringToByteArray = function (str) {\n\t  /** @type {!Array.<(string|number)>} */\n\t  var tmp = str.split('');\n\t  /** @type {number} */\n\n\t  var i;\n\t  /** @type {number} */\n\n\t  var il;\n\n\t  for (i = 0, il = tmp.length; i < il; i++) {\n\t    tmp[i] = (tmp[i].charCodeAt(0) & 0xff) >>> 0;\n\t  }\n\n\t  return tmp;\n\t};\n\t/**\n\t * @fileoverview Adler32 checksum 実装.\n\t */\n\n\t/**\n\t * Adler32 ハッシュ値の作成\n\t * @param {!(Array|Uint8Array|string)} array 算出に使用する byte array.\n\t * @return {number} Adler32 ハッシュ値.\n\t */\n\n\n\tZlib.Adler32 = function (array) {\n\t  if (typeof array === 'string') {\n\t    array = Zlib.Util.stringToByteArray(array);\n\t  }\n\n\t  return Zlib.Adler32.update(1, array);\n\t};\n\t/**\n\t * Adler32 ハッシュ値の更新\n\t * @param {number} adler 現在のハッシュ値.\n\t * @param {!(Array|Uint8Array)} array 更新に使用する byte array.\n\t * @return {number} Adler32 ハッシュ値.\n\t */\n\n\n\tZlib.Adler32.update = function (adler, array) {\n\t  /** @type {number} */\n\t  var s1 = adler & 0xffff;\n\t  /** @type {number} */\n\n\t  var s2 = adler >>> 16 & 0xffff;\n\t  /** @type {number} array length */\n\n\t  var len = array.length;\n\t  /** @type {number} loop length (don't overflow) */\n\n\t  var tlen;\n\t  /** @type {number} array index */\n\n\t  var i = 0;\n\n\t  while (len > 0) {\n\t    tlen = len > Zlib.Adler32.OptimizationParameter ? Zlib.Adler32.OptimizationParameter : len;\n\t    len -= tlen;\n\n\t    do {\n\t      s1 += array[i++];\n\t      s2 += s1;\n\t    } while (--tlen);\n\n\t    s1 %= 65521;\n\t    s2 %= 65521;\n\t  }\n\n\t  return (s2 << 16 | s1) >>> 0;\n\t};\n\t/**\n\t * Adler32 最適化パラメータ\n\t * 現状では 1024 程度が最適.\n\t * @see http://jsperf.com/adler-32-simple-vs-optimized/3\n\t * @define {number}\n\t */\n\n\n\tZlib.Adler32.OptimizationParameter = 1024;\n\t/**\n\t * ビットストリーム\n\t * @constructor\n\t * @param {!(Array|Uint8Array)=} buffer output buffer.\n\t * @param {number=} bufferPosition start buffer pointer.\n\t */\n\n\tZlib.BitStream = function (buffer, bufferPosition) {\n\t  /** @type {number} buffer index. */\n\t  this.index = typeof bufferPosition === 'number' ? bufferPosition : 0;\n\t  /** @type {number} bit index. */\n\n\t  this.bitindex = 0;\n\t  /** @type {!(Array|Uint8Array)} bit-stream output buffer. */\n\n\t  this.buffer = buffer instanceof ( Uint8Array ) ? buffer : new ( Uint8Array )(Zlib.BitStream.DefaultBlockSize); // 入力された index が足りなかったら拡張するが、倍にしてもダメなら不正とする\n\n\t  if (this.buffer.length * 2 <= this.index) {\n\t    throw new Error(\"invalid index\");\n\t  } else if (this.buffer.length <= this.index) {\n\t    this.expandBuffer();\n\t  }\n\t};\n\t/**\n\t * デフォルトブロックサイズ.\n\t * @const\n\t * @type {number}\n\t */\n\n\n\tZlib.BitStream.DefaultBlockSize = 0x8000;\n\t/**\n\t * expand buffer.\n\t * @return {!(Array|Uint8Array)} new buffer.\n\t */\n\n\tZlib.BitStream.prototype.expandBuffer = function () {\n\t  /** @type {!(Array|Uint8Array)} old buffer. */\n\t  var oldbuf = this.buffer;\n\t  /** @type {number} loop limiter. */\n\n\t  var il = oldbuf.length;\n\t  /** @type {!(Array|Uint8Array)} new buffer. */\n\n\t  var buffer = new ( Uint8Array )(il << 1); // copy buffer\n\n\t  {\n\t    buffer.set(oldbuf);\n\t  }\n\n\t  return this.buffer = buffer;\n\t};\n\t/**\n\t * 数値をビットで指定した数だけ書き込む.\n\t * @param {number} number 書き込む数値.\n\t * @param {number} n 書き込むビット数.\n\t * @param {boolean=} reverse 逆順に書き込むならば true.\n\t */\n\n\n\tZlib.BitStream.prototype.writeBits = function (number, n, reverse) {\n\t  var buffer = this.buffer;\n\t  var index = this.index;\n\t  var bitindex = this.bitindex;\n\t  /** @type {number} current octet. */\n\n\t  var current = buffer[index];\n\t  /** @type {number} loop counter. */\n\n\t  var i;\n\t  /**\n\t   * 32-bit 整数のビット順を逆にする\n\t   * @param {number} n 32-bit integer.\n\t   * @return {number} reversed 32-bit integer.\n\t   * @private\n\t   */\n\n\t  function rev32_(n) {\n\t    return Zlib.BitStream.ReverseTable[n & 0xFF] << 24 | Zlib.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16 | Zlib.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8 | Zlib.BitStream.ReverseTable[n >>> 24 & 0xFF];\n\t  }\n\n\t  if (reverse && n > 1) {\n\t    number = n > 8 ? rev32_(number) >> 32 - n : Zlib.BitStream.ReverseTable[number] >> 8 - n;\n\t  } // Byte 境界を超えないとき\n\n\n\t  if (n + bitindex < 8) {\n\t    current = current << n | number;\n\t    bitindex += n; // Byte 境界を超えるとき\n\t  } else {\n\t    for (i = 0; i < n; ++i) {\n\t      current = current << 1 | number >> n - i - 1 & 1; // next byte\n\n\t      if (++bitindex === 8) {\n\t        bitindex = 0;\n\t        buffer[index++] = Zlib.BitStream.ReverseTable[current];\n\t        current = 0; // expand\n\n\t        if (index === buffer.length) {\n\t          buffer = this.expandBuffer();\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  buffer[index] = current;\n\t  this.buffer = buffer;\n\t  this.bitindex = bitindex;\n\t  this.index = index;\n\t};\n\t/**\n\t * ストリームの終端処理を行う\n\t * @return {!(Array|Uint8Array)} 終端処理後のバッファを byte array で返す.\n\t */\n\n\n\tZlib.BitStream.prototype.finish = function () {\n\t  var buffer = this.buffer;\n\t  var index = this.index;\n\t  /** @type {!(Array|Uint8Array)} output buffer. */\n\n\t  var output; // bitindex が 0 の時は余分に index が進んでいる状態\n\n\t  if (this.bitindex > 0) {\n\t    buffer[index] <<= 8 - this.bitindex;\n\t    buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];\n\t    index++;\n\t  } // array truncation\n\n\n\t  {\n\t    output = buffer.subarray(0, index);\n\t  }\n\n\t  return output;\n\t};\n\t/**\n\t * 0-255 のビット順を反転したテーブル\n\t * @const\n\t * @type {!(Uint8Array|Array.<number>)}\n\t */\n\n\n\tZlib.BitStream.ReverseTable = function (table) {\n\t  return table;\n\t}(function () {\n\t  /** @type {!(Array|Uint8Array)} reverse table. */\n\t  var table = new ( Uint8Array )(256);\n\t  /** @type {number} loop counter. */\n\n\t  var i; // generate\n\n\t  for (i = 0; i < 256; ++i) {\n\t    table[i] = function (n) {\n\t      var r = n;\n\t      var s = 7;\n\n\t      for (n >>>= 1; n; n >>>= 1) {\n\t        r <<= 1;\n\t        r |= n & 1;\n\t        --s;\n\t      }\n\n\t      return (r << s & 0xff) >>> 0;\n\t    }(i);\n\t  }\n\n\t  return table;\n\t}());\n\t/**\n\t * CRC32 ハッシュ値を取得\n\t * @param {!(Array.<number>|Uint8Array)} data data byte array.\n\t * @param {number=} pos data position.\n\t * @param {number=} length data length.\n\t * @return {number} CRC32.\n\t */\n\n\tZlib.CRC32.calc = function (data, pos, length) {\n\t  return Zlib.CRC32.update(data, 0, pos, length);\n\t};\n\t/**\n\t * CRC32ハッシュ値を更新\n\t * @param {!(Array.<number>|Uint8Array)} data data byte array.\n\t * @param {number} crc CRC32.\n\t * @param {number=} pos data position.\n\t * @param {number=} length data length.\n\t * @return {number} CRC32.\n\t */\n\n\n\tZlib.CRC32.update = function (data, crc, pos, length) {\n\t  var table = Zlib.CRC32.Table;\n\t  var i = typeof pos === 'number' ? pos : pos = 0;\n\t  var il = typeof length === 'number' ? length : data.length;\n\t  crc ^= 0xffffffff; // loop unrolling for performance\n\n\t  for (i = il & 7; i--; ++pos) {\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos]) & 0xff];\n\t  }\n\n\t  for (i = il >> 3; i--; pos += 8) {\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos]) & 0xff];\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos + 1]) & 0xff];\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos + 2]) & 0xff];\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos + 3]) & 0xff];\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos + 4]) & 0xff];\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos + 5]) & 0xff];\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos + 6]) & 0xff];\n\t    crc = crc >>> 8 ^ table[(crc ^ data[pos + 7]) & 0xff];\n\t  }\n\n\t  return (crc ^ 0xffffffff) >>> 0;\n\t};\n\t/**\n\t * @param {number} num\n\t * @param {number} crc\n\t * @returns {number}\n\t */\n\n\n\tZlib.CRC32.single = function (num, crc) {\n\t  return (Zlib.CRC32.Table[(num ^ crc) & 0xff] ^ num >>> 8) >>> 0;\n\t};\n\t/**\n\t * @type {Array.<number>}\n\t * @const\n\t * @private\n\t */\n\n\n\tZlib.CRC32.Table_ = [0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d];\n\t/**\n\t * @type {!(Array.<number>|Uint32Array)} CRC-32 Table.\n\t * @const\n\t */\n\n\tZlib.CRC32.Table =   new Uint32Array(Zlib.CRC32.Table_) ;\n\t/**\n\t * @fileoverview Deflate (RFC1951) 実装.\n\t * Deflateアルゴリズム本体は Zlib.RawDeflate で実装されている.\n\t */\n\n\t/**\n\t * Zlib Deflate\n\t * @constructor\n\t * @param {!(Array|Uint8Array)} input 符号化する対象の byte array.\n\t * @param {Object=} opt_params option parameters.\n\t */\n\n\tZlib.Deflate = function (input, opt_params) {\n\t  /** @type {!(Array|Uint8Array)} */\n\t  this.input = input;\n\t  /** @type {!(Array|Uint8Array)} */\n\n\t  this.output = new ( Uint8Array )(Zlib.Deflate.DefaultBufferSize);\n\t  /** @type {Zlib.Deflate.CompressionType} */\n\n\t  this.compressionType = Zlib.Deflate.CompressionType.DYNAMIC;\n\t  /** @type {Zlib.RawDeflate} */\n\n\t  this.rawDeflate;\n\t  /** @type {Object} */\n\n\t  var rawDeflateOption = {};\n\t  /** @type {string} */\n\n\t  var prop; // option parameters\n\n\t  if (opt_params || !(opt_params = {})) {\n\t    if (typeof opt_params['compressionType'] === 'number') {\n\t      this.compressionType = opt_params['compressionType'];\n\t    }\n\t  } // copy options\n\n\n\t  for (prop in opt_params) {\n\t    rawDeflateOption[prop] = opt_params[prop];\n\t  } // set raw-deflate output buffer\n\n\n\t  rawDeflateOption['outputBuffer'] = this.output;\n\t  this.rawDeflate = new Zlib.RawDeflate(this.input, rawDeflateOption);\n\t};\n\t/**\n\t * @const\n\t * @type {number} デフォルトバッファサイズ.\n\t */\n\n\n\tZlib.Deflate.DefaultBufferSize = 0x8000;\n\t/**\n\t * @enum {number}\n\t */\n\n\tZlib.Deflate.CompressionType = Zlib.RawDeflate.CompressionType;\n\t/**\n\t * 直接圧縮に掛ける.\n\t * @param {!(Array|Uint8Array)} input target buffer.\n\t * @param {Object=} opt_params option parameters.\n\t * @return {!(Array|Uint8Array)} compressed data byte array.\n\t */\n\n\tZlib.Deflate.compress = function (input, opt_params) {\n\t  return new Zlib.Deflate(input, opt_params).compress();\n\t};\n\t/**\n\t * Deflate Compression.\n\t * @return {!(Array|Uint8Array)} compressed data byte array.\n\t */\n\n\n\tZlib.Deflate.prototype.compress = function () {\n\t  /** @type {Zlib.CompressionMethod} */\n\t  var cm;\n\t  /** @type {number} */\n\n\t  var cinfo;\n\t  /** @type {number} */\n\n\t  var cmf;\n\t  /** @type {number} */\n\n\t  var flg;\n\t  /** @type {number} */\n\n\t  var fcheck;\n\t  /** @type {number} */\n\n\t  var fdict;\n\t  /** @type {number} */\n\n\t  var flevel;\n\t  /** @type {number} */\n\n\t  var adler;\n\t  /** @type {!(Array|Uint8Array)} */\n\n\t  var output;\n\t  /** @type {number} */\n\n\t  var pos = 0;\n\t  output = this.output; // Compression Method and Flags\n\n\t  cm = Zlib.CompressionMethod.DEFLATE;\n\n\t  switch (cm) {\n\t    case Zlib.CompressionMethod.DEFLATE:\n\t      cinfo = Math.LOG2E * Math.log(Zlib.RawDeflate.WindowSize) - 8;\n\t      break;\n\n\t    default:\n\t      throw new Error('invalid compression method');\n\t  }\n\n\t  cmf = cinfo << 4 | cm;\n\t  output[pos++] = cmf; // Flags\n\n\t  fdict = 0;\n\n\t  switch (cm) {\n\t    case Zlib.CompressionMethod.DEFLATE:\n\t      switch (this.compressionType) {\n\t        case Zlib.Deflate.CompressionType.NONE:\n\t          flevel = 0;\n\t          break;\n\n\t        case Zlib.Deflate.CompressionType.FIXED:\n\t          flevel = 1;\n\t          break;\n\n\t        case Zlib.Deflate.CompressionType.DYNAMIC:\n\t          flevel = 2;\n\t          break;\n\n\t        default:\n\t          throw new Error('unsupported compression type');\n\t      }\n\n\t      break;\n\n\t    default:\n\t      throw new Error('invalid compression method');\n\t  }\n\n\t  flg = flevel << 6 | fdict << 5;\n\t  fcheck = 31 - (cmf * 256 + flg) % 31;\n\t  flg |= fcheck;\n\t  output[pos++] = flg; // Adler-32 checksum\n\n\t  adler = Zlib.Adler32(this.input);\n\t  this.rawDeflate.op = pos;\n\t  output = this.rawDeflate.compress();\n\t  pos = output.length;\n\n\t  {\n\t    // subarray 分を元にもどす\n\t    output = new Uint8Array(output.buffer); // expand buffer\n\n\t    if (output.length <= pos + 4) {\n\t      this.output = new Uint8Array(output.length + 4);\n\t      this.output.set(output);\n\t      output = this.output;\n\t    }\n\n\t    output = output.subarray(0, pos + 4);\n\t  } // adler32\n\n\n\t  output[pos++] = adler >> 24 & 0xff;\n\t  output[pos++] = adler >> 16 & 0xff;\n\t  output[pos++] = adler >> 8 & 0xff;\n\t  output[pos++] = adler & 0xff;\n\t  return output;\n\t};\n\n\t/**\n\t * Covers string literals and String objects\n\t * @param x\n\t * @returns {boolean}\n\t */\n\n\tfunction isString(x) {\n\t  return typeof x === \"string\" || x instanceof String;\n\t} // StackOverflow: http://stackoverflow.com/a/10810674/116169\n\n\n\tfunction numberFormatter(rawNumber) {\n\t  var dec = String(rawNumber).split(/[.,]/),\n\t      sep = ',',\n\t      decsep = '.';\n\t  return dec[0].split('').reverse().reduce(function (prev, now, i) {\n\t    return i % 3 === 0 ? prev + sep + now : prev + now;\n\t  }).split('').reverse().join('') + (dec[1] ? decsep + dec[1] : '');\n\t}\n\n\tvar splitLines = function splitLines(string) {\n\t  return string.split(/\\n|\\r\\n|\\r/g);\n\t};\n\n\tfunction splitStringRespectingQuotes(string, delim) {\n\t  var tokens = [],\n\t      len = string.length,\n\t      i,\n\t      n = 0,\n\t      quote = false,\n\t      c;\n\n\t  if (len > 0) {\n\t    tokens[n] = string.charAt(0);\n\n\t    for (i = 1; i < len; i++) {\n\t      c = string.charAt(i);\n\n\t      if (c === '\"') {\n\t        quote = !quote;\n\t      } else if (!quote && c === delim) {\n\t        n++;\n\t        tokens[n] = \"\";\n\t      } else {\n\t        tokens[n] += c;\n\t      }\n\t    }\n\t  }\n\n\t  return tokens;\n\t}\n\n\tfunction stripQuotes(str) {\n\t  if (str.startsWith(\"'\") || str.startsWith('\"')) {\n\t    str = str.substring(1);\n\t  }\n\n\t  if (str.endsWith(\"'\") || str.endsWith('\"')) {\n\t    str = str.substring(0, str.length - 1);\n\t  }\n\n\t  return str;\n\t}\n\n\tfunction hashCode(s) {\n\t  return s.split(\"\").reduce(function (a, b) {\n\t    a = (a << 5) - a + b.charCodeAt(0);\n\t    return a & a;\n\t  }, 0);\n\t}\n\t/**\n\t * Compress string and encode in a url safe form\n\t * @param s\n\t */\n\n\n\tfunction compressString(str) {\n\t  var bytes = [];\n\n\t  for (var i = 0; i < str.length; i++) {\n\t    bytes.push(str.charCodeAt(i));\n\t  }\n\n\t  var compressedBytes = new Zlib.RawDeflate(bytes).compress(); // UInt8Arry\n\n\t  var compressedString = String.fromCharCode.apply(null, compressedBytes); // Convert to string\n\n\t  var enc = btoa(compressedString);\n\t  return enc.replace(/\\+/g, '.').replace(/\\//g, '_').replace(/=/g, '-'); // URL safe\n\t}\n\t/**\n\t * Uncompress the url-safe encoded compressed string, presumably created by compressString above\n\t *\n\t * @param enc\n\t * @returns {string}\n\t */\n\n\n\tfunction uncompressString(enc) {\n\t  enc = enc.replace(/\\./g, '+').replace(/_/g, '/').replace(/-/g, '=');\n\t  var compressedString = atob(enc);\n\t  var compressedBytes = [];\n\n\t  for (var i = 0; i < compressedString.length; i++) {\n\t    compressedBytes.push(compressedString.charCodeAt(i));\n\t  }\n\n\t  var bytes = new Zlib.RawInflate(compressedBytes).decompress();\n\t  var str = '';\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = bytes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var b = _step.value;\n\t      str += String.fromCharCode(b);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return str;\n\t}\n\n\tvar IGVColor = {\n\t  rgbListFromHSV: function rgbListFromHSV() {\n\t    var s = 1;\n\t    var accumulation = [];\n\n\t    for (var v = 1; v >= 0.5; v -= .1) {\n\t      for (var h = 0; h < 1; h += 1 / 28) {\n\t        var r = \"rgb(\" + IGVColor.hsvToRgb(h, s, v).join(\",\") + \")\";\n\t        accumulation.push(r);\n\t      }\n\t    } // add black\n\n\n\t    accumulation.pop();\n\t    accumulation.push(IGVColor.rgbColor(16, 16, 16));\n\t    return accumulation;\n\t  },\n\t  rgbToHex: function rgbToHex(rgb) {\n\t    rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n\t    return rgb && rgb.length === 4 ? \"#\" + (\"0\" + parseInt(rgb[1], 10).toString(16)).slice(-2) + (\"0\" + parseInt(rgb[2], 10).toString(16)).slice(-2) + (\"0\" + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\n\t  },\n\t  hexToRgb: function hexToRgb(hex) {\n\t    var cooked = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n\t    if (null === cooked) {\n\t      return undefined;\n\t    }\n\n\t    return \"rgb(\" + parseInt(cooked[1], 16) + \",\" + parseInt(cooked[2], 16) + \",\" + parseInt(cooked[3], 16) + \")\";\n\t  },\n\n\t  /**\n\t   * Converts an HSV color value to RGB. Conversion formula\n\t   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n\t   * Assumes h, s, and v are contained in the set [0, 1] and\n\t   * returns r, g, and b in the set [0, 255].\n\t   *\n\t   * Credit: https://gist.githubusercontent.com/mjackson/5311256\n\t   *\n\t   * @param   h       The hue\n\t   * @param   s       The saturation\n\t   * @param   v       The value\n\t   * @return  Array   The RGB representation\n\t   */\n\t  hsvToRgb: function hsvToRgb(h, s, v) {\n\t    var r, g, b;\n\t    var i = Math.floor(h * 6);\n\t    var f = h * 6 - i;\n\t    var p = v * (1 - s);\n\t    var q = v * (1 - f * s);\n\t    var t = v * (1 - (1 - f) * s);\n\n\t    switch (i % 6) {\n\t      case 0:\n\t        r = v, g = t, b = p;\n\t        break;\n\n\t      case 1:\n\t        r = q, g = v, b = p;\n\t        break;\n\n\t      case 2:\n\t        r = p, g = v, b = t;\n\t        break;\n\n\t      case 3:\n\t        r = p, g = q, b = v;\n\t        break;\n\n\t      case 4:\n\t        r = t, g = p, b = v;\n\t        break;\n\n\t      case 5:\n\t        r = v, g = p, b = q;\n\t        break;\n\t    }\n\n\t    return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n\t  },\n\n\t  /**\n\t   * Converts an HSL color value to RGB. Conversion formula\n\t   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n\t   * Assumes h, s, and l are contained in the set [0, 1] and\n\t   * returns r, g, and b in the set [0, 255].\n\t   *\n\t   * Credit: https://gist.githubusercontent.com/mjackson/5311256\n\t   *\n\t   * @param   h       The hue\n\t   * @param   s       The saturation\n\t   * @param   l       The lightness\n\t   * @return  Array   The RGB representation\n\t   */\n\t  hslToRgb: function hslToRgb(h, s, l) {\n\t    var r, g, b;\n\n\t    if (s === 0) {\n\t      r = g = b = l; // achromatic\n\t    } else {\n\t      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t      var p = 2 * l - q;\n\t      r = IGVColor.hue2rgb(p, q, h + 1 / 3);\n\t      g = IGVColor.hue2rgb(p, q, h);\n\t      b = IGVColor.hue2rgb(p, q, h - 1 / 3);\n\t    }\n\n\t    return [r * 255, g * 255, b * 255];\n\t  },\n\t  hue2rgb: function hue2rgb(p, q, t) {\n\t    if (t < 0) t += 1;\n\t    if (t > 1) t -= 1;\n\t    if (t < 1 / 6) return p + (q - p) * 6 * t;\n\t    if (t < 1 / 2) return q;\n\t    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n\t    return p;\n\t  },\n\t  rgbaColor: function rgbaColor(r, g, b, a) {\n\t    r = IGVMath.clamp(r, 0, 255);\n\t    g = IGVMath.clamp(g, 0, 255);\n\t    b = IGVMath.clamp(b, 0, 255);\n\t    a = IGVMath.clamp(a, 0.0, 1.0);\n\t    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n\t  },\n\t  rgbColor: function rgbColor(r, g, b) {\n\t    r = IGVMath.clamp(r, 0, 255);\n\t    g = IGVMath.clamp(g, 0, 255);\n\t    b = IGVMath.clamp(b, 0, 255);\n\t    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\t  },\n\t  greyScale: function greyScale(value) {\n\t    var grey = IGVMath.clamp(value, 0, 255);\n\t    return \"rgb(\" + grey + \",\" + grey + \",\" + grey + \")\";\n\t  },\n\t  randomGrey: function randomGrey(min, max) {\n\t    min = IGVMath.clamp(min, 0, 255);\n\t    max = IGVMath.clamp(max, 0, 255);\n\t    var g = Math.round(Math.random(min, max)).toString(10);\n\t    return \"rgb(\" + g + \",\" + g + \",\" + g + \")\";\n\t  },\n\t  randomRGB: function randomRGB(min, max) {\n\t    min = IGVMath.clamp(min, 0, 255);\n\t    max = IGVMath.clamp(max, 0, 255);\n\t    var r = Math.round(Math.random(min, max)).toString(10);\n\t    var g = Math.round(Math.random(min, max)).toString(10);\n\t    var b = Math.round(Math.random(min, max)).toString(10);\n\t    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\t  },\n\t  randomRGBConstantAlpha: function randomRGBConstantAlpha(min, max, alpha) {\n\t    min = IGVMath.clamp(min, 0, 255);\n\t    max = IGVMath.clamp(max, 0, 255);\n\t    var r = Math.round(Math.random(min, max)).toString(10);\n\t    var g = Math.round(Math.random(min, max)).toString(10);\n\t    var b = Math.round(Math.random(min, max)).toString(10);\n\t    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n\t  },\n\t  addAlpha: function addAlpha(color, alpha) {\n\t    var c = this.colorNameToHex(color);\n\n\t    if (c) {\n\t      color = c;\n\t    }\n\n\t    var isHex = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(color);\n\n\t    if (color.startsWith(\"rgba\")) {\n\t      return color; // TODO -- should replace current alpha with new one\n\t    }\n\n\t    if (isHex) {\n\t      color = IGVColor.hexToRgb(color);\n\t    }\n\n\t    if (color.startsWith(\"rgb\")) {\n\t      return color.replace(\"rgb\", \"rgba\").replace(\")\", \", \" + alpha + \")\");\n\t    } else {\n\t      return color;\n\t    }\n\t  },\n\n\t  /**\n\t   *\n\t   * @param dest  RGB components as an array\n\t   * @param src  RGB components as an array\n\t   * @param alpha   alpha transparancy in the range 0-1\n\t   * @returns {}\n\t   */\n\t  getCompositeColor: function getCompositeColor(dest, src, alpha) {\n\t    var r = Math.floor(alpha * src[0] + (1 - alpha) * dest[0]),\n\t        g = Math.floor(alpha * src[1] + (1 - alpha) * dest[1]),\n\t        b = Math.floor(alpha * src[2] + (1 - alpha) * dest[2]);\n\t    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\t  },\n\t  createColorString: function createColorString(str) {\n\t    // Excel will quote color strings, strip all quotes\n\t    str = stripQuotes(str);\n\n\t    if (str.includes(\",\")) {\n\t      return str.startsWith(\"rgb\") ? str : \"rgb(\" + str + \")\";\n\t    } else {\n\t      return str;\n\t    }\n\t  },\n\t  darkenLighten: function darkenLighten(color, amt) {\n\t    var src;\n\t    var hexColor = this.colorNameToHex(color);\n\n\t    if (hexColor) {\n\t      src = IGVColor.hexToRgb(hexColor);\n\t    } else {\n\t      src = color.startsWith('rgb(') ? color : IGVColor.hexToRgb(color);\n\t    }\n\n\t    var components = src.replace(\")\", \"\").substring(4).split(\",\");\n\t    var r = Math.max(0, Math.min(255, Number.parseInt(components[0].trim()) + amt));\n\t    var g = Math.max(0, Math.min(255, Number.parseInt(components[1].trim()) + amt));\n\t    var b = Math.max(0, Math.min(255, Number.parseInt(components[2].trim()) + amt));\n\t    return 'rgb(' + r.toString() + ',' + g.toString() + ',' + b.toString() + ')';\n\t  },\n\n\t  /**\n\t   * Convert html/css color name to hex value.  Adapted from https://gist.github.com/mxfh/4719348\n\t   * @param colorName\n\t   * @returns {*}\n\t   */\n\t  colorNameToHex: function colorNameToHex(colorName) {\n\t    // color list from http://stackoverflow.com/q/1573053/731179  with added gray/gray\n\t    var definedColorNames = {\n\t      \"aliceblue\": \"#f0f8ff\",\n\t      \"antiquewhite\": \"#faebd7\",\n\t      \"aqua\": \"#00ffff\",\n\t      \"aquamarine\": \"#7fffd4\",\n\t      \"azure\": \"#f0ffff\",\n\t      \"beige\": \"#f5f5dc\",\n\t      \"bisque\": \"#ffe4c4\",\n\t      \"black\": \"#000000\",\n\t      \"blanchedalmond\": \"#ffebcd\",\n\t      \"blue\": \"#0000ff\",\n\t      \"blueviolet\": \"#8a2be2\",\n\t      \"brown\": \"#a52a2a\",\n\t      \"burlywood\": \"#deb887\",\n\t      \"cadetblue\": \"#5f9ea0\",\n\t      \"chartreuse\": \"#7fff00\",\n\t      \"chocolate\": \"#d2691e\",\n\t      \"coral\": \"#ff7f50\",\n\t      \"cornflowerblue\": \"#6495ed\",\n\t      \"cornsilk\": \"#fff8dc\",\n\t      \"crimson\": \"#dc143c\",\n\t      \"cyan\": \"#00ffff\",\n\t      \"darkblue\": \"#00008b\",\n\t      \"darkcyan\": \"#008b8b\",\n\t      \"darkgoldenrod\": \"#b8860b\",\n\t      \"darkgray\": \"#a9a9a9\",\n\t      \"darkgreen\": \"#006400\",\n\t      \"darkkhaki\": \"#bdb76b\",\n\t      \"darkmagenta\": \"#8b008b\",\n\t      \"darkolivegreen\": \"#556b2f\",\n\t      \"darkorange\": \"#ff8c00\",\n\t      \"darkorchid\": \"#9932cc\",\n\t      \"darkred\": \"#8b0000\",\n\t      \"darksalmon\": \"#e9967a\",\n\t      \"darkseagreen\": \"#8fbc8f\",\n\t      \"darkslateblue\": \"#483d8b\",\n\t      \"darkslategray\": \"#2f4f4f\",\n\t      \"darkturquoise\": \"#00ced1\",\n\t      \"darkviolet\": \"#9400d3\",\n\t      \"deeppink\": \"#ff1493\",\n\t      \"deepskyblue\": \"#00bfff\",\n\t      \"dimgray\": \"#696969\",\n\t      \"dodgerblue\": \"#1e90ff\",\n\t      \"firebrick\": \"#b22222\",\n\t      \"floralwhite\": \"#fffaf0\",\n\t      \"forestgreen\": \"#228b22\",\n\t      \"fuchsia\": \"#ff00ff\",\n\t      \"gainsboro\": \"#dcdcdc\",\n\t      \"ghostwhite\": \"#f8f8ff\",\n\t      \"gold\": \"#ffd700\",\n\t      \"goldenrod\": \"#daa520\",\n\t      \"gray\": \"#808080\",\n\t      \"green\": \"#008000\",\n\t      \"greenyellow\": \"#adff2f\",\n\t      \"honeydew\": \"#f0fff0\",\n\t      \"hotpink\": \"#ff69b4\",\n\t      \"indianred \": \"#cd5c5c\",\n\t      \"indigo \": \"#4b0082\",\n\t      \"ivory\": \"#fffff0\",\n\t      \"khaki\": \"#f0e68c\",\n\t      \"lavender\": \"#e6e6fa\",\n\t      \"lavenderblush\": \"#fff0f5\",\n\t      \"lawngreen\": \"#7cfc00\",\n\t      \"lemonchiffon\": \"#fffacd\",\n\t      \"lightblue\": \"#add8e6\",\n\t      \"lightcoral\": \"#f08080\",\n\t      \"lightcyan\": \"#e0ffff\",\n\t      \"lightgoldenrodyellow\": \"#fafad2\",\n\t      \"lightgrey\": \"#d3d3d3\",\n\t      \"lightgreen\": \"#90ee90\",\n\t      \"lightpink\": \"#ffb6c1\",\n\t      \"lightsalmon\": \"#ffa07a\",\n\t      \"lightseagreen\": \"#20b2aa\",\n\t      \"lightskyblue\": \"#87cefa\",\n\t      \"lightslategray\": \"#778899\",\n\t      \"lightsteelblue\": \"#b0c4de\",\n\t      \"lightyellow\": \"#ffffe0\",\n\t      \"lime\": \"#00ff00\",\n\t      \"limegreen\": \"#32cd32\",\n\t      \"linen\": \"#faf0e6\",\n\t      \"magenta\": \"#ff00ff\",\n\t      \"maroon\": \"#800000\",\n\t      \"mediumaquamarine\": \"#66cdaa\",\n\t      \"mediumblue\": \"#0000cd\",\n\t      \"mediumorchid\": \"#ba55d3\",\n\t      \"mediumpurple\": \"#9370d8\",\n\t      \"mediumseagreen\": \"#3cb371\",\n\t      \"mediumslateblue\": \"#7b68ee\",\n\t      \"mediumspringgreen\": \"#00fa9a\",\n\t      \"mediumturquoise\": \"#48d1cc\",\n\t      \"mediumvioletred\": \"#c71585\",\n\t      \"midnightblue\": \"#191970\",\n\t      \"mintcream\": \"#f5fffa\",\n\t      \"mistyrose\": \"#ffe4e1\",\n\t      \"moccasin\": \"#ffe4b5\",\n\t      \"navajowhite\": \"#ffdead\",\n\t      \"navy\": \"#000080\",\n\t      \"oldlace\": \"#fdf5e6\",\n\t      \"olive\": \"#808000\",\n\t      \"olivedrab\": \"#6b8e23\",\n\t      \"orange\": \"#ffa500\",\n\t      \"orangered\": \"#ff4500\",\n\t      \"orchid\": \"#da70d6\",\n\t      \"palegoldenrod\": \"#eee8aa\",\n\t      \"palegreen\": \"#98fb98\",\n\t      \"paleturquoise\": \"#afeeee\",\n\t      \"palevioletred\": \"#d87093\",\n\t      \"papayawhip\": \"#ffefd5\",\n\t      \"peachpuff\": \"#ffdab9\",\n\t      \"peru\": \"#cd853f\",\n\t      \"pink\": \"#ffc0cb\",\n\t      \"plum\": \"#dda0dd\",\n\t      \"powderblue\": \"#b0e0e6\",\n\t      \"purple\": \"#800080\",\n\t      \"red\": \"#ff0000\",\n\t      \"rosybrown\": \"#bc8f8f\",\n\t      \"royalblue\": \"#4169e1\",\n\t      \"saddlebrown\": \"#8b4513\",\n\t      \"salmon\": \"#fa8072\",\n\t      \"sandybrown\": \"#f4a460\",\n\t      \"seagreen\": \"#2e8b57\",\n\t      \"seashell\": \"#fff5ee\",\n\t      \"sienna\": \"#a0522d\",\n\t      \"silver\": \"#c0c0c0\",\n\t      \"skyblue\": \"#87ceeb\",\n\t      \"slateblue\": \"#6a5acd\",\n\t      \"slategray\": \"#708090\",\n\t      \"snow\": \"#fffafa\",\n\t      \"springgreen\": \"#00ff7f\",\n\t      \"steelblue\": \"#4682b4\",\n\t      \"tan\": \"#d2b48c\",\n\t      \"teal\": \"#008080\",\n\t      \"thistle\": \"#d8bfd8\",\n\t      \"tomato\": \"#ff6347\",\n\t      \"turquoise\": \"#40e0d0\",\n\t      \"violet\": \"#ee82ee\",\n\t      \"wheat\": \"#f5deb3\",\n\t      \"white\": \"#ffffff\",\n\t      \"whitesmoke\": \"#f5f5f5\",\n\t      \"yellow\": \"#ffff00\",\n\t      \"yellowgreen\": \"#9acd32\",\n\t      \"darkgrey\": \"#a9a9a9\",\n\t      \"darkslategrey\": \"#2f4f4f\",\n\t      \"dimgrey\": \"#696969\",\n\t      \"grey\": \"#808080\",\n\t      \"lightgray\": \"#d3d3d3\",\n\t      \"lightslategrey\": \"#778899\",\n\t      \"slategrey\": \"#708090\"\n\t    };\n\t    return definedColorNames[colorName];\n\t  }\n\t};\n\n\tfunction attachDialogCloseHandlerWithParent($parent, closeHandler) {\n\t  var $container = $('<div>');\n\t  $parent.append($container);\n\t  $container.append(createIcon(\"times\"));\n\t  $container.on('click', function (e) {\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t    closeHandler();\n\t  });\n\t}\n\n\tfunction createColorSwatchSelector($genericContainer, colorHandler, defaultColor) {\n\t  var appleColors = Object.values(appleCrayonPalette);\n\n\t  if (defaultColor && !(typeof defaultColor === 'function')) {\n\t    // Remove 'snow' color.\n\t    appleColors.splice(11, 1); // Add default color.\n\n\t    appleColors.unshift(IGVColor.rgbToHex(defaultColor));\n\t  }\n\n\t  var _loop = function _loop() {\n\t    var color = _appleColors[_i];\n\t    var $swatch = $('<div>', {\n\t      class: 'igv-color-swatch'\n\t    });\n\t    $genericContainer.append($swatch);\n\t    $swatch.css('background-color', color);\n\n\t    if ('white' === color) ; else {\n\t      $swatch.hover(function () {\n\t        $swatch.get(0).style.borderColor = color;\n\t      }, function () {\n\t        $swatch.get(0).style.borderColor = 'white';\n\t      });\n\t      $swatch.on('click.trackview', function (event) {\n\t        event.stopPropagation();\n\t        colorHandler(color);\n\t      });\n\t      $swatch.on('touchend.trackview', function (event) {\n\t        event.stopPropagation();\n\t        colorHandler(color);\n\t      });\n\t    }\n\t  };\n\n\t  for (var _i = 0, _appleColors = appleColors; _i < _appleColors.length; _i++) {\n\t    _loop();\n\t  }\n\t}\n\n\tvar relativeDOMBBox = function relativeDOMBBox(parentElement, childElement) {\n\t  var _parentElement$getBou = parentElement.getBoundingClientRect(),\n\t      x_p = _parentElement$getBou.x,\n\t      y_p = _parentElement$getBou.y,\n\t      width_p = _parentElement$getBou.width,\n\t      height_p = _parentElement$getBou.height;\n\n\t  var _childElement$getBoun = childElement.getBoundingClientRect(),\n\t      x_c = _childElement$getBoun.x,\n\t      y_c = _childElement$getBoun.y,\n\t      width_c = _childElement$getBoun.width,\n\t      height_c = _childElement$getBoun.height;\n\n\t  return {\n\t    x: x_c - x_p,\n\t    y: y_c - y_p,\n\t    width: width_c,\n\t    height: height_c\n\t  };\n\t};\n\n\tfunction pageCoordinates(e) {\n\t  if (e.type.startsWith(\"touch\")) {\n\t    var touch = e.touches[0];\n\t    return {\n\t      x: touch.pageX,\n\t      y: touch.pageY\n\t    };\n\t  } else {\n\t    return {\n\t      x: e.pageX,\n\t      y: e.pageY\n\t    };\n\t  }\n\t}\n\t/**\n\t * Translate the mouse coordinates for the event to the coordinates for the given target element\n\t * @param e\n\t * @param target\n\t * @returns {{x: number, y: number}}\n\t */\n\n\n\tfunction translateMouseCoordinates(e, target) {\n\t  var $target = $(target),\n\t      posx,\n\t      posy;\n\n\t  if (undefined === $target.offset()) ;\n\n\t  var coords = pageCoordinates(e);\n\t  posx = coords.x - $target.offset().left;\n\t  posy = coords.y - $target.offset().top;\n\t  return {\n\t    x: posx,\n\t    y: posy\n\t  };\n\t}\n\n\tfunction guid() {\n\t  return (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n\t}\n\n\tvar trackMenuItemListHelper = MenuUtils.trackMenuItemListHelper;\n\n\tvar Popover = function Popover($parent, browser) {\n\t  this.browser = browser;\n\t  this.$parent = initializationHelper.call(this, $parent);\n\t};\n\n\tfunction initializationHelper($parent) {\n\t  var self = this,\n\t      $popoverHeader; // popover container\n\n\t  this.$popover = $('<div class=\"igv-popover\">');\n\t  $parent.append(this.$popover); // popover header\n\n\t  $popoverHeader = $('<div class=\"igv-popover-header\">');\n\t  this.$popover.append($popoverHeader);\n\t  attachDialogCloseHandlerWithParent($popoverHeader, function () {\n\t    self.hide();\n\t  }); // popover content\n\n\t  this.$popoverContent = $('<div>');\n\t  this.$popover.append(this.$popoverContent); // this.$popover.draggable({handle: $popoverHeader.get(0)});\n\n\t  makeDraggable(this.$popover.get(0), $popoverHeader.get(0));\n\t  return $parent;\n\t}\n\n\tPopover.prototype.hide = function () {\n\t  this.$popover.hide();\n\t};\n\n\tPopover.prototype.presentTrackContextMenu = function (e, menuItems) {\n\t  var $popover = this.$popover; // Only 1 popover open at a time\n\n\t  $('.igv-popover').hide();\n\n\t  if (menuItems.length > 0) {\n\t    menuItems = trackMenuItemListHelper(menuItems, $popover);\n\t    this.$popoverContent.empty();\n\t    this.$popoverContent.removeClass();\n\t    this.$popoverContent.addClass(\"igv-popover-track-popup-content\");\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = menuItems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var item = _step.value;\n\t        this.$popoverContent.append(item.object);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\n\t    var page = pageCoordinates(e);\n\t    $popover.css(clampPopoverLocation(page.x, page.y, this));\n\t    $popover.show();\n\t  }\n\t};\n\n\tPopover.prototype.presentTrackContent = function (pageX, pageY, content) {\n\t  // Only 1 popover open at a time\n\t  $('.igv-popover').hide();\n\n\t  if (undefined === content) {\n\t    return;\n\t  }\n\n\t  this.$popoverContent.empty();\n\t  this.$popoverContent.removeClass();\n\t  this.$popoverContent.addClass(\"igv-popover-track-popup-content\");\n\t  this.$popoverContent.html(content);\n\t  this.$popover.css(clampPopoverLocation(pageX, pageY, this));\n\t  this.$popover.show();\n\t};\n\n\tPopover.prototype.dispose = function () {\n\t  this.$popover.empty();\n\t  this.$popoverContent.empty();\n\t  Object.keys(this).forEach(function (key) {\n\t    this[key] = undefined;\n\t  });\n\t};\n\n\tfunction clampPopoverLocation(pageX, pageY, popover) {\n\t  var left,\n\t      containerCoordinates = {\n\t    x: pageX,\n\t    y: pageY\n\t  },\n\t      containerRect = {\n\t    x: 0,\n\t    y: 0,\n\t    width: $(window).width(),\n\t    height: $(window).height()\n\t  },\n\t      popupRect,\n\t      popupX = pageX,\n\t      popupY = pageY;\n\t  popupX -= popover.$parent.offset().left;\n\t  popupY -= popover.$parent.offset().top;\n\t  popupRect = {\n\t    x: popupX,\n\t    y: popupY,\n\t    width: popover.$popover.outerWidth(),\n\t    height: popover.$popover.outerHeight()\n\t  };\n\t  left = popupX;\n\n\t  if (containerCoordinates.x + popupRect.width > containerRect.width) {\n\t    left = popupX - popupRect.width;\n\t  }\n\n\t  return {\n\t    \"left\": left + \"px\",\n\t    \"top\": popupY + \"px\"\n\t  };\n\t}\n\n\t// https://tc39.github.io/ecma262/#sec-number.isnan\n\n\t_export({\n\t  target: 'Number',\n\t  stat: true\n\t}, {\n\t  isNaN: function isNaN(number) {\n\t    // eslint-disable-next-line no-self-compare\n\t    return number != number;\n\t  }\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-thisnumbervalue\n\n\tvar thisNumberValue = function (value) {\n\t  if (typeof value != 'number' && classofRaw(value) != 'Number') {\n\t    throw TypeError('Incorrect invocation');\n\t  }\n\n\t  return +value;\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\n\n\n\tvar stringRepeat = ''.repeat || function repeat(count) {\n\t  var str = String(requireObjectCoercible(this));\n\t  var result = '';\n\t  var n = toInteger(count);\n\t  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n\n\t  for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n\n\t  return result;\n\t};\n\n\tvar nativeToFixed = 1.0.toFixed;\n\tvar floor$6 = Math.floor;\n\n\tvar pow$2 = function (x, n, acc) {\n\t  return n === 0 ? acc : n % 2 === 1 ? pow$2(x, n - 1, acc * x) : pow$2(x * x, n / 2, acc);\n\t};\n\n\tvar log$1 = function (x) {\n\t  var n = 0;\n\t  var x2 = x;\n\n\t  while (x2 >= 4096) {\n\t    n += 12;\n\t    x2 /= 4096;\n\t  }\n\n\t  while (x2 >= 2) {\n\t    n += 1;\n\t    x2 /= 2;\n\t  }\n\n\t  return n;\n\t};\n\n\tvar FORCED$8 = nativeToFixed && (0.00008.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || 1000000000000000128.0.toFixed(0) !== '1000000000000000128') || !fails(function () {\n\t  // V8 ~ Android 4.3-\n\t  nativeToFixed.call({});\n\t}); // `Number.prototype.toFixed` method\n\t// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n\n\t_export({\n\t  target: 'Number',\n\t  proto: true,\n\t  forced: FORCED$8\n\t}, {\n\t  // eslint-disable-next-line max-statements\n\t  toFixed: function toFixed(fractionDigits) {\n\t    var number = thisNumberValue(this);\n\t    var fractDigits = toInteger(fractionDigits);\n\t    var data = [0, 0, 0, 0, 0, 0];\n\t    var sign = '';\n\t    var result = '0';\n\t    var e, z, j, k;\n\n\t    var multiply = function (n, c) {\n\t      var index = -1;\n\t      var c2 = c;\n\n\t      while (++index < 6) {\n\t        c2 += n * data[index];\n\t        data[index] = c2 % 1e7;\n\t        c2 = floor$6(c2 / 1e7);\n\t      }\n\t    };\n\n\t    var divide = function (n) {\n\t      var index = 6;\n\t      var c = 0;\n\n\t      while (--index >= 0) {\n\t        c += data[index];\n\t        data[index] = floor$6(c / n);\n\t        c = c % n * 1e7;\n\t      }\n\t    };\n\n\t    var dataToString = function () {\n\t      var index = 6;\n\t      var s = '';\n\n\t      while (--index >= 0) {\n\t        if (s !== '' || index === 0 || data[index] !== 0) {\n\t          var t = String(data[index]);\n\t          s = s === '' ? t : s + stringRepeat.call('0', 7 - t.length) + t;\n\t        }\n\t      }\n\n\t      return s;\n\t    };\n\n\t    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits'); // eslint-disable-next-line no-self-compare\n\n\t    if (number != number) return 'NaN';\n\t    if (number <= -1e21 || number >= 1e21) return String(number);\n\n\t    if (number < 0) {\n\t      sign = '-';\n\t      number = -number;\n\t    }\n\n\t    if (number > 1e-21) {\n\t      e = log$1(number * pow$2(2, 69, 1)) - 69;\n\t      z = e < 0 ? number * pow$2(2, -e, 1) : number / pow$2(2, e, 1);\n\t      z *= 0x10000000000000;\n\t      e = 52 - e;\n\n\t      if (e > 0) {\n\t        multiply(0, z);\n\t        j = fractDigits;\n\n\t        while (j >= 7) {\n\t          multiply(1e7, 0);\n\t          j -= 7;\n\t        }\n\n\t        multiply(pow$2(10, j, 1), 0);\n\t        j = e - 1;\n\n\t        while (j >= 23) {\n\t          divide(1 << 23);\n\t          j -= 23;\n\t        }\n\n\t        divide(1 << j);\n\t        multiply(1, 1);\n\t        divide(2);\n\t        result = dataToString();\n\t      } else {\n\t        multiply(0, z);\n\t        multiply(1 << -e, 0);\n\t        result = dataToString() + stringRepeat.call('0', fractDigits);\n\t      }\n\t    }\n\n\t    if (fractDigits > 0) {\n\t      k = result.length;\n\t      result = sign + (k <= fractDigits ? '0.' + stringRepeat.call('0', fractDigits - k) + result : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n\t    } else {\n\t      result = sign + result;\n\t    }\n\n\t    return result;\n\t  }\n\t});\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2014 Broad Institute\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tvar extend = function extend(parent, child) {\n\t  child.prototype = Object.create(parent.prototype);\n\t  child.prototype.constructor = child;\n\t  child.prototype._super = Object.getPrototypeOf(child.prototype);\n\t  return child;\n\t};\n\t/**\n\t * Test if the given value is a string or number.  Not using typeof as it fails on boxed primitives.\n\t *\n\t * @param value\n\t * @returns boolean\n\t */\n\n\n\tfunction isSimpleType(value) {\n\t  var simpleTypes = new Set([\"boolean\", \"number\", \"string\", \"symbol\"]);\n\n\t  var valueType = _typeof(value);\n\n\t  return value !== undefined && (simpleTypes.has(valueType) || value.substring || value.toFixed);\n\t}\n\n\tfunction buildOptions(config, options) {\n\t  var defaultOptions = {\n\t    oauthToken: config.oauthToken,\n\t    headers: config.headers,\n\t    withCredentials: config.withCredentials,\n\t    filename: config.filename\n\t  };\n\t  return Object.assign(defaultOptions, options);\n\t}\n\n\tfunction download(filename, data) {\n\t  var element = document.createElement('a');\n\t  element.setAttribute('href', data);\n\t  element.setAttribute('download', filename);\n\t  element.style.display = 'none';\n\t  document.body.appendChild(element);\n\t  element.click();\n\t  document.body.removeChild(element);\n\t}\n\t/**\n\t * isMobile test from http://detectmobilebrowsers.com\n\t * TODO -- improve UI design so this isn't neccessary\n\t * @returns {boolean}\n\t */\n\t// igv.isMobile = function () {\n\t//\n\t//     const a = (navigator.userAgent || navigator.vendor || window.opera);\n\t//     return (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n\t//         /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)))\n\t//\n\t// }\n\n\n\tvar doAutoscale = function doAutoscale(features) {\n\t  var min, max;\n\n\t  if (features.length > 0) {\n\t    min = Number.MAX_VALUE;\n\t    max = -Number.MAX_VALUE;\n\t    features.forEach(function (f) {\n\t      if (!Number.isNaN(f.value)) {\n\t        min = Math.min(min, f.value);\n\t        max = Math.max(max, f.value);\n\t      }\n\t    }); // Insure we have a zero baseline\n\n\t    if (max > 0) min = Math.min(0, min);\n\t    if (max < 0) max = 0;\n\t  } else {\n\t    // No features -- default\n\t    min = 0;\n\t    max = 100;\n\t  }\n\n\t  return {\n\t    min: min,\n\t    max: max\n\t  };\n\t};\n\n\tvar validateLocusExtent = function validateLocusExtent(chromosomeLengthBP, extent, minimumBP) {\n\t  var ss = extent.start;\n\t  var ee = extent.end;\n\n\t  if (undefined === ee) {\n\t    ss -= minimumBP / 2;\n\t    ee = ss + minimumBP;\n\n\t    if (ee > chromosomeLengthBP) {\n\t      ee = chromosomeLengthBP;\n\t      ss = ee - minimumBP;\n\t    } else if (ss < 0) {\n\t      ss = 0;\n\t      ee = minimumBP;\n\t    }\n\t  } else if (ee - ss < minimumBP) {\n\t    var center = (ee + ss) / 2;\n\n\t    if (center - minimumBP / 2 < 0) {\n\t      ss = 0;\n\t      ee = ss + minimumBP;\n\t    } else if (center + minimumBP / 2 > chromosomeLengthBP) {\n\t      ee = chromosomeLengthBP;\n\t      ss = ee - minimumBP;\n\t    } else {\n\t      ss = center - minimumBP / 2;\n\t      ee = ss + minimumBP;\n\t    }\n\t  }\n\n\t  extent.start = Math.ceil(ss);\n\t  extent.end = Math.floor(ee);\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016-2017 The Regents of the University of California\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar RulerSweeper = function RulerSweeper(viewport) {\n\t  this.viewport = viewport;\n\t  this.browser = viewport.browser;\n\t  this.$rulerSweeper = $('<div class=\"igv-ruler-sweeper-div\">');\n\t  $(viewport.contentDiv).append(this.$rulerSweeper);\n\t  this.namespace = '.sweeper_' + guid();\n\t  this.addMouseHandlers();\n\t};\n\n\tRulerSweeper.prototype.disableMouseHandlers = function () {\n\t  $(document).off(this.namespace);\n\t  this.viewport.$viewport.off(this.namespace);\n\t};\n\n\tRulerSweeper.prototype.addMouseHandlers = function () {\n\t  var browser = this.browser;\n\t  var self = this;\n\t  var isMouseDown, isMouseIn, mouseDown, left, threshold, width, dx;\n\t  this.disableMouseHandlers();\n\t  isMouseDown = isMouseIn = mouseDown = undefined;\n\t  threshold = 1;\n\t  $(this.browser.$root).on('mousedown' + this.namespace, function (e) {\n\t    isMouseIn = true;\n\t    mouseDown = translateMouseCoordinates(e, self.viewport.$viewport).x;\n\n\t    if (true === isMouseDown) {\n\t      self.$rulerSweeper.show();\n\t      width = threshold;\n\t      left = mouseDown;\n\t      self.$rulerSweeper.css({\n\t        left: left + 'px'\n\t      });\n\t      self.$rulerSweeper.width(width);\n\t    }\n\t  });\n\t  $(this.browser.$root).on('mousemove' + this.namespace, function (e) {\n\t    var mouseCurrent;\n\n\t    if (isMouseDown && isMouseIn) {\n\t      mouseCurrent = translateMouseCoordinates(e, self.viewport.$viewport).x;\n\t      mouseCurrent = Math.min(mouseCurrent, self.viewport.$viewport.width());\n\t      mouseCurrent = Math.max(mouseCurrent, 0);\n\t      dx = mouseCurrent - mouseDown;\n\t      width = Math.abs(dx);\n\t      self.$rulerSweeper.width(width);\n\n\t      if (dx < 0) {\n\t        left = mouseDown + dx;\n\t        self.$rulerSweeper.css({\n\t          left: left + 'px'\n\t        });\n\t      }\n\t    }\n\t  });\n\t  $(this.browser.$root).on('mouseup' + this.namespace, function (e) {\n\t    var extent;\n\n\t    if (true === isMouseDown && true === isMouseIn) {\n\t      isMouseDown = isMouseIn = undefined;\n\t      self.$rulerSweeper.hide();\n\t      extent = {};\n\t      extent.start = bp.call(self, left);\n\t      extent.end = bp.call(self, left + width);\n\n\t      if (width > threshold) {\n\t        validateLocusExtent(browser.genome.getChromosome(self.viewport.genomicState.referenceFrame.chrName).bpLength, extent, browser.minimumBases());\n\t        self.viewport.genomicState.referenceFrame.bpPerPixel = (Math.round(extent.end) - Math.round(extent.start)) / self.viewport.$viewport.width();\n\t        self.viewport.genomicState.referenceFrame.start = Math.round(extent.start);\n\t        browser.updateViews(self.viewport.genomicState);\n\t      }\n\t    }\n\t  });\n\t  this.viewport.$viewport.on('mousedown' + this.namespace, function (e) {\n\t    isMouseDown = true;\n\t  });\n\t};\n\n\tRulerSweeper.prototype.dispose = function () {\n\t  this.disableMouseHandlers();\n\t};\n\n\tfunction bp(pixel) {\n\t  return this.viewport.genomicState.referenceFrame.start + pixel * this.viewport.genomicState.referenceFrame.bpPerPixel;\n\t}\n\n\tvar Cytoband = function Cytoband(start, end, name, typestain) {\n\t  this.start = start;\n\t  this.end = end;\n\t  this.name = name;\n\t  this.stain = 0; // Set the type, either p, n, or c\n\n\t  if (typestain === 'acen') {\n\t    this.type = 'c';\n\t  } else {\n\t    this.type = typestain.charAt(1);\n\n\t    if (this.type === 'p') {\n\t      this.stain = parseInt(typestain.substring(4));\n\t    }\n\t  }\n\t};\n\n\tvar GenomicInterval = function GenomicInterval(chr, start, end, features) {\n\t  this.chr = chr;\n\t  this.start = start;\n\t  this.end = end;\n\t  this.features = features;\n\t};\n\n\tGenomicInterval.prototype.contains = function (chr, start, end) {\n\t  return this.chr === chr && this.start <= start && this.end >= end;\n\t};\n\n\tGenomicInterval.prototype.containsRange = function (range) {\n\t  return this.chr === range.chr && this.start <= range.start && this.end >= range.end;\n\t};\n\n\tvar Chromosome = function Chromosome(name, order, bpStart, bpLength, rangeLocus) {\n\t  this.name = name;\n\t  this.order = order;\n\t  this.bpStart = bpStart;\n\t  this.bpLength = bpLength;\n\t  this.rangeLocus = rangeLocus;\n\t};\n\n\tvar fromCharCode = String.fromCharCode;\n\tvar nativeFromCodePoint = String.fromCodePoint; // length should be 1, old FF problem\n\n\tvar INCORRECT_LENGTH = !!nativeFromCodePoint && nativeFromCodePoint.length != 1; // `String.fromCodePoint` method\n\t// https://tc39.github.io/ecma262/#sec-string.fromcodepoint\n\n\t_export({\n\t  target: 'String',\n\t  stat: true,\n\t  forced: INCORRECT_LENGTH\n\t}, {\n\t  fromCodePoint: function fromCodePoint(x) {\n\t    // eslint-disable-line no-unused-vars\n\t    var elements = [];\n\t    var length = arguments.length;\n\t    var i = 0;\n\t    var code;\n\n\t    while (length > i) {\n\t      code = +arguments[i++];\n\t      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');\n\t      elements.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00));\n\t    }\n\n\t    return elements.join('');\n\t  }\n\t});\n\n\tvar google = {\n\t  fileInfoCache: {},\n\t  // Crude test, this is conservative, nothing bad happens for a false positive\n\t  isGoogleURL: function isGoogleURL(url) {\n\t    return url.includes(\"googleapis\") && !url.includes(\"urlshortener\") || this.isGoogleCloudURL(url) || this.isGoogleStorageURL(url) || this.isGoogleDrive(url);\n\t  },\n\t  isGoogleStorageURL: function isGoogleStorageURL(url) {\n\t    return url.startsWith(\"https://www.googleapis.com/storage\") || url.startsWith(\"https://storage.cloud.google.com\") || url.startsWith(\"https://storage.googleapis.com\");\n\t  },\n\t  isGoogleCloudURL: function isGoogleCloudURL(url) {\n\t    return url.startsWith(\"gs://\");\n\t  },\n\t  isGoogleDrive: function isGoogleDrive(url) {\n\t    return url.indexOf(\"drive.google.com\") >= 0 || url.indexOf(\"www.googleapis.com/drive\") > 0;\n\t  },\n\t  setApiKey: function setApiKey(key) {\n\t    this.apiKey = key;\n\t  },\n\t  translateGoogleCloudURL: function translateGoogleCloudURL(gsUrl) {\n\t    var i, bucket, object, qIdx, objectString, paramString;\n\t    i = gsUrl.indexOf('/', 5);\n\t    qIdx = gsUrl.indexOf('?');\n\n\t    if (i < 0) {\n\t      return gsUrl;\n\t    }\n\n\t    bucket = gsUrl.substring(5, i);\n\t    objectString = qIdx < 0 ? gsUrl.substring(i + 1) : gsUrl.substring(i + 1, qIdx);\n\t    object = encodeURIComponent(objectString);\n\n\t    if (qIdx > 0) {\n\t      paramString = gsUrl.substring(qIdx);\n\t    }\n\n\t    return \"https://www.googleapis.com/storage/v1/b/\" + bucket + \"/o/\" + object + (paramString ? paramString + \"&alt=media\" : \"?alt=media\");\n\t  },\n\t  addApiKey: function addApiKey(url) {\n\t    var apiKey = this.apiKey;\n\n\t    if (apiKey !== undefined && !url.includes(\"key=\")) {\n\t      var paramSeparator = url.includes(\"?\") ? \"&\" : \"?\";\n\t      url = url + paramSeparator + \"key=\" + apiKey;\n\t    }\n\n\t    return url;\n\t  },\n\t  driveDownloadURL: function driveDownloadURL(link) {\n\t    // Return a google drive download url for the sharable link\n\t    //https://drive.google.com/open?id=0B-lleX9c2pZFbDJ4VVRxakJzVGM\n\t    //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n\t    var id = getGoogleDriveFileID(link);\n\t    return id ? \"https://www.googleapis.com/drive/v3/files/\" + id + \"?alt=media&supportsTeamDrives=true\" : link;\n\t  },\n\t  getDriveFileInfo: function getDriveFileInfo(googleDriveURL) {\n\t    var id = getGoogleDriveFileID(googleDriveURL),\n\t        endPoint = \"https://www.googleapis.com/drive/v3/files/\" + id + \"?supportsTeamDrives=true\";\n\t    return igvxhr.loadJson(endPoint, buildOptions({}));\n\t  },\n\t  loadGoogleProperties: function loadGoogleProperties(propertiesURL) {\n\t    var self = this;\n\t    return igvxhr.loadArrayBuffer(propertiesURL).then(function (arrayBuffer) {\n\t      var inflate, plain, str;\n\t      inflate = new Zlib.Gunzip(new Uint8Array(arrayBuffer));\n\t      plain = inflate.decompress();\n\t      str = String.fromCharCode.apply(null, plain);\n\t      var properties = JSON.parse(str);\n\t      self.setApiKey(properties[\"api_key\"]);\n\t      self.properties = properties;\n\t      return properties;\n\t    });\n\t  }\n\t};\n\n\tfunction getGoogleDriveFileID(link) {\n\t  //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n\t  var i1, i2;\n\n\t  if (link.includes(\"/open?id=\")) {\n\t    i1 = link.indexOf(\"/open?id=\") + 9;\n\t    i2 = link.indexOf(\"&\");\n\n\t    if (i1 > 0 && i2 > i1) {\n\t      return link.substring(i1, i2);\n\t    } else if (i1 > 0) {\n\t      return link.substring(i1);\n\t    }\n\t  } else if (link.includes(\"/file/d/\")) {\n\t    i1 = link.indexOf(\"/file/d/\") + 8;\n\t    i2 = link.lastIndexOf(\"/\");\n\t    return link.substring(i1, i2);\n\t  }\n\t}\n\n\tvar oauth = {\n\t  oauthTokens: {},\n\t  setToken: function setToken(token, host) {\n\t    if (!host) {\n\t      this.google.access_token = token;\n\t    } else {\n\t      this.oauthTokens[host] = token;\n\t    }\n\t  },\n\t  getToken: function getToken(host) {\n\t    var token;\n\n\t    if (!host) {\n\t      token = this.google.access_token;\n\t    } else {\n\t      for (var key in this.oauthTokens) {\n\t        var regex = wildcardToRegExp(key);\n\n\t        if (regex.test(host)) {\n\t          token = this.oauthTokens[key];\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    return token;\n\t  },\n\t  removeToken: function removeToken(host) {\n\t    if (!host) {\n\t      delete oauth.google[\"access_token\"];\n\t    } else {\n\t      delete this.oauthTokens[host];\n\t    }\n\t  },\n\t  // Special object for google -- legacy support\n\t  google: {\n\t    setToken: function setToken(token) {\n\t      this.access_token = token;\n\t    }\n\t  }\n\t};\n\t/**\n\t * Creates a RegExp from the given string, converting asterisks to .* expressions,\n\t * and escaping all other characters.\n\t *\n\t * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n\t */\n\n\tfunction wildcardToRegExp(s) {\n\t  return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n\t}\n\t/**\n\t * RegExp-escapes all characters in the given string.\n\t *\n\t * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n\t */\n\n\n\tfunction regExpEscape(s) {\n\t  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\t}\n\n\t// Uncompress data,  assumed to be series of bgzipped blocks\n\n\tfunction unbgzf(data, lim) {\n\t  var oBlockList = [];\n\t  var ptr = 0;\n\t  var totalSize = 0;\n\t  lim = lim || data.byteLength - 18;\n\n\t  while (ptr < lim) {\n\t    try {\n\t      var ba = new Uint8Array(data, ptr, 18);\n\t      var xlen = ba[11] << 8 | ba[10];\n\t      var si1 = ba[12];\n\t      var si2 = ba[13];\n\t      var slen = ba[15] << 8 | ba[14];\n\t      var bsize = (ba[17] << 8 | ba[16]) + 1;\n\t      var start = 12 + xlen + ptr; // Start of CDATA\n\n\t      var bytesLeft = data.byteLength - start;\n\t      var cDataSize = bsize - xlen - 19;\n\t      if (bytesLeft < cDataSize) break;\n\t      var a = new Uint8Array(data, start, cDataSize);\n\t      var inflate = new Zlib.RawInflate(a);\n\t      var unc = inflate.decompress();\n\t      ptr += inflate.ip + 26;\n\t      totalSize += unc.byteLength;\n\t      oBlockList.push(unc);\n\t    } catch (e) {\n\t      console.error(e);\n\t      break;\n\t    }\n\t  } // Concatenate decompressed blocks\n\n\n\t  if (oBlockList.length === 1) {\n\t    return oBlockList[0];\n\t  } else {\n\t    var out = new Uint8Array(totalSize);\n\t    var cursor = 0;\n\n\t    for (var i = 0; i < oBlockList.length; ++i) {\n\t      var b = new Uint8Array(oBlockList[i]);\n\t      arrayCopy(b, 0, out, cursor, b.length);\n\t      cursor += b.length;\n\t    }\n\n\t    return out;\n\t  }\n\t}\n\n\tfunction bgzBlockSize(data) {\n\t  var ba = new Uint8Array(data);\n\t  var bsize = ba[17] << 8 | ba[16] + 1;\n\t  return bsize;\n\t} // From Thomas Down's zlib implementation\n\n\n\tvar testArray = new Uint8Array(1);\n\tvar hasSubarray = typeof testArray.subarray === 'function';\n\t/* (typeof testArray.slice === 'function'); */\n\t// Chrome slice performance is so dire that we're currently not using it...\n\n\tfunction arrayCopy(src, srcOffset, dest, destOffset, count) {\n\t  if (count === 0) {\n\t    return;\n\t  }\n\n\t  if (!src) {\n\t    throw \"Undef src\";\n\t  } else if (!dest) {\n\t    throw \"Undef dest\";\n\t  }\n\n\t  if (srcOffset === 0 && count === src.length) {\n\t    arrayCopy_fast(src, dest, destOffset);\n\t  } else if (hasSubarray) {\n\t    arrayCopy_fast(src.subarray(srcOffset, srcOffset + count), dest, destOffset);\n\t  } else if (src.BYTES_PER_ELEMENT === 1 && count > 100) {\n\t    arrayCopy_fast(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n\t  } else {\n\t    arrayCopy_slow(src, srcOffset, dest, destOffset, count);\n\t  }\n\t}\n\n\tfunction arrayCopy_slow(src, srcOffset, dest, destOffset, count) {\n\t  for (var i = 0; i < count; ++i) {\n\t    dest[destOffset + i] = src[srcOffset + i];\n\t  }\n\t}\n\n\tfunction arrayCopy_fast(src, dest, destOffset) {\n\t  dest.set(src, destOffset);\n\t}\n\n\tfunction getExtension(config) {\n\t  if (undefined === config.url) {\n\t    return undefined;\n\t  }\n\n\t  var path = isFilePath(config.url) ? config.url.name : config.url;\n\t  var filename = path.toLowerCase(); //Strip parameters -- handle local files later\n\n\t  var index = filename.indexOf(\"?\");\n\n\t  if (index > 0) {\n\t    filename = filename.substr(0, index);\n\t  } //Strip aux extensions .gz, .tab, and .txt\n\n\n\t  if (filename.endsWith(\".gz\")) {\n\t    filename = filename.substr(0, filename.length - 3);\n\t  } else if (filename.endsWith(\".txt\") || filename.endsWith(\".tab\") || filename.endsWith(\".bgz\")) {\n\t    filename = filename.substr(0, filename.length - 4);\n\t  }\n\n\t  index = filename.lastIndexOf(\".\");\n\t  return index < 0 ? filename : filename.substr(1 + index);\n\t}\n\t/**\n\t * Return the filename from the path.   Example\n\t *   https://foo.com/bar.bed?param=2   => bar.bed\n\t * @param path\n\t */\n\n\n\tfunction getFilename(path) {\n\t  var index, filename;\n\n\t  if (path instanceof File) {\n\t    return path.name;\n\t  } else {\n\t    index = path.lastIndexOf(\"/\");\n\t    filename = index < 0 ? path : path.substr(index + 1); //Strip parameters -- handle local files later\n\n\t    index = filename.indexOf(\"?\");\n\n\t    if (index > 0) {\n\t      filename = filename.substr(0, index);\n\t    }\n\n\t    return filename;\n\t  }\n\t}\n\n\tfunction isFilePath(path) {\n\t  return path instanceof File;\n\t}\n\n\tif ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === 'object' && typeof window === 'undefined') {\n\t  global.atob = function (str) {\n\t    return Buffer.from(str, 'base64').toString('binary');\n\t  };\n\t}\n\t/**\n\t * @param dataURI\n\t * @returns {Array<number>|Uint8Array}\n\t */\n\n\n\tfunction decodeDataURI(dataURI) {\n\t  var split = dataURI.split(',');\n\t  var info = split[0].split(':')[1];\n\t  var dataString = split[1];\n\n\t  if (info.indexOf('base64') >= 0) {\n\t    dataString = atob(dataString);\n\t  } else {\n\t    dataString = decodeURI(dataString); // URL encoded string -- not currently used of tested\n\t  }\n\n\t  var bytes = new Uint8Array(dataString.length);\n\n\t  for (var i = 0; i < dataString.length; i++) {\n\t    bytes[i] = dataString.charCodeAt(i);\n\t  }\n\n\t  var plain;\n\n\t  if (info.indexOf('gzip') > 0) {\n\t    var inflate = new Zlib.Gunzip(bytes);\n\t    plain = inflate.decompress();\n\t  } else {\n\t    plain = bytes;\n\t  }\n\n\t  return plain;\n\t}\n\n\tfunction parseUri(str) {\n\t  var o = options,\n\t      m = o.parser[ \"loose\"].exec(str),\n\t      uri = {},\n\t      i = 14;\n\n\t  while (i--) {\n\t    uri[o.key[i]] = m[i] || \"\";\n\t  }\n\n\t  uri[o.q.name] = {};\n\t  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t    if ($1) uri[o.q.name][$1] = $2;\n\t  });\n\t  return uri;\n\t}\n\n\tvar options = {\n\t  strictMode: false,\n\t  key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n\t  q: {\n\t    name: \"queryKey\",\n\t    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t  },\n\t  parser: {\n\t    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t  }\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2014 Broad Institute\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tvar httpMessages = {\n\t  \"401\": \"Access unauthorized\",\n\t  \"403\": \"Access forbidden\",\n\t  \"404\": \"Not found\"\n\t};\n\n\tvar AlertDialog = function AlertDialog($parent) {\n\t  var self = this; // container\n\n\t  this.$container = $(\"<div>\", {\n\t    class: 'igv-alert-dialog-container'\n\t  });\n\t  $parent.append(this.$container); // header\n\n\t  var $header = $(\"<div>\");\n\t  this.$container.append($header); // body container\n\n\t  var $div = $(\"<div>\", {\n\t    id: 'igv-alert-dialog-body'\n\t  });\n\t  this.$container.append($div); // body copy\n\n\t  this.$body = $(\"<div>\", {\n\t    id: 'igv-alert-dialog-body-copy'\n\t  });\n\t  $div.append(this.$body); // ok container\n\n\t  var $ok_container = $(\"<div>\");\n\t  this.$container.append($ok_container); // ok\n\n\t  this.$ok = $(\"<div>\");\n\t  $ok_container.append(this.$ok);\n\t  this.$ok.text('OK');\n\t  this.$ok.on('click', function () {\n\t    self.$body.html('');\n\t    self.$container.hide();\n\t  });\n\t  this.$container.hide();\n\t};\n\n\tAlertDialog.prototype.configure = function (config) {\n\t  this.$body.html(config.label);\n\t};\n\n\tAlertDialog.prototype.present = function (alert, callback) {\n\t  var self = this;\n\t  var string = alert.message || alert;\n\n\t  if (httpMessages.hasOwnProperty(string)) {\n\t    string = httpMessages[string];\n\t  }\n\n\t  this.$body.html(string);\n\t  this.$ok.on('click', function () {\n\t    if (typeof callback === 'function') {\n\t      callback(\"OK\");\n\t    }\n\n\t    self.$body.html('');\n\t    self.$container.hide();\n\t  });\n\t  this.$container.show();\n\t};\n\n\tvar alertDialog;\n\tvar Alert = {\n\t  init: function init($root) {\n\t    if (!alertDialog) {\n\t      alertDialog = new AlertDialog($root);\n\t    }\n\t  },\n\t  presentAlert: function presentAlert(alert, callback) {\n\t    alertDialog.present(alert, callback);\n\t  }\n\t};\n\n\tvar NONE = 0;\n\tvar GZIP = 1;\n\tvar BGZF = 2;\n\tvar UNKNOWN = 3;\n\tvar RANGE_WARNING_GIVEN = false;\n\n\tvar RateLimiter = /*#__PURE__*/function () {\n\t  function RateLimiter(wait) {\n\t    _classCallCheck(this, RateLimiter);\n\n\t    this.wait = wait === undefined ? 100 : wait;\n\t    this.isCalled = false;\n\t    this.calls = [];\n\t  }\n\n\t  _createClass(RateLimiter, [{\n\t    key: \"limiter\",\n\t    value: function limiter(fn) {\n\t      var self = this;\n\n\t      var caller = function caller() {\n\t        if (self.calls.length && !self.isCalled) {\n\t          self.isCalled = true;\n\t          self.calls.shift().call();\n\t          setTimeout(function () {\n\t            self.isCalled = false;\n\t            caller();\n\t          }, self.wait);\n\t        }\n\t      };\n\n\t      return function () {\n\t        self.calls.push(fn.bind.apply(fn, [this].concat(Array.prototype.slice.call(arguments))));\n\t        caller();\n\t      };\n\t    }\n\t  }]);\n\n\t  return RateLimiter;\n\t}();\n\n\tvar rateLimiter = new RateLimiter(100);\n\tvar igvxhr = {\n\t  load: function () {\n\t    var _load = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(url, options) {\n\t      var loadURL, _loadURL;\n\n\t      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t        while (1) {\n\t          switch (_context5.prev = _context5.next) {\n\t            case 0:\n\t              _loadURL = function _ref7() {\n\t                _loadURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(url, options) {\n\t                  var oauthToken, token, applyOauthToken, getLoadPromise, _getLoadPromise;\n\n\t                  return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t                    while (1) {\n\t                      switch (_context4.prev = _context4.next) {\n\t                        case 0:\n\t                          _getLoadPromise = function _ref5() {\n\t                            _getLoadPromise = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(url, options) {\n\t                              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t                                while (1) {\n\t                                  switch (_context3.prev = _context3.next) {\n\t                                    case 0:\n\t                                      return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n\t                                        // Various Google tansformations\n\t                                        if (google.isGoogleURL(url)) {\n\t                                          if (url.startsWith(\"gs://\")) {\n\t                                            url = google.translateGoogleCloudURL(url);\n\t                                          } else if (google.isGoogleStorageURL(url)) {\n\t                                            if (!url.includes(\"altMedia=\")) {\n\t                                              url += url.includes(\"?\") ? \"&altMedia=true\" : \"?altMedia=true\";\n\t                                            }\n\t                                          }\n\n\t                                          url = google.addApiKey(url);\n\t                                        }\n\n\t                                        var headers = options.headers || {};\n\n\t                                        if (options.token) {\n\t                                          addOauthHeaders(headers, options.token);\n\t                                        }\n\n\t                                        var range = options.range;\n\t                                        var isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n\t                                        var isSafari = navigator.vendor.indexOf(\"Apple\") === 0 && /\\sSafari\\//.test(navigator.userAgent);\n\n\t                                        if (range && isChrome && !isAmazonV4Signed(url)) {\n\t                                          // Hack to prevent caching for byte-ranges. Attempt to fix net:err-cache errors in Chrome\n\t                                          url += url.includes(\"?\") ? \"&\" : \"?\";\n\t                                          url += \"someRandomSeed=\" + Math.random().toString(36);\n\t                                        }\n\n\t                                        var xhr = new XMLHttpRequest();\n\t                                        var sendData = options.sendData || options.body;\n\t                                        var method = options.method || (sendData ? \"POST\" : \"GET\");\n\t                                        var responseType = options.responseType;\n\t                                        var contentType = options.contentType;\n\t                                        var mimeType = options.mimeType;\n\t                                        xhr.open(method, url);\n\n\t                                        if (range) {\n\t                                          var rangeEnd = range.size ? range.start + range.size - 1 : \"\";\n\t                                          xhr.setRequestHeader(\"Range\", \"bytes=\" + range.start + \"-\" + rangeEnd); //      xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");    <= This can cause CORS issues, disabled for now\n\t                                        }\n\n\t                                        if (contentType) {\n\t                                          xhr.setRequestHeader(\"Content-Type\", contentType);\n\t                                        }\n\n\t                                        if (mimeType) {\n\t                                          xhr.overrideMimeType(mimeType);\n\t                                        }\n\n\t                                        if (responseType) {\n\t                                          xhr.responseType = responseType;\n\t                                        }\n\n\t                                        if (headers) {\n\t                                          for (var _i = 0, _Object$keys = Object.keys(headers); _i < _Object$keys.length; _i++) {\n\t                                            var key = _Object$keys[_i];\n\t                                            var value = headers[key];\n\t                                            xhr.setRequestHeader(key, value);\n\t                                          }\n\t                                        } // NOTE: using withCredentials with servers that return \"*\" for access-allowed-origin will fail\n\n\n\t                                        if (options.withCredentials === true) {\n\t                                          xhr.withCredentials = true;\n\t                                        }\n\n\t                                        xhr.onload = /*#__PURE__*/function () {\n\t                                          var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {\n\t                                            var accessToken;\n\t                                            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t                                              while (1) {\n\t                                                switch (_context2.prev = _context2.next) {\n\t                                                  case 0:\n\t                                                    if (!(xhr.status === 0 || xhr.status >= 200 && xhr.status <= 300)) {\n\t                                                      _context2.next = 4;\n\t                                                      break;\n\t                                                    }\n\n\t                                                    if (range && xhr.status !== 206 && range.start !== 0) {\n\t                                                      // For small files a range starting at 0 can return the whole file => 200\n\t                                                      // Provide just the slice we asked for, throw out the rest quietly\n\t                                                      // If file is large warn user\n\t                                                      if (xhr.response.length > 100000 && !RANGE_WARNING_GIVEN) {\n\t                                                        Alert.presentAlert(\"Warning: Range header ignored for URL: \".concat(url, \".  This can have performance impacts.\"));\n\t                                                      }\n\n\t                                                      resolve(xhr.response.slice(range.start, range.start + range.size));\n\t                                                    } else {\n\t                                                      resolve(xhr.response);\n\t                                                    }\n\n\t                                                    _context2.next = 20;\n\t                                                    break;\n\n\t                                                  case 4:\n\t                                                    if (!(typeof gapi !== \"undefined\" && (xhr.status === 404 || xhr.status === 401) && google.isGoogleURL(url) && !options.retries)) {\n\t                                                      _context2.next = 19;\n\t                                                      break;\n\t                                                    }\n\n\t                                                    _context2.prev = 5;\n\t                                                    options.retries = 1;\n\t                                                    _context2.next = 9;\n\t                                                    return getGoogleAccessToken();\n\n\t                                                  case 9:\n\t                                                    accessToken = _context2.sent;\n\t                                                    options.oauthToken = accessToken;\n\t                                                    return _context2.abrupt(\"return\", igvxhr.load(url, options));\n\n\t                                                  case 14:\n\t                                                    _context2.prev = 14;\n\t                                                    _context2.t0 = _context2[\"catch\"](5);\n\t                                                    handleError(_context2.t0);\n\n\t                                                  case 17:\n\t                                                    _context2.next = 20;\n\t                                                    break;\n\n\t                                                  case 19:\n\t                                                    if (xhr.status === 403) {\n\t                                                      handleError(\"Access forbidden: \" + url);\n\t                                                    } else if (xhr.status === 416) {\n\t                                                      //  Tried to read off the end of the file.   This shouldn't happen, but if it does return an\n\t                                                      handleError(\"Unsatisfiable range\");\n\t                                                    } else {\n\t                                                      handleError(xhr.status);\n\t                                                    }\n\n\t                                                  case 20:\n\t                                                  case \"end\":\n\t                                                    return _context2.stop();\n\t                                                }\n\t                                              }\n\t                                            }, _callee2, null, [[5, 14]]);\n\t                                          }));\n\n\t                                          return function (_x9) {\n\t                                            return _ref2.apply(this, arguments);\n\t                                          };\n\t                                        }();\n\n\t                                        xhr.onerror = function (event) {\n\t                                          handleError(\"Error accessing resource: \" + url + \" Status: \" + xhr.status);\n\t                                        };\n\n\t                                        xhr.ontimeout = function (event) {\n\t                                          handleError(\"Timed out\");\n\t                                        };\n\n\t                                        xhr.onabort = function (event) {\n\t                                          reject(event);\n\t                                        };\n\n\t                                        try {\n\t                                          xhr.send(sendData);\n\t                                        } catch (e) {\n\t                                          reject(e);\n\t                                        }\n\n\t                                        function handleError(message) {\n\t                                          if (reject) {\n\t                                            reject(new Error(message));\n\t                                          } else {\n\t                                            throw new Error(message);\n\t                                          }\n\t                                        }\n\t                                      }));\n\n\t                                    case 1:\n\t                                    case \"end\":\n\t                                      return _context3.stop();\n\t                                  }\n\t                                }\n\t                              }, _callee3);\n\t                            }));\n\t                            return _getLoadPromise.apply(this, arguments);\n\t                          };\n\n\t                          getLoadPromise = function _ref4(_x7, _x8) {\n\t                            return _getLoadPromise.apply(this, arguments);\n\t                          };\n\n\t                          applyOauthToken = function _ref3(token) {\n\t                            if (token) {\n\t                              options.token = token;\n\t                            }\n\n\t                            return getLoadPromise(url, options);\n\t                          };\n\n\t                          url = mapUrl(url);\n\t                          options = options || {};\n\t                          oauthToken = options.oauthToken;\n\n\t                          if (!oauthToken) {\n\t                            oauthToken = getOauthToken(url);\n\t                          }\n\n\t                          if (!oauthToken) {\n\t                            _context4.next = 16;\n\t                            break;\n\t                          }\n\n\t                          token = typeof oauthToken === 'function' ? oauthToken() : oauthToken;\n\n\t                          if (!(token.then && typeof token.then === 'function')) {\n\t                            _context4.next = 13;\n\t                            break;\n\t                          }\n\n\t                          return _context4.abrupt(\"return\", token.then(applyOauthToken));\n\n\t                        case 13:\n\t                          return _context4.abrupt(\"return\", applyOauthToken(token));\n\n\t                        case 14:\n\t                          _context4.next = 17;\n\t                          break;\n\n\t                        case 16:\n\t                          return _context4.abrupt(\"return\", getLoadPromise(url, options));\n\n\t                        case 17:\n\t                        case \"end\":\n\t                          return _context4.stop();\n\t                      }\n\t                    }\n\t                  }, _callee4);\n\t                }));\n\t                return _loadURL.apply(this, arguments);\n\t              };\n\n\t              loadURL = function _ref6(_x5, _x6) {\n\t                return _loadURL.apply(this, arguments);\n\t              };\n\n\t              options = options || {};\n\n\t              if (!(url instanceof File)) {\n\t                _context5.next = 7;\n\t                break;\n\t              }\n\n\t              return _context5.abrupt(\"return\", loadFileSlice(url, options));\n\n\t            case 7:\n\t              if (!url.startsWith(\"data:\")) {\n\t                _context5.next = 11;\n\t                break;\n\t              }\n\n\t              return _context5.abrupt(\"return\", decodeDataURI(url));\n\n\t            case 11:\n\t              if (!isGoogleDrive(url)) {\n\t                _context5.next = 15;\n\t                break;\n\t              }\n\n\t              return _context5.abrupt(\"return\", new Promise(function (fulfill, reject) {\n\t                rateLimiter.limiter( /*#__PURE__*/function () {\n\t                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url, options) {\n\t                    var result;\n\t                    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t                      while (1) {\n\t                        switch (_context.prev = _context.next) {\n\t                          case 0:\n\t                            try {\n\t                              result = loadURL(url, options);\n\t                              fulfill(result);\n\t                            } catch (e) {\n\t                              reject(e);\n\t                            }\n\n\t                          case 1:\n\t                          case \"end\":\n\t                            return _context.stop();\n\t                        }\n\t                      }\n\t                    }, _callee);\n\t                  }));\n\n\t                  return function (_x3, _x4) {\n\t                    return _ref.apply(this, arguments);\n\t                  };\n\t                }())(url, options);\n\t              }));\n\n\t            case 15:\n\t              return _context5.abrupt(\"return\", loadURL(url, options));\n\n\t            case 16:\n\t            case \"end\":\n\t              return _context5.stop();\n\t          }\n\t        }\n\t      }, _callee5);\n\t    }));\n\n\t    function load(_x, _x2) {\n\t      return _load.apply(this, arguments);\n\t    }\n\n\t    return load;\n\t  }(),\n\t  loadArrayBuffer: function loadArrayBuffer(url, options) {\n\t    options = options || {};\n\t    options.responseType = \"arraybuffer\";\n\n\t    if (url instanceof File) {\n\t      return loadFileSlice(url, options);\n\t    } else {\n\t      return igvxhr.load(url, options);\n\t    }\n\t  },\n\t  loadJson: function loadJson(url, options) {\n\t    options = options || {};\n\t    var method = options.method || (options.sendData ? \"POST\" : \"GET\");\n\t    if (method === \"POST\") options.contentType = \"application/json\";\n\t    return igvxhr.load(url, options).then(function (result) {\n\t      if (result) {\n\t        return JSON.parse(result);\n\t      } else {\n\t        return result;\n\t      }\n\t    });\n\t  },\n\t  loadString: function loadString(path, options) {\n\t    options = options || {};\n\n\t    if (path instanceof File) {\n\t      return loadStringFromFile(path, options);\n\t    } else {\n\t      return loadStringFromUrl(path, options);\n\t    }\n\t  },\n\t  startup: startup\n\t};\n\n\tfunction loadFileSlice(localfile, options) {\n\t  return new Promise(function (resolve, reject) {\n\t    var fileReader = new FileReader();\n\n\t    fileReader.onload = function (e) {\n\t      resolve(fileReader.result);\n\t    };\n\n\t    fileReader.onerror = function (e) {\n\t      reject(null, fileReader);\n\t    };\n\n\t    if (options.range) {\n\t      var blob = localfile.slice(options.range.start, options.range.start + options.range.size);\n\n\t      if (\"arraybuffer\" === options.responseType) {\n\t        fileReader.readAsArrayBuffer(blob);\n\t      } else {\n\t        fileReader.readAsBinaryString(blob);\n\t      }\n\t    } else {\n\t      if (\"arraybuffer\" === options.responseType) {\n\t        fileReader.readAsArrayBuffer(localfile);\n\t      } else {\n\t        fileReader.readAsBinaryString(localfile);\n\t      }\n\t    }\n\t  });\n\t}\n\n\tfunction loadStringFromFile(localfile, options) {\n\t  options = options || {};\n\t  var blob = options.range ? localfile.slice(options.range.start, options.range.start + options.range.size) : localfile;\n\t  return new Promise(function (resolve, reject) {\n\t    var fileReader = new FileReader();\n\t    var compression = NONE;\n\n\t    if (options.bgz || localfile.name.endsWith(\".bgz\")) {\n\t      compression = BGZF;\n\t    } else if (localfile.name.endsWith(\".gz\")) {\n\t      compression = GZIP;\n\t    }\n\n\t    fileReader.onload = function (e) {\n\t      if (compression === NONE) {\n\t        return resolve(fileReader.result);\n\t      } else {\n\t        return resolve(arrayBufferToString(fileReader.result, compression));\n\t      }\n\t    };\n\n\t    fileReader.onerror = function (e) {\n\t      var error = fileReader.error;\n\t      reject(error + \" \" + localfile.name, fileReader);\n\t    };\n\n\t    if (compression === NONE) {\n\t      fileReader.readAsText(blob);\n\t    } else {\n\t      fileReader.readAsArrayBuffer(blob);\n\t    }\n\t  });\n\t}\n\n\tfunction loadStringFromUrl(url, options) {\n\t  options = options || {};\n\t  var fn = options.filename || getFilename(url);\n\t  var compression = UNKNOWN;\n\n\t  if (options.bgz) {\n\t    compression = BGZF;\n\t  } else if (fn.endsWith(\".gz\")) {\n\t    compression = GZIP;\n\t  }\n\n\t  options.responseType = \"arraybuffer\";\n\t  return igvxhr.load(url, options).then(function (data) {\n\t    return arrayBufferToString(data, compression);\n\t  });\n\t}\n\n\tfunction isAmazonV4Signed(url) {\n\t  return url.indexOf(\"X-Amz-Signature\") > -1;\n\t}\n\n\tfunction getOauthToken(url) {\n\t  var host = parseUri(url).host;\n\t  var token = oauth.getToken(host);\n\n\t  if (!token && google.isGoogleURL(url)) {\n\t    token = oauth.google.access_token;\n\t  }\n\n\t  return token;\n\t}\n\n\tfunction addOauthHeaders(headers, acToken) {\n\t  if (acToken) {\n\t    headers[\"Cache-Control\"] = \"no-cache\";\n\t    headers[\"Authorization\"] = \"Bearer \" + acToken;\n\t  }\n\n\t  return headers;\n\t}\n\t/**\n\t * Perform some well-known url mappings.\n\t * @param url\n\t */\n\n\n\tfunction mapUrl(url) {\n\t  if (url.includes(\"//www.dropbox.com\")) {\n\t    return url.replace(\"//www.dropbox.com\", \"//dl.dropboxusercontent.com\");\n\t  } else if (url.includes(\"//drive.google.com\")) {\n\t    return google.driveDownloadURL(url);\n\t  } else if (url.includes(\"//www.broadinstitute.org/igvdata\")) {\n\t    return url.replace(\"//www.broadinstitute.org/igvdata\", \"//data.broadinstitute.org/igvdata\");\n\t  } else if (url.includes(\"//igvdata.broadinstitute.org\")) {\n\t    return url.replace(\"//igvdata.broadinstitute.org\", \"https://dn7ywbm9isq8j.cloudfront.net\");\n\t  } else if (url.startsWith(\"ftp://ftp.ncbi.nlm.nih.gov/geo\")) {\n\t    return url.replace(\"ftp://\", \"https://\");\n\t  } else {\n\t    return url;\n\t  }\n\t}\n\n\tfunction arrayBufferToString(arraybuffer, compression) {\n\t  if (compression === UNKNOWN && arraybuffer.byteLength > 2) {\n\t    var m = new Uint8Array(arraybuffer, 0, 2);\n\n\t    if (m[0] === 31 && m[1] === 139) {\n\t      compression = GZIP;\n\t    }\n\t  }\n\n\t  var plain;\n\n\t  if (compression === GZIP) {\n\t    var inflate = new Zlib.Gunzip(new Uint8Array(arraybuffer));\n\t    plain = inflate.decompress();\n\t  } else if (compression === BGZF) {\n\t    plain = unbgzf(arraybuffer);\n\t  } else {\n\t    plain = new Uint8Array(arraybuffer);\n\t  }\n\n\t  if ('TextDecoder' in getGlobalObject()) {\n\t    return new TextDecoder().decode(plain);\n\t  } else {\n\t    return decodeUTF8(plain);\n\t  }\n\t}\n\n\tfunction isGoogleDrive(url) {\n\t  return url.includes(\"drive.google.com\") || url.includes(\"www.googleapis.com/drive\");\n\t}\n\t/**\n\t * There can be only 1 oAuth promise executing at a time.\n\t */\n\n\n\tvar oauthPromise;\n\n\tfunction getGoogleAccessToken() {\n\t  return _getGoogleAccessToken.apply(this, arguments);\n\t} //Increments an anonymous usage count.  Count is anonymous, needed for our continued funding.  Please don't delete\n\n\n\tfunction _getGoogleAccessToken() {\n\t  _getGoogleAccessToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n\t    var authInstance, scope, options;\n\t    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n\t      while (1) {\n\t        switch (_context6.prev = _context6.next) {\n\t          case 0:\n\t            if (!oauth.google.access_token) {\n\t              _context6.next = 2;\n\t              break;\n\t            }\n\n\t            return _context6.abrupt(\"return\", oauth.google.access_token);\n\n\t          case 2:\n\t            if (!oauthPromise) {\n\t              _context6.next = 4;\n\t              break;\n\t            }\n\n\t            return _context6.abrupt(\"return\", oauthPromise);\n\n\t          case 4:\n\t            if (gapi && gapi.auth2) {\n\t              _context6.next = 6;\n\t              break;\n\t            }\n\n\t            throw new Error(\"The Google oAuth API is required but not loaded\");\n\n\t          case 6:\n\t            authInstance = gapi.auth2.getAuthInstance();\n\n\t            if (authInstance) {\n\t              _context6.next = 10;\n\t              break;\n\t            }\n\n\t            Alert.presentAlert(\"Authorization is required, but Google oAuth has not been initalized.  Contact your site administrator for assistance.\");\n\t            return _context6.abrupt(\"return\", undefined);\n\n\t          case 10:\n\t            scope = \"https://www.googleapis.com/auth/devstorage.read_only https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/drive.readonly\";\n\t            options = new gapi.auth2.SigninOptionsBuilder();\n\t            options.setPrompt('select_account');\n\t            options.setScope(scope);\n\t            oauthPromise = new Promise(function (resolve, reject) {\n\t              Alert.presentAlert(\"Google Login required\", function () {\n\t                gapi.auth2.getAuthInstance().signIn(options).then(function (user) {\n\t                  var authResponse = user.getAuthResponse();\n\t                  oauth.google.setToken(authResponse[\"access_token\"]);\n\t                  resolve(authResponse[\"access_token\"]);\n\t                  oauthPromise = undefined;\n\t                }).catch(function (err) {\n\t                  oauthPromise = undefined;\n\t                  reject(err);\n\t                });\n\t              });\n\t            });\n\t            return _context6.abrupt(\"return\", oauthPromise);\n\n\t          case 16:\n\t          case \"end\":\n\t            return _context6.stop();\n\t        }\n\t      }\n\t    }, _callee6);\n\t  }));\n\t  return _getGoogleAccessToken.apply(this, arguments);\n\t}\n\n\tvar startupCalls = 0;\n\n\tfunction startup() {\n\t  var href = window.document.location.href;\n\t  var host = parseUri(href).host;\n\n\t  if (startupCalls === 0 && !href.includes(\"localhost\") && !href.includes(\"127.0.0.1\")) {\n\t    startupCalls++;\n\t    var url = \"https://data.broadinstitute.org/igv/projects/current/counter_igvjs.php?version=\" + \"0\";\n\t    igvxhr.load(url).then(function (ignore) {}).catch(function (error) {});\n\t  }\n\t}\n\t/**\n\t * Use when TextDecoder is not available (primarily IE).\n\t *\n\t * From: https://gist.github.com/Yaffle/5458286\n\t *\n\t * @param octets\n\t * @returns {string}\n\t */\n\n\n\tfunction decodeUTF8(octets) {\n\t  var string = \"\";\n\t  var i = 0;\n\n\t  while (i < octets.length) {\n\t    var octet = octets[i];\n\t    var bytesNeeded = 0;\n\t    var codePoint = 0;\n\n\t    if (octet <= 0x7F) {\n\t      bytesNeeded = 0;\n\t      codePoint = octet & 0xFF;\n\t    } else if (octet <= 0xDF) {\n\t      bytesNeeded = 1;\n\t      codePoint = octet & 0x1F;\n\t    } else if (octet <= 0xEF) {\n\t      bytesNeeded = 2;\n\t      codePoint = octet & 0x0F;\n\t    } else if (octet <= 0xF4) {\n\t      bytesNeeded = 3;\n\t      codePoint = octet & 0x07;\n\t    }\n\n\t    if (octets.length - i - bytesNeeded > 0) {\n\t      var k = 0;\n\n\t      while (k < bytesNeeded) {\n\t        octet = octets[i + k + 1];\n\t        codePoint = codePoint << 6 | octet & 0x3F;\n\t        k += 1;\n\t      }\n\t    } else {\n\t      codePoint = 0xFFFD;\n\t      bytesNeeded = octets.length - i;\n\t    }\n\n\t    string += String.fromCodePoint(codePoint);\n\t    i += bytesNeeded + 1;\n\t  }\n\n\t  return string;\n\t}\n\n\tfunction getGlobalObject() {\n\t  if (typeof self !== 'undefined') {\n\t    return self;\n\t  }\n\n\t  if (typeof global !== 'undefined') {\n\t    return global;\n\t  } else {\n\t    return window;\n\t  }\n\t}\n\n\tvar reservedProperties = new Set(['fastaURL', 'indexURL', 'cytobandURL', 'indexed']);\n\n\tvar FastaSequence = function FastaSequence(reference) {\n\t  if (typeof reference.fastaURL === 'string' && reference.fastaURL.startsWith('data:')) {\n\t    this.file = decodeDataUri(reference.fastaURL);\n\t    this.indexed = false; // dataURI is by definition not indexed\n\n\t    this.isDataURI = true;\n\t  } else {\n\t    this.file = reference.fastaURL;\n\t    this.indexed = reference.indexed !== false; // Indexed unless it explicitly is not\n\n\t    if (this.indexed) {\n\t      this.indexFile = reference.indexURL || reference.indexFile || this.file + \".fai\";\n\t    }\n\t  }\n\n\t  this.withCredentials = reference.withCredentials;\n\t  this.chromosomeNames = [];\n\t  this.chromosomes = {};\n\t  this.sequences = {};\n\t  this.offsets = {};\n\t  this.config = buildConfig(reference);\n\t}; // Build a track-like config object from the referenceObject\n\n\n\tfunction buildConfig(reference) {\n\t  var key,\n\t      config = {};\n\n\t  for (key in reference) {\n\t    if (reference.hasOwnProperty(key) && !reservedProperties.has(key)) {\n\t      config[key] = reference[key];\n\t    }\n\t  }\n\n\t  return config;\n\t}\n\n\tFastaSequence.prototype.init = function () {\n\t  var self = this;\n\n\t  if (self.indexed) {\n\t    return self.getIndex();\n\t  } else {\n\t    return self.loadAll();\n\t  }\n\t};\n\n\tFastaSequence.prototype.getSequence = function (chr, start, end) {\n\t  if (this.indexed) {\n\t    return getSequenceIndexed.call(this, chr, start, end);\n\t  } else {\n\t    return getSequenceNonIndexed.call(this, chr, start, end);\n\t  }\n\t};\n\n\tfunction getSequenceIndexed(chr, start, end) {\n\t  var self = this;\n\t  var interval = self.interval;\n\n\t  if (interval && interval.contains(chr, start, end)) {\n\t    return Promise.resolve(getSequenceFromInterval(interval, start, end));\n\t  } else {\n\t    // Expand query, to minimum of 50kb\n\t    var qstart = start;\n\t    var qend = end;\n\n\t    if (end - start < 50000) {\n\t      var w = end - start;\n\t      var center = Math.round(start + w / 2);\n\t      qstart = Math.max(0, center - 25000);\n\t      qend = center + 25000;\n\t    }\n\n\t    return self.readSequence(chr, qstart, qend).then(function (seqBytes) {\n\t      self.interval = new GenomicInterval(chr, qstart, qend, seqBytes);\n\t      return getSequenceFromInterval(self.interval, start, end);\n\t    });\n\t  }\n\n\t  function getSequenceFromInterval(interval, start, end) {\n\t    var offset = start - interval.start;\n\t    var n = end - start;\n\t    var seq = interval.features ? interval.features.substr(offset, n) : null;\n\t    return seq;\n\t  }\n\t}\n\n\tfunction getSequenceNonIndexed(chr, start, end) {\n\t  var self = this;\n\n\t  if (this.offsets[chr]) {\n\t    start -= this.offsets[chr];\n\t    end -= this.offsets[chr];\n\t  }\n\n\t  var prefix = \"\";\n\n\t  if (start < 0) {\n\t    for (var i = start; i < Math.min(end, 0); i++) {\n\t      prefix += \"*\";\n\t    }\n\t  }\n\n\t  if (end <= 0) {\n\t    return Promise.resolve(prefix);\n\t  }\n\n\t  var seq = self.sequences[chr];\n\t  var seqEnd = Math.min(end, seq.length);\n\t  return Promise.resolve(prefix + seq.substring(start, end));\n\t}\n\n\tFastaSequence.prototype.getIndex = function () {\n\t  if (this.index) {\n\t    return Promise.resolve(this.index);\n\t  } else {\n\t    var self = this;\n\t    return igvxhr.load(self.indexFile, buildOptions(self.config)).then(function (data) {\n\t      var lines = splitLines(data);\n\t      var len = lines.length;\n\t      var lineNo = 0;\n\t      var order = 0;\n\t      self.index = {};\n\n\t      while (lineNo < len) {\n\t        var tokens = lines[lineNo++].split(\"\\t\");\n\t        var nTokens = tokens.length;\n\n\t        if (nTokens === 5) {\n\t          // Parse the index line.\n\t          var chr = tokens[0];\n\t          var size = parseInt(tokens[1]);\n\t          var position = parseInt(tokens[2]);\n\t          var basesPerLine = parseInt(tokens[3]);\n\t          var bytesPerLine = parseInt(tokens[4]);\n\t          var indexEntry = {\n\t            size: size,\n\t            position: position,\n\t            basesPerLine: basesPerLine,\n\t            bytesPerLine: bytesPerLine\n\t          };\n\t          self.chromosomeNames.push(chr);\n\t          self.index[chr] = indexEntry;\n\t          self.chromosomes[chr] = new Chromosome(chr, order++, 0, size);\n\t        }\n\t      }\n\n\t      return self.index;\n\t    });\n\t  }\n\t};\n\n\tFastaSequence.prototype.loadAll = function () {\n\t  var self = this;\n\n\t  if (this.isDataURI) {\n\t    return Promise.resolve(parseFasta(this.file));\n\t  } else {\n\t    return igvxhr.load(self.file, buildOptions(self.config)).then(parseFasta);\n\t  }\n\n\t  function parseFasta(data) {\n\t    var lines = splitLines(data),\n\t        len = lines.length,\n\t        lineNo = 0,\n\t        nextLine,\n\t        currentSeq = \"\",\n\t        currentChr,\n\t        currentRangeLocus = undefined,\n\t        currentOffset = 0,\n\t        order = 0;\n\n\t    while (lineNo < len) {\n\t      nextLine = lines[lineNo++].trim();\n\n\t      if (nextLine.startsWith(\"#\") || nextLine.length === 0) ; else if (nextLine.startsWith(\">\")) {\n\t        if (currentSeq) {\n\t          self.chromosomeNames.push(currentChr);\n\t          self.sequences[currentChr] = currentSeq;\n\t          self.chromosomes[currentChr] = new Chromosome(currentChr, order++, currentOffset, currentOffset + currentSeq.length, currentRangeLocus);\n\t        }\n\n\t        var parts = nextLine.substr(1).split(/\\s+/); // Check for samtools style locus string.   This is not perfect, and could fail on weird sequence names\n\n\t        var nameParts = parts[0].split(':');\n\t        currentChr = nameParts[0];\n\t        currentSeq = \"\";\n\t        currentOffset = 0;\n\t        currentRangeLocus = undefined;\n\n\t        if (nameParts.length > 1 && nameParts[1].indexOf('-') > 0) {\n\t          var locusParts = nameParts[1].split('-');\n\n\t          if (locusParts.length === 2 && /^[0-9]+$/.test(locusParts[0]) && /^[0-9]+$/.test(locusParts[1])) ;\n\n\t          var from = Number.parseInt(locusParts[0]);\n\t          var to = Number.parseInt(locusParts[1]);\n\n\t          if (to > from) {\n\t            currentOffset = from - 1;\n\t            self.offsets[currentChr] = currentOffset;\n\t            currentRangeLocus = nameParts[1];\n\t          }\n\t        }\n\t      } else {\n\t        currentSeq += nextLine;\n\t      }\n\t    } // add last seq\n\n\n\t    if (currentSeq) {\n\t      self.chromosomeNames.push(currentChr);\n\t      self.sequences[currentChr] = currentSeq;\n\t      self.chromosomes[currentChr] = new Chromosome(currentChr, order++, currentOffset, currentOffset + currentSeq.length, currentRangeLocus);\n\t    }\n\t  }\n\t};\n\n\tFastaSequence.prototype.readSequence = function (chr, qstart, qend) {\n\t  //console.log(\"Read sequence \" + chr + \":\" + qstart + \"-\" + qend);\n\t  var self = this;\n\t  var offset;\n\t  var start;\n\t  var end;\n\t  var basesPerLine;\n\t  var nEndBytes;\n\t  return self.getIndex().then(function () {\n\t    var idxEntry = self.index[chr];\n\n\t    if (!idxEntry) {\n\t      // Tag interval with null so we don't try again\n\t      self.interval = new GenomicInterval(chr, qstart, qend, null);\n\t      return null;\n\t    } else {\n\t      start = Math.max(0, qstart); // qstart should never be < 0\n\n\t      end = Math.min(idxEntry.size, qend);\n\t      var bytesPerLine = idxEntry.bytesPerLine;\n\t      basesPerLine = idxEntry.basesPerLine;\n\t      var position = idxEntry.position;\n\t      nEndBytes = bytesPerLine - basesPerLine;\n\t      var startLine = Math.floor(start / basesPerLine);\n\t      var endLine = Math.floor(end / basesPerLine);\n\t      var base0 = startLine * basesPerLine; // Base at beginning of start line\n\n\t      offset = start - base0;\n\t      var startByte = position + startLine * bytesPerLine + offset;\n\t      var base1 = endLine * basesPerLine;\n\t      var offset1 = end - base1;\n\t      var endByte = position + endLine * bytesPerLine + offset1 - 1;\n\t      var byteCount = endByte - startByte + 1;\n\n\t      if (byteCount <= 0) {\n\t        console.error(\"No sequence for \" + chr + \":\" + qstart + \"-\" + qend);\n\t        return \"\";\n\t      } else {\n\t        return igvxhr.load(self.file, buildOptions(self.config, {\n\t          range: {\n\t            start: startByte,\n\t            size: byteCount\n\t          }\n\t        }));\n\t      }\n\t    }\n\t  }).then(function (allBytes) {\n\t    if (!allBytes) {\n\t      return null;\n\t    } else {\n\t      var nBases,\n\t          seqBytes = \"\",\n\t          srcPos = 0,\n\t          allBytesLength = allBytes.length;\n\n\t      if (offset > 0) {\n\t        nBases = Math.min(end - start, basesPerLine - offset);\n\t        seqBytes += allBytes.substr(srcPos, nBases);\n\t        srcPos += nBases + nEndBytes;\n\t      }\n\n\t      while (srcPos < allBytesLength) {\n\t        nBases = Math.min(basesPerLine, allBytesLength - srcPos);\n\t        seqBytes += allBytes.substr(srcPos, nBases);\n\t        srcPos += nBases + nEndBytes;\n\t      }\n\n\t      return seqBytes;\n\t    }\n\t  });\n\t};\n\n\tfunction decodeDataUri(dataUri) {\n\t  var bytes,\n\t      split = dataUri.split(','),\n\t      info = split[0].split(':')[1],\n\t      dataString = split[1];\n\n\t  if (info.indexOf('base64') >= 0) {\n\t    dataString = atob(dataString);\n\t  } else {\n\t    dataString = decodeURI(dataString);\n\t  }\n\n\t  bytes = new Uint8Array(dataString.length);\n\n\t  for (var i = 0; i < dataString.length; i++) {\n\t    bytes[i] = dataString.charCodeAt(i);\n\t  }\n\n\t  var inflate = new Zlib.Gunzip(bytes);\n\t  var plain = inflate.decompress();\n\t  var s = \"\";\n\t  var len = plain.length;\n\n\t  for (var _i = 0; _i < len; _i++) {\n\t    s += String.fromCharCode(plain[_i]);\n\t  }\n\n\t  return s;\n\t}\n\n\tvar KNOWN_GENOMES;\n\tvar GenomeUtils = {\n\t  loadGenome: function () {\n\t    var _loadGenome = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(options) {\n\t      var cytobandUrl, aliasURL, sequence, cytobands, aliases;\n\t      return regeneratorRuntime.wrap(function _callee$(_context) {\n\t        while (1) {\n\t          switch (_context.prev = _context.next) {\n\t            case 0:\n\t              cytobandUrl = options.cytobandURL;\n\t              aliasURL = options.aliasURL;\n\t              sequence = new FastaSequence(options);\n\t              _context.next = 5;\n\t              return sequence.init();\n\n\t            case 5:\n\t              if (!cytobandUrl) {\n\t                _context.next = 9;\n\t                break;\n\t              }\n\n\t              _context.next = 8;\n\t              return loadCytobands(cytobandUrl, sequence.config);\n\n\t            case 8:\n\t              cytobands = _context.sent;\n\n\t            case 9:\n\t              if (!aliasURL) {\n\t                _context.next = 13;\n\t                break;\n\t              }\n\n\t              _context.next = 12;\n\t              return loadAliases(aliasURL, sequence.config);\n\n\t            case 12:\n\t              aliases = _context.sent;\n\n\t            case 13:\n\t              return _context.abrupt(\"return\", new Genome(options, sequence, cytobands, aliases));\n\n\t            case 14:\n\t            case \"end\":\n\t              return _context.stop();\n\t          }\n\t        }\n\t      }, _callee);\n\t    }));\n\n\t    function loadGenome(_x) {\n\t      return _loadGenome.apply(this, arguments);\n\t    }\n\n\t    return loadGenome;\n\t  }(),\n\t  getKnownGenomes: function () {\n\t    var _getKnownGenomes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n\t      var genomeList, jsonArray, processJson;\n\t      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t        while (1) {\n\t          switch (_context2.prev = _context2.next) {\n\t            case 0:\n\t              processJson = function _ref(jsonArray) {\n\t                var table = {};\n\t                jsonArray.forEach(function (json) {\n\t                  table[json.id] = json;\n\t                });\n\t                KNOWN_GENOMES = table;\n\t                return table;\n\t              };\n\n\t              genomeList = GenomeUtils.genomeList;\n\n\t              if (!KNOWN_GENOMES) {\n\t                _context2.next = 6;\n\t                break;\n\t              }\n\n\t              return _context2.abrupt(\"return\", KNOWN_GENOMES);\n\n\t            case 6:\n\t              if (genomeList) {\n\t                _context2.next = 10;\n\t                break;\n\t              }\n\n\t              return _context2.abrupt(\"return\", {});\n\n\t            case 10:\n\t              if (!(typeof genomeList === 'string')) {\n\t                _context2.next = 17;\n\t                break;\n\t              }\n\n\t              _context2.next = 13;\n\t              return igvxhr.loadJson(genomeList, {});\n\n\t            case 13:\n\t              jsonArray = _context2.sent;\n\t              return _context2.abrupt(\"return\", processJson(jsonArray));\n\n\t            case 17:\n\t              return _context2.abrupt(\"return\", processJson(genomeList));\n\n\t            case 18:\n\t            case \"end\":\n\t              return _context2.stop();\n\t          }\n\t        }\n\t      }, _callee2);\n\t    }));\n\n\t    function getKnownGenomes() {\n\t      return _getKnownGenomes.apply(this, arguments);\n\t    }\n\n\t    return getKnownGenomes;\n\t  }(),\n\t  isWholeGenomeView: function isWholeGenomeView(referenceFrame) {\n\t    var chromosomeName = referenceFrame.chrName.toLowerCase();\n\t    return 'all' === chromosomeName;\n\t  }\n\t};\n\n\tvar Genome = function Genome(config, sequence, ideograms, aliases) {\n\t  this.config = config;\n\t  this.id = config.id;\n\t  this.sequence = sequence;\n\t  this.chromosomeNames = sequence.chromosomeNames;\n\t  this.chromosomes = sequence.chromosomes; // An object (functions as a dictionary)\n\n\t  this.ideograms = ideograms;\n\t  this.wholeGenomeView = config.wholeGenomeView === undefined || config.wholeGenomeView;\n\n\t  if (this.wholeGenomeView && Object.keys(sequence.chromosomes).length > 1) {\n\t    constructWG(this, config);\n\t  } else {\n\t    this.wgChromosomeNames = sequence.chromosomeNames;\n\t  }\n\t  /**\n\t   * Return the official chromosome name for the (possibly) alias.  Deals with\n\t   * 1 <-> chr1,  chrM <-> MT,  IV <-> chr4, etc.\n\t   * @param str\n\t   */\n\n\n\t  var chrAliasTable = {},\n\t      self = this; // The standard mappings\n\n\t  chrAliasTable[\"all\"] = \"all\";\n\t  this.chromosomeNames.forEach(function (name) {\n\t    var alias = name.startsWith(\"chr\") ? name.substring(3) : \"chr\" + name;\n\t    chrAliasTable[alias.toLowerCase()] = name;\n\t    if (name === \"chrM\") chrAliasTable[\"mt\"] = \"chrM\";\n\t    if (name === \"MT\") chrAliasTable[\"chrm\"] = \"MT\";\n\t    chrAliasTable[name.toLowerCase()] = name;\n\t  }); // Custom mappings\n\n\t  if (aliases) {\n\t    aliases.forEach(function (array) {\n\t      // Find the official chr name\n\t      var defName, i;\n\n\t      for (i = 0; i < array.length; i++) {\n\t        if (self.chromosomes[array[i]]) {\n\t          defName = array[i];\n\t          break;\n\t        }\n\t      }\n\n\t      if (defName) {\n\t        array.forEach(function (alias) {\n\t          if (alias !== defName) {\n\t            chrAliasTable[alias.toLowerCase()] = defName;\n\t            chrAliasTable[alias] = defName; // Should not be needed\n\t          }\n\t        });\n\t      }\n\t    });\n\t  }\n\n\t  this.chrAliasTable = chrAliasTable;\n\t};\n\n\tGenome.prototype.showWholeGenomeView = function () {\n\t  return this.config.wholeGenomeView !== false;\n\t};\n\n\tGenome.prototype.toJSON = function () {\n\t  return Object.assign({}, this.config, {\n\t    tracks: undefined\n\t  });\n\t};\n\n\tGenome.prototype.getInitialLocus = function () {};\n\n\tGenome.prototype.getHomeChromosomeName = function () {\n\t  if (this.showWholeGenomeView() && this.chromosomes.hasOwnProperty(\"all\")) {\n\t    return \"all\";\n\t  } else {\n\t    var chromosome = this.chromosomes[this.chromosomeNames[0]];\n\n\t    if (chromosome.rangeLocus) {\n\t      return chromosome.name + \":\" + chromosome.rangeLocus;\n\t    } else {\n\t      return this.chromosomeNames[0];\n\t    }\n\t  }\n\t};\n\n\tGenome.prototype.getChromosomeName = function (str) {\n\t  var chr = this.chrAliasTable[str.toLowerCase()];\n\t  return chr ? chr : str;\n\t};\n\n\tGenome.prototype.getChromosome = function (chr) {\n\t  chr = this.getChromosomeName(chr);\n\t  return this.chromosomes[chr];\n\t};\n\n\tGenome.prototype.getCytobands = function (chr) {\n\t  return this.ideograms ? this.ideograms[chr] : null;\n\t};\n\n\tGenome.prototype.getLongestChromosome = function () {\n\t  var longestChr,\n\t      chromosomes = this.chromosomes;\n\n\t  for (var key in chromosomes) {\n\t    if (chromosomes.hasOwnProperty(key)) {\n\t      var chr = chromosomes[key];\n\n\t      if (longestChr === undefined || chr.bpLength > longestChr.bpLength) {\n\t        longestChr = chr;\n\t      }\n\t    }\n\n\t    return longestChr;\n\t  }\n\t};\n\n\tGenome.prototype.getChromosomes = function () {\n\t  return this.chromosomes;\n\t};\n\t/**\n\t * Return the genome coordinate in kb for the give chromosome and position.\n\t * NOTE: This might return undefined if the chr is filtered from whole genome view.\n\t */\n\n\n\tGenome.prototype.getGenomeCoordinate = function (chr, bp) {\n\t  var offset = this.getCumulativeOffset(chr);\n\t  if (offset === undefined) return undefined;\n\t  return offset + bp;\n\t};\n\t/**\n\t * Return the chromosome and coordinate in bp for the given genome coordinate\n\t */\n\n\n\tGenome.prototype.getChromosomeCoordinate = function (genomeCoordinate) {\n\t  if (this.cumulativeOffsets === undefined) {\n\t    this.cumulativeOffsets = computeCumulativeOffsets.call(this);\n\t  }\n\n\t  var lastChr = undefined;\n\t  var lastCoord = 0;\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = this.wgChromosomeNames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var name = _step.value;\n\t      var cumulativeOffset = this.cumulativeOffsets[name];\n\n\t      if (cumulativeOffset > genomeCoordinate) {\n\t        var position = genomeCoordinate - lastCoord;\n\t        return {\n\t          chr: lastChr,\n\t          position: position\n\t        };\n\t      }\n\n\t      lastChr = name;\n\t      lastCoord = cumulativeOffset;\n\t    } // If we get here off the end\n\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return {\n\t    chr: this.chromosomeNames[this.chromosomeNames.length - 1],\n\t    position: 0\n\t  };\n\t};\n\t/**\n\t * Return the offset in genome coordinates (kb) of the start of the given chromosome\n\t * NOTE:  This might return undefined if the chromosome is filtered from whole genome view.\n\t */\n\n\n\tGenome.prototype.getCumulativeOffset = function (chr) {\n\t  if (this.cumulativeOffsets === undefined) {\n\t    this.cumulativeOffsets = computeCumulativeOffsets.call(this);\n\t  }\n\n\t  var queryChr = this.getChromosomeName(chr);\n\t  return this.cumulativeOffsets[queryChr];\n\t};\n\n\tfunction computeCumulativeOffsets() {\n\t  var self = this;\n\t  var acc = {};\n\t  var offset = 0;\n\t  var _iteratorNormalCompletion2 = true;\n\t  var _didIteratorError2 = false;\n\t  var _iteratorError2 = undefined;\n\n\t  try {\n\t    for (var _iterator2 = self.wgChromosomeNames[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t      var name = _step2.value;\n\t      acc[name] = Math.floor(offset);\n\t      var chromosome = self.getChromosome(name);\n\t      offset += chromosome.bpLength;\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t        _iterator2.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError2) {\n\t        throw _iteratorError2;\n\t      }\n\t    }\n\t  }\n\n\t  return acc;\n\t}\n\t/**\n\t * Return the nominal genome length, this is the length of the main chromosomes (no scaffolds, etc).\n\t */\n\n\n\tGenome.prototype.getGenomeLength = function () {\n\t  var self = this;\n\n\t  if (!this.bpLength) {\n\t    var bpLength = 0;\n\t    self.wgChromosomeNames.forEach(function (cname) {\n\t      var c = self.chromosomes[cname];\n\t      bpLength += c.bpLength;\n\t    });\n\t    this.bpLength = bpLength;\n\t  }\n\n\t  return this.bpLength;\n\t};\n\n\tfunction loadCytobands(cytobandUrl, config) {\n\t  if (cytobandUrl.startsWith(\"data:\")) {\n\t    var data = decodeDataUri(cytobandUrl);\n\t    return Promise.resolve(getCytobands(data));\n\t  } else {\n\t    return igvxhr.loadString(cytobandUrl, buildOptions(config)).then(function (data) {\n\t      return getCytobands(data);\n\t    });\n\t  }\n\n\t  function getCytobands(data) {\n\t    var bands = [],\n\t        lastChr,\n\t        n = 0,\n\t        lines = splitLines(data),\n\t        len = lines.length,\n\t        cytobands = {};\n\n\t    for (var i = 0; i < len; i++) {\n\t      var tokens = lines[i].split(\"\\t\");\n\t      var chr = tokens[0];\n\t      if (!lastChr) lastChr = chr;\n\n\t      if (chr !== lastChr) {\n\t        cytobands[lastChr] = bands;\n\t        bands = [];\n\t        lastChr = chr;\n\t        n = 0;\n\t      }\n\n\t      if (tokens.length === 5) {\n\t        //10\t0\t3000000\tp15.3\tgneg\n\t        var start = parseInt(tokens[1]);\n\t        var end = parseInt(tokens[2]);\n\t        var name = tokens[3];\n\t        var stain = tokens[4];\n\t        bands[n++] = new Cytoband(start, end, name, stain);\n\t      }\n\t    }\n\n\t    return cytobands;\n\t  }\n\n\t  function decodeDataUri(dataUri) {\n\t    var plain;\n\n\t    if (dataUri.startsWith(\"data:application/gzip;base64\")) {\n\t      plain = decodeDataURI(dataUri);\n\t    } else {\n\t      var bytes,\n\t          split = dataUri.split(','),\n\t          info = split[0].split(':')[1],\n\t          dataString = split[1];\n\n\t      if (info.indexOf('base64') >= 0) {\n\t        dataString = atob(dataString);\n\t      } else {\n\t        dataString = decodeURI(dataString);\n\t      }\n\n\t      bytes = new Uint8Array(dataString.length);\n\n\t      for (var i = 0; i < dataString.length; i++) {\n\t        bytes[i] = dataString.charCodeAt(i);\n\t      }\n\n\t      var inflate = new Zlib.Gunzip(bytes);\n\t      plain = inflate.decompress();\n\t    }\n\n\t    var s = \"\";\n\t    var len = plain.length;\n\n\t    for (var _i = 0; _i < len; _i++) {\n\t      s += String.fromCharCode(plain[_i]);\n\t    }\n\n\t    return s;\n\t  }\n\t}\n\n\tfunction loadAliases(aliasURL, config) {\n\t  return igvxhr.loadString(aliasURL, buildOptions(config)).then(function (data) {\n\t    var lines = splitLines(data),\n\t        aliases = [];\n\t    lines.forEach(function (line) {\n\t      if (!line.startsWith(\"#\") && line.length > 0) aliases.push(line.split(\"\\t\"));\n\t    });\n\t    return aliases;\n\t  });\n\t}\n\n\tfunction constructWG(genome, config) {\n\t  var wgChromosomes;\n\n\t  if (config.chromosomeOrder) {\n\t    genome.wgChromosomeNames = config.chromosomeOrder.split(',').map(function (nm) {\n\t      return nm.trim();\n\t    });\n\t    wgChromosomes = genome.wgChromosomeNames.map(function (nm) {\n\t      return genome.chromosomes[nm];\n\t    }).filter(function (chr) {\n\t      return chr !== undefined;\n\t    });\n\t  } else {\n\t    // Trim small chromosomes.\n\t    var lengths = Object.keys(genome.chromosomes).map(function (key) {\n\t      return genome.chromosomes[key].bpLength;\n\t    });\n\t    var median = lengths.reduce(function (a, b) {\n\t      return Math.max(a, b);\n\t    });\n\t    var threshold = median / 50;\n\t    wgChromosomes = Object.values(genome.chromosomes).filter(function (chr) {\n\t      return chr.bpLength > threshold;\n\t    }); // Sort chromosomes.  First segregate numeric and alpha names, sort numeric, leave alpha as is\n\n\t    var numericChromosomes = wgChromosomes.filter(function (chr) {\n\t      return isDigit(chr.name.replace('chr', ''));\n\t    });\n\t    var alphaChromosomes = wgChromosomes.filter(function (chr) {\n\t      return !isDigit(chr.name.replace('chr', ''));\n\t    });\n\t    numericChromosomes.sort(function (a, b) {\n\t      return Number.parseInt(a.name.replace('chr', '')) - Number.parseInt(b.name.replace('chr', ''));\n\t    });\n\t    var wgChromosomeNames = numericChromosomes.map(function (chr) {\n\t      return chr.name;\n\t    });\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\n\t    try {\n\t      for (var _iterator3 = alphaChromosomes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t        var chr = _step3.value;\n\t        wgChromosomeNames.push(chr.name);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError3 = true;\n\t      _iteratorError3 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t          _iterator3.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError3) {\n\t          throw _iteratorError3;\n\t        }\n\t      }\n\t    }\n\n\t    genome.wgChromosomeNames = wgChromosomeNames;\n\t  } // Compute psuedo-chromosome \"all\"\n\n\n\t  var l = wgChromosomes.reduce(function (accumulator, currentValue) {\n\t    return accumulator += currentValue.bpLength;\n\t  }, 0);\n\t  genome.chromosomes[\"all\"] = {\n\t    name: \"all\",\n\t    bpLength: l\n\t  };\n\n\t  function isDigit(val) {\n\t    return /^\\d+$/.test(val);\n\t  }\n\t}\n\n\tvar NOT_LOADED_MESSAGE = 'Error loading track data';\n\n\tfunction ViewPort(trackView, $container, genomicState, width) {\n\t  var self = this;\n\t  this.guid = guid();\n\t  this.trackView = trackView;\n\t  this.genomicState = genomicState;\n\t  this.browser = trackView.browser; // viewport\n\n\t  this.$viewport = $('<div class=\"igv-viewport-div\">');\n\t  $container.append(this.$viewport); // store the viewport GUID for later use\n\n\t  this.$viewport.data('viewportGUID', this.guid); // viewport-content\n\n\t  var $div = $(\"<div>\", {\n\t    class: 'igv-viewport-content-div'\n\t  });\n\t  this.$viewport.append($div);\n\t  $div.height(this.$viewport.height());\n\t  this.contentDiv = $div.get(0); // viewport canvas\n\n\t  var $canvas = $('<canvas>');\n\t  $(this.contentDiv).append($canvas);\n\t  this.canvas = $canvas.get(0);\n\t  this.ctx = this.canvas.getContext(\"2d\");\n\t  this.setWidth(width);\n\n\t  if (\"sequence\" === trackView.track.type) {\n\t    this.$viewport.addClass('igv-viewport-sequence');\n\t  }\n\n\t  if ('ruler' === trackView.track.type) {\n\t    this.rulerSweeper = new RulerSweeper(this);\n\t    trackView.track.appendMultiPanelCloseButton(this.$viewport, this.genomicState);\n\t    this.$rulerLabel = $('<div class = \"igv-multi-locus-panel-label-div\">');\n\t    this.$rulerLabel.click(function (e) {\n\t      self.browser.selectMultiLocusPanelWithGenomicState(self.genomicState);\n\t    });\n\t    $(this.contentDiv).append(this.$rulerLabel);\n\n\t    if (true === GenomeUtils.isWholeGenomeView(this.genomicState.referenceFrame)) {\n\t      enableRulerTrackMouseHandlers.call(this);\n\t    } else {\n\t      disableRulerTrackMouseHandlers.call(this);\n\t    }\n\t  } else {\n\t    addMouseHandlers.call(this); // const $spinnerContainer = $('<div class=\"igv-viewport-spinner\">');\n\t    // const dimen = 32;\n\t    // $spinnerContainer.css({'font-size': dimen + 'px'});\n\n\t    this.$spinner = $('<div class=\"igv-viewport-spinner\">');\n\t    this.$spinner.append(createIcon(\"spinner\"));\n\t    this.$viewport.append(this.$spinner);\n\t    this.stopSpinner();\n\n\t    if (\"sequence\" !== trackView.track.type) {\n\t      this.popover = new Popover(this.browser.$content);\n\t      var str = trackView.track.name.toLowerCase().split(' ').join('_');\n\t      str = str + '_' + this.browser.genomicStateList.indexOf(this.genomicState);\n\t      this.popover.$popover.attr('id', str);\n\t      this.$zoomInNotice = createZoomInNotice.call(this, $(this.contentDiv));\n\t    }\n\t  }\n\n\t  if (trackView.track.name) {\n\t    this.$trackLabel = $('<div class=\"igv-track-label\">');\n\t    this.$viewport.append(this.$trackLabel);\n\t    this.setTrackLabel(trackView.track.name);\n\n\t    if (false === this.browser.trackLabelsVisible) {\n\t      this.$trackLabel.hide();\n\t    }\n\n\t    this.$trackLabel.click(function (e) {\n\t      var str;\n\t      e.stopPropagation();\n\n\t      if (typeof trackView.track.description === 'function') {\n\t        str = trackView.track.description();\n\t      } else if (trackView.track.description) {\n\t        str = trackView.track.description;\n\t      } else {\n\t        str = trackView.track.name;\n\t      }\n\n\t      var page = pageCoordinates(e);\n\t      self.popover.presentTrackContent(page.x, page.y, str);\n\t    });\n\t    this.$trackLabel.mousedown(function (e) {\n\t      // Prevent bubbling\n\t      e.stopPropagation();\n\t    });\n\t    this.$trackLabel.mouseup(function (e) {\n\t      // Prevent  bubbling\n\t      e.stopPropagation();\n\t    });\n\t    this.$trackLabel.mousemove(function (e) {\n\t      // Prevent  bubbling\n\t      e.stopPropagation();\n\t    });\n\t  }\n\t}\n\n\tfunction createZoomInNotice($parent) {\n\t  var $notice = $('<div class=\"zoom-in-notice-container\">');\n\t  $parent.append($notice);\n\t  var $e = $('<div>');\n\t  $notice.append($e);\n\t  $e.text('Zoom in to see features');\n\t  $notice.hide();\n\t  return $notice;\n\t}\n\n\tViewPort.prototype.isVisible = function () {\n\t  return this.$viewport.width();\n\t}; // UI\n\n\n\tViewPort.prototype.setTrackLabel = function (label) {\n\t  this.trackView.track.name = this.trackView.track.config.name = label;\n\t  this.$trackLabel.empty();\n\t  this.$trackLabel.html(label);\n\t  var txt = this.$trackLabel.text();\n\t  this.$trackLabel.attr('title', txt);\n\t};\n\n\tViewPort.prototype.setWidth = function (width) {\n\t  this.$viewport.outerWidth(width);\n\t  this.canvas.style.width = this.$viewport.width() + 'px';\n\t  this.canvas.setAttribute('width', this.$viewport.width());\n\t};\n\n\tViewPort.prototype.startSpinner = function () {\n\t  var $spinner = this.$spinner;\n\n\t  if ($spinner) {\n\t    $spinner.addClass(\"igv-fa5-spin\");\n\t    $spinner.show();\n\t  }\n\t};\n\n\tViewPort.prototype.stopSpinner = function () {\n\t  var $spinner = this.$spinner;\n\n\t  if ($spinner) {\n\t    $spinner.hide();\n\t    $spinner.removeClass(\"igv-fa5-spin\");\n\t  }\n\t};\n\n\tViewPort.prototype.showMessage = function (message) {\n\t  if (!this.messageDiv) {\n\t    this.messageDiv = document.createElement('div');\n\t    this.messageDiv.className = 'igv-viewport-message';\n\t    this.contentDiv.append(this.messageDiv);\n\t  }\n\n\t  this.messageDiv.textContent = message;\n\t  this.messageDiv.style.display = 'inline-block';\n\t};\n\n\tViewPort.prototype.hideMessage = function (message) {\n\t  if (this.messageDiv) this.messageDiv.style.display = 'none';\n\t};\n\n\tViewPort.prototype.checkZoomIn = function () {\n\t  if (!viewIsReady.call(this)) {\n\t    return false;\n\t  }\n\n\t  if (this.$zoomInNotice) {\n\t    if (showZoomInNotice.call(this)) {\n\t      // Out of visibility window\n\t      if (this.canvas) {\n\t        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t        this.tile = undefined;\n\t      }\n\n\t      this.$zoomInNotice.show();\n\n\t      if (this.trackView.track.autoHeight) {\n\t        var minHeight = this.trackView.minHeight || 0;\n\t        this.setContentHeight(minHeight);\n\t      }\n\n\t      return false;\n\t    } else {\n\t      this.$zoomInNotice.hide();\n\t      return true;\n\t    }\n\t  }\n\n\t  return true;\n\n\t  function showZoomInNotice() {\n\t    var referenceFrame = this.genomicState.referenceFrame;\n\n\t    if (referenceFrame.chrName.toLowerCase() === \"all\" && !this.trackView.track.supportsWholeGenome()) {\n\t      return true;\n\t    } else {\n\t      var visibilityWindow = typeof this.trackView.track.getVisibilityWindow === 'function' ? this.trackView.track.getVisibilityWindow() : this.trackView.track.visibilityWindow;\n\t      return visibilityWindow !== undefined && visibilityWindow > 0 && referenceFrame.bpPerPixel * this.$viewport.width() > visibilityWindow;\n\t    }\n\t  }\n\t};\n\n\tViewPort.prototype.shift = function () {\n\t  var self = this;\n\t  var referenceFrame = self.genomicState.referenceFrame;\n\n\t  if (self.canvas && self.tile && self.tile.chr === referenceFrame.chrName && self.tile.bpPerPixel === referenceFrame.bpPerPixel) {\n\t    var pixelOffset = Math.round((self.tile.startBP - referenceFrame.start) / referenceFrame.bpPerPixel);\n\t    self.canvas.style.left = pixelOffset + \"px\";\n\t  }\n\t};\n\n\tViewPort.prototype.setTop = function (contentTop) {\n\t  var viewportHeight = this.$viewport.height();\n\t  var viewTop = -contentTop;\n\t  var viewBottom = viewTop + viewportHeight;\n\t  $(this.contentDiv).css(\"top\", contentTop + \"px\");\n\n\t  if (!this.canvasVerticalRange || this.canvasVerticalRange.bottom < viewBottom || this.canvasVerticalRange.top > viewTop) {\n\t    this.repaint();\n\t  }\n\t};\n\n\tViewPort.prototype.loadFeatures = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t  var genomicState, referenceFrame, chr, chrLength, pixelWidth, bpWidth, bpStart, bpEnd, features, roiFeatures, roi, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, r, f;\n\n\t  return regeneratorRuntime.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          genomicState = this.genomicState;\n\t          referenceFrame = genomicState.referenceFrame;\n\t          chr = referenceFrame.chrName; // Expand the requested range so we can pan a bit without reloading.  But not beyond chromosome bounds\n\n\t          chrLength = this.browser.genome.getChromosome(chr).bpLength;\n\t          pixelWidth = $(this.contentDiv).width() * 3;\n\t          bpWidth = pixelWidth * referenceFrame.bpPerPixel;\n\t          bpStart = Math.floor(Math.max(0, referenceFrame.start - bpWidth / 3));\n\t          bpEnd = Math.ceil(Math.min(chrLength, bpStart + bpWidth));\n\n\t          if (!(this.loading && this.loading.start === bpStart && this.loading.end === bpEnd)) {\n\t            _context.next = 10;\n\t            break;\n\t          }\n\n\t          return _context.abrupt(\"return\", undefined);\n\n\t        case 10:\n\t          this.loading = {\n\t            start: bpStart,\n\t            end: bpEnd\n\t          };\n\t          this.startSpinner(); // console.log('get features');\n\n\t          _context.prev = 12;\n\t          _context.next = 15;\n\t          return getFeatures.call(this, referenceFrame.chrName, bpStart, bpEnd, referenceFrame.bpPerPixel);\n\n\t        case 15:\n\t          features = _context.sent;\n\t          roiFeatures = [];\n\t          roi = mergeArrays(this.browser.roi, this.trackView.track.roi);\n\n\t          if (!roi) {\n\t            _context.next = 47;\n\t            break;\n\t          }\n\n\t          _iteratorNormalCompletion = true;\n\t          _didIteratorError = false;\n\t          _iteratorError = undefined;\n\t          _context.prev = 22;\n\t          _iterator = roi[Symbol.iterator]();\n\n\t        case 24:\n\t          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t            _context.next = 33;\n\t            break;\n\t          }\n\n\t          r = _step.value;\n\t          _context.next = 28;\n\t          return r.getFeatures(referenceFrame.chrName, bpStart, bpEnd, referenceFrame.bpPerPixel);\n\n\t        case 28:\n\t          f = _context.sent;\n\t          roiFeatures.push({\n\t            track: r,\n\t            features: f\n\t          });\n\n\t        case 30:\n\t          _iteratorNormalCompletion = true;\n\t          _context.next = 24;\n\t          break;\n\n\t        case 33:\n\t          _context.next = 39;\n\t          break;\n\n\t        case 35:\n\t          _context.prev = 35;\n\t          _context.t0 = _context[\"catch\"](22);\n\t          _didIteratorError = true;\n\t          _iteratorError = _context.t0;\n\n\t        case 39:\n\t          _context.prev = 39;\n\t          _context.prev = 40;\n\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\n\t        case 42:\n\t          _context.prev = 42;\n\n\t          if (!_didIteratorError) {\n\t            _context.next = 45;\n\t            break;\n\t          }\n\n\t          throw _iteratorError;\n\n\t        case 45:\n\t          return _context.finish(42);\n\n\t        case 46:\n\t          return _context.finish(39);\n\n\t        case 47:\n\t          this.tile = new Tile(referenceFrame.chrName, bpStart, bpEnd, referenceFrame.bpPerPixel, features, roiFeatures);\n\t          this.loading = false;\n\t          this.hideMessage();\n\t          this.stopSpinner();\n\t          return _context.abrupt(\"return\", this.tile);\n\n\t        case 54:\n\t          _context.prev = 54;\n\t          _context.t1 = _context[\"catch\"](12);\n\t          this.showMessage(NOT_LOADED_MESSAGE);\n\t          console.error(_context.t1);\n\n\t        case 58:\n\t          _context.prev = 58;\n\t          this.loading = false;\n\t          this.stopSpinner();\n\t          return _context.finish(58);\n\n\t        case 62:\n\t        case \"end\":\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this, [[12, 54, 58, 62], [22, 35, 39, 47], [40,, 42, 46]]);\n\t}));\n\t/**\n\t *\n\t * @param tile - the tile is created whenever features are loaded.  It contains the genomic state\n\t * representing the features,as well as the features.  The object evolved, at one time it was an image tile.\n\t * Should be renamed.\n\t */\n\n\tViewPort.prototype.repaint = /*#__PURE__*/function () {\n\t  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(tile) {\n\t    var self, isWGV, features, roiFeatures, genomicState, referenceFrame, bpPerPixel, bpStart, bpEnd, pixelWidth, viewportHeight, pixelHeight, canvasTop, devicePixelRatio, drawConfiguration, newCanvas, ctx, pixelXOffset;\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            self = this; //\n\n\t            if (!tile) {\n\t              tile = this.tile;\n\t            }\n\n\t            if (tile) {\n\t              _context2.next = 4;\n\t              break;\n\t            }\n\n\t            return _context2.abrupt(\"return\");\n\n\t          case 4:\n\t            isWGV = GenomeUtils.isWholeGenomeView(this.genomicState.referenceFrame);\n\t            features = tile.features;\n\t            roiFeatures = tile.roiFeatures;\n\t            genomicState = this.genomicState;\n\t            referenceFrame = genomicState.referenceFrame;\n\t            bpPerPixel = isWGV ? referenceFrame.initialEnd / this.$viewport.width() : tile.bpPerPixel;\n\t            bpStart = isWGV ? 0 : tile.startBP;\n\t            bpEnd = isWGV ? referenceFrame.initialEnd : tile.endBP;\n\t            pixelWidth = isWGV ? this.$viewport.width() : Math.ceil((bpEnd - bpStart) / bpPerPixel); // For deep tracks we paint a canvas == 3*viewportHeight centered on the current vertical scroll position\n\n\t            viewportHeight = this.$viewport.height();\n\t            pixelHeight = Math.min(self.getContentHeight(), 3 * viewportHeight);\n\n\t            if (!(0 === pixelWidth || 0 === pixelHeight)) {\n\t              _context2.next = 18;\n\t              break;\n\t            }\n\n\t            if (self.canvas) {\n\t              $(self.canvas).remove();\n\t            }\n\n\t            return _context2.abrupt(\"return\");\n\n\t          case 18:\n\t            canvasTop = Math.max(0, -$(this.contentDiv).position().top - viewportHeight); // Always use high DPI if in compressed display mode, otherwise use preference setting;\n\n\t            if (\"FILL\" === this.trackView.track.displayMode) {\n\t              devicePixelRatio = window.devicePixelRatio;\n\t            } else {\n\t              devicePixelRatio = this.trackView.track.supportHiDPI === false ? 1 : window.devicePixelRatio;\n\t            }\n\n\t            drawConfiguration = {\n\t              features: features,\n\t              pixelWidth: pixelWidth,\n\t              pixelHeight: pixelHeight,\n\t              pixelTop: canvasTop,\n\t              bpStart: bpStart,\n\t              bpEnd: bpEnd,\n\t              bpPerPixel: bpPerPixel,\n\t              referenceFrame: referenceFrame,\n\t              genomicState: genomicState,\n\t              selection: self.selection,\n\t              viewport: self,\n\t              viewportWidth: self.$viewport.width(),\n\t              viewportContainerX: referenceFrame.toPixels(referenceFrame.start - bpStart),\n\t              viewportContainerWidth: this.browser.viewportContainerWidth()\n\t            };\n\t            newCanvas = $('<canvas>').get(0);\n\t            newCanvas.style.width = pixelWidth + \"px\";\n\t            newCanvas.style.height = pixelHeight + \"px\";\n\t            newCanvas.width = devicePixelRatio * pixelWidth;\n\t            newCanvas.height = devicePixelRatio * pixelHeight;\n\t            ctx = newCanvas.getContext(\"2d\"); // ctx.save();\n\n\t            ctx.scale(devicePixelRatio, devicePixelRatio);\n\t            pixelXOffset = Math.round((bpStart - referenceFrame.start) / referenceFrame.bpPerPixel);\n\t            newCanvas.style.position = 'absolute';\n\t            newCanvas.style.left = pixelXOffset + \"px\";\n\t            newCanvas.style.top = canvasTop + \"px\";\n\t            drawConfiguration.context = ctx;\n\t            ctx.translate(0, -canvasTop);\n\t            draw.call(this, drawConfiguration, features, roiFeatures); // ctx.translate(0, canvasTop);\n\t            // ctx.restore();\n\n\t            this.canvasVerticalRange = {\n\t              top: canvasTop,\n\t              bottom: canvasTop + pixelHeight\n\t            };\n\n\t            if (self.canvas) {\n\t              $(self.canvas).remove();\n\t            }\n\n\t            $(self.contentDiv).append(newCanvas);\n\t            self.canvas = newCanvas;\n\t            self.ctx = ctx;\n\n\t          case 40:\n\t          case \"end\":\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this);\n\t  }));\n\n\t  return function (_x) {\n\t    return _ref2.apply(this, arguments);\n\t  };\n\t}();\n\t/**\n\t *\n\t * @param tile - the tile is created whenever features are loaded.  It contains the genomic state\n\t * representing the features,as well as the features.  The object evolved, at one time it was an image tile.\n\t * Should be renamed.\n\t */\n\n\n\tViewPort.prototype.toSVG = /*#__PURE__*/function () {\n\t  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(tile) {\n\t    var genomicState, referenceFrame, bpPerPixel, features, roiFeatures, pixelWidth, pixelHeight, bpStart, bpEnd, ctx, drawConfiguration;\n\t    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t      while (1) {\n\t        switch (_context3.prev = _context3.next) {\n\t          case 0:\n\t            if (!(this.$zoomInNotice && this.$zoomInNotice.is(\":visible\"))) {\n\t              _context3.next = 2;\n\t              break;\n\t            }\n\n\t            return _context3.abrupt(\"return\");\n\n\t          case 2:\n\t            genomicState = this.genomicState;\n\t            referenceFrame = genomicState.referenceFrame;\n\t            bpPerPixel = tile.bpPerPixel;\n\t            features = tile.features;\n\t            roiFeatures = tile.roiFeatures;\n\t            pixelWidth = this.$viewport.width();\n\t            pixelHeight = this.$viewport.height();\n\t            bpStart = referenceFrame.start;\n\t            bpEnd = referenceFrame.start + pixelWidth * referenceFrame.bpPerPixel;\n\t            ctx = new C2S({\n\t              // svg\n\t              width: pixelWidth,\n\t              height: pixelHeight,\n\t              viewbox: {\n\t                x: 0,\n\t                y: -$(this.contentDiv).position().top,\n\t                width: pixelWidth,\n\t                height: pixelHeight\n\t              }\n\t            });\n\t            drawConfiguration = {\n\t              viewport: this,\n\t              context: ctx,\n\t              top: -$(this.contentDiv).position().top,\n\t              pixelTop: 0,\n\t              // for compatibility with canvas draw\n\t              pixelWidth: pixelWidth,\n\t              pixelHeight: pixelHeight,\n\t              bpStart: bpStart,\n\t              bpEnd: bpEnd,\n\t              bpPerPixel: bpPerPixel,\n\t              referenceFrame: referenceFrame,\n\t              genomicState: this.genomicState,\n\t              selection: this.selection,\n\t              viewportWidth: pixelWidth,\n\t              viewportContainerX: 0,\n\t              viewportContainerWidth: this.browser.viewportContainerWidth()\n\t            };\n\t            draw.call(this, drawConfiguration, features, roiFeatures);\n\t            return _context3.abrupt(\"return\", ctx.getSerializedSvg(true));\n\n\t          case 15:\n\t          case \"end\":\n\t            return _context3.stop();\n\t        }\n\t      }\n\t    }, _callee3, this);\n\t  }));\n\n\t  return function (_x2) {\n\t    return _ref3.apply(this, arguments);\n\t  };\n\t}();\n\n\tfunction draw(drawConfiguration, features, roiFeatures) {\n\t  if (features) {\n\t    drawConfiguration.features = features;\n\t    this.trackView.track.draw(drawConfiguration);\n\t  }\n\n\t  if (roiFeatures) {\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\n\t    try {\n\t      for (var _iterator2 = roiFeatures[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var r = _step2.value;\n\t        drawConfiguration.features = r.features;\n\t        r.track.draw(drawConfiguration);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError2 = true;\n\t      _iteratorError2 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t          _iterator2.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError2) {\n\t          throw _iteratorError2;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n\tfunction viewIsReady() {\n\t  return this.browser && this.browser.genomicStateList && this.genomicState.referenceFrame;\n\t}\n\n\tfunction enableRulerTrackMouseHandlers() {\n\t  var index = this.browser.genomicStateList.indexOf(this.genomicState);\n\t  var namespace = '.ruler_track_viewport_' + index; // console.log(' enable ruler mouse handler ' + index);\n\n\t  var self = this;\n\t  this.$viewport.on('click' + namespace, function (e) {\n\t    var pixel = translateMouseCoordinates(e, self.$viewport.get(0)).x;\n\t    var bp = Math.round(self.genomicState.referenceFrame.start + self.genomicState.referenceFrame.toBP(pixel));\n\t    var searchString;\n\n\t    if (1 === self.browser.genomicStateList.length) {\n\t      searchString = self.browser.genome.getChromosomeCoordinate(bp).chr;\n\t    } else {\n\t      var loci = self.browser.genomicStateList.map(function (genomicState) {\n\t        return genomicState.locusSearchString;\n\t      });\n\t      loci[self.browser.genomicStateList.indexOf(self.genomicState)] = self.browser.genome.getChromosomeCoordinate(bp).chr;\n\t      searchString = loci.join(' ');\n\t    }\n\n\t    self.browser.search(searchString);\n\t  });\n\t}\n\n\tfunction disableRulerTrackMouseHandlers() {\n\t  var index = this.browser.genomicStateList.indexOf(this.genomicState);\n\t  var namespace = '.ruler_track_viewport_' + index; // console.log('disable ruler mouse handler ' + index);\n\n\t  this.$viewport.off(namespace);\n\t}\n\n\tViewPort.prototype.setContentHeight = function (contentHeight) {\n\t  // Maximum height of a canvas is ~32,000 pixels on Chrome, possibly smaller on other platforms\n\t  contentHeight = Math.min(contentHeight, 32000);\n\t  $(this.contentDiv).height(contentHeight);\n\t  if (this.tile) this.tile.invalidate = true;\n\t};\n\n\tViewPort.prototype.getContentHeight = function () {\n\t  return $(this.contentDiv).height();\n\t};\n\n\tViewPort.prototype.getContentTop = function () {\n\t  return this.contentDiv.offsetTop;\n\t};\n\n\tViewPort.prototype.isLoading = function () {\n\t  return this.loading;\n\t};\n\n\tViewPort.prototype.saveImage = function () {\n\t  if (!this.ctx) return;\n\t  var canvasTop = this.canvasVerticalRange ? this.canvasVerticalRange.top : 0;\n\t  var devicePixelRatio = window.devicePixelRatio;\n\t  var w = this.$viewport.width() * devicePixelRatio;\n\t  var h = this.$viewport.height() * devicePixelRatio;\n\t  var x = -$(this.canvas).position().left * devicePixelRatio;\n\t  var y = (-$(this.contentDiv).position().top - canvasTop) * devicePixelRatio;\n\t  var imageData = this.ctx.getImageData(x, y, w, h);\n\t  var exportCanvas = document.createElement('canvas');\n\t  var exportCtx = exportCanvas.getContext('2d');\n\t  exportCanvas.width = imageData.width;\n\t  exportCanvas.height = imageData.height;\n\t  exportCtx.putImageData(imageData, 0, 0); // filename = this.trackView.track.name + \".png\";\n\n\t  var filename = (this.$trackLabel.text() ? this.$trackLabel.text() : \"image\") + \".png\";\n\t  var data = exportCanvas.toDataURL(\"image/png\");\n\t  download(filename, data);\n\t};\n\n\tViewPort.prototype.renderSVGContext = /*#__PURE__*/function () {\n\t  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(context, offset) {\n\t    var str, genomicStateIndex, id, bbox, yScrollDelta, dx, dy, _this$$viewport$get$g, width, height, referenceFrame, bpStart, bpPerPixel, drawConfig, features, roiFeatures;\n\n\t    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t      while (1) {\n\t        switch (_context4.prev = _context4.next) {\n\t          case 0:\n\t            if (!(this.$zoomInNotice && this.$zoomInNotice.is(\":visible\"))) {\n\t              _context4.next = 2;\n\t              break;\n\t            }\n\n\t            return _context4.abrupt(\"return\");\n\n\t          case 2:\n\t            str = this.trackView.track.name || this.trackView.track.id;\n\t            str = str.replace(/\\W/g, '');\n\t            genomicStateIndex = this.browser.genomicStateList.indexOf(this.genomicState);\n\t            id = str.toLowerCase() + '_genomic_state_index_' + genomicStateIndex; // If present, paint axis canvas. Only in first multi-locus panel.\n\n\t            if (0 === genomicStateIndex && typeof this.trackView.track.paintAxis === 'function') {\n\t              bbox = this.trackView.controlCanvas.getBoundingClientRect();\n\t              context.addTrackGroupWithTranslationAndClipRect(id + '_axis', offset.deltaX - bbox.width, offset.deltaY, bbox.width, bbox.height, 0);\n\t              context.save();\n\t              this.trackView.track.paintAxis(context, bbox.width, bbox.height);\n\t              context.restore();\n\t            }\n\n\t            yScrollDelta = $(this.contentDiv).position().top;\n\t            dx = offset.deltaX + genomicStateIndex * context.multiLocusGap;\n\t            dy = offset.deltaY + yScrollDelta;\n\t            _this$$viewport$get$g = this.$viewport.get(0).getBoundingClientRect(), width = _this$$viewport$get$g.width, height = _this$$viewport$get$g.height;\n\t            context.addTrackGroupWithTranslationAndClipRect(id, dx, dy, width, height, -yScrollDelta);\n\t            referenceFrame = this.genomicState.referenceFrame;\n\t            bpStart = referenceFrame.start, bpPerPixel = referenceFrame.bpPerPixel;\n\t            context.save();\n\t            drawConfig = {\n\t              context: context,\n\t              viewport: this,\n\t              referenceFrame: referenceFrame,\n\t              genomicState: this.genomicState,\n\t              pixelWidth: width,\n\t              pixelHeight: height,\n\t              viewportWidth: width,\n\t              viewportContainerX: 0,\n\t              viewportContainerWidth: this.browser.viewportContainerWidth(),\n\t              bpStart: bpStart,\n\t              bpEnd: bpStart + width * bpPerPixel,\n\t              bpPerPixel: bpPerPixel,\n\t              selection: this.selection\n\t            };\n\t            features = this.tile ? this.tile.features : [];\n\t            roiFeatures = this.tile ? this.tile.roiFeatures : undefined;\n\t            draw.call(this, drawConfig, features, roiFeatures);\n\n\t            if (this.$trackLabel && true === this.browser.trackLabelsVisible) {\n\t              renderTrackLabelSVG.call(this, context);\n\t            }\n\n\t            context.restore();\n\n\t          case 21:\n\t          case \"end\":\n\t            return _context4.stop();\n\t        }\n\t      }\n\t    }, _callee4, this);\n\t  }));\n\n\t  return function (_x3, _x4) {\n\t    return _ref4.apply(this, arguments);\n\t  };\n\t}();\n\n\tViewPort.prototype.saveSVG = function () {\n\t  var width = this.$viewport.width();\n\t  var height = this.$viewport.height();\n\t  var context = new C2S({\n\t    width: width,\n\t    height: height,\n\t    viewbox: {\n\t      x: 0,\n\t      y: -$(this.contentDiv).position().top,\n\t      width: width,\n\t      height: height\n\t    }\n\t  });\n\t  var _this$genomicState$re = this.genomicState.referenceFrame,\n\t      start = _this$genomicState$re.start,\n\t      bpPerPixel = _this$genomicState$re.bpPerPixel;\n\t  var drawConfiguration = {\n\t    viewport: this,\n\t    context: context,\n\t    top: -$(this.contentDiv).position().top,\n\t    pixelTop: 0,\n\t    pixelWidth: width,\n\t    pixelHeight: height,\n\t    bpStart: start,\n\t    bpEnd: start + width * bpPerPixel,\n\t    bpPerPixel: bpPerPixel,\n\t    referenceFrame: this.genomicState.referenceFrame,\n\t    genomicState: this.genomicState,\n\t    selection: this.selection,\n\t    viewportWidth: width,\n\t    viewportContainerX: 0,\n\t    viewportContainerWidth: this.browser.viewportContainerWidth()\n\t  };\n\t  draw.call(this, drawConfiguration, this.tile.features);\n\n\t  if (this.$trackLabel && true === this.browser.trackLabelsVisible) {\n\t    renderTrackLabelSVG.call(this, context);\n\t  }\n\n\t  var svg = drawConfiguration.context.getSerializedSvg(true);\n\t  var data = URL.createObjectURL(new Blob([svg], {\n\t    type: \"application/octet-stream\"\n\t  }));\n\t  var str = this.$trackLabel ? this.$trackLabel.text() : this.trackView.track.id;\n\t  var filename = str + \".svg\";\n\t  download(filename, data);\n\t};\n\n\tfunction renderTrackLabelSVG(context) {\n\t  var _relativeDOMBBox = relativeDOMBBox(this.$viewport.get(0), this.$trackLabel.get(0)),\n\t      x = _relativeDOMBBox.x,\n\t      y = _relativeDOMBBox.y,\n\t      width = _relativeDOMBBox.width,\n\t      height = _relativeDOMBBox.height;\n\n\t  var _context$measureText = context.measureText(this.$trackLabel.text()),\n\t      stringWidth = _context$measureText.width;\n\n\t  context.fillStyle = \"white\";\n\t  context.fillRect(x, y, width, height);\n\t  context.font = \"12px Arial\";\n\t  context.fillStyle = 'rgb(68, 68, 68)';\n\t  var dx = 0.25 * (width - stringWidth);\n\t  var dy = 0.7 * (height - 12);\n\t  context.fillText(this.$trackLabel.text(), x + dx, y + height - dy);\n\t  context.strokeStyle = 'rgb(68, 68, 68)';\n\t  context.strokeRect(x, y, width, height);\n\t}\n\t/**\n\t * Called when the associated track is removed.  Do any needed cleanup here.\n\t */\n\n\n\tViewPort.prototype.dispose = function () {\n\t  var self = this;\n\n\t  if (this.popover) {\n\t    this.popover.$popover.off();\n\t    this.popover.$popover.empty();\n\t    this.popover.$popover.remove();\n\t  }\n\n\t  $(this.canvas).off();\n\t  $(this.canvas).empty();\n\t  $(this.contentDiv).off();\n\t  $(this.contentDiv).empty();\n\t  this.$viewport.off();\n\t  this.$viewport.empty(); // Null out all properties -- this should not be neccessary, but just in case there is a\n\t  // reference to self somewhere we want to free memory.\n\n\t  Object.keys(this).forEach(function (key, i, list) {\n\t    self[key] = undefined;\n\t  });\n\t};\n\n\tViewPort.prototype.getCachedFeatures = function () {\n\t  return this.tile ? this.tile.features : [];\n\t};\n\n\tvar Tile = function Tile(chr, tileStart, tileEnd, bpPerPixel, features, roiFeatures) {\n\t  this.chr = chr;\n\t  this.startBP = tileStart;\n\t  this.endBP = tileEnd;\n\t  this.bpPerPixel = bpPerPixel;\n\t  this.features = features;\n\t  this.roiFeatures = roiFeatures;\n\t};\n\n\tTile.prototype.containsRange = function (chr, start, end, bpPerPixel) {\n\t  return this.bpPerPixel === bpPerPixel && start >= this.startBP && end <= this.endBP && chr === this.chr;\n\t};\n\n\tTile.prototype.overlapsRange = function (chr, start, end) {\n\t  return this.chr === chr && end >= this.startBP && start <= this.endBP;\n\t};\n\n\tfunction addMouseHandlers() {\n\t  var self = this;\n\t  var browser = this.browser;\n\t  var mouseDownCoords;\n\t  var popupTimerID;\n\t  var lastClickTime = 0;\n\t  this.$viewport.on(\"contextmenu\", function (e) {\n\t    // Ignore if we are doing a drag.  This can happen with touch events.\n\t    if (self.browser.dragObject) {\n\t      return false;\n\t    }\n\n\t    var clickState = createClickState(e, self);\n\n\t    if (undefined === clickState) {\n\t      return false;\n\t    }\n\n\t    e.preventDefault(); // Track specific items\n\n\t    var menuItems = [];\n\n\t    if (typeof self.trackView.track.contextMenuItemList === \"function\") {\n\t      menuItems = self.trackView.track.contextMenuItemList(clickState);\n\t    } // Add items common to all tracks\n\n\n\t    if (menuItems.length > 0) {\n\t      menuItems.push({\n\t        label: $('<HR>')\n\t      });\n\t    }\n\n\t    menuItems.push({\n\t      label: 'Save Image (PNG)',\n\t      click: function click() {\n\t        self.saveImage();\n\t      }\n\t    });\n\t    menuItems.push({\n\t      label: 'Save Image (SVG)',\n\t      click: function click() {\n\t        self.saveSVG();\n\t      }\n\t    });\n\t    if (self.popover) self.popover.presentTrackContextMenu(e, menuItems);\n\t  });\n\t  /**\n\t   * Mouse click down,  notify browser for potential drag (pan), and record position for potential click.\n\t   */\n\n\t  this.$viewport.on('mousedown', function (e) {\n\t    self.enableClick = true;\n\t    browser.mouseDownOnViewport(e, self);\n\t    mouseDownCoords = pageCoordinates(e);\n\t  });\n\t  this.$viewport.on('touchstart', function (e) {\n\t    self.enableClick = true;\n\t    browser.mouseDownOnViewport(e, self);\n\t    mouseDownCoords = pageCoordinates(e);\n\t  });\n\t  /**\n\t   * Mouse is released.  Ignore if this is a context menu click, or the end of a drag action.   If neither of\n\t   * those, it is a click.\n\t   */\n\n\t  this.$viewport.on('mouseup', handleMouseUp);\n\t  this.$viewport.on('touchend', handleMouseUp);\n\t  this.$viewport.on('click', function (e) {\n\t    if (self.enableClick) {\n\t      handleClick(e);\n\t    }\n\t  });\n\n\t  function handleMouseUp(e) {\n\t    // Any mouse up cancels drag and scrolling\n\t    if (self.browser.dragObject || self.browser.isScrolling) {\n\t      self.browser.cancelTrackPan();\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      self.enableClick = false; // Until next mouse down\n\n\t      return;\n\t    }\n\n\t    self.browser.cancelTrackPan();\n\t    self.browser.endTrackDrag();\n\t  }\n\n\t  function handleClick(e) {\n\t    if (3 === e.which || e.ctrlKey) {\n\t      return;\n\t    } // Close any currently open popups\n\n\n\t    $('.igv-popover').hide();\n\n\t    if (browser.dragObject || browser.isScrolling) {\n\t      return;\n\t    } // // Interpret mouseDown + mouseUp < 5 pixels as a click.\n\t    // if(!mouseDownCoords) {\n\t    //     return;\n\t    // }\n\t    // const coords = pageCoordinates(e);\n\t    // const dx = coords.x - mouseDownCoords.x;\n\t    // const dy = coords.y - mouseDownCoords.y;\n\t    // const dist2 = dx*dx + dy*dy;\n\t    // if(dist2 > 25) {\n\t    //     mouseDownCoords = undefined;\n\t    //     return;\n\t    // }\n\t    // Treat as a mouse click, its either a single or double click.\n\t    // Handle here and stop propogation / default\n\n\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t    var mouseX = translateMouseCoordinates(e, self.$viewport.get(0)).x;\n\t    var mouseXCanvas = translateMouseCoordinates(e, self.canvas).x;\n\t    var referenceFrame = self.genomicState.referenceFrame;\n\t    var xBP = Math.floor(referenceFrame.start + referenceFrame.toBP(mouseXCanvas));\n\t    var time = Date.now();\n\n\t    if (time - lastClickTime < browser.constants.doubleClickDelay) {\n\t      // double-click\n\t      if (popupTimerID) {\n\t        window.clearTimeout(popupTimerID);\n\t        popupTimerID = undefined;\n\t      }\n\n\t      var centerBP = Math.round(referenceFrame.start + referenceFrame.toBP(mouseX));\n\t      var string;\n\n\t      if ('all' === referenceFrame.chrName.toLowerCase()) {\n\t        var chr = browser.genome.getChromosomeCoordinate(centerBP).chr;\n\n\t        if (1 === browser.genomicStateList.length) {\n\t          string = chr;\n\t        } else {\n\t          var loci = browser.genomicStateList.map(function (g) {\n\t            return g.locusSearchString;\n\t          });\n\t          loci[browser.genomicStateList.indexOf(self.genomicState)] = chr;\n\t          string = loci.join(' ');\n\t        }\n\n\t        browser.search(string);\n\t      } else {\n\t        browser.zoomWithScaleFactor(0.5, centerBP, self);\n\t      }\n\t    } else {\n\t      // single-click\n\t      if (e.shiftKey && typeof self.trackView.track.shiftClick === \"function\") {\n\t        self.trackView.track.shiftClick(xBP, e);\n\t      } else if (typeof self.trackView.track.popupData === \"function\") {\n\t        popupTimerID = setTimeout(function () {\n\t          var content = getPopupContent(e, self);\n\n\t          if (content) {\n\t            var page = pageCoordinates(e);\n\t            self.popover.presentTrackContent(page.x, page.y, content);\n\t          }\n\n\t          clearTimeout(popupTimerID);\n\t          popupTimerID = undefined;\n\t        }, browser.constants.doubleClickDelay);\n\t      }\n\t    }\n\n\t    lastClickTime = time;\n\t  }\n\n\t  function createClickState(e, viewport) {\n\t    var referenceFrame = viewport.genomicState.referenceFrame;\n\t    var viewportCoords = translateMouseCoordinates(e, viewport.contentDiv);\n\t    var canvasCoords = translateMouseCoordinates(e, viewport.canvas);\n\t    var genomicLocation = referenceFrame.start + referenceFrame.toBP(viewportCoords.x);\n\n\t    if (undefined === genomicLocation || null === viewport.tile) {\n\t      return undefined;\n\t    }\n\n\t    return {\n\t      viewport: viewport,\n\t      referenceFrame: referenceFrame,\n\t      genomicLocation: genomicLocation,\n\t      x: viewportCoords.x,\n\t      y: viewportCoords.y,\n\t      canvasX: canvasCoords.x,\n\t      canvasY: canvasCoords.y\n\t    };\n\t  }\n\t  /**\n\t   * Return markup for popup info window\n\t   *\n\t   * @param e\n\t   * @param viewport\n\t   * @returns {*}\n\t   */\n\n\n\t  function getPopupContent(e, viewport) {\n\t    var clickState = createClickState(e, viewport);\n\n\t    if (undefined === clickState) {\n\t      return;\n\t    }\n\n\t    var track = viewport.trackView.track;\n\t    var dataList = track.popupData(clickState);\n\t    var popupClickHandlerResult = browser.fireEvent('trackclick', [track, dataList]);\n\t    var content;\n\n\t    if (undefined === popupClickHandlerResult || true === popupClickHandlerResult) {\n\t      // Indicates handler did not handle the result, or the handler wishes default behavior to occur\n\t      if (dataList && dataList.length > 0) {\n\t        content = formatPopoverText(dataList);\n\t      }\n\t    } else if (typeof popupClickHandlerResult === 'string') {\n\t      content = popupClickHandlerResult;\n\t    }\n\n\t    return content;\n\t  }\n\t  /**\n\t   * Format markup for popover text from an array of name value pairs [{name, value}]\n\t   */\n\n\n\t  function formatPopoverText(nameValueArray) {\n\t    var markup = \"<table class=\\\"igv-popover-table\\\">\";\n\t    nameValueArray.forEach(function (nameValue) {\n\t      if (nameValue.name) {\n\t        markup += \"<tr><td class=\\\"igv-popover-td\\\">\" + \"<div class=\\\"igv-popover-name-value\\\">\" + \"<span class=\\\"igv-popover-name\\\">\" + nameValue.name + \"</span>\" + \"<span class=\\\"igv-popover-value\\\">\" + nameValue.value + \"</span>\" + \"</div>\" + \"</td></tr>\";\n\t      } else {\n\t        // not a name/value pair\n\t        markup += \"<tr><td>\" + nameValue.toString() + \"</td></tr>\";\n\t      }\n\t    });\n\t    markup += \"</table>\";\n\t    return markup;\n\t  }\n\t}\n\n\tfunction getFeatures(_x5, _x6, _x7, _x8) {\n\t  return _getFeatures.apply(this, arguments);\n\t}\n\n\tfunction _getFeatures() {\n\t  _getFeatures = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(chr, start, end, bpPerPixel) {\n\t    var track, features;\n\t    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t      while (1) {\n\t        switch (_context5.prev = _context5.next) {\n\t          case 0:\n\t            track = this.trackView.track;\n\n\t            if (!(this.tile && this.tile.containsRange(chr, start, end, bpPerPixel))) {\n\t              _context5.next = 5;\n\t              break;\n\t            }\n\n\t            return _context5.abrupt(\"return\", this.tile.features);\n\n\t          case 5:\n\t            if (!(typeof track.getFeatures === \"function\")) {\n\t              _context5.next = 14;\n\t              break;\n\t            }\n\n\t            _context5.next = 8;\n\t            return track.getFeatures(chr, start, end, bpPerPixel, this);\n\n\t          case 8:\n\t            features = _context5.sent;\n\t            this.cachedFeatures = features; // TODO -- associate with \"tile\"\n\n\t            this.checkContentHeight();\n\t            return _context5.abrupt(\"return\", features);\n\n\t          case 14:\n\t            return _context5.abrupt(\"return\", undefined);\n\n\t          case 15:\n\t          case \"end\":\n\t            return _context5.stop();\n\t        }\n\t      }\n\t    }, _callee5, this);\n\t  }));\n\t  return _getFeatures.apply(this, arguments);\n\t}\n\n\tViewPort.prototype.checkContentHeight = function () {\n\t  var track = this.trackView.track;\n\n\t  if (\"FILL\" === track.displayMode) {\n\t    this.setContentHeight(this.$viewport.height());\n\t  } else if (typeof track.computePixelHeight === 'function') {\n\t    var features = this.cachedFeatures;\n\n\t    if (features) {\n\t      var requiredContentHeight = track.computePixelHeight(features);\n\t      var currentContentHeight = $(this.contentDiv).height();\n\n\t      if (requiredContentHeight !== currentContentHeight) {\n\t        this.setContentHeight(requiredContentHeight);\n\t      }\n\t    }\n\t  }\n\t};\n\t/**\n\t * Merge 2 arrays.  a and/or b can be undefined.  If both are undefined, return undefined\n\t * @param a An array or undefined\n\t * @param b An array or undefined\n\t */\n\n\n\tfunction mergeArrays(a, b) {\n\t  if (a && b) return a.concat(b);else if (a) return a;else return b;\n\t}\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2014 Broad Institute\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tvar BLACK = 1;\n\tvar RED = 2;\n\tvar NIL = {};\n\tNIL.color = BLACK;\n\tNIL.parent = NIL;\n\tNIL.left = NIL;\n\tNIL.right = NIL;\n\n\tvar IntervalTree = function IntervalTree() {\n\t  this.root = NIL;\n\t};\n\n\tIntervalTree.prototype.insert = function (start, end, value) {\n\t  var interval = new Interval(start, end, value);\n\t  var x = new Node(interval);\n\t  this.treeInsert(x);\n\t  x.color = RED;\n\n\t  while (x !== this.root && x.parent.color === RED) {\n\t    if (x.parent === x.parent.parent.left) {\n\t      var y = x.parent.parent.right;\n\n\t      if (y.color === RED) {\n\t        x.parent.color = BLACK;\n\t        y.color = BLACK;\n\t        x.parent.parent.color = RED;\n\t        x = x.parent.parent;\n\t      } else {\n\t        if (x === x.parent.right) {\n\t          x = x.parent;\n\t          leftRotate.call(this, x);\n\t        }\n\n\t        x.parent.color = BLACK;\n\t        x.parent.parent.color = RED;\n\t        rightRotate.call(this, x.parent.parent);\n\t      }\n\t    } else {\n\t      var _y = x.parent.parent.left;\n\n\t      if (_y.color === RED) {\n\t        x.parent.color = BLACK;\n\t        _y.color = BLACK;\n\t        x.parent.parent.color = RED;\n\t        x = x.parent.parent;\n\t      } else {\n\t        if (x === x.parent.left) {\n\t          x = x.parent;\n\t          rightRotate.call(this, x);\n\t        }\n\n\t        x.parent.color = BLACK;\n\t        x.parent.parent.color = RED;\n\t        leftRotate.call(this, x.parent.parent);\n\t      }\n\t    }\n\t  }\n\n\t  this.root.color = BLACK;\n\t};\n\t/**\n\t *\n\t * @param start - query interval\n\t * @param end - query interval\n\t * @returns Array of all intervals overlapping the query region\n\t */\n\n\n\tIntervalTree.prototype.findOverlapping = function (start, end) {\n\t  var searchInterval = new Interval(start, end, 0);\n\t  if (this.root === NIL) return [];\n\t  var intervals = searchAll.call(this, searchInterval, this.root, []);\n\n\t  if (intervals.length > 1) {\n\t    intervals.sort(function (i1, i2) {\n\t      return i1.low - i2.low;\n\t    });\n\t  }\n\n\t  return intervals;\n\t};\n\t/**\n\t * Dump info on intervals to console.  For debugging.\n\t */\n\n\n\tIntervalTree.prototype.logIntervals = function () {\n\t  logNode(this.root);\n\n\t  function logNode(node, indent) {\n\t    if (node.left !== NIL) logNode(node.left);\n\t    if (node.right !== NIL) logNode(node.right);\n\t  }\n\t};\n\n\tIntervalTree.prototype.mapIntervals = function (func) {\n\t  applyInterval(this.root);\n\n\t  function applyInterval(node) {\n\t    func(node.interval);\n\t    if (node.left !== NIL) applyInterval(node.left);\n\t    if (node.right !== NIL) applyInterval(node.right);\n\t  }\n\t};\n\n\tfunction searchAll(interval, node, results) {\n\t  if (node.interval.overlaps(interval)) {\n\t    results.push(node.interval);\n\t  }\n\n\t  if (node.left !== NIL && node.left.max >= interval.low) {\n\t    searchAll.call(this, interval, node.left, results);\n\t  }\n\n\t  if (node.right !== NIL && node.right.min <= interval.high) {\n\t    searchAll.call(this, interval, node.right, results);\n\t  }\n\n\t  return results;\n\t}\n\n\tfunction leftRotate(x) {\n\t  var y = x.right;\n\t  x.right = y.left;\n\n\t  if (y.left !== NIL) {\n\t    y.left.parent = x;\n\t  }\n\n\t  y.parent = x.parent;\n\n\t  if (x.parent === NIL) {\n\t    this.root = y;\n\t  } else {\n\t    if (x.parent.left === x) {\n\t      x.parent.left = y;\n\t    } else {\n\t      x.parent.right = y;\n\t    }\n\t  }\n\n\t  y.left = x;\n\t  x.parent = y;\n\t  applyUpdate.call(this, x); // no need to apply update on y, since it'll y is an ancestor\n\t  // of x, and will be touched by applyUpdate().\n\t}\n\n\tfunction rightRotate(x) {\n\t  var y = x.left;\n\t  x.left = y.right;\n\n\t  if (y.right !== NIL) {\n\t    y.right.parent = x;\n\t  }\n\n\t  y.parent = x.parent;\n\n\t  if (x.parent === NIL) {\n\t    this.root = y;\n\t  } else {\n\t    if (x.parent.right === x) {\n\t      x.parent.right = y;\n\t    } else {\n\t      x.parent.left = y;\n\t    }\n\t  }\n\n\t  y.right = x;\n\t  x.parent = y;\n\t  applyUpdate.call(this, x); // no need to apply update on y, since it'll y is an ancestor\n\t  // of x, and will be touched by applyUpdate().\n\t}\n\t/**\n\t * Note:  Does not maintain RB constraints,  this is done post insert\n\t *\n\t * @param x  a Node\n\t */\n\n\n\tIntervalTree.prototype.treeInsert = function (x) {\n\t  var node = this.root;\n\t  var y = NIL;\n\n\t  while (node !== NIL) {\n\t    y = node;\n\n\t    if (x.interval.low <= node.interval.low) {\n\t      node = node.left;\n\t    } else {\n\t      node = node.right;\n\t    }\n\t  }\n\n\t  x.parent = y;\n\n\t  if (y === NIL) {\n\t    this.root = x;\n\t    x.left = x.right = NIL;\n\t  } else {\n\t    if (x.interval.low <= y.interval.low) {\n\t      y.left = x;\n\t    } else {\n\t      y.right = x;\n\t    }\n\t  }\n\n\t  applyUpdate.call(this, x);\n\t}; // Applies the statistic update on the node and its ancestors.\n\n\n\tfunction applyUpdate(node) {\n\t  while (node !== NIL) {\n\t    var nodeMax = node.left.max > node.right.max ? node.left.max : node.right.max;\n\t    var intervalHigh = node.interval.high;\n\t    node.max = nodeMax > intervalHigh ? nodeMax : intervalHigh;\n\t    var nodeMin = node.left.min < node.right.min ? node.left.min : node.right.min;\n\t    var intervalLow = node.interval.low;\n\t    node.min = nodeMin < intervalLow ? nodeMin : intervalLow;\n\t    node = node.parent;\n\t  }\n\t}\n\n\tfunction Interval(low, high, value) {\n\t  this.low = low;\n\t  this.high = high;\n\t  this.value = value;\n\t}\n\n\tInterval.prototype.equals = function (other) {\n\t  if (!other) {\n\t    return false;\n\t  }\n\n\t  if (this === other) {\n\t    return true;\n\t  }\n\n\t  return this.low === other.low && this.high === other.high;\n\t};\n\n\tInterval.prototype.compareTo = function (other) {\n\t  if (this.low < other.low) return -1;\n\t  if (this.low > other.low) return 1;\n\t  if (this.high < other.high) return -1;\n\t  if (this.high > other.high) return 1;\n\t  return 0;\n\t};\n\t/**\n\t * Returns true if this interval overlaps the other.\n\t */\n\n\n\tInterval.prototype.overlaps = function (other) {\n\t  try {\n\t    return this.low <= other.high && other.low <= this.high;\n\t  } catch (e) {\n\t    //alert(e);\n\t    Alert.presentAlert(e, undefined);\n\t  }\n\t};\n\n\tfunction Node(interval) {\n\t  this.parent = NIL;\n\t  this.left = NIL;\n\t  this.right = NIL;\n\t  this.interval = interval;\n\t  this.color = RED;\n\t} //\n\n\tvar FeatureUtils = {\n\t  packFeatures: function packFeatures(features, maxRows, sorted) {\n\t    var start;\n\t    var end;\n\t    if (!features) return;\n\t    maxRows = maxRows || 10000;\n\n\t    if (!sorted) {\n\t      features.sort(function (a, b) {\n\t        return a.start - b.start;\n\t      });\n\t    }\n\n\t    if (features.length === 0) {\n\t      return [];\n\t    } else {\n\t      var bucketList = [],\n\t          allocatedCount = 0,\n\t          lastAllocatedCount = 0,\n\t          nextStart,\n\t          row,\n\t          index,\n\t          bucket,\n\t          feature,\n\t          gap = 2,\n\t          bucketStart;\n\t      start = features[0].start;\n\t      end = features[features.length - 1].start;\n\t      bucketStart = Math.max(start, features[0].start);\n\t      nextStart = bucketStart;\n\t      features.forEach(function (alignment) {\n\t        var buckListIndex = Math.max(0, alignment.start - bucketStart);\n\n\t        if (bucketList[buckListIndex] === undefined) {\n\t          bucketList[buckListIndex] = [];\n\t        }\n\n\t        bucketList[buckListIndex].push(alignment);\n\t      });\n\t      row = 0;\n\n\t      while (allocatedCount < features.length && row <= maxRows) {\n\t        while (nextStart <= end) {\n\t          bucket = undefined;\n\n\t          while (!bucket && nextStart <= end) {\n\t            index = nextStart - bucketStart;\n\n\t            if (bucketList[index] === undefined) {\n\t              ++nextStart; // No buckets at this index\n\t            } else {\n\t              bucket = bucketList[index];\n\t            }\n\t          } // while (bucket)\n\n\n\t          if (!bucket) {\n\t            break;\n\t          }\n\n\t          feature = bucket.pop();\n\n\t          if (0 === bucket.length) {\n\t            bucketList[index] = undefined;\n\t          }\n\n\t          feature.row = row;\n\t          nextStart = feature.end + gap;\n\t          ++allocatedCount;\n\t        } // while (nextStart)\n\n\n\t        row++;\n\t        nextStart = bucketStart;\n\t        if (allocatedCount === lastAllocatedCount) break; // Protect from infinite loops\n\n\t        lastAllocatedCount = allocatedCount;\n\t      } // while (allocatedCount)\n\n\t    }\n\t  },\n\n\t  /**\n\t   * Find features overlapping the given interval.  It is assumed that all features share the same chromosome.\n\t   *\n\t   * TODO -- significant overlap with FeatureCache, refactor to combine\n\t   *\n\t   * @param featureList\n\t   * @param start\n\t   * @param end\n\t   */\n\t  findOverlapping: function findOverlapping(featureList, start, end) {\n\t    if (!featureList || featureList.length === 0) {\n\t      return [];\n\t    } else {\n\t      var tree = buildIntervalTree(featureList);\n\t      var intervals = tree.findOverlapping(start, end);\n\n\t      if (intervals.length === 0) {\n\t        return [];\n\t      } else {\n\t        // Trim the list of features in the intervals to those\n\t        // overlapping the requested range.\n\t        // Assumption: features are sorted by start position\n\t        featureList = [];\n\t        intervals.forEach(function (interval) {\n\t          var intervalFeatures = interval.value;\n\t          var len = intervalFeatures.length;\n\n\t          for (var i = 0; i < len; i++) {\n\t            var feature = intervalFeatures[i];\n\t            if (feature.start > end) break;else if (feature.end > start) {\n\t              featureList.push(feature);\n\t            }\n\t          }\n\t        });\n\t        featureList.sort(function (a, b) {\n\t          return a.start - b.start;\n\t        });\n\t        return featureList;\n\t      }\n\t    }\n\t  }\n\t};\n\t/**\n\t * Build an interval tree from the feature list for fast interval based queries.   We lump features in groups\n\t * of 10, or total size / 100,   to reduce size of the tree.\n\t *\n\t * @param featureList\n\t */\n\n\tfunction buildIntervalTree(featureList) {\n\t  var tree = new IntervalTree();\n\t  var len = featureList.length;\n\t  var chunkSize = Math.max(10, Math.round(len / 100));\n\t  featureList.sort(function (f1, f2) {\n\t    return f1.start === f2.start ? 0 : f1.start > f2.start ? 1 : -1;\n\t  });\n\n\t  var _loop = function _loop(i) {\n\t    var e = Math.min(len, i + chunkSize);\n\t    var subArray = featureList.slice(i, e);\n\t    var iStart = subArray[0].start;\n\t    var iEnd = iStart;\n\t    subArray.forEach(function (feature) {\n\t      iEnd = Math.max(iEnd, feature.end);\n\t    });\n\t    tree.insert(iStart, iEnd, subArray);\n\t  };\n\n\t  for (var i = 0; i < len; i += chunkSize) {\n\t    _loop(i);\n\t  }\n\n\t  return tree;\n\t}\n\n\tvar log$2 = Math.log;\n\tvar LOG10E = Math.LOG10E; // `Math.log10` method\n\t// https://tc39.github.io/ecma262/#sec-math.log10\n\n\t_export({\n\t  target: 'Math',\n\t  stat: true\n\t}, {\n\t  log10: function log10(x) {\n\t    return log$2(x) * LOG10E;\n\t  }\n\t});\n\n\tvar IGVGraphics = {\n\t  setProperties: function setProperties(ctx, properties) {\n\t    for (var key in properties) {\n\t      if (properties.hasOwnProperty(key)) {\n\t        var value = properties[key];\n\t        ctx[key] = value;\n\t      }\n\t    }\n\t  },\n\t  strokeLine: function strokeLine(ctx, x1, y1, x2, y2, properties) {\n\t    x1 = Math.floor(x1) + 0.5;\n\t    y1 = Math.floor(y1) + 0.5;\n\t    x2 = Math.floor(x2) + 0.5;\n\t    y2 = Math.floor(y2) + 0.5;\n\n\t    if (properties) {\n\t      ctx.save();\n\t      IGVGraphics.setProperties(ctx, properties);\n\t    }\n\n\t    ctx.beginPath();\n\t    ctx.moveTo(x1, y1);\n\t    ctx.lineTo(x2, y2);\n\t    ctx.stroke();\n\t    if (properties) ctx.restore();\n\t  },\n\t  fillRect: function fillRect(ctx, x, y, w, h, properties) {\n\t    x = Math.round(x);\n\t    y = Math.round(y);\n\n\t    if (properties) {\n\t      ctx.save();\n\t      IGVGraphics.setProperties(ctx, properties);\n\t    }\n\n\t    ctx.fillRect(x, y, w, h);\n\t    if (properties) ctx.restore();\n\t  },\n\t  fillPolygon: function fillPolygon(ctx, x, y, properties) {\n\t    if (properties) {\n\t      ctx.save();\n\t      IGVGraphics.setProperties(ctx, properties);\n\t    }\n\n\t    doPath(ctx, x, y);\n\t    ctx.fill();\n\t    if (properties) ctx.restore();\n\t  },\n\t  strokePolygon: function strokePolygon(ctx, x, y, properties) {\n\t    if (properties) {\n\t      ctx.save();\n\t      IGVGraphics.setProperties(ctx, properties);\n\t    }\n\n\t    doPath(ctx, x, y);\n\t    ctx.stroke();\n\t    if (properties) ctx.restore();\n\t  },\n\t  fillText: function fillText(ctx, text, x, y, properties, transforms) {\n\t    if (properties || transforms) {\n\t      ctx.save();\n\t    }\n\n\t    if (properties) {\n\t      IGVGraphics.setProperties(ctx, properties);\n\t    }\n\n\t    if (transforms) {\n\t      // Slow path with context saving and extra translate\n\t      ctx.translate(x, y);\n\n\t      for (var transform in transforms) {\n\t        var value = transforms[transform]; // TODO: Add error checking for robustness\n\n\t        if (transform === 'translate') {\n\t          ctx.translate(value['x'], value['y']);\n\t        }\n\n\t        if (transform === 'rotate') {\n\t          ctx.rotate(value['angle'] * Math.PI / 180);\n\t        }\n\t      }\n\n\t      ctx.fillText(text, 0, 0);\n\t    } else {\n\t      ctx.fillText(text, x, y);\n\t    }\n\n\t    if (properties || transforms) ctx.restore();\n\t  },\n\t  strokeText: function strokeText(ctx, text, x, y, properties, transforms) {\n\t    if (properties || transforms) {\n\t      ctx.save();\n\t    }\n\n\t    if (properties) {\n\t      IGVGraphics.setProperties(ctx, properties);\n\t    }\n\n\t    if (transforms) {\n\t      ctx.translate(x, y);\n\n\t      for (var transform in transforms) {\n\t        var value = transforms[transform]; // TODO: Add error checking for robustness\n\n\t        if (transform === 'translate') {\n\t          ctx.translate(value['x'], value['y']);\n\t        }\n\n\t        if (transform === 'rotate') {\n\t          ctx.rotate(value['angle'] * Math.PI / 180);\n\t        }\n\t      }\n\n\t      ctx.strokeText(text, 0, 0);\n\t    } else {\n\t      ctx.strokeText(text, x, y);\n\t    }\n\n\t    if (properties || transforms) ctx.restore();\n\t  },\n\t  strokeCircle: function strokeCircle(ctx, x, y, radius, properties) {\n\t    if (properties) {\n\t      ctx.save();\n\t      IGVGraphics.setProperties(ctx, properties);\n\t    }\n\n\t    ctx.beginPath();\n\t    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n\t    ctx.stroke();\n\t    if (properties) ctx.restore();\n\t  },\n\t  fillCircle: function fillCircle(ctx, x, y, radius, properties) {\n\t    if (properties) {\n\t      ctx.save();\n\t      IGVGraphics.setProperties(ctx, properties);\n\t    }\n\n\t    ctx.beginPath();\n\t    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n\t    ctx.fill();\n\t    if (properties) ctx.restore();\n\t  },\n\t  drawArrowhead: function drawArrowhead(ctx, x, y, size, lineWidth) {\n\t    ctx.save();\n\n\t    if (!size) {\n\t      size = 5;\n\t    }\n\n\t    if (lineWidth) {\n\t      ctx.lineWidth = lineWidth;\n\t    }\n\n\t    ctx.beginPath();\n\t    ctx.moveTo(x, y - size / 2);\n\t    ctx.lineTo(x, y + size / 2);\n\t    ctx.lineTo(x + size, y);\n\t    ctx.lineTo(x, y - size / 2);\n\t    ctx.closePath();\n\t    ctx.fill();\n\t    ctx.restore();\n\t  },\n\t  dashedLine: function dashedLine(ctx, x1, y1, x2, y2, dashLen) {\n\t    var properties = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n\t    if (dashLen === undefined) dashLen = 2;\n\t    ctx.setLineDash([dashLen, dashLen]);\n\t    IGVGraphics.strokeLine(ctx, x1, y1, x2, y2, properties);\n\t    ctx.setLineDash([]);\n\t  },\n\t  roundRect: function roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n\t    if (typeof stroke == \"undefined\") {\n\t      stroke = true;\n\t    }\n\n\t    if (typeof radius === \"undefined\") {\n\t      radius = 5;\n\t    }\n\n\t    ctx.beginPath();\n\t    ctx.moveTo(x + radius, y);\n\t    ctx.lineTo(x + width - radius, y);\n\t    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t    ctx.lineTo(x + width, y + height - radius);\n\t    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t    ctx.lineTo(x + radius, y + height);\n\t    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t    ctx.lineTo(x, y + radius);\n\t    ctx.quadraticCurveTo(x, y, x + radius, y);\n\t    ctx.closePath();\n\n\t    if (stroke) {\n\t      ctx.stroke();\n\t    }\n\n\t    if (fill) {\n\t      ctx.fill();\n\t    }\n\t  },\n\t  polygon: function polygon(ctx, x, y, fill, stroke) {\n\t    if (typeof stroke == \"undefined\") {\n\t      stroke = true;\n\t    }\n\n\t    ctx.beginPath();\n\t    var len = x.length;\n\t    ctx.moveTo(x[0], y[0]);\n\n\t    for (var i = 1; i < len; i++) {\n\t      ctx.lineTo(x[i], y[i]); // this.moveTo(x[i], y[i]);\n\t    }\n\n\t    ctx.closePath();\n\n\t    if (stroke) {\n\t      ctx.stroke();\n\t    }\n\n\t    if (fill) {\n\t      ctx.fill();\n\t    }\n\t  }\n\t};\n\n\tfunction doPath(ctx, x, y) {\n\t  var i,\n\t      len = x.length;\n\n\t  for (i = 0; i < len; i++) {\n\t    x[i] = Math.round(x[i]);\n\t    y[i] = Math.round(y[i]);\n\t  }\n\n\t  ctx.beginPath();\n\t  ctx.moveTo(x[0], y[0]);\n\n\t  for (i = 1; i < len; i++) {\n\t    ctx.lineTo(x[i], y[i]);\n\t  }\n\n\t  ctx.closePath();\n\t}\n\n\tvar RulerTrack = function RulerTrack(browser) {\n\t  this.browser = browser;\n\t  this.height = 40;\n\t  this.name = \"\";\n\t  this.id = \"ruler\";\n\t  this.disableButtons = true;\n\t  this.ignoreTrackMenu = true;\n\t  this.order = -Number.MAX_VALUE;\n\t  this.removable = false;\n\t  this.type = 'ruler';\n\t};\n\n\tRulerTrack.prototype.updateLocusLabel = function () {\n\t  this.trackView.viewports.forEach(function (viewport) {\n\t    var str;\n\t    str = viewport.genomicState.referenceFrame.showLocus(viewport.$viewport.width()); // console.log('ruler update label - viewport ' + viewport.id + ' ' + str);\n\n\t    viewport.$rulerLabel.text(str);\n\t  });\n\t};\n\n\tRulerTrack.prototype.appendMultiPanelCloseButton = function ($viewport, genomicState) {\n\t  var browser = this.browser;\n\t  var $close;\n\t  $viewport.addClass('igv-viewport-ruler');\n\t  $close = $('<div class=\"igv-multi-locus-panel-close-container\">');\n\t  $viewport.append($close);\n\t  $close.append(createIcon(\"times-circle\"));\n\t  $close.click(function (e) {\n\t    browser.removeMultiLocusPanelWithGenomicState(genomicState, true);\n\t  });\n\t};\n\n\tRulerTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\t  return Promise.resolve([]);\n\t};\n\n\tRulerTrack.prototype.computePixelHeight = function (ignore) {\n\t  return this.height;\n\t};\n\n\tRulerTrack.prototype.draw = function (options) {\n\t  if (GenomeUtils.isWholeGenomeView(options.referenceFrame)) {\n\t    options.viewport.rulerSweeper.disableMouseHandlers();\n\t    drawWholeGenome.call(this, options);\n\t  } else {\n\t    options.viewport.rulerSweeper.addMouseHandlers();\n\t    var tickHeight = 6;\n\t    var shim = 2;\n\t    var pixelWidthBP = 1 + Math.floor(options.referenceFrame.toBP(options.pixelWidth));\n\t    var tick = new Tick(pixelWidthBP, options);\n\t    tick.drawTicks(options, tickHeight, shim, this.height);\n\t    IGVGraphics.strokeLine(options.context, 0, this.height - shim, options.pixelWidth, this.height - shim);\n\t  }\n\t};\n\n\tfunction drawWholeGenome(options) {\n\t  options.context.save();\n\t  IGVGraphics.fillRect(options.context, 0, 0, options.pixelWidth, options.pixelHeight, {\n\t    'fillStyle': 'white'\n\t  });\n\t  var y = 0;\n\t  var h = options.pixelHeight;\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = this.browser.genome.wgChromosomeNames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var name = _step.value;\n\t      var xBP = this.browser.genome.getCumulativeOffset(name);\n\t      var wBP = this.browser.genome.getChromosome(name).bpLength;\n\t      var x = Math.round(xBP / options.bpPerPixel);\n\t      var w = Math.round(wBP / options.bpPerPixel);\n\t      renderChromosomeRect.call(this, options.context, x, y, w, h, name);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  options.context.restore();\n\t}\n\n\tfunction renderChromosomeRect(ctx, x, y, w, h, name) {\n\t  ctx.textAlign = 'center';\n\t  ctx.textBaseline = 'middle';\n\t  ctx.font = '12px sans-serif'; // IGVGraphics.fillRect(ctx, x, y, w, h, { 'fillStyle' : toggleColor(this.browser.genome.wgChromosomeNames.indexOf(name)) });\n\n\t  IGVGraphics.strokeLine(ctx, x + w, y, x + w, y + h, {\n\t    strokeStyle: IGVColor.greyScale(191)\n\t  });\n\t  var shortName = name.startsWith(\"chr\") ? name.substring(3) : name;\n\n\t  if (w > ctx.measureText(shortName).width) {\n\t    IGVGraphics.fillText(ctx, shortName, x + w / 2, y + h / 2, {\n\t      fillStyle: IGVColor.greyScale(68)\n\t    });\n\t  }\n\t}\n\n\tRulerTrack.prototype.supportsWholeGenome = function () {\n\t  return true;\n\t};\n\n\tRulerTrack.prototype.dispose = function () {// do stuff\n\t};\n\n\tvar Tick = function Tick(pixelWidthBP, options) {\n\t  initialize.call(this, pixelWidthBP, options);\n\n\t  function initialize(pixelWidthBP, options) {\n\t    var numberOfZeroes, majorUnit, unitMultiplier, numberOfMajorTicks, str;\n\t    var isSVGContext = options.context.isSVG || false;\n\n\t    if (pixelWidthBP < 10) {\n\t      set.call(this, 1, \"bp\", 1, isSVGContext);\n\t    }\n\n\t    numberOfZeroes = Math.floor(Math.log10(pixelWidthBP));\n\n\t    if (numberOfZeroes > 9) {\n\t      majorUnit = \"gb\";\n\t      unitMultiplier = 1e9;\n\t    } else if (numberOfZeroes > 6) {\n\t      majorUnit = \"mb\";\n\t      unitMultiplier = 1e6;\n\t    } else if (numberOfZeroes > 3) {\n\t      majorUnit = \"kb\";\n\t      unitMultiplier = 1e3;\n\t    } else {\n\t      majorUnit = \"bp\";\n\t      unitMultiplier = 1;\n\t    }\n\n\t    str = numberFormatter(Math.floor(pixelWidthBP / unitMultiplier)) + \" \" + majorUnit;\n\t    this.labelWidthBP = Math.round(options.referenceFrame.toBP(options.context.measureText(str).width));\n\t    numberOfMajorTicks = pixelWidthBP / Math.pow(10, numberOfZeroes - 1);\n\n\t    if (numberOfMajorTicks < 25) {\n\t      set.call(this, Math.pow(10, numberOfZeroes - 1), majorUnit, unitMultiplier, isSVGContext);\n\t    } else {\n\t      set.call(this, Math.pow(10, numberOfZeroes) / 2, majorUnit, unitMultiplier, isSVGContext);\n\t    }\n\t  }\n\n\t  function set(majorTick, majorUnit, unitMultiplier, isSVGContext) {\n\t    // reduce label frequency by half for SVG rendering\n\t    this.majorTick = true === isSVGContext ? 2 * majorTick : majorTick;\n\t    this.majorUnit = majorUnit;\n\t    this.halfTick = majorTick / 2;\n\t    this.unitMultiplier = unitMultiplier;\n\t  }\n\t};\n\n\tTick.prototype.drawTicks = function (options, tickHeight, shim, height) {\n\t  var numberOfTicks, bp, pixel, label, labelWidth, labelX, numer, floored;\n\t  numberOfTicks = Math.floor(options.bpStart / this.majorTick) - 1;\n\t  labelWidth = 0;\n\t  labelX = 0;\n\t  pixel = 0;\n\n\t  while (pixel < options.pixelWidth) {\n\t    bp = Math.floor(numberOfTicks * this.majorTick);\n\t    pixel = Math.round(options.referenceFrame.toPixels(bp - 1 - options.bpStart + 0.5));\n\t    label = numberFormatter(Math.floor(bp / this.unitMultiplier)) + \" \" + this.majorUnit;\n\t    labelWidth = options.context.measureText(label).width;\n\t    labelX = Math.round(pixel - labelWidth / 2);\n\t    IGVGraphics.fillText(options.context, label, labelX, height - tickHeight / 0.75);\n\t    IGVGraphics.strokeLine(options.context, pixel, height - tickHeight, pixel, height - shim);\n\t    ++numberOfTicks;\n\t  }\n\n\t  numberOfTicks = Math.floor(options.bpStart / this.halfTick) - 1;\n\t  pixel = 0;\n\n\t  while (pixel < options.pixelWidth) {\n\t    bp = Math.floor(numberOfTicks * this.halfTick);\n\t    pixel = Math.round(options.referenceFrame.toPixels(bp - 1 - options.bpStart + 0.5));\n\t    numer = bp / this.unitMultiplier;\n\t    floored = Math.floor(numer);\n\n\t    if (numer === floored && this.majorTick / this.labelWidthBP > 8) {\n\t      label = numberFormatter(Math.floor(numer)) + \" \" + this.majorUnit;\n\t      labelWidth = options.context.measureText(label).width;\n\t      labelX = pixel - labelWidth / 2;\n\t      IGVGraphics.fillText(options.context, label, labelX, height - tickHeight / 0.75);\n\t    }\n\n\t    IGVGraphics.strokeLine(options.context, pixel, height - tickHeight, pixel, height - shim);\n\t    ++numberOfTicks;\n\t  }\n\t};\n\n\tTick.prototype.description = function (blurb) {};\n\n\tvar trackMenuItemListHelper$1 = MenuUtils.trackMenuItemListHelper;\n\n\tvar TrackGearPopover = function TrackGearPopover($parent) {\n\t  // popover container\n\t  this.$popover = $('<div>', {\n\t    class: 'igv-trackgear-popover'\n\t  });\n\t  $parent.append(this.$popover); // popover header\n\n\t  var $popoverHeader = $('<div>', {\n\t    class: 'igv-trackgear-popover-header'\n\t  });\n\t  this.$popover.append($popoverHeader);\n\t  var self = this;\n\t  attachDialogCloseHandlerWithParent($popoverHeader, function () {\n\t    self.$popover.hide();\n\t  });\n\t  this.$popoverContent = $('<div>');\n\t  this.$popover.append(this.$popoverContent);\n\t  makeDraggable(this.$popover.get(0), $popoverHeader.get(0));\n\t  $popoverHeader.on('click.track_gear_popover', function (e) {\n\t    e.stopPropagation();\n\t    e.preventDefault(); // absorb click to prevent it leaking through to parent DOM element\n\t  });\n\t};\n\n\tTrackGearPopover.prototype.presentMenuList = function (dx, dy, list) {\n\t  var self = this;\n\n\t  if (list.length > 0) {\n\t    this.$popoverContent.empty();\n\t    list = trackMenuItemListHelper$1(list, self.$popover);\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var item = _step.value;\n\n\t        if (item.init) {\n\t          item.init();\n\t        }\n\n\t        var $e = item.object;\n\n\t        if (0 === list.indexOf(item)) {\n\t          $e.removeClass('igv-track-menu-border-top');\n\t        }\n\n\t        if ($e.hasClass('igv-track-menu-border-top') || $e.hasClass('igv-trackgear-popover-check-container')) {// do nothing\n\t        } else if ($e.is('div')) {\n\t          $e.addClass('igv-trackgear-popover-shim');\n\t        }\n\n\t        this.$popoverContent.append($e);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\n\t    this.$popover.css({\n\t      left: dx + 'px',\n\t      top: dy + 'px'\n\t    });\n\t    this.$popover.show();\n\t  }\n\t};\n\n\tTrackGearPopover.prototype.dispose = function () {\n\t  this.$popover.empty();\n\t  this.$popoverContent.empty();\n\t  Object.keys(this).forEach(function (key) {\n\t    this[key] = undefined;\n\t  });\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2014 Broad Institute\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar GenericContainer = function GenericContainer(_ref) {\n\t  var $parent = _ref.$parent,\n\t      width = _ref.width,\n\t      height = _ref.height,\n\t      closeHandler = _ref.closeHandler;\n\t  var self = this,\n\t      $header;\n\t  this.namespace = '.generic_container_' + guid();\n\t  var $container = $('<div>', {\n\t    class: 'igv-generic-container'\n\t  });\n\t  $parent.append($container);\n\t  this.$container = $container;\n\n\t  if (width) {\n\t    this.$container.width(width);\n\t  }\n\n\t  if (height) {\n\t    this.$container.height(height);\n\t  }\n\n\t  var bbox = $parent.get(0).getBoundingClientRect();\n\t  this.origin = {\n\t    x: bbox.x,\n\t    y: bbox.y\n\t  };\n\t  this.$container.offset({\n\t    left: this.origin.x,\n\t    top: this.origin.y\n\t  }); // header\n\n\t  $header = $('<div>');\n\t  this.$container.append($header); // close button\n\n\t  var $div = $('<i>');\n\t  $header.append($div);\n\t  $div.append(createIcon(\"times\"));\n\t  $div.on('mousedown' + self.namespace, function (e) {\n\t    e.stopPropagation();\n\t  });\n\t  $div.on('mouseup' + self.namespace, function (e) {\n\t    e.stopPropagation();\n\t  });\n\t  $div.on('click' + self.namespace, function (e) {\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t    closeHandler(e);\n\t  });\n\t  $div.on('touchend' + self.namespace, function (e) {\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t    closeHandler(e);\n\t  });\n\t  makeDraggable(this.$container.get(0), $header.get(0));\n\t};\n\n\tvar TrackView = function TrackView(browser, $container, track) {\n\t  var self = this,\n\t      width,\n\t      $track;\n\t  this.browser = browser;\n\t  this.track = track;\n\t  track.trackView = this;\n\t  $track = $('<div class=\"igv-track-div\">');\n\t  this.trackDiv = $track.get(0);\n\t  $container.append($track);\n\t  this.namespace = '.trackview_' + guid();\n\n\t  if (this.track instanceof RulerTrack) {\n\t    this.trackDiv.dataset.rulerTrack = \"rulerTrack\";\n\t  }\n\n\t  if (track.height) {\n\t    this.trackDiv.style.height = track.height + \"px\";\n\t  }\n\n\t  this.appendLeftHandGutter($(this.trackDiv)); // if (typeof track.paintAxis === 'function') {\n\t  //     appendLeftHandGutter.call(this, $(this.trackDiv));\n\t  // }\n\n\t  this.$viewportContainer = $('<div class=\"igv-viewport-container\">');\n\t  $(this.trackDiv).append(this.$viewportContainer);\n\t  this.viewports = [];\n\t  width = this.browser.viewportContainerWidth() / this.browser.genomicStateList.length;\n\t  browser.genomicStateList.forEach(function (genomicState) {\n\t    var viewport;\n\t    viewport = new ViewPort(self, self.$viewportContainer, genomicState, width);\n\t    self.viewports.push(viewport);\n\t  });\n\t  this.decorateViewports();\n\t  this.configureViewportContainer(this.$viewportContainer, this.viewports);\n\n\t  if (true === this.track.ignoreTrackMenu) ; else {\n\t    this.appendRightHandGutter($(this.trackDiv));\n\t  }\n\n\t  if (this.track instanceof RulerTrack) ; else {\n\t    attachDragWidget.call(this, $(this.trackDiv), this.$viewportContainer);\n\t  }\n\n\t  if (\"sequence\" === this.track.type) ; else if (this.track instanceof RulerTrack) ; else {\n\t    this.createColorPicker();\n\t  }\n\t};\n\n\tTrackView.prototype.renderSVGContext = function (context, offset) {\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = this.viewports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var viewport = _step.value;\n\t      var index = viewport.browser.genomicStateList.indexOf(viewport.genomicState);\n\t      var bbox = viewport.$viewport.get(0).getBoundingClientRect();\n\t      var o = {\n\t        deltaX: offset.deltaX + index * viewport.$viewport.width(),\n\t        deltaY: offset.deltaY + bbox.y\n\t      };\n\t      viewport.renderSVGContext(context, o);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\t};\n\n\tTrackView.prototype.configureViewportContainer = function ($viewportContainer, viewports) {\n\t  if (\"hidden\" === $viewportContainer.css(\"overflow-y\")) {\n\t    this.scrollbar = new TrackScrollbar($viewportContainer, viewports, this.browser.$root);\n\t    $viewportContainer.append(this.scrollbar.$outerScroll);\n\t  }\n\n\t  return $viewportContainer;\n\t};\n\n\tTrackView.prototype.removeViewportWithLocusIndex = function (index) {\n\t  this.viewports[index].$viewport.remove();\n\t  this.viewports.splice(index, 1);\n\t  this.decorateViewports();\n\t};\n\n\tTrackView.prototype.decorateViewports = function () {\n\t  var self = this;\n\t  this.viewports.forEach(function (viewport, index) {\n\t    var $viewport;\n\t    $viewport = viewport.$viewport;\n\n\t    if (self.viewports.length > 1) {\n\t      $viewport.find('.igv-multi-locus-panel-close-container').show();\n\t      $viewport.find('.igv-multi-locus-panel-label-div').show();\n\t    } else {\n\t      $viewport.find('.igv-multi-locus-panel-close-container').hide();\n\t      $viewport.find('.igv-multi-locus-panel-label-div').hide();\n\t    }\n\n\t    if (index < self.viewports.length && 1 + index !== self.viewports.length) {\n\t      $viewport.addClass('igv-viewport-div-border-right');\n\t    } else {\n\t      $viewport.removeClass('igv-viewport-div-border-right');\n\t    }\n\t  });\n\t};\n\n\tTrackView.prototype.appendLeftHandGutter = function ($parent) {\n\t  var self = this,\n\t      $leftHandGutter,\n\t      $canvas;\n\t  $leftHandGutter = $('<div class=\"igv-left-hand-gutter\">');\n\t  this.leftHandGutter = $leftHandGutter[0];\n\t  $parent.append($leftHandGutter);\n\n\t  if (typeof this.track.paintAxis === 'function') {\n\t    if (this.track.dataRange) {\n\t      $leftHandGutter.click(function (e) {\n\t        self.browser.dataRangeDialog.configure({\n\t          trackView: self\n\t        });\n\t        self.browser.dataRangeDialog.present($(self.trackDiv));\n\t      });\n\t      $leftHandGutter.addClass('igv-clickable');\n\t    }\n\n\t    $canvas = $('<canvas class =\"igv-track-control-canvas\">');\n\t    $leftHandGutter.append($canvas);\n\t    this.controlCanvas = $canvas.get(0);\n\t    resizeControlCanvas.call(this, $leftHandGutter.outerWidth(), $leftHandGutter.outerHeight());\n\t  }\n\t};\n\n\tTrackView.prototype.appendRightHandGutter = function ($parent) {\n\t  var $div = $('<div class=\"igv-right-hand-gutter\">');\n\t  $parent.append($div);\n\t  createTrackGearPopover.call(this, $div);\n\t}; // Free function for juicebox -- do not attach to prototype!!!\n\n\n\tfunction createTrackGearPopover($parent) {\n\t  var $cogContainer = $(\"<div>\", {\n\t    class: 'igv-trackgear-container'\n\t  });\n\t  $parent.append($cogContainer);\n\t  $cogContainer.append(createIcon('cog'));\n\t  this.trackGearPopover = new TrackGearPopover($parent);\n\t  this.trackGearPopover.$popover.hide();\n\t  var self = this;\n\t  $cogContainer.click(function (e) {\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t    self.trackGearPopover.presentMenuList(-self.trackGearPopover.$popover.width(), 0, MenuUtils.trackMenuItemList(self));\n\t  });\n\t}\n\n\tfunction resizeControlCanvas(width, height) {\n\t  var devicePixelRatio = window.devicePixelRatio;\n\n\t  if (this.leftHandGutter) {\n\t    if (this.controlCanvas) {\n\t      $(this.controlCanvas).remove();\n\t    }\n\n\t    var $canvas = $('<canvas class =\"igv-track-control-canvas\">');\n\t    this.controlCanvas = $canvas[0];\n\t    $(this.leftHandGutter).append($canvas);\n\t    this.controlCanvas.height = devicePixelRatio * height;\n\t    this.controlCanvas.width = devicePixelRatio * width;\n\t    this.controlCanvas.style.height = height + \"px\";\n\t    this.controlCanvas.style.width = width + \"px\";\n\t    this.controlCtx = this.controlCanvas.getContext(\"2d\");\n\t    this.controlCtx.scale(devicePixelRatio, devicePixelRatio);\n\t  }\n\t}\n\n\tfunction attachDragWidget($track, $viewportContainer) {\n\t  var self = this;\n\t  var browser = this.browser;\n\t  this.$trackDragScrim = $('<div class=\"igv-track-drag-scrim\">');\n\t  $viewportContainer.append(this.$trackDragScrim);\n\t  this.$trackDragScrim.hide();\n\t  self.$trackManipulationHandle = $('<div class=\"igv-track-manipulation-handle\">');\n\t  $track.append(self.$trackManipulationHandle);\n\t  self.$trackManipulationHandle.on('mousedown', function (e) {\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t    self.$trackDragScrim.show();\n\t    browser.startTrackDrag(self);\n\t  });\n\t  self.$trackManipulationHandle.on('mouseup', function (e) {\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t    browser.endTrackDrag();\n\t    self.$trackDragScrim.hide();\n\t  });\n\t  $track.on('mouseenter', function (e) {\n\t    if (browser.dragTrack) {\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      browser.updateTrackDrag(self);\n\t    }\n\t  });\n\t  self.$trackManipulationHandle.on('mouseleave', function (e) {\n\t    if (!browser.dragTrack) {\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      self.$trackDragScrim.hide();\n\t    }\n\t  });\n\t}\n\n\tTrackView.prototype.dataRange = function () {\n\t  return this.track.dataRange ? this.track.dataRange : undefined;\n\t};\n\n\tTrackView.prototype.setDataRange = function (min, max, autoscale) {\n\t  if (min !== undefined) {\n\t    this.track.dataRange.min = min;\n\t    this.track.config.min = min;\n\t  }\n\n\t  if (max !== undefined) {\n\t    this.track.dataRange.max = max;\n\t    this.track.config.max = max;\n\t  }\n\n\t  this.track.autoscale = autoscale;\n\t  this.track.config.autoScale = autoscale;\n\t  this.repaintViews();\n\t};\n\n\tTrackView.prototype.setColor = function (color) {\n\t  this.track.color = color;\n\t  this.track.config.color = color;\n\t  this.repaintViews(true);\n\t};\n\n\tTrackView.prototype.createColorPicker = function () {\n\t  var _this = this;\n\n\t  var self = this;\n\t  var config = {\n\t    $parent: $(this.trackDiv),\n\t    width: 384,\n\t    height: undefined,\n\t    closeHandler: function closeHandler() {\n\t      self.colorPicker.$container.hide();\n\t    }\n\t  };\n\t  this.colorPicker = new GenericContainer(config);\n\t  createColorSwatchSelector(this.colorPicker.$container, function (rgb) {\n\t    return _this.setColor(rgb);\n\t  }, this.track.color);\n\t  self.colorPicker.$container.hide();\n\t};\n\n\tTrackView.prototype.presentColorPicker = function () {\n\t  var bbox = this.trackDiv.getBoundingClientRect();\n\t  this.colorPicker.origin = {\n\t    x: bbox.x,\n\t    y: 0\n\t  };\n\t  this.colorPicker.$container.offset({\n\t    left: this.colorPicker.origin.x,\n\t    top: this.colorPicker.origin.y\n\t  });\n\t  this.colorPicker.$container.show();\n\t};\n\n\tTrackView.prototype.setTrackHeight = function (newHeight, update, force) {\n\t  if (!force) {\n\t    if (this.track.minHeight) {\n\t      newHeight = Math.max(this.track.minHeight, newHeight);\n\t    }\n\n\t    if (this.track.maxHeight) {\n\t      newHeight = Math.min(this.track.maxHeight, newHeight);\n\t    }\n\t  }\n\n\t  this.track.height = newHeight;\n\t  this.track.config.height = newHeight;\n\t  $(this.trackDiv).height(newHeight); // If the track does not manage its own content height set it here\n\n\t  if (typeof this.track.computePixelHeight !== \"function\") {\n\t    this.viewports.forEach(function (vp) {\n\t      vp.setContentHeight(newHeight);\n\t      if (vp.tile) vp.tile.invalidate = true;\n\t    });\n\t    this.repaintViews();\n\t  }\n\n\t  resizeControlCanvas.call(this, $(this.leftHandGutter).outerWidth(), newHeight);\n\n\t  if (this.track.paintAxis) {\n\t    this.track.paintAxis(this.controlCtx, $(this.controlCanvas).width(), $(this.controlCanvas).height());\n\t  }\n\n\t  if (this.scrollbar) {\n\t    this.scrollbar.update();\n\t  }\n\t};\n\n\tTrackView.prototype.isLoading = function () {\n\t  for (var i = 0; i < this.viewports.length; i++) {\n\t    if (this.viewports[i].isLoading()) return true;\n\t  }\n\t};\n\n\tTrackView.prototype.resize = function () {\n\t  var width;\n\t  width = this.browser.viewportContainerWidth() / this.browser.genomicStateList.length;\n\t  if (width === 0) return;\n\t  this.viewports.forEach(function (viewport) {\n\t    viewport.setWidth(width);\n\t  });\n\t  var $leftHandGutter = $(this.leftHandGutter);\n\t  resizeControlCanvas.call(this, $leftHandGutter.outerWidth(), $leftHandGutter.outerHeight());\n\t  this.updateViews(true);\n\t};\n\t/**\n\t * Repaint all viewports without loading any new data.   Use this for events that change visual aspect of data,\n\t * e.g. color, sort order, etc, but do not change the genomic state.\n\t */\n\n\n\tTrackView.prototype.repaintViews = function () {\n\t  this.viewports.forEach(function (viewport) {\n\t    viewport.repaint();\n\t  });\n\n\t  if (this.track.paintAxis) {\n\t    this.track.paintAxis(this.controlCtx, $(this.controlCanvas).width(), $(this.controlCanvas).height());\n\t  }\n\t};\n\t/**\n\t * Update viewports to reflect current genomic state, possibly loading additional data.\n\t */\n\n\n\tTrackView.prototype.updateViews = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(force) {\n\t    var visibleViewports, rpV, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _vp3, dragObject, allFeatures, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, vp, referenceFrame, start, end, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _vp, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, _vp2;\n\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            if (this.browser && this.browser.genomicStateList) {\n\t              _context.next = 2;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"return\");\n\n\t          case 2:\n\t            visibleViewports = this.viewports.filter(function (vp) {\n\t              return vp.isVisible();\n\t            });\n\t            visibleViewports.forEach(function (viewport) {\n\t              viewport.shift();\n\t            }); // List of viewports that need reloading\n\n\t            rpV = viewportsToReload.call(this, force);\n\t            _iteratorNormalCompletion2 = true;\n\t            _didIteratorError2 = false;\n\t            _iteratorError2 = undefined;\n\t            _context.prev = 8;\n\t            _iterator2 = rpV[Symbol.iterator]();\n\n\t          case 10:\n\t            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n\t              _context.next = 18;\n\t              break;\n\t            }\n\n\t            _vp3 = _step2.value;\n\t            _context.next = 14;\n\t            return _vp3.loadFeatures();\n\n\t          case 14:\n\t            if (_vp3.tile && _vp3.tile.features && _vp3.tile.features.length === 0 && 'all' === _vp3.genomicState.referenceFrame.chrName) {\n\t              _vp3.checkZoomIn();\n\t            }\n\n\t          case 15:\n\t            _iteratorNormalCompletion2 = true;\n\t            _context.next = 10;\n\t            break;\n\n\t          case 18:\n\t            _context.next = 24;\n\t            break;\n\n\t          case 20:\n\t            _context.prev = 20;\n\t            _context.t0 = _context[\"catch\"](8);\n\t            _didIteratorError2 = true;\n\t            _iteratorError2 = _context.t0;\n\n\t          case 24:\n\t            _context.prev = 24;\n\t            _context.prev = 25;\n\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t              _iterator2.return();\n\t            }\n\n\t          case 27:\n\t            _context.prev = 27;\n\n\t            if (!_didIteratorError2) {\n\t              _context.next = 30;\n\t              break;\n\t            }\n\n\t            throw _iteratorError2;\n\n\t          case 30:\n\t            return _context.finish(27);\n\n\t          case 31:\n\t            return _context.finish(24);\n\n\t          case 32:\n\t            dragObject = this.browser.dragObject;\n\n\t            if (!(!dragObject && this.track.autoscale)) {\n\t              _context.next = 55;\n\t              break;\n\t            }\n\n\t            allFeatures = [];\n\t            _iteratorNormalCompletion3 = true;\n\t            _didIteratorError3 = false;\n\t            _iteratorError3 = undefined;\n\t            _context.prev = 38;\n\n\t            for (_iterator3 = visibleViewports[Symbol.iterator](); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t              vp = _step3.value;\n\t              referenceFrame = vp.genomicState.referenceFrame;\n\t              start = referenceFrame.start;\n\t              end = start + referenceFrame.toBP($(vp.contentDiv).width());\n\n\t              if (vp.tile && vp.tile.features) {\n\t                allFeatures = allFeatures.concat(FeatureUtils.findOverlapping(vp.tile.features, start, end));\n\t              }\n\t            }\n\n\t            _context.next = 46;\n\t            break;\n\n\t          case 42:\n\t            _context.prev = 42;\n\t            _context.t1 = _context[\"catch\"](38);\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = _context.t1;\n\n\t          case 46:\n\t            _context.prev = 46;\n\t            _context.prev = 47;\n\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t              _iterator3.return();\n\t            }\n\n\t          case 49:\n\t            _context.prev = 49;\n\n\t            if (!_didIteratorError3) {\n\t              _context.next = 52;\n\t              break;\n\t            }\n\n\t            throw _iteratorError3;\n\n\t          case 52:\n\t            return _context.finish(49);\n\n\t          case 53:\n\t            return _context.finish(46);\n\n\t          case 54:\n\t            if (typeof this.track.doAutoscale === 'function') {\n\t              this.track.dataRange = this.track.doAutoscale(allFeatures);\n\t            } else {\n\t              this.track.dataRange = doAutoscale(allFeatures);\n\t            }\n\n\t          case 55:\n\t            if (!(!dragObject && (this.track.autoscale || this.track.autoscaleGroup))) {\n\t              _context.next = 77;\n\t              break;\n\t            }\n\n\t            _iteratorNormalCompletion4 = true;\n\t            _didIteratorError4 = false;\n\t            _iteratorError4 = undefined;\n\t            _context.prev = 59;\n\n\t            for (_iterator4 = visibleViewports[Symbol.iterator](); !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t              _vp = _step4.value;\n\n\t              _vp.repaint();\n\t            }\n\n\t            _context.next = 67;\n\t            break;\n\n\t          case 63:\n\t            _context.prev = 63;\n\t            _context.t2 = _context[\"catch\"](59);\n\t            _didIteratorError4 = true;\n\t            _iteratorError4 = _context.t2;\n\n\t          case 67:\n\t            _context.prev = 67;\n\t            _context.prev = 68;\n\n\t            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t              _iterator4.return();\n\t            }\n\n\t          case 70:\n\t            _context.prev = 70;\n\n\t            if (!_didIteratorError4) {\n\t              _context.next = 73;\n\t              break;\n\t            }\n\n\t            throw _iteratorError4;\n\n\t          case 73:\n\t            return _context.finish(70);\n\n\t          case 74:\n\t            return _context.finish(67);\n\n\t          case 75:\n\t            _context.next = 96;\n\t            break;\n\n\t          case 77:\n\t            _iteratorNormalCompletion5 = true;\n\t            _didIteratorError5 = false;\n\t            _iteratorError5 = undefined;\n\t            _context.prev = 80;\n\n\t            for (_iterator5 = rpV[Symbol.iterator](); !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t              _vp2 = _step5.value;\n\n\t              _vp2.repaint();\n\t            }\n\n\t            _context.next = 88;\n\t            break;\n\n\t          case 84:\n\t            _context.prev = 84;\n\t            _context.t3 = _context[\"catch\"](80);\n\t            _didIteratorError5 = true;\n\t            _iteratorError5 = _context.t3;\n\n\t          case 88:\n\t            _context.prev = 88;\n\t            _context.prev = 89;\n\n\t            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t              _iterator5.return();\n\t            }\n\n\t          case 91:\n\t            _context.prev = 91;\n\n\t            if (!_didIteratorError5) {\n\t              _context.next = 94;\n\t              break;\n\t            }\n\n\t            throw _iteratorError5;\n\n\t          case 94:\n\t            return _context.finish(91);\n\n\t          case 95:\n\t            return _context.finish(88);\n\n\t          case 96:\n\t            adjustTrackHeight.call(this);\n\n\t          case 97:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this, [[8, 20, 24, 32], [25,, 27, 31], [38, 42, 46, 54], [47,, 49, 53], [59, 63, 67, 75], [68,, 70, 74], [80, 84, 88, 96], [89,, 91, 95]]);\n\t  }));\n\n\t  return function (_x) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\t/**\n\t * Return a promise to get all in-view features.  Used for group autoscaling.\n\t */\n\n\n\tTrackView.prototype.getInViewFeatures = /*#__PURE__*/function () {\n\t  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(force) {\n\t    var rpV, promises, allFeatures, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, vp, referenceFrame, start, end;\n\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            if (this.browser && this.browser.genomicStateList) {\n\t              _context2.next = 2;\n\t              break;\n\t            }\n\n\t            return _context2.abrupt(\"return\", []);\n\n\t          case 2:\n\t            // List of viewports that need reloading\n\t            rpV = viewportsToReload.call(this, force);\n\t            promises = rpV.map(function (vp) {\n\t              return vp.loadFeatures();\n\t            });\n\t            _context2.next = 6;\n\t            return Promise.all(promises);\n\n\t          case 6:\n\t            allFeatures = [];\n\t            _iteratorNormalCompletion6 = true;\n\t            _didIteratorError6 = false;\n\t            _iteratorError6 = undefined;\n\t            _context2.prev = 10;\n\n\t            for (_iterator6 = this.viewports[Symbol.iterator](); !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t              vp = _step6.value;\n\n\t              if (vp.tile && vp.tile.features) {\n\t                referenceFrame = vp.genomicState.referenceFrame;\n\t                start = referenceFrame.start;\n\t                end = start + referenceFrame.toBP($(vp.contentDiv).width());\n\t                allFeatures = allFeatures.concat(FeatureUtils.findOverlapping(vp.tile.features, start, end));\n\t              }\n\t            }\n\n\t            _context2.next = 18;\n\t            break;\n\n\t          case 14:\n\t            _context2.prev = 14;\n\t            _context2.t0 = _context2[\"catch\"](10);\n\t            _didIteratorError6 = true;\n\t            _iteratorError6 = _context2.t0;\n\n\t          case 18:\n\t            _context2.prev = 18;\n\t            _context2.prev = 19;\n\n\t            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n\t              _iterator6.return();\n\t            }\n\n\t          case 21:\n\t            _context2.prev = 21;\n\n\t            if (!_didIteratorError6) {\n\t              _context2.next = 24;\n\t              break;\n\t            }\n\n\t            throw _iteratorError6;\n\n\t          case 24:\n\t            return _context2.finish(21);\n\n\t          case 25:\n\t            return _context2.finish(18);\n\n\t          case 26:\n\t            return _context2.abrupt(\"return\", allFeatures);\n\n\t          case 27:\n\t          case \"end\":\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this, [[10, 14, 18, 26], [19,, 21, 25]]);\n\t  }));\n\n\t  return function (_x2) {\n\t    return _ref2.apply(this, arguments);\n\t  };\n\t}();\n\n\tfunction viewportsToReload(force) {\n\t  // List of viewports that need reloading\n\t  var rpV = this.viewports.filter(function (viewport) {\n\t    if (!viewport.isVisible()) {\n\t      return false;\n\t    }\n\n\t    if (!viewport.checkZoomIn()) {\n\t      return false;\n\t    } else {\n\t      var referenceFrame = viewport.genomicState.referenceFrame;\n\t      var chr = referenceFrame.chrName;\n\t      var start = referenceFrame.start;\n\t      var end = start + referenceFrame.toBP($(viewport.contentDiv).width());\n\t      var bpPerPixel = referenceFrame.bpPerPixel;\n\t      return force || !viewport.tile || viewport.tile.invalidate || !viewport.tile.containsRange(chr, start, end, bpPerPixel);\n\t    }\n\t  });\n\t  return rpV;\n\t}\n\n\tTrackView.prototype.checkContentHeight = function () {\n\t  this.viewports.forEach(function (vp) {\n\t    vp.checkContentHeight();\n\t  });\n\t  adjustTrackHeight.call(this);\n\t};\n\n\tfunction adjustTrackHeight() {\n\t  var maxHeight = this.maxContentHeight();\n\n\t  if (this.track.autoHeight) {\n\t    this.setTrackHeight(maxHeight, false);\n\t  } else if (this.track.paintAxis) {\n\t    // Avoid duplication, paintAxis is already called in setTrackHeight\n\t    this.track.paintAxis(this.controlCtx, $(this.controlCanvas).width(), $(this.controlCanvas).height());\n\t  }\n\n\t  if (this.scrollbar) {\n\t    var currentTop = this.viewports[0].getContentTop();\n\t    var newTop = Math.min(0, this.$viewportContainer.height() - minContentHeight(this.viewports));\n\n\t    if (currentTop < newTop) {\n\t      this.viewports.forEach(function (viewport) {\n\t        $(viewport.contentDiv).css(\"top\", newTop + \"px\");\n\t      });\n\t    }\n\n\t    this.scrollbar.update();\n\t  }\n\t}\n\n\tTrackView.prototype.maxContentHeight = function () {\n\t  return maxContentHeight(this.viewports);\n\t};\n\n\tfunction maxContentHeight(viewports) {\n\t  var heights = viewports.map(function (viewport) {\n\t    return viewport.getContentHeight();\n\t  });\n\t  return Math.max.apply(Math, _toConsumableArray(heights));\n\t}\n\n\tfunction minContentHeight(viewports) {\n\t  var heights = viewports.map(function (viewport) {\n\t    return viewport.getContentHeight();\n\t  });\n\t  return Math.min.apply(Math, _toConsumableArray(heights));\n\t}\n\t/**\n\t * Do any cleanup here\n\t */\n\n\n\tTrackView.prototype.dispose = function () {\n\t  var self = this;\n\n\t  if (this.$trackManipulationHandle) {\n\t    this.$trackManipulationHandle.off();\n\t  }\n\n\t  if (this.$innerScroll) {\n\t    this.$innerScroll.off();\n\t  }\n\n\t  if (this.scrollbar) {\n\t    this.scrollbar.dispose();\n\t  }\n\n\t  $(document).off(this.namespace);\n\n\t  if (typeof this.track.dispose === \"function\") {\n\t    this.track.dispose();\n\t  }\n\n\t  var track = this.track;\n\n\t  if (typeof track.dispose === 'function') {\n\t    track.dispose();\n\t  }\n\n\t  Object.keys(track).forEach(function (key) {\n\t    track[key] = undefined;\n\t  });\n\t  this.viewports.forEach(function (viewport) {\n\t    viewport.dispose();\n\t  });\n\n\t  Object.keys(this).forEach(function (key) {\n\t    self[key] = undefined;\n\t  });\n\t};\n\n\tTrackView.prototype.scrollBy = function (delta) {\n\t  this.scrollbar.moveScrollerBy(delta);\n\t};\n\n\tvar TrackScrollbar = function TrackScrollbar($viewportContainer, viewports, rootDiv) {\n\t  var self = this;\n\t  var lastY;\n\t  var namespace = '.trackscrollbar' + guid();\n\t  this.namespace = namespace;\n\t  var $outerScroll = $('<div class=\"igv-scrollbar-outer-div\">');\n\t  this.$outerScroll = $outerScroll;\n\t  this.$innerScroll = $('<div>');\n\t  this.$outerScroll.append(this.$innerScroll);\n\t  this.$viewportContainer = $viewportContainer;\n\t  this.viewports = viewports;\n\t  this.$innerScroll.on(\"mousedown\", mouseDown);\n\t  this.$innerScroll.on(\"click\", function (event) {\n\t    event.stopPropagation();\n\t  });\n\t  this.$outerScroll.on(\"click\", function (event) {\n\t    self.moveScrollerBy(event.offsetY - self.$innerScroll.height() / 2);\n\t    event.stopPropagation();\n\t  });\n\n\t  function mouseDown(event) {\n\t    event.preventDefault();\n\t    var page = pageCoordinates(event);\n\t    lastY = page.y;\n\t    $(document).on('mousemove' + namespace, mouseMove);\n\t    $(document).on('mouseup' + namespace, mouseUp);\n\t    $(document).on('mouseleave' + namespace, mouseUp); // prevents start of horizontal track panning)\n\n\t    event.stopPropagation();\n\t  }\n\n\t  function mouseMove(event) {\n\t    event.preventDefault();\n\t    event.stopPropagation();\n\t    var page = pageCoordinates(event);\n\t    self.moveScrollerBy(page.y - lastY);\n\t    lastY = page.y;\n\t  }\n\n\t  function mouseUp(event) {\n\t    $(document).off(self.namespace);\n\t  }\n\t};\n\n\tTrackScrollbar.prototype.moveScrollerBy = function (delta) {\n\t  var y = this.$innerScroll.position().top + delta;\n\t  this.moveScrollerTo(y);\n\t};\n\n\tTrackScrollbar.prototype.moveScrollerTo = function (y) {\n\t  var outerScrollHeight = this.$outerScroll.height();\n\t  var innerScrollHeight = this.$innerScroll.height();\n\t  var newTop = Math.min(Math.max(0, y), outerScrollHeight - innerScrollHeight);\n\t  var contentDivHeight = maxContentHeight(this.viewports);\n\t  var contentTop = -Math.round(newTop * (contentDivHeight / this.$viewportContainer.height()));\n\t  this.$innerScroll.css(\"top\", newTop + \"px\");\n\t  this.viewports.forEach(function (viewport) {\n\t    viewport.setTop(contentTop);\n\t  });\n\t};\n\n\tTrackScrollbar.prototype.dispose = function () {\n\t  $(window).off(this.namespace);\n\t};\n\n\tTrackScrollbar.prototype.update = function () {\n\t  var viewportContainerHeight, contentHeight, newInnerHeight;\n\t  viewportContainerHeight = this.$viewportContainer.height();\n\t  contentHeight = maxContentHeight(this.viewports);\n\t  newInnerHeight = Math.round(viewportContainerHeight / contentHeight * viewportContainerHeight);\n\n\t  if (contentHeight > viewportContainerHeight) {\n\t    this.$outerScroll.show();\n\t    this.$innerScroll.height(newInnerHeight);\n\t  } else {\n\t    this.$outerScroll.hide();\n\t  }\n\t};\n\n\tvar trim$2 = stringTrim.trim;\n\tvar $parseFloat = global_1.parseFloat;\n\tvar FORCED$9 = 1 / $parseFloat(whitespaces + '-0') !== -Infinity; // `parseFloat` method\n\t// https://tc39.github.io/ecma262/#sec-parsefloat-string\n\n\tvar numberParseFloat = FORCED$9 ? function parseFloat(string) {\n\t  var trimmedString = trim$2(String(string));\n\t  var result = $parseFloat(trimmedString);\n\t  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n\t} : $parseFloat;\n\n\t// https://tc39.github.io/ecma262/#sec-number.parseFloat\n\n\t_export({\n\t  target: 'Number',\n\t  stat: true,\n\t  forced: Number.parseFloat != numberParseFloat\n\t}, {\n\t  parseFloat: numberParseFloat\n\t});\n\n\tvar $entries = objectToArray.entries; // `Object.entries` method\n\t// https://tc39.github.io/ecma262/#sec-object.entries\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true\n\t}, {\n\t  entries: function entries(O) {\n\t    return $entries(O);\n\t  }\n\t});\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016-2017 The Regents of the University of California\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tfunction getDataWrapper(data) {\n\t  if (typeof data == 'string' || data instanceof String) {\n\t    return new StringDataWrapper(data);\n\t  } else {\n\t    return new ByteArrayDataWrapper(data);\n\t  }\n\t} // Data might be a string, or an UInt8Array\n\n\n\tvar StringDataWrapper = function StringDataWrapper(string) {\n\t  this.data = string;\n\t  this.ptr = 0;\n\t};\n\n\tStringDataWrapper.prototype.nextLine = function () {\n\t  //return this.split(/\\r\\n|\\n|\\r/gm);\n\t  var start = this.ptr,\n\t      idx = this.data.indexOf('\\n', start);\n\n\t  if (idx > 0) {\n\t    this.ptr = idx + 1; // Advance pointer for next line\n\n\t    return idx === start ? undefined : this.data.substring(start, idx).trim();\n\t  } else {\n\t    // Last line\n\t    this.ptr = this.data.length;\n\t    return start >= this.data.length ? undefined : this.data.substring(start).trim();\n\t  }\n\t}; // For use in applications where whitespace carries meaning\n\t// Returns \"\" for an empty row (not undefined like nextLine), since this is needed in AED\n\n\n\tStringDataWrapper.prototype.nextLineNoTrim = function () {\n\t  var start = this.ptr,\n\t      idx = this.data.indexOf('\\n', start),\n\t      data = this.data;\n\n\t  if (idx > 0) {\n\t    this.ptr = idx + 1; // Advance pointer for next line\n\n\t    if (idx > start && data.charAt(idx - 1) === '\\r') {\n\t      // Trim CR manually in CR/LF sequence\n\t      return data.substring(start, idx - 1);\n\t    }\n\n\t    return data.substring(start, idx);\n\t  } else {\n\t    var length = data.length;\n\t    this.ptr = length; // Return undefined only at the very end of the data\n\n\t    return start >= length ? undefined : data.substring(start);\n\t  }\n\t};\n\n\tvar ByteArrayDataWrapper = function ByteArrayDataWrapper(array) {\n\t  this.data = array;\n\t  this.length = this.data.length;\n\t  this.ptr = 0;\n\t};\n\n\tByteArrayDataWrapper.prototype.nextLine = function () {\n\t  var c, result;\n\t  result = \"\";\n\t  if (this.ptr >= this.length) return undefined;\n\n\t  for (var i = this.ptr; i < this.length; i++) {\n\t    c = String.fromCharCode(this.data[i]);\n\t    if (c === '\\r') continue;\n\t    if (c === '\\n') break;\n\t    result = result + c;\n\t  }\n\n\t  this.ptr = i + 1;\n\t  return result;\n\t}; // The ByteArrayDataWrapper does not do any trimming by default, can reuse the function\n\n\n\tByteArrayDataWrapper.prototype.nextLineNoTrim = ByteArrayDataWrapper.prototype.nextLine;\n\n\tvar FileFormats = {\n\t  gwascatalog: {\n\t    fields: ['bin', 'chr', 'start', 'end', 'name', 'pubMedID', 'author', 'pubDate', 'journal', 'title', 'trait', 'initSample', 'replSample', 'region', 'genes', 'riskAllele', 'riskAlFreq', 'pValue', 'pValueDesc', 'orOrBeta', 'ci95', 'platform', 'cnv']\n\t  },\n\t  wgrna: {\n\t    fields: ['bin', 'chr', 'start', 'end', 'name', 'score', 'strand', 'thickStart', 'thickEnd', 'type']\n\t  },\n\t  cpgislandext: {\n\t    fields: ['bin', 'chr', 'start', 'end', 'name', 'length', 'cpgNum', 'gcNum', 'perCpg', 'perGc', 'obsExp']\n\t  },\n\t  clinVarMain: {\n\t    fields: ['chr1', 'start', 'end', 'name', 'score', 'strand', 'thickStart', 'thickEnd', 'reserved', 'blockCount', // Number of blocks\n\t    'blockSizes', // Comma separated list of block sizes\n\t    'chromStarts', // Start positions relative to chromStart\n\t    'origName', // NM_198053.2(CD247):c.462C>T (p.Asp154=)\tClinVar Variation Report\n\t    'clinSign', // Likely benign\tClinical significance\n\t    'reviewStatus', // \tbased on: criteria provided,single submitter\tReview Status\n\t    'type', // single nucleotide variant\tType of Variant\n\t    'geneId', // CD247\tGene Symbol\n\t    'snpId', //\t181656780\tdbSNP ID\n\t    'nsvId', //\t\tdbVar ID\n\t    'rcvAcc', //\tRCV000642347\tClinVar Allele Submission\n\t    'testedInGtr', //\tN\tGenetic Testing Registry\n\t    'phenotypeList', //\tImmunodeficiency due to defect in cd3-zeta\tPhenotypes\n\t    'phenotype', //\tMedGen:C1857798, OMIM:610163\tPhenotype identifiers\n\t    'origin', //\tgermline\tData origin\n\t    'assembly', //\tGRCh37\tGenome assembly\n\t    'cytogenetic', //\t1q24.2\tCytogenetic status\n\t    'hgvsCod', //\tNM_198053.2:c.462C>T\tNucleotide HGVS\n\t    'hgvsProt', //\tNP_932170.1:p.Asp154=\tProtein HGVS\n\t    'numSubmit', //\t1\tNumber of submitters\n\t    'lastEval', //\tDec 19,2017\tLast evaluation\n\t    'guidelines', //\t\tGuidelines\n\t    'otherIds']\n\t  }\n\t};\n\n\tvar knownFileExtensions = new Set([\"narrowpeak\", \"broadpeak\", \"regionpeak\", \"peaks\", \"bedgraph\", \"wig\", \"gff3\", \"gff\", \"gtf\", \"fusionjuncspan\", \"refflat\", \"seg\", \"aed\", \"bed\", \"vcf\", \"bb\", \"bigbed\", \"bw\", \"bigwig\", \"bam\", \"tdf\", \"refgene\", \"genepred\", \"genepredext\", \"bedpe\", \"bp\", \"snp\", \"rmsk\", \"cram\"]);\n\t/**\n\t * Return a custom format object with the given name.\n\t * @param name\n\t * @returns {*}\n\t */\n\n\tfunction getFormat(name) {\n\t  // if (igv.browser && igv.browser.formats && igv.browser.format[name]) {\n\t  //     return expandFormat(igv.browser.formats[name]);\n\t  // } else\n\t  if (FileFormats && FileFormats[name]) {\n\t    return expandFormat(FileFormats[name]);\n\t  } else {\n\t    return undefined;\n\t  }\n\n\t  function expandFormat(format) {\n\t    var fields = format.fields;\n\t    var keys = ['chr', 'start', 'end'];\n\n\t    for (var i = 0; i < fields.length; i++) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var key = _step.value;\n\n\t          if (key === fields[i]) {\n\t            format[key] = i;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    return format;\n\t  }\n\t}\n\n\tfunction inferTrackTypes(config) {\n\t  // function inferFileFormat(config) {\n\t  //\n\t  //     var path;\n\t  //\n\t  //     if (config.format) {\n\t  //         config.format = config.format.toLowerCase();\n\t  //         return;\n\t  //     }\n\t  //\n\t  //     path = isFilePath(config.url) ? config.url.name : config.url;\n\t  //\n\t  //     config.format = inferFileFormat(path);\n\t  // }\n\t  translateDeprecatedTypes(config);\n\n\t  if (undefined === config.sourceType && config.url) {\n\t    config.sourceType = \"file\";\n\t  }\n\n\t  if (\"file\" === config.sourceType) {\n\t    if (undefined === config.format) {\n\t      var path = isFilePath(config.url) ? config.url.name : config.url;\n\t      config.format = inferFileFormat(path);\n\t    } else {\n\t      config.format = config.format.toLowerCase();\n\t    }\n\t  }\n\n\t  if (undefined === config.type) {\n\t    if (config.type) return;\n\n\t    if (config.format) {\n\t      switch (config.format.toLowerCase()) {\n\t        case \"bw\":\n\t        case \"bigwig\":\n\t        case \"wig\":\n\t        case \"bedgraph\":\n\t        case \"tdf\":\n\t          config.type = \"wig\";\n\t          break;\n\n\t        case \"vcf\":\n\t          config.type = \"variant\";\n\t          break;\n\n\t        case \"seg\":\n\t          config.type = \"seg\";\n\t          break;\n\n\t        case \"bam\":\n\t        case \"cram\":\n\t          config.type = \"alignment\";\n\t          break;\n\n\t        case \"bedpe\":\n\t        case \"bedpe-loop\":\n\t          config.type = \"interaction\";\n\t          break;\n\n\t        case \"bp\":\n\t          config.type = \"arc\";\n\t          break;\n\n\t        default:\n\t          config.type = \"annotation\";\n\t      }\n\t    }\n\t  }\n\t}\n\n\tfunction inferFileFormat(fn) {\n\t  var idx, ext;\n\t  fn = fn.toLowerCase(); // Special case -- UCSC refgene files\n\n\t  if (fn.endsWith(\"refgene.txt.gz\") || fn.endsWith(\"refgene.txt.bgz\") || fn.endsWith(\"refgene.txt\") || fn.endsWith(\"refgene.sorted.txt.gz\") || fn.endsWith(\"refgene.sorted.txt.bgz\")) {\n\t    return \"refgene\";\n\t  } //Strip parameters -- handle local files later\n\n\n\t  idx = fn.indexOf(\"?\");\n\n\t  if (idx > 0) {\n\t    fn = fn.substr(0, idx);\n\t  } //Strip aux extensions .gz, .tab, and .txt\n\n\n\t  if (fn.endsWith(\".gz\")) {\n\t    fn = fn.substr(0, fn.length - 3);\n\t  }\n\n\t  if (fn.endsWith(\".txt\") || fn.endsWith(\".tab\") || fn.endsWith(\".bgz\")) {\n\t    fn = fn.substr(0, fn.length - 4);\n\t  }\n\n\t  idx = fn.lastIndexOf(\".\");\n\t  ext = idx < 0 ? fn : fn.substr(idx + 1);\n\n\t  switch (ext) {\n\t    case \"bw\":\n\t      return \"bigwig\";\n\n\t    case \"bb\":\n\t      return \"bigbed\";\n\n\t    default:\n\t      if (knownFileExtensions.has(ext)) {\n\t        return ext;\n\t      } else {\n\t        return undefined;\n\t      }\n\n\t  }\n\t}\n\n\tfunction inferIndexPath(url, extension) {\n\t  var idx;\n\n\t  if (url instanceof File) {\n\t    throw new Error(\"Cannot infer an index path for a local File.  Please select explicitly\");\n\t  }\n\n\t  if (url.includes(\"?\")) {\n\t    idx = url.indexOf(\"?\");\n\t    return url.substring(0, idx) + \".\" + extension + url.substring(idx);\n\t  } else {\n\t    return url + \".\" + extension;\n\t  }\n\t}\n\n\tfunction translateDeprecatedTypes(config) {\n\t  if (config.featureType) {\n\t    // Translate deprecated \"feature\" type\n\t    config.type = config.type || config.featureType;\n\t    config.featureType = undefined;\n\t  }\n\n\t  if (\"junctions\" === config.type) {\n\t    config.type = \"spliceJunctions\";\n\t  } else if (\"bed\" === config.type) {\n\t    config.type = \"annotation\";\n\t    config.format = config.format || \"bed\";\n\t  } else if (\"annotations\" === config.type) {\n\t    config.type = \"annotation\";\n\t  } else if (\"alignments\" === config.type) {\n\t    config.type = \"alignment\";\n\t  } else if (\"bam\" === config.type) {\n\t    config.type = \"alignment\";\n\t    config.format = \"bam\";\n\t  } else if (\"vcf\" === config.type) {\n\t    config.type = \"variant\";\n\t    config.format = \"vcf\";\n\t  } else if (\"t2d\" === config.type) {\n\t    config.type = \"gwas\";\n\t  } else if (\"FusionJuncSpan\" === config.type && !config.format) {\n\t    config.format = \"fusionjuncspan\";\n\t  } else if (\"aed\" === config.type) {\n\t    config.type = \"annotation\";\n\t    config.format = config.format || \"aed\";\n\t  }\n\t}\n\t/**\n\t * Parse a locus string and return a range object.  Locus string is of the form chr:start-end.  End is optional\n\t *\n\t */\n\n\n\tfunction parseLocusString(string) {\n\t  var t1 = string.split(\":\");\n\t  var t2 = t1[1].split(\"-\");\n\t  var range = {\n\t    chr: t1[0],\n\t    start: Number.parseInt(t2[0].replace(/,/g, '')) - 1\n\t  };\n\n\t  if (t2.length > 1) {\n\t    range.end = Number.parseInt(t2[1].replace(/,/g, ''));\n\t  } else {\n\t    range.end = range.start + 1;\n\t  }\n\n\t  return range;\n\t}\n\n\t/**\n\t *  Define parsers for bed-like files  (.bed, .gff, .vcf, etc).  A parser should implement 2 methods\n\t *\n\t *     parseHeader(data) - return an object representing a header or metadata.  Details are format specific\n\t *\n\t *     parseFeatures(data) - return an array of features\n\t *\n\t */\n\n\tvar maxFeatureCount = Number.MAX_VALUE; // For future use,  controls downsampling\n\n\tvar gffNameFields = [\"Name\", \"gene_name\", \"gene\", \"gene_id\", \"alias\", \"locus\"];\n\tvar aedRegexpNoNamespace = new RegExp(\"([^:]*)\\\\(([^)]*)\\\\)\"); // name(type) for AED parsing (namespace undefined)\n\n\tvar aedRegexpNamespace = new RegExp(\"([^:]*):([^(]*)\\\\(([^)]*)\\\\)\"); // namespace:name(type) for AED parsing\n\n\t/**\n\t * Return a parser for the given file format.\n\t */\n\n\tvar FeatureParser = function FeatureParser(format, decode, config) {\n\t  var customFormat;\n\n\t  if (format !== undefined) {\n\t    this.format = format.toLowerCase();\n\t  }\n\n\t  this.nameField = config ? config.nameField : undefined;\n\t  this.skipRows = 0; // The number of fixed header rows to skip.  Override for specific types as needed\n\n\t  if (decode) {\n\t    this.decode = decode;\n\t  } else {\n\t    switch (this.format) {\n\t      case \"narrowpeak\":\n\t      case \"broadpeak\":\n\t      case \"regionpeak\":\n\t      case \"peaks\":\n\t        this.decode = decodePeak;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"bedgraph\":\n\t        this.decode = decodeBedGraph;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"wig\":\n\t        this.decode = decodeWig;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"gff3\":\n\t      case \"gff\":\n\t      case \"gtf\":\n\t        this.decode = decodeGFF;\n\t        this.delimiter = \"\\t\";\n\t        break;\n\n\t      case \"fusionjuncspan\":\n\t        // bhaas, needed for FusionInspector view\n\t        this.decode = decodeFusionJuncSpan;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"gtexgwas\":\n\t        this.skipRows = 1;\n\t        this.decode = decodeGtexGWAS;\n\t        this.delimiter = \"\\t\";\n\t        break;\n\n\t      case \"refflat\":\n\t        this.decode = decodeReflat;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"genepred\":\n\t        this.decode = decodeGenePred;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"genepredext\":\n\t        this.decode = decodeGenePredExt;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"ensgene\":\n\t        this.decode = decodeGenePred;\n\t        this.shift = 1;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"refgene\":\n\t        this.decode = decodeGenePredExt;\n\t        this.delimiter = /\\s+/;\n\t        this.shift = 1;\n\t        break;\n\n\t      case \"aed\":\n\t        this.decode = decodeAed;\n\t        this.delimiter = \"\\t\";\n\t        break;\n\n\t      case \"bed\":\n\t        this.decode = decodeBed;\n\t        this.delimiter = config.delimiter || /\\s+/;\n\t        break;\n\n\t      case \"bedpe\":\n\t        this.skipRows = 1;\n\t        this.decode = decodeBedpe;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"bedpe-domain\":\n\t        this.decode = decodeBedpeDomain;\n\t        this.headerLine = true;\n\t        this.delimiter = /\\s+/;\n\t        break;\n\n\t      case \"bedpe-loop\":\n\t        this.decode = decodeBedpe;\n\t        this.delimiter = /\\s+/;\n\t        this.skipRows = 1;\n\t        this.header = {\n\t          colorColumn: 7\n\t        };\n\t        break;\n\n\t      case \"snp\":\n\t        this.decode = decodeSNP;\n\t        this.delimiter = \"\\t\";\n\t        break;\n\n\t      case \"rmsk\":\n\t        this.decode = decodeRepeatMasker;\n\t        this.delimiter = \"\\t\";\n\t        break;\n\n\t      default:\n\t        customFormat = getFormat(this.format);\n\n\t        if (customFormat !== undefined) {\n\t          this.decode = decodeCustom;\n\t          this.format = customFormat;\n\t          this.delimiter = customFormat.delimiter || \"\\t\";\n\t        } else {\n\t          this.decode = decodeBed;\n\t          this.delimiter = /\\s+/;\n\t        }\n\n\t    }\n\t  }\n\t};\n\n\tFeatureParser.prototype.parseHeader = function (data) {\n\t  var line, header, dataWrapper;\n\t  dataWrapper = getDataWrapper(data);\n\n\t  while (line = dataWrapper.nextLine()) {\n\t    if (line.startsWith(\"track\") || line.startsWith(\"#\") || line.startsWith(\"browser\")) {\n\t      if (line.startsWith(\"track\") || line.startsWith(\"#track\")) {\n\t        var h = parseTrackLine(line);\n\n\t        if (header) {\n\t          Object.assign(header, h);\n\t        } else {\n\t          header = h;\n\t        }\n\t      } else if (line.startsWith(\"#columns\")) {\n\t        var _h = parseColumnsDirective(line);\n\n\t        if (header) {\n\t          Object.assign(header, _h);\n\t        } else {\n\t          header = _h;\n\t        }\n\t      } else if (line.startsWith(\"##gff-version 3\")) {\n\t        this.format = \"gff3\";\n\t        if (!header) header = {};\n\t        header[\"format\"] = \"gff3\";\n\t      }\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\n\t  this.header = header; // Directives might be needed for parsing lines\n\n\t  return header;\n\t};\n\n\tFeatureParser.prototype.parseFeatures = function (data) {\n\t  if (!data) return null;\n\t  var dataWrapper,\n\t      wig,\n\t      feature,\n\t      tokens,\n\t      allFeatures = [],\n\t      line,\n\t      i,\n\t      cnt = 0,\n\t      j,\n\t      decode = this.decode,\n\t      format = this.format,\n\t      delimiter = this.delimiter || \"\\t\",\n\t      nextLine; // Double quoted strings can contain newlines in AED\n\t  // \"\" is an escape for a \".\n\t  // Parse all this, clean it up, split into tokens in a custom way\n\n\t  function readTokensAed() {\n\t    var tokens = [],\n\t        token = \"\",\n\t        quotedString = false,\n\t        n,\n\t        c;\n\n\t    while (line || line === '') {\n\t      for (n = 0; n < line.length; n++) {\n\t        c = line.charAt(n);\n\n\t        if (c === delimiter) {\n\t          if (!quotedString) {\n\t            tokens.push(token);\n\t            token = \"\";\n\t          } else {\n\t            token += c;\n\t          }\n\t        } else if (c === \"\\\"\") {\n\t          // Look ahead to the next character\n\t          if (n + 1 < line.length && line.charAt(n + 1) === \"\\\"\") {\n\t            if (quotedString) {\n\t              // Turn \"\" into a single \" in the output string\n\t              token += \"\\\"\";\n\t            } // \"\" on its own means empty string, ignore\n\t            // Skip the next double quote\n\n\n\t            n++;\n\t          } else {\n\t            // We know the next character is NOT a double quote, flip our state\n\t            quotedString = !quotedString;\n\t          }\n\t        } else {\n\t          token += c;\n\t        }\n\t      } // We are at the end of the line\n\n\n\t      if (quotedString) {\n\t        token += '\\n'; // Add newline to the token\n\n\t        line = nextLine(); // Keep going\n\t      } else {\n\t        // We can end the loop\n\t        break;\n\t      }\n\t    } // Push the last token\n\n\n\t    tokens.push(token);\n\t    return tokens;\n\t  }\n\n\t  dataWrapper = getDataWrapper(data);\n\n\t  if (format === 'aed') {\n\t    nextLine = dataWrapper.nextLineNoTrim.bind(dataWrapper);\n\t  } else {\n\t    nextLine = dataWrapper.nextLine.bind(dataWrapper);\n\t  }\n\n\t  i = 0;\n\n\t  while (line = nextLine()) {\n\t    i++;\n\t    if (i <= this.skipRows) continue;\n\n\t    if (line.startsWith(\"track\") || line.startsWith(\"#\") || line.startsWith(\"browser\")) {\n\t      continue;\n\t    } else if (format === \"wig\" && line.startsWith(\"fixedStep\")) {\n\t      wig = parseFixedStep(line);\n\t      continue;\n\t    } else if (format === \"wig\" && line.startsWith(\"variableStep\")) {\n\t      wig = parseVariableStep(line);\n\t      continue;\n\t    }\n\n\t    if (format !== \"aed\" || line.indexOf(\"\\\"\") === -1) {\n\t      tokens = line.split(delimiter);\n\t    } else {\n\t      tokens = readTokensAed();\n\t    }\n\n\t    if (tokens.length < 1) {\n\t      continue;\n\t    }\n\n\t    if (format === \"aed\") {\n\t      if (!this.aed) {\n\t        // Store information about the aed header in the parser itself\n\t        // This is done only once - on the first row\n\t        this.aed = parseAedHeaderRow(tokens);\n\t        continue;\n\t      }\n\t    }\n\n\t    feature = decode.call(this, tokens, wig);\n\n\t    if (feature) {\n\t      if (allFeatures.length < maxFeatureCount) {\n\t        allFeatures.push(feature);\n\t      } else {\n\t        // Reservoir sampling,  conditionally replace existing feature with new one.\n\t        j = Math.floor(Math.random() * cnt);\n\n\t        if (j < maxFeatureCount) {\n\t          allFeatures[j] = feature;\n\t        }\n\t      }\n\n\t      cnt++;\n\t    }\n\t  }\n\n\t  return allFeatures;\n\t};\n\n\tfunction parseFixedStep(line) {\n\t  var tokens = line.split(/\\s+/),\n\t      cc = tokens[1].split(\"=\")[1],\n\t      ss = parseInt(tokens[2].split(\"=\")[1], 10) - 1,\n\t      step = parseInt(tokens[3].split(\"=\")[1], 10),\n\t      span = tokens.length > 4 ? parseInt(tokens[4].split(\"=\")[1], 10) : 1;\n\t  return {\n\t    format: \"fixedStep\",\n\t    chrom: cc,\n\t    start: ss,\n\t    step: step,\n\t    span: span,\n\t    index: 0\n\t  };\n\t}\n\n\tfunction parseVariableStep(line) {\n\t  var tokens = line.split(/\\s+/),\n\t      cc = tokens[1].split(\"=\")[1],\n\t      span = tokens.length > 2 ? parseInt(tokens[2].split(\"=\")[1], 10) : 1;\n\t  return {\n\t    format: \"variableStep\",\n\t    chrom: cc,\n\t    span: span\n\t  };\n\t}\n\n\tfunction parseAedToken(value) {\n\t  // Example: refseq:accessionNumber(aed:String)\n\t  // refseq - namespace, will be declared later\n\t  // accessionNumber - name of the field\n\t  // aed:String - type of the field\n\t  // The namespace part may be missing\n\t  var match = aedRegexpNamespace.exec(value);\n\n\t  if (match) {\n\t    return {\n\t      namespace: match[1],\n\t      name: match[2],\n\t      type: match[3]\n\t    };\n\t  }\n\n\t  match = aedRegexpNoNamespace.exec(value);\n\n\t  if (match) {\n\t    return {\n\t      namespace: '?',\n\t      name: match[1],\n\t      type: match[2]\n\t    };\n\t  } else {\n\t    throw new Error(\"Error parsing the header row of AED file - column not in ns:name(ns:type) format\");\n\t  }\n\t}\n\n\tfunction parseAedHeaderRow(tokens) {\n\t  // First row of AED file defines column names\n\t  // Each header item is an aed token - see parseAedToken\n\t  var aed, k, token, aedToken; // Initialize aed section to be filled in\n\n\t  aed = {\n\t    columns: [// Information about the namespace, name and type of each column\n\t      // Example entry:\n\t      // { namespace: 'bio', name: 'start', type: 'aed:Integer' }\n\t    ],\n\t    metadata: {// Metadata about the entire AED file\n\t      // Example:\n\t      // {\n\t      //    aed: {\n\t      //       application: { value: \"CHaS Browser 3.3.0.139 (r10838)\", type: \"aed:String\" },\n\t      //       created: { value: \"2018-01-02T10:20:30.123+01:00\", type: \"aed:DateTime\" },\n\t      //       modified: { value: \"2018-03-04T11:22:33.456+01:00\", type: \"aed:DateTime\" },\n\t      //    }\n\t      //    affx: {\n\t      //       ucscGenomeVersion: { value: \"hg19\", type: \"aed:String\" }\n\t      //    },\n\t      //    namespace: {\n\t      //       omim: { value: \"http://affymetrix.com/ontology/www.ncbi.nlm.nih.gov/omim/\", type: \"aed:URI\" },\n\t      //       affx: { value: \"http://affymetrix.com/ontology/\", type: \"aed:URI\" },\n\t      //       refseq: { value: \"http://affymetrix.com/ontology/www.ncbi.nlm.nih.gov/RefSeq/\", type: \"aed:URI\" }\n\t      //    }\n\t      // }\n\t    }\n\t  };\n\n\t  for (k = 0; k < tokens.length; k++) {\n\t    token = tokens[k];\n\t    aedToken = parseAedToken(token);\n\t    aed.columns.push(aedToken);\n\t  }\n\n\t  return aed;\n\t}\n\n\tfunction parseTrackLine(line) {\n\t  var properties = {};\n\t  var tokens = line.split(/(?:\")([^\"]+)(?:\")|([^\\s\"]+)(?=\\s+|$)/g); // Clean up tokens array\n\n\t  var curr;\n\t  var tmp = [];\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = tokens[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var tk = _step.value;\n\t      if (!tk || tk.trim().length === 0) continue;\n\n\t      if (tk.endsWith(\"=\") > 0) {\n\t        curr = tk;\n\t      } else if (curr) {\n\t        tmp.push(curr + tk);\n\t        curr = undefined;\n\t      } else {\n\t        tmp.push(tk);\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  for (var _i = 0, _tmp = tmp; _i < _tmp.length; _i++) {\n\t    var str = _tmp[_i];\n\t    if (!str) return;\n\t    var kv = str.split('=', 2);\n\n\t    if (kv.length === 2) {\n\t      var key = kv[0].trim();\n\t      var value = kv[1].trim();\n\t      properties[key] = value;\n\t    }\n\t  }\n\n\t  return properties;\n\t}\n\n\tfunction parseColumnsDirective(line) {\n\t  var properties = {};\n\t  var t1 = line.split(/\\s+/);\n\n\t  if (t1.length === 2) {\n\t    var t2 = t1[1].split(\";\");\n\t    t2.forEach(function (keyValue) {\n\t      var t = keyValue.split(\"=\");\n\n\t      if (t[0] === \"color\") {\n\t        properties.colorColumn = Number.parseInt(t[1]) - 1;\n\t      } else if (t[0] === \"thickness\") {\n\t        properties.thicknessColumn = Number.parseInt(t[1]) - 1;\n\t      }\n\t    });\n\t  }\n\n\t  return properties;\n\t}\n\t/**\n\t * Decode the \"standard\" UCSC bed format\n\t * @param tokens\n\t * @param ignore\n\t * @returns decoded feature, or null if this is not a valid record\n\t */\n\n\n\tfunction decodeBed(tokens, ignore) {\n\t  var chr, start, end, exonCount, exonSizes, exonStarts, exons, feature, eStart, eEnd;\n\t  if (tokens.length < 3) return undefined;\n\t  chr = tokens[0];\n\t  start = parseInt(tokens[1]);\n\t  end = tokens.length > 2 ? parseInt(tokens[2]) : start + 1;\n\t  feature = {\n\t    chr: chr,\n\t    start: start,\n\t    end: end,\n\t    score: 1000\n\t  };\n\n\t  if (tokens.length > 3) {\n\t    // Note: these are very special rules for the gencode gene files.\n\t    // tmp = tokens[3].replace(/\"/g, '');\n\t    // idName = tmp.split(';');\n\t    // for (var i = 0; i < idName.length; i++) {\n\t    //     var kv = idName[i].split('=');\n\t    //     if (kv[0] == \"gene_id\") {\n\t    //         id = kv[1];\n\t    //     }\n\t    //     if (kv[0] == \"gene_name\") {\n\t    //         name = kv[1];\n\t    //     }\n\t    // }\n\t    // feature.id = id ? id : tmp;\n\t    // feature.name = name ? name : tmp;\n\t    if (tokens[3].indexOf(';') == -1) {\n\t      feature.name = tokens[3];\n\t    } else {\n\t      //parse gffTags\n\t      feature.attributes = parseAttributeString(tokens[3], '=');\n\t      feature.name = feature.attributes['Name'];\n\t    }\n\t  }\n\n\t  if (tokens.length > 4) {\n\t    feature.score = parseFloat(tokens[4]);\n\t  }\n\n\t  if (tokens.length > 5) {\n\t    feature.strand = tokens[5];\n\t  }\n\n\t  if (tokens.length > 6) {\n\t    feature.cdStart = parseInt(tokens[6]);\n\t  }\n\n\t  if (tokens.length > 7) {\n\t    feature.cdEnd = parseInt(tokens[7]);\n\t  }\n\n\t  if (tokens.length > 8) {\n\t    if (tokens[8] !== \".\" && tokens[8] !== \"0\") feature.color = IGVColor.createColorString(tokens[8]);\n\t  }\n\n\t  if (tokens.length > 11) {\n\t    exonCount = parseInt(tokens[9]);\n\t    exonSizes = tokens[10].split(',');\n\t    exonStarts = tokens[11].split(',');\n\t    exons = [];\n\n\t    for (var i = 0; i < exonCount; i++) {\n\t      eStart = start + parseInt(exonStarts[i]);\n\t      eEnd = eStart + parseInt(exonSizes[i]);\n\t      exons.push({\n\t        start: eStart,\n\t        end: eEnd\n\t      });\n\t    }\n\n\t    findUTRs(exons, feature.cdStart, feature.cdEnd);\n\t    feature.exons = exons;\n\t  } // Optional extra columns\n\n\n\t  if (this.header) {\n\t    var thicknessColumn = this.header.thicknessColumn;\n\t    var colorColumn = this.header.colorColumn;\n\n\t    if (colorColumn && colorColumn < tokens.length) {\n\t      feature.color = IGVColor.createColorString(tokens[colorColumn]);\n\t    }\n\n\t    if (thicknessColumn && thicknessColumn < tokens.length) {\n\t      feature.thickness = tokens[thicknessColumn];\n\t    }\n\t  }\n\n\t  return feature;\n\t}\n\t/**\n\t * Decode a UCSC repeat masker record.\n\t *\n\t * Columns, from UCSC documentation\n\t *\n\t * 0  bin    585    smallint(5) unsigned    Indexing field to speed chromosome range queries.\n\t * 1  swScore    1504    int(10) unsigned    Smith Waterman alignment score\n\t * 2  milliDiv    13    int(10) unsigned    Base mismatches in parts per thousand\n\t * 3  milliDel    4    int(10) unsigned    Bases deleted in parts per thousand\n\t * 4  milliIns    13    int(10) unsigned    Bases inserted in parts per thousand\n\t * 5  genoName    chr1    varchar(255)    Genomic sequence name\n\t * 6  genoStart    10000    int(10) unsigned    Start in genomic sequence\n\t * 7  genoEnd    10468    int(10) unsigned    End in genomic sequence\n\t * 8  genoLeft    -249240153    int(11)    -#bases after match in genomic sequence\n\t * 9  strand    +    char(1)    Relative orientation + or -\n\t * 10 repName    (CCCTAA)n    varchar(255)    Name of repeat\n\t * 11 repClass    Simple_repeat    varchar(255)    Class of repeat\n\t * 12 repFamily    Simple_repeat    varchar(255)    Family of repeat\n\t * 13 repStart    1    int(11)    Start (if strand is +) or -#bases after match (if strand is -) in repeat sequence\n\t * 14 repEnd    463    int(11)    End in repeat sequence\n\t * 15 repLeft    0    int(11)    -#bases after match (if strand is +) or start (if strand is -) in repeat sequence\n\t * 16 id    1    char(1)    First digit of id field in RepeatMasker .out file. Best ignored.\n\t */\n\n\n\tfunction decodeRepeatMasker(tokens, ignore) {\n\t  if (tokens.length < 15) return undefined;\n\t  var feature = {\n\t    swScore: Number.parseInt(tokens[1]),\n\t    milliDiv: Number.parseInt(tokens[2]),\n\t    milliDel: Number.parseInt(tokens[3]),\n\t    milliIns: Number.parseInt(tokens[4]),\n\t    chr: tokens[5],\n\t    start: Number.parseInt(tokens[6]),\n\t    end: Number.parseInt(tokens[7]),\n\t    //genoLeft: tokens[8],\n\t    strand: tokens[9],\n\t    repName: tokens[10],\n\t    repClass: tokens[11],\n\t    repFamily: tokens[12],\n\t    repStart: Number.parseInt(tokens[13]),\n\t    repEnd: Number.parseInt(tokens[14]),\n\t    repLeft: Number.parseInt(tokens[15])\n\t  };\n\t  return feature;\n\t}\n\t/**\n\t * Decode a UCSC \"genePred\" record.\n\t *\n\t * @param tokens\n\t * @param ignore\n\t * @returns {*}\n\t */\n\n\n\tfunction decodeGenePred(tokens, ignore) {\n\t  var shift = this.shift === undefined ? 0 : 1;\n\t  if (tokens.length < 9 + shift) return undefined;\n\t  var cdStart = parseInt(tokens[5 + shift]);\n\t  var cdEnd = parseInt(tokens[6 + shift]);\n\t  var feature = {\n\t    name: tokens[0 + shift],\n\t    chr: tokens[1 + shift],\n\t    strand: tokens[2 + shift],\n\t    start: parseInt(tokens[3 + shift]),\n\t    end: parseInt(tokens[4 + shift]),\n\t    cdStart: cdStart,\n\t    cdEnd: cdEnd,\n\t    id: tokens[0 + shift]\n\t  },\n\t      exonCount = parseInt(tokens[7 + shift]),\n\t      exonStarts = tokens[8 + shift].split(','),\n\t      exonEnds = tokens[9 + shift].split(','),\n\t      exons = [];\n\n\t  for (var i = 0; i < exonCount; i++) {\n\t    var start = parseInt(exonStarts[i]);\n\t    var end = parseInt(exonEnds[i]);\n\t    exons.push({\n\t      start: start,\n\t      end: end\n\t    });\n\t  }\n\n\t  findUTRs(exons, cdStart, cdEnd);\n\t  feature.exons = exons;\n\t  return feature;\n\t}\n\t/**\n\t * Decode a UCSC \"genePredExt\" record.  refGene files are in this format.\n\t *\n\t * @param tokens\n\t * @param ignore\n\t * @returns {*}\n\t */\n\n\n\tfunction decodeGenePredExt(tokens, ignore) {\n\t  var shift = this.shift === undefined ? 0 : 1;\n\t  if (tokens.length < 11 + shift) return undefined;\n\t  var cdStart = parseInt(tokens[5 + shift]);\n\t  var cdEnd = parseInt(tokens[6 + shift]);\n\t  var feature = {\n\t    name: tokens[11 + shift],\n\t    chr: tokens[1 + shift],\n\t    strand: tokens[2 + shift],\n\t    start: parseInt(tokens[3 + shift]),\n\t    end: parseInt(tokens[4 + shift]),\n\t    cdStart: cdStart,\n\t    cdEnd: cdEnd,\n\t    id: tokens[0 + shift]\n\t  },\n\t      exonCount = parseInt(tokens[7 + shift]),\n\t      exonStarts = tokens[8 + shift].split(','),\n\t      exonEnds = tokens[9 + shift].split(','),\n\t      exons = [];\n\n\t  for (var i = 0; i < exonCount; i++) {\n\t    var start = parseInt(exonStarts[i]);\n\t    var end = parseInt(exonEnds[i]);\n\t    exons.push({\n\t      start: start,\n\t      end: end\n\t    });\n\t  }\n\n\t  findUTRs(exons, cdStart, cdEnd);\n\t  feature.exons = exons;\n\t  return feature;\n\t}\n\t/**\n\t * Decode a UCSC \"refFlat\" record\n\t * @param tokens\n\t * @param ignore\n\t * @returns {*}\n\t */\n\n\n\tfunction decodeReflat(tokens, ignore) {\n\t  var shift = this.shift === undefined ? 0 : 1;\n\t  if (tokens.length < 10 + shift) return undefined;\n\t  var cdStart = parseInt(tokens[6 + shift]);\n\t  var cdEnd = parseInt(tokens[7 + shift]);\n\t  var feature = {\n\t    name: tokens[0 + shift],\n\t    id: tokens[1 + shift],\n\t    chr: tokens[2 + shift],\n\t    strand: tokens[3 + shift],\n\t    start: parseInt(tokens[4 + shift]),\n\t    end: parseInt(tokens[5 + shift]),\n\t    cdStart: cdStart,\n\t    cdEnd: cdEnd\n\t  },\n\t      exonCount = parseInt(tokens[8 + shift]),\n\t      exonStarts = tokens[9 + shift].split(','),\n\t      exonEnds = tokens[10 + shift].split(','),\n\t      exons = [];\n\n\t  for (var i = 0; i < exonCount; i++) {\n\t    var start = parseInt(exonStarts[i]);\n\t    var end = parseInt(exonEnds[i]);\n\t    exons.push({\n\t      start: start,\n\t      end: end\n\t    });\n\t  }\n\n\t  findUTRs(exons, cdStart, cdEnd);\n\t  feature.exons = exons;\n\t  return feature;\n\t}\n\n\tfunction findUTRs(exons, cdStart, cdEnd) {\n\t  var _iteratorNormalCompletion2 = true;\n\t  var _didIteratorError2 = false;\n\t  var _iteratorError2 = undefined;\n\n\t  try {\n\t    for (var _iterator2 = exons[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t      var exon = _step2.value;\n\t      var end = exon.end;\n\t      var start = exon.start;\n\n\t      if (end < cdStart || start > cdEnd) {\n\t        exon.utr = true;\n\t      } else {\n\t        if (cdStart >= start && cdStart <= end) {\n\t          exon.cdStart = cdStart;\n\t        }\n\n\t        if (cdEnd >= start && cdEnd <= end) {\n\t          exon.cdEnd = cdEnd;\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t        _iterator2.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError2) {\n\t        throw _iteratorError2;\n\t      }\n\t    }\n\t  }\n\t}\n\n\tfunction decodePeak(tokens, ignore) {\n\t  var tokenCount, chr, start, end, strand, name, score, qValue, signal, pValue;\n\t  tokenCount = tokens.length;\n\n\t  if (tokenCount < 9) {\n\t    return null;\n\t  }\n\n\t  chr = tokens[0];\n\t  start = parseInt(tokens[1]);\n\t  end = parseInt(tokens[2]);\n\t  name = tokens[3];\n\t  score = parseFloat(tokens[4]);\n\t  strand = tokens[5].trim();\n\t  signal = parseFloat(tokens[6]);\n\t  pValue = parseFloat(tokens[7]);\n\t  qValue = parseFloat(tokens[8]);\n\t  if (score === 0) score = signal;\n\t  return {\n\t    chr: chr,\n\t    start: start,\n\t    end: end,\n\t    name: name,\n\t    score: score,\n\t    strand: strand,\n\t    signal: signal,\n\t    pValue: pValue,\n\t    qValue: qValue\n\t  };\n\t}\n\n\tfunction decodeBedGraph(tokens, ignore) {\n\t  var chr, start, end, value;\n\t  if (tokens.length < 3) return null;\n\t  chr = tokens[0];\n\t  start = parseInt(tokens[1]);\n\t  end = parseInt(tokens[2]);\n\t  value = parseFloat(tokens[3]);\n\t  var feature = {\n\t    chr: chr,\n\t    start: start,\n\t    end: end,\n\t    value: value\n\t  }; // Optional extra columns\n\n\t  if (this.header) {\n\t    var colorColumn = this.header.colorColumn;\n\n\t    if (colorColumn && colorColumn < tokens.length) {\n\t      feature.color = IGVColor.createColorString(tokens[colorColumn]);\n\t    }\n\t  }\n\n\t  return feature;\n\t}\n\n\tfunction decodeWig(tokens, wig) {\n\t  var ss, ee, value;\n\n\t  if (wig.format === \"fixedStep\") {\n\t    ss = wig.index * wig.step + wig.start;\n\t    ee = ss + wig.span;\n\t    value = parseFloat(tokens[0]);\n\t    ++wig.index;\n\t    return isNaN(value) ? null : {\n\t      chr: wig.chrom,\n\t      start: ss,\n\t      end: ee,\n\t      value: value\n\t    };\n\t  } else if (wig.format === \"variableStep\") {\n\t    if (tokens.length < 2) return null;\n\t    ss = parseInt(tokens[0], 10) - 1;\n\t    ee = ss + wig.span;\n\t    value = parseFloat(tokens[1]);\n\t    return isNaN(value) ? null : {\n\t      chr: wig.chrom,\n\t      start: ss,\n\t      end: ee,\n\t      value: value\n\t    };\n\t  } else {\n\t    return decodeBedGraph(tokens);\n\t  }\n\t}\n\n\tfunction decodeFusionJuncSpan(tokens, ignore) {\n\t  /*\n\t   Format:\n\t    0       #scaffold\n\t   1       fusion_break_name\n\t   2       break_left\n\t   3       break_right\n\t   4       num_junction_reads\n\t   5       num_spanning_frags\n\t   6       spanning_frag_coords\n\t    0       B3GNT1--NPSR1\n\t   1       B3GNT1--NPSR1|2203-10182\n\t   2       2203\n\t   3       10182\n\t   4       189\n\t   5       1138\n\t   6       1860-13757,1798-13819,1391-18127,1443-17174,...\n\t    */\n\t  //console.log(\"decoding fusion junc spans\");\n\t  var chr = tokens[0];\n\t  var fusion_name = tokens[1];\n\t  var junction_left = parseInt(tokens[2]);\n\t  var junction_right = parseInt(tokens[3]);\n\t  var num_junction_reads = parseInt(tokens[4]);\n\t  var num_spanning_frags = parseInt(tokens[5]);\n\t  var spanning_frag_coords_text = tokens[6];\n\t  var feature = {\n\t    chr: chr,\n\t    name: fusion_name,\n\t    junction_left: junction_left,\n\t    junction_right: junction_right,\n\t    num_junction_reads: num_junction_reads,\n\t    num_spanning_frags: num_spanning_frags,\n\t    spanning_frag_coords: [],\n\t    start: -1,\n\t    end: -1\n\t  }; // set start and end later based on min/max of span coords\n\n\t  var min_coord = junction_left;\n\t  var max_coord = junction_right;\n\n\t  if (num_spanning_frags > 0) {\n\t    var coord_pairs = spanning_frag_coords_text.split(',');\n\n\t    for (var i = 0; i < coord_pairs.length; i++) {\n\t      var split_coords = coord_pairs[i].split('-');\n\t      var span_left = split_coords[0];\n\t      var span_right = split_coords[1];\n\n\t      if (span_left < min_coord) {\n\t        min_coord = span_left;\n\t      }\n\n\t      if (span_right > max_coord) {\n\t        max_coord = span_right;\n\t      }\n\n\t      feature.spanning_frag_coords.push({\n\t        left: span_left,\n\t        right: span_right\n\t      });\n\t    }\n\t  }\n\n\t  feature.start = min_coord;\n\t  feature.end = max_coord;\n\t  return feature;\n\t}\n\n\tfunction decodeGtexGWAS(tokens, ignore) {\n\t  //chrom\tchromStart\tchromEnd\tStrongest SNP-risk allele\tDisease/Phenotype\tP-value\tOdds ratio or beta\tPUBMEDID\n\t  //1\t1247493\t1247494\trs12103-A\tInflammatory bowel disease\t8.00E-13\t1.1\t23128233\n\t  var tokenCount = tokens.length;\n\n\t  if (tokenCount < 7) {\n\t    return null;\n\t  }\n\n\t  var feature = {\n\t    chr: tokens[0],\n\t    start: parseInt(tokens[1]) - 1,\n\t    end: parseInt(tokens[2]),\n\t    'Strongest SNP-risk allele': tokens[3],\n\t    'Disease/Phenotype': tokens[4],\n\t    'P-value': tokens[5],\n\t    'Odds ratio or beta': tokens[6]\n\t  };\n\n\t  if (tokens.length > 6) {\n\t    feature['PUBMEDID'] = \"<a target = \\\"blank\\\" href = \\\"https://www.ncbi.nlm.nih.gov/pubmed/\".concat(tokens[7], \"\\\">\").concat(tokens[7], \"</a>\");\n\t  }\n\n\t  return feature;\n\t}\n\n\tfunction parseAttributeString(attributeString, keyValueDelim) {\n\t  // parse 'attributes' string (see column 9 docs in https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md)\n\t  var attributes = {};\n\t  var _iteratorNormalCompletion3 = true;\n\t  var _didIteratorError3 = false;\n\t  var _iteratorError3 = undefined;\n\n\t  try {\n\t    for (var _iterator3 = attributeString.split(';')[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t      var kv = _step3.value;\n\t      var t = kv.trim().split(keyValueDelim, 2);\n\n\t      if (t.length === 2) {\n\t        var key = t[0].trim();\n\t        var value = t[1].trim(); //Strip off quotes, if any\n\n\t        if (value.startsWith('\"') && value.endsWith('\"')) {\n\t          value = value.substr(1, value.length - 2);\n\t        }\n\n\t        attributes[key] = value;\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError3 = true;\n\t    _iteratorError3 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t        _iterator3.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError3) {\n\t        throw _iteratorError3;\n\t      }\n\t    }\n\t  }\n\n\t  return attributes;\n\t}\n\t/**\n\t * Decode a single gff record (1 line in file).  Aggregations such as gene models are constructed at a higher level.\n\t *      ctg123 . mRNA            1050  9000  .  +  .  ID=mRNA00001;Parent=gene00001\n\t * @param tokens\n\t * @param ignore\n\t * @returns {*}\n\t */\n\n\n\tfunction decodeGFF(tokens, ignore) {\n\t  var tokenCount,\n\t      chr,\n\t      start,\n\t      end,\n\t      strand,\n\t      type,\n\t      score,\n\t      phase,\n\t      attributeString,\n\t      color,\n\t      name,\n\t      i,\n\t      format = this.format;\n\t  tokenCount = tokens.length;\n\n\t  if (tokenCount < 9) {\n\t    return null; // Not a valid gff record\n\t  }\n\n\t  chr = tokens[0];\n\t  type = tokens[2];\n\t  start = parseInt(tokens[3]) - 1;\n\t  end = parseInt(tokens[4]);\n\t  score = \".\" === tokens[5] ? 0 : parseFloat(tokens[5]);\n\t  strand = tokens[6];\n\t  phase = \".\" === tokens[7] ? 0 : parseInt(tokens[7]);\n\t  attributeString = tokens[8]; // Find ID and Parent, or transcript_id\n\n\t  var delim = 'gff3' === format ? '=' : /\\s+/;\n\t  var attributes = parseAttributeString(attributeString, delim);\n\n\t  for (var _i2 = 0, _Object$entries = Object.entries(attributes); _i2 < _Object$entries.length; _i2++) {\n\t    var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n\t        key = _Object$entries$_i[0],\n\t        value = _Object$entries$_i[1];\n\n\t    var keyLower = key.toLowerCase();\n\n\t    if (\"color\" === keyLower || \"colour\" === keyLower) {\n\t      color = IGVColor.createColorString(value);\n\t    } else if ('gff3' === format) try {\n\t      attributes[key] = unescape(value);\n\t    } catch (e) {\n\t      attributes[key] = value; // Invalid\n\n\t      console.error(\"Malformed gff3 attibute value: \".concat(value));\n\t    }\n\t  } // Find name (label) property\n\n\n\t  if (this.nameField) {\n\t    name = attributes[this.nameField];\n\t  } else {\n\t    for (i = 0; i < gffNameFields.length; i++) {\n\t      if (attributes.hasOwnProperty(gffNameFields[i])) {\n\t        this.nameField = gffNameFields[i];\n\t        name = attributes[this.nameField];\n\t        break;\n\t      }\n\t    }\n\t  }\n\n\t  var id = attributes[\"ID\"] || attributes[\"transcript_id\"];\n\t  var parent = attributes[\"Parent\"];\n\t  return new GFFFeature({\n\t    id: id,\n\t    parent: parent,\n\t    name: name,\n\t    type: type,\n\t    chr: chr,\n\t    start: start,\n\t    end: end,\n\t    score: score,\n\t    strand: strand,\n\t    color: color,\n\t    attributeString: attributeString,\n\t    delim: delim\n\t  });\n\t}\n\n\tfunction GFFFeature(props) {\n\t  Object.assign(this, props);\n\t}\n\n\tGFFFeature.prototype.popupData = function (genomicLocation) {\n\t  var kvs = this.attributeString.split(';');\n\t  var pd = [];\n\t  pd.push({\n\t    name: 'type',\n\t    value: this.type\n\t  });\n\t  pd.push({\n\t    name: 'start',\n\t    value: this.start + 1\n\t  });\n\t  pd.push({\n\t    name: 'end',\n\t    value: this.end\n\t  });\n\t  var _iteratorNormalCompletion4 = true;\n\t  var _didIteratorError4 = false;\n\t  var _iteratorError4 = undefined;\n\n\t  try {\n\t    for (var _iterator4 = kvs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t      var kv = _step4.value;\n\t      var t = kv.trim().split(this.delim, 2);\n\n\t      if (t.length === 2 && t[1] !== undefined) {\n\t        var key = t[0].trim();\n\t        var value = t[1].trim(); //Strip off quotes, if any\n\n\t        if (value.startsWith('\"') && value.endsWith('\"')) {\n\t          value = value.substr(1, value.length - 2);\n\t        }\n\n\t        pd.push({\n\t          name: key,\n\t          value: value\n\t        });\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError4 = true;\n\t    _iteratorError4 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t        _iterator4.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError4) {\n\t        throw _iteratorError4;\n\t      }\n\t    }\n\t  }\n\n\t  return pd;\n\t};\n\t/**\n\t * AED file feature.\n\t *\n\t * @param aed link to the AED file object containing file-level metadata and column descriptors\n\t * @param allColumns All columns as parsed from the AED\n\t *\n\t * Other values are parsed one by one\n\t */\n\n\n\tfunction AedFeature(aed, allColumns) {\n\t  var token,\n\t      aedColumn,\n\t      aedColumns = aed.columns; // Link to AED file (for metadata)\n\n\t  this.aed = aed; // Unparsed columns from AED file\n\n\t  this.allColumns = allColumns; // Prepare space for the parsed values\n\n\t  this.chr = null;\n\t  this.start = null;\n\t  this.end = null;\n\t  this.score = 1000;\n\t  this.strand = '.';\n\t  this.cdStart = null;\n\t  this.cdEnd = null;\n\t  this.name = null;\n\t  this.color = null;\n\n\t  for (var i = 0; i < allColumns.length; i++) {\n\t    token = allColumns[i];\n\n\t    if (!token) {\n\t      // Skip empty fields\n\t      continue;\n\t    }\n\n\t    aedColumn = aedColumns[i];\n\n\t    if (aedColumn.type === 'aed:Integer') {\n\t      token = parseInt(token);\n\t    }\n\n\t    if (aedColumn.namespace === 'bio') {\n\t      if (aedColumn.name === 'sequence') {\n\t        this.chr = token;\n\t      } else if (aedColumn.name === 'start') {\n\t        this.start = token;\n\t      } else if (aedColumn.name === 'end') {\n\t        this.end = token;\n\t      } else if (aedColumn.name === 'cdsMin') {\n\t        this.cdStart = token;\n\t      } else if (aedColumn.name === 'cdsMax') {\n\t        this.cdEnd = token;\n\t      } else if (aedColumn.name === 'strand') {\n\t        this.strand = token;\n\t      }\n\t    } else if (aedColumn.namespace === 'aed') {\n\t      if (aedColumn.name === 'name') {\n\t        this.name = token;\n\t      }\n\t    } else if (aedColumn.namespace === 'style') {\n\t      if (aedColumn.name === 'color') {\n\t        this.color = IGVColor.createColorString(token);\n\t      }\n\t    }\n\t  }\n\t}\n\n\tAedFeature.prototype.popupData = function () {\n\t  var data = [],\n\t      aed = this.aed; // Just dump everything we have for now\n\n\t  for (var i = 0; i < this.allColumns.length; i++) {\n\t    var featureValue = this.allColumns[i];\n\t    var name = aed.columns[i].name; // Skip columns that are not interesting - you know the sequence, and you can see color\n\n\t    if (name !== 'sequence' && name !== 'color') {\n\t      if (featureValue) {\n\t        data.push({\n\t          name: name,\n\t          value: featureValue\n\t        });\n\t      }\n\t    }\n\t  }\n\n\t  return data;\n\t};\n\t/**\n\t * Decode the AED file format\n\t * @param tokens\n\t * @param ignore\n\t * @returns decoded feature, or null if this is not a valid record\n\t */\n\n\n\tfunction decodeAed(tokens, ignore) {\n\t  var name,\n\t      value,\n\t      token,\n\t      nonEmptyTokens = 0,\n\t      aedColumns = this.aed.columns,\n\t      aedColumn,\n\t      aedKey,\n\t      i; // Each aed row must match the exact number of columns or we skip it\n\n\t  if (tokens.length !== aedColumns.length) {\n\t    return undefined;\n\t  }\n\n\t  for (i = 0; i < tokens.length; i++) {\n\t    aedColumn = aedColumns[i];\n\t    token = tokens[i];\n\n\t    if (token !== '') {\n\t      nonEmptyTokens++;\n\t    }\n\n\t    if (aedColumn.name === 'name' && aedColumn.namespace === 'aed') {\n\t      name = token;\n\t    } else if (aedColumn.name === 'value' && aedColumn.namespace === 'aed') {\n\t      value = token;\n\t    }\n\t  }\n\n\t  if (nonEmptyTokens === 2 && name && value) {\n\t    // Special row that defines metadata for the entire file\n\t    aedKey = parseAedToken(name); // Store in the metadata section\n\n\t    if (!this.aed.metadata[aedKey.namespace]) {\n\t      this.aed.metadata[aedKey.namespace] = {};\n\t    }\n\n\t    if (!this.aed.metadata[aedKey.namespace][aedKey.name]) {\n\t      this.aed.metadata[aedKey.namespace][aedKey.name] = {\n\t        type: aedKey.type,\n\t        value: value\n\t      };\n\t    } // Ignore this value\n\n\n\t    return undefined;\n\t  }\n\n\t  var feature = new AedFeature(this.aed, tokens);\n\n\t  if (!feature.chr || !feature.start && feature.start !== 0 || !feature.end) {\n\t    return undefined;\n\t  }\n\n\t  return feature;\n\t}\n\n\tfunction decodeBedpe(tokens, ignore) {\n\t  if (tokens.length < 6) {\n\t    return undefined;\n\t  }\n\n\t  var feature = {\n\t    chr1: tokens[0],\n\t    start1: Number.parseInt(tokens[1]),\n\t    end1: Number.parseInt(tokens[2]),\n\t    chr2: tokens[3],\n\t    start2: Number.parseInt(tokens[4]),\n\t    end2: Number.parseInt(tokens[5])\n\t  };\n\n\t  if (tokens.length > 6) {\n\t    feature.name = tokens[6];\n\t  }\n\n\t  if (tokens.length > 7) {\n\t    feature.score = tokens[7];\n\t  }\n\n\t  feature.chr = feature.chr1 === feature.chr2 ? feature.chr1 : \"MIXED\"; // Start and end for the feature as a whole.  This needs revisited for interchr features\n\n\t  feature.start = Math.min(feature.start1, feature.start2);\n\t  feature.end = Math.max(feature.end1, feature.end2); // Midpoints\n\n\t  var m1 = (feature.start1 + feature.end1) / 2;\n\t  var m2 = (feature.start2 + feature.end2) / 2;\n\t  feature.m1 = m1 < m2 ? m1 : m2;\n\t  feature.m2 = m1 < m2 ? m2 : m1; // Optional extra columns\n\n\t  if (this.header) {\n\t    var thicknessColumn = this.header.thicknessColumn;\n\t    var colorColumn = this.header.colorColumn;\n\n\t    if (colorColumn && colorColumn < tokens.length) {\n\t      feature.color = IGVColor.createColorString(tokens[colorColumn]);\n\t    }\n\n\t    if (thicknessColumn && thicknessColumn < tokens.length) {\n\t      feature.thickness = tokens[thicknessColumn];\n\t    }\n\t  }\n\n\t  return feature;\n\t}\n\t/**\n\t * Special decoder for Hic Domain files.   In these files feature1 == feature2, they are really bed records.\n\t * @param tokens\n\t * @param ignore\n\t * @returns {*}\n\t */\n\n\n\tfunction decodeBedpeDomain(tokens, ignore) {\n\t  return {\n\t    chr: tokens[0],\n\t    start: Number.parseInt(tokens[1]),\n\t    end: Number.parseInt(tokens[2]),\n\t    color: IGVColor.createColorString(tokens[6]),\n\t    score: Number.parseFloat(tokens[7])\n\t  };\n\t}\n\n\tfunction decodeSNP(tokens, ignore) {\n\t  var autoSql = ['bin', 'chr', 'start', 'end', 'name', 'score', 'strand', 'refNCBI', 'refUCSC', 'observed', 'molType', 'class', 'valid', 'avHet', 'avHetSE', 'func', 'locType', 'weight', 'exceptions', 'submitterCount', 'submitters', 'alleleFreqCount', 'alleles', 'alleleNs', 'alleleFreqs', 'bitfields'];\n\t  var feature = {\n\t    chr: tokens[1],\n\t    start: Number.parseInt(tokens[2]),\n\t    end: Number.parseInt(tokens[3]),\n\t    name: tokens[4],\n\t    score: Number.parseInt(tokens[5])\n\t  };\n\t  var n = Math.min(tokens.length, autoSql.length);\n\n\t  for (var i = 6; i < n; i++) {\n\t    feature[autoSql[i]] = tokens[i];\n\t  }\n\n\t  return feature;\n\t}\n\t/**\n\t * Decode a custom columnar format.  Required columns are 'chr' and 'start'\n\t *\n\t * @param tokens\n\t * @param ignore\n\t * @returns decoded feature, or null if this is not a valid record\n\t */\n\n\n\tfunction decodeCustom(tokens, ignore) {\n\t  var format = this.format; // \"this\" refers to FeatureParser instance\n\n\t  var coords = format.coords || 0; // Insure that chr and start fields are defined.\n\t  //if(!this.format.chr && this.format.start) {\n\t  //}\n\n\t  var chr = tokens[format.chr];\n\t  var start = parseInt(tokens[format.start]) - coords;\n\t  var end = format.end !== undefined ? parseInt(tokens[format.end]) : start + 1;\n\t  var feature = {\n\t    chr: chr,\n\t    start: start,\n\t    end: end\n\t  };\n\n\t  if (format.fields) {\n\t    format.fields.forEach(function (field, index) {\n\t      if (index !== format.chr && index !== format.start && index !== format.end) {\n\t        feature[field] = tokens[index];\n\t      }\n\t    });\n\t  }\n\n\t  return feature;\n\t}\n\n\t/**\n\t *  Define parser for seg files  (.bed, .gff, .vcf, etc).  A parser should implement 2 methods\n\t *\n\t *     parseHeader(data) - return an object representing a header.  Details are format specific\n\t *\n\t *     parseFeatures(data) - return a list of features\n\t *\n\t */\n\n\tvar sampleKeyColumn = 0,\n\t    sampleColumn = 0,\n\t    chrColumn = 1,\n\t    startColumn = 2,\n\t    endColumn = 3;\n\n\tvar SegParser = function SegParser() {};\n\n\tSegParser.prototype.parseHeader = function (data) {\n\t  var lines = splitLines(data),\n\t      len = lines.length,\n\t      line,\n\t      i,\n\t      tokens;\n\n\t  for (i = 0; i < len; i++) {\n\t    line = lines[i];\n\n\t    if (line.startsWith(\"#\")) ; else {\n\t      tokens = line.split(\"\\t\");\n\t      this.header = {\n\t        headings: tokens,\n\t        lineCount: i + 1\n\t      };\n\t      break;\n\t    }\n\t  }\n\n\t  return this.header;\n\t};\n\n\tSegParser.prototype.parseFeatures = function (data) {\n\t  var lines = data ? splitLines(data) : [],\n\t      len = lines.length,\n\t      tokens,\n\t      allFeatures = [],\n\t      line,\n\t      i,\n\t      dataColumn;\n\n\t  if (!this.header) {\n\t    this.header = this.parseHeader(data);\n\t  }\n\n\t  dataColumn = this.header.headings.length - 1;\n\n\t  for (i = this.header.lineCount; i < len; i++) {\n\t    line = lines[i];\n\t    tokens = lines[i].split(\"\\t\");\n\n\t    if (tokens.length > dataColumn) {\n\t      allFeatures.push({\n\t        sampleKey: tokens[sampleKeyColumn],\n\t        sample: tokens[sampleColumn],\n\t        chr: tokens[chrColumn],\n\t        start: parseInt(tokens[startColumn]),\n\t        end: parseInt(tokens[endColumn]),\n\t        value: parseFloat(tokens[dataColumn])\n\t      });\n\t    }\n\t  }\n\n\t  return allFeatures;\n\t};\n\n\t/**\n\t * A collection of properties and methods shared by all (or most) track types.   Used as a mixin\n\t * by prototype chaining.\n\t *\n\t * @param config\n\t * @param browser\n\t * @constructor\n\t */\n\n\tvar TrackBase = function TrackBase(config, browser) {\n\t  if (config.displayMode) {\n\t    config.displayMode = config.displayMode.toUpperCase();\n\t  }\n\n\t  this.config = config;\n\t  this.browser = browser;\n\t  this.url = config.url;\n\t  this.type = config.type;\n\t  this.description = config.description;\n\t  this.supportHiDPI = config.supportHiDPI === undefined ? true : config.supportHiDPI;\n\t  config.name = config.name || config.label; // synonym for name, label is deprecated\n\n\t  if (config.name) {\n\t    this.name = config.name;\n\t  } else {\n\t    if (isFilePath(config.url)) this.name = config.url.name;else this.name = config.url;\n\t  }\n\n\t  this.order = config.order;\n\n\t  if (\"civic-ws\" === config.sourceType) {\n\t    // Ugly proxy for specialized track type\n\t    this.color = \"rgb(155,20,20)\";\n\t  } else {\n\t    this.color = config.color || config.defaultColor || \"rgb(0,0,150)\";\n\t  }\n\n\t  this.autoscaleGroup = config.autoscaleGroup;\n\t  this.removable = config.removable === undefined ? true : config.removable; // Defaults to true\n\n\t  this.height = config.height || 100;\n\t  this.autoHeight = config.autoHeight;\n\t  this.minHeight = config.minHeight || Math.min(25, this.height);\n\t  this.maxHeight = config.maxHeight || Math.max(1000, this.height);\n\t  this.visibilityWindow = config.visibilityWindow;\n\t};\n\t/**\n\t * Default implementation -- return the current state of the \"this\" object, which should be a this.  Used\n\t * to create session object for bookmarking, sharing.  Updates the track \"config\" object to reflect the\n\t * current state.  Only simple properties (string, number, boolean) are updated.\n\t */\n\n\n\tTrackBase.prototype.getState = function () {\n\t  var config = Object.assign({}, this.config);\n\t  var self = this;\n\t  Object.keys(config).forEach(function (key) {\n\t    var value = self[key];\n\n\t    if (value && (isSimpleType(value) || typeof value === \"boolean\")) {\n\t      config[key] = value;\n\t    }\n\t  });\n\t  return config;\n\t};\n\n\tTrackBase.prototype.supportsWholeGenome = function () {\n\t  return false;\n\t};\n\n\tTrackBase.prototype.clickedFeatures = function (clickState) {\n\t  // We use the cached features rather than method to avoid async load.  If the\n\t  // feature is not already loaded this won't work,  but the user wouldn't be mousing over it either.\n\t  var features = clickState.viewport.getCachedFeatures();\n\n\t  if (!features || features.length === 0) {\n\t    return [];\n\t  }\n\n\t  var genomicLocation = clickState.genomicLocation; // When zoomed out we need some tolerance around genomicLocation\n\n\t  var tolerance = clickState.referenceFrame.bpPerPixel > 0.2 ? 3 * clickState.referenceFrame.bpPerPixel : 0;\n\t  var ss = Math.floor(genomicLocation) - tolerance;\n\t  var ee = Math.floor(genomicLocation) + tolerance;\n\t  return FeatureUtils.findOverlapping(features, ss, ee);\n\t};\n\t/**\n\t * Set certain track properties, usually from a \"track\" line.  Not all UCSC properties are supported.\n\t * @param properties\n\t */\n\n\n\tTrackBase.prototype.setTrackProperties = function (properties) {\n\t  for (var _i = 0, _Object$keys = Object.keys(properties); _i < _Object$keys.length; _i++) {\n\t    var key = _Object$keys[_i];\n\n\t    switch (key) {\n\t      case \"name\":\n\t      case \"useScore\":\n\t        this[key] = properties[key];\n\t        break;\n\n\t      case \"visibility\":\n\t        //0 - hide, 1 - dense, 2 - full, 3 - pack, and 4 - squish\n\t        switch (properties[key]) {\n\t          case \"2\":\n\t          case \"3\":\n\t          case \"pack\":\n\t          case \"full\":\n\t            this.displayMode = \"EXPANDED\";\n\t            break;\n\n\t          case \"4\":\n\t          case \"squish\":\n\t            this.displayMode = \"SQUISHED\";\n\t            break;\n\n\t          case \"1\":\n\t          case \"dense\":\n\t            this.displayMode = \"COLLAPSED\";\n\t        }\n\n\t        break;\n\n\t      case \"color\":\n\t      case \"altColor\":\n\t        this[key] = \"rgb(\" + properties[key] + \")\";\n\t        break;\n\n\t      case \"featureVisiblityWindow\":\n\t        this.visibilityWindow = Number.parseInt(properties[key]);\n\t    }\n\t  }\n\t};\n\n\tTrackBase.prototype.getVisibilityWindow = function () {\n\t  return this.visibilityWindow;\n\t};\n\t/**\n\t * Default popup text function -- just extracts string and number properties in random order.\n\t * @param feature\n\t * @returns {Array}\n\t */\n\n\n\tTrackBase.extractPopupData = function (feature, genomeId) {\n\t  var filteredProperties = new Set(['row', 'color']);\n\t  var data = [];\n\t  var alleles, alleleFreqs;\n\n\t  for (var property in feature) {\n\t    if (feature.hasOwnProperty(property) && !filteredProperties.has(property) && isSimpleType(feature[property])) {\n\t      var value = feature[property];\n\t      if (\"start\" === property) value = value + 1;\n\t      data.push({\n\t        name: property,\n\t        value: value\n\t      });\n\n\t      if (property === \"alleles\") {\n\t        alleles = feature[property];\n\t      } else if (property === \"alleleFreqs\") {\n\t        alleleFreqs = feature[property];\n\t      }\n\t    }\n\t  } //const genomeId = this.getGenomeId()\n\n\n\t  if (alleles && alleleFreqs) {\n\t    if (alleles.endsWith(\",\")) {\n\t      alleles = alleles.substr(0, alleles.length - 1);\n\t    }\n\n\t    if (alleleFreqs.endsWith(\",\")) {\n\t      alleleFreqs = alleleFreqs.substr(0, alleleFreqs.length - 1);\n\t    }\n\n\t    var a = alleles.split(\",\");\n\t    var af = alleleFreqs.split(\",\");\n\n\t    if (af.length > 1) {\n\t      var b = [];\n\n\t      for (var i = 0; i < af.length; i++) {\n\t        b.push({\n\t          a: a[i],\n\t          af: Number.parseFloat(af[i])\n\t        });\n\t      }\n\n\t      b.sort(function (x, y) {\n\t        return x.af - y.af;\n\t      });\n\t      var ref = b[b.length - 1].a;\n\n\t      if (ref.length === 1) {\n\t        for (var _i2 = b.length - 2; _i2 >= 0; _i2--) {\n\t          var alt = b[_i2].a;\n\n\t          if (alt.length === 1) {\n\t            var cravatLink = TrackBase.getCravatLink(feature.chr, feature.start + 1, ref, alt, genomeId);\n\n\t            if (cravatLink) {\n\t              data.push(\"<hr/>\");\n\t              data.push(cravatLink);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  return data;\n\t};\n\n\tTrackBase.prototype.getGenomeId = function () {\n\t  return this.browser.genome ? this.browser.genome.id : undefined;\n\t};\n\n\tTrackBase.getCravatLink = function (chr, position, ref, alt, genomeID) {\n\t  if (\"hg38\" === genomeID || \"GRCh38\" === genomeID) {\n\t    var cravatChr = chr.startsWith(\"chr\") ? chr : \"chr\" + chr;\n\t    return \"<a target='_blank' \" + \"href='https://www.cravat.us/CRAVAT/variant.html?variant=\" + cravatChr + \"_\" + position + \"_+_\" + ref + \"_\" + alt + \"'>Cravat \" + ref + \"->\" + alt + \"</a>\";\n\t  } else {\n\t    return undefined;\n\t  }\n\t};\n\n\t/**\n\t * Parser for VCF files.\n\t */\n\n\tfunction createVCFVariant(tokens) {\n\t  var variant = new Variant();\n\t  variant.chr = tokens[0]; // TODO -- use genome aliases\n\n\t  variant.pos = parseInt(tokens[1]);\n\t  variant.names = tokens[2]; // id in VCF\n\n\t  variant.referenceBases = tokens[3];\n\t  variant.alternateBases = tokens[4];\n\t  variant.quality = tokens[5];\n\t  variant.filter = tokens[6];\n\t  variant.info = getInfoObject(tokens[7]);\n\t  init$1(variant);\n\t  return variant;\n\t}\n\n\tfunction getInfoObject(infoStr) {\n\t  if (!infoStr) {\n\t    return undefined;\n\t  }\n\n\t  var info = {};\n\t  infoStr.split(';').forEach(function (elem) {\n\t    var element = elem.split('=');\n\t    info[element[0]] = element[1];\n\t  });\n\t  return info;\n\t}\n\n\tfunction init$1(variant) {\n\t  var ref = variant.referenceBases;\n\t  var altBases = variant.alternateBases;\n\n\t  if (variant.info) {\n\t    if (variant.info[\"VT\"]) {\n\t      variant.type = variant.info[\"VT\"];\n\t    } else if (variant.info[\"SVTYPE\"]) {\n\t      variant.type = \"SV\";\n\t    } else if (variant.info[\"PERIOD\"]) {\n\t      variant.type = \"STR\";\n\t    } else {\n\t      variant.type = determineType(altBases);\n\t    }\n\t  } // Check for reference block\n\n\n\t  if (variant.type === \"NONVARIANT\") {\n\t    variant.heterozygosity = 0;\n\t    variant.start = variant.pos - 1; // convert to 0-based coordinate convention\n\n\t    variant.end = variant.start + ref.length; // might be overwritten by \"END\" attribute\n\t  }\n\n\t  if (variant.info[\"END\"]) {\n\t    variant.start = variant.pos - 1;\n\t    variant.end = Number.parseInt(variant.info[\"END\"]);\n\t  } else if (\"NONVARIANT\" !== variant.type) {\n\t    var altTokens = altBases.split(\",\").filter(function (token) {\n\t      return token.length > 0;\n\t    });\n\t    variant.alleles = [];\n\t    variant.start = variant.pos;\n\t    variant.end = variant.pos;\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = altTokens[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var alt = _step.value;\n\t        variant.alleles.push(alt); // We don't yet handle  SV and other special alt representations\n\n\t        if (\"SV\" !== variant.type && isKnownAlt(alt)) {\n\t          var altLength = alt.length;\n\t          var lengthOnRef = ref.length; // Trim off matching bases.  Try first match, then right -> left,  then any remaining left -> right\n\n\t          var s = 0;\n\n\t          if (ref.charCodeAt(0) === alt.charCodeAt(0)) {\n\t            s++;\n\t            altLength--;\n\t            lengthOnRef--;\n\t          } // right -> left from end\n\n\n\t          while (altLength > 0 && lengthOnRef > 0) {\n\t            if (alt.charCodeAt(s + altLength - 1) === ref.charCodeAt(s + lengthOnRef - 1)) {\n\t              altLength--;\n\t              lengthOnRef--;\n\t            } else {\n\t              break;\n\t            }\n\t          } // if any remaining, left -> right\n\n\n\t          while (altLength > 0 && lengthOnRef > 0) {\n\t            if (alt.charCodeAt(s + altLength - 1) === ref.charCodeAt(s + lengthOnRef - 1)) {\n\t              s++;\n\t              altLength--;\n\t              lengthOnRef--;\n\t            } else {\n\t              break;\n\t            }\n\t          }\n\n\t          var alleleStart = variant.pos + s - 1; // -1 for zero based coordinates\n\n\t          var alleleEnd = alleleStart + Math.max(1, lengthOnRef); // insertions have zero length on ref, but we give them 1\n\n\t          variant.start = Math.min(variant.start, alleleStart);\n\t          variant.end = Math.max(variant.end, alleleEnd);\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n\tvar knownAltBases = new Set([\"A\", \"C\", \"T\", \"G\"].map(function (c) {\n\t  return c.charCodeAt(0);\n\t}));\n\n\tfunction isKnownAlt(alt) {\n\t  for (var i = 0; i < alt.length; i++) {\n\t    if (!knownAltBases.has(alt.charCodeAt(i))) {\n\t      return false;\n\t    }\n\t  }\n\n\t  return true;\n\t}\n\n\tvar Variant = function Variant() {};\n\n\tVariant.prototype.popupData = function (genomicLocation, genomeId) {\n\t  var self = this,\n\t      fields,\n\t      gt;\n\t  var posString = this.end === this.pos ? this.pos : \"\".concat(this.pos, \"-\").concat(this.end);\n\t  fields = [{\n\t    name: \"Chr\",\n\t    value: this.chr\n\t  }, {\n\t    name: \"Pos\",\n\t    value: posString\n\t  }, {\n\t    name: \"Names\",\n\t    value: this.names ? this.names : \"\"\n\t  }, {\n\t    name: \"Ref\",\n\t    value: this.referenceBases\n\t  }, {\n\t    name: \"Alt\",\n\t    value: this.alternateBases.replace(\"<\", \"&lt;\")\n\t  }, {\n\t    name: \"Qual\",\n\t    value: this.quality\n\t  }, {\n\t    name: \"Filter\",\n\t    value: this.filter\n\t  }];\n\n\t  if (this.referenceBases.length === 1 && !determineType(this.alternateBases)) {\n\t    var ref = this.referenceBases;\n\n\t    if (ref.length === 1) {\n\t      var altArray = this.alternateBases.split(\",\");\n\n\t      for (var i = 0; i < altArray.length; i++) {\n\t        var alt = this.alternateBases[i];\n\n\t        if (alt.length === 1) {\n\t          var l = TrackBase.getCravatLink(this.chr, this.pos, ref, alt, genomeId);\n\n\t          if (l) {\n\t            fields.push(\"<hr/>\");\n\t            fields.push(l);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  if (this.hasOwnProperty(\"heterozygosity\")) {\n\t    fields.push({\n\t      name: \"Heterozygosity\",\n\t      value: this.heterozygosity\n\t    });\n\t  }\n\n\t  if (this.info) {\n\t    fields.push('<hr>');\n\t    Object.keys(this.info).forEach(function (key) {\n\t      fields.push({\n\t        name: key,\n\t        value: arrayToString$1(self.info[key])\n\t      });\n\t    });\n\t  } // Special case of VCF with a single sample\n\n\n\t  if (this.calls && this.calls.length === 1) {\n\t    fields.push('<hr>');\n\t    gt = this.alleles[this.calls[0].genotype[0]] + this.alleles[this.calls[0].genotype[1]];\n\t    fields.push({\n\t      name: \"Genotype\",\n\t      value: gt\n\t    });\n\t  }\n\n\t  return fields;\n\t};\n\n\tVariant.prototype.isRefBlock = function () {\n\t  return \"NONVARIANT\" === this.type;\n\t};\n\n\tfunction determineType(altAlleles) {\n\t  if (altAlleles === undefined) {\n\t    return \"UNKNOWN\";\n\t  } else if (altAlleles.trim().length === 0 || altAlleles === \"<NON_REF>\" || altAlleles === \"<*>\" || altAlleles === \".\") {\n\t    return \"NONVARIANT\";\n\t  } else {\n\t    var alleles = altAlleles.split(\",\");\n\t    var types = alleles.map(function (a) {\n\t      return \"<NON_REF>\" === a ? \"NONVARIANT\" : \"OTHER\";\n\t    });\n\t    var type = types[0];\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\n\t    try {\n\t      for (var _iterator2 = types[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var t = _step2.value;\n\n\t        if (t !== type) {\n\t          return \"MIXED\";\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError2 = true;\n\t      _iteratorError2 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t          _iterator2.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError2) {\n\t          throw _iteratorError2;\n\t        }\n\t      }\n\t    }\n\n\t    return type;\n\t  }\n\t}\n\n\tfunction arrayToString$1(value, delim) {\n\t  if (delim === undefined) delim = \",\";\n\n\t  if (!Array.isArray(value)) {\n\t    return value;\n\t  }\n\n\t  return value.join(delim);\n\t}\n\t/**\n\t * @deprecated - the GA4GH API has been deprecated.  This code no longer maintained.\n\t * @param json\n\t * @returns {Variant}\n\t */\n\n\n\tfunction createGAVariant(json) {\n\t  var variant = new Variant();\n\t  variant.chr = json.referenceName;\n\t  variant.start = parseInt(json.start); // Might get overriden below\n\n\t  variant.end = parseInt(json.end); // Might get overriden below\n\n\t  variant.pos = variant.start + 1; // GA4GH is 0 based.\n\n\t  variant.names = arrayToString$1(json.names, \"; \");\n\t  variant.referenceBases = json.referenceBases;\n\t  variant.alternateBases = arrayToString$1(json.alternateBases);\n\t  variant.quality = json.quality;\n\t  variant.filter = arrayToString$1(json.filter); // Flatten GA4GH attributes array\n\n\t  variant.info = {};\n\n\t  if (json.info) {\n\t    Object.keys(json.info).forEach(function (key) {\n\t      var value,\n\t          valueArray = json.info[key];\n\n\t      if (Array.isArray(valueArray)) {\n\t        value = valueArray.join(\",\");\n\t      } else {\n\t        value = valueArray;\n\t      }\n\n\t      variant.info[key] = value;\n\t    });\n\t  } // Need to build a hash of calls for fast lookup\n\t  // Note from the GA4GH spec on call ID:\n\t  //\n\t  // The ID of the call set this variant call belongs to. If this field is not present,\n\t  // the ordering of the call sets from a SearchCallSetsRequest over this GAVariantSet\n\t  // is guaranteed to match the ordering of the calls on this GAVariant.\n\t  // The number of results will also be the same.\n\n\n\t  variant.calls = {};\n\t  var id;\n\n\t  if (json.calls) {\n\t    json.calls.forEach(function (call) {\n\t      id = call.callSetId;\n\t      variant.calls[id] = call;\n\t    });\n\t  }\n\n\t  init$1(variant);\n\t  return variant;\n\t}\n\n\t/**\n\t * Parser for VCF files.\n\t */\n\n\tvar VcfParser = function VcfParser() {};\n\n\tVcfParser.prototype.parseHeader = function (data) {\n\t  var header = {};\n\t  var dataWrapper = getDataWrapper(data); // First line must be file format\n\n\t  var line = dataWrapper.nextLine();\n\n\t  if (line.startsWith(\"##fileformat\")) {\n\t    header.version = line.substr(13);\n\t  } else {\n\t    throw new Error(\"Invalid VCF file: missing fileformat line\");\n\t  }\n\n\t  while (line = dataWrapper.nextLine()) {\n\t    if (line.startsWith(\"#\")) {\n\t      var id = void 0;\n\t      var values = {};\n\n\t      if (line.startsWith(\"##\")) {\n\t        if (line.startsWith(\"##INFO\") || line.startsWith(\"##FILTER\") || line.startsWith(\"##FORMAT\")) {\n\t          var ltIdx = line.indexOf(\"<\");\n\t          var gtIdx = line.lastIndexOf(\">\");\n\n\t          if (!(ltIdx > 2 && gtIdx > 0)) {\n\t            continue;\n\t          }\n\n\t          var type = line.substring(2, ltIdx - 1);\n\t          if (!header[type]) header[type] = {}; //##INFO=<ID=AF,Number=A,Type=Float,Description=\"Allele frequency based on Flow Evaluator observation counts\">\n\t          // ##FILTER=<ID=NOCALL,Description=\"Generic filter. Filtering details stored in FR info tag.\">\n\t          // ##FORMAT=<ID=AF,Number=A,Type=Float,Description=\"Allele frequency based on Flow Evaluator observation counts\">\n\n\t          var tokens = splitStringRespectingQuotes(line.substring(ltIdx + 1, gtIdx - 1), \",\");\n\t          var _iteratorNormalCompletion = true;\n\t          var _didIteratorError = false;\n\t          var _iteratorError = undefined;\n\n\t          try {\n\t            for (var _iterator = tokens[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t              var token = _step.value;\n\t              var kv = token.split(\"=\");\n\n\t              if (kv.length > 1) {\n\t                if (kv[0] === \"ID\") {\n\t                  id = kv[1];\n\t                } else {\n\t                  values[kv[0]] = kv[1];\n\t                }\n\t              }\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t                _iterator.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError) {\n\t                throw _iteratorError;\n\t              }\n\t            }\n\t          }\n\n\t          if (id) {\n\t            header[type][id] = values;\n\t          }\n\t        }\n\t      } else if (line.startsWith(\"#CHROM\")) {\n\t        var _tokens = line.split(\"\\t\");\n\n\t        if (_tokens.length > 8) {\n\t          // call set names -- use column index for id\n\t          header.callSets = [];\n\n\t          for (var j = 9; j < _tokens.length; j++) {\n\t            header.callSets.push({\n\t              id: j,\n\t              name: _tokens[j]\n\t            });\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\n\t  this.header = header; // Will need to intrepret genotypes and info field\n\n\t  return header;\n\t};\n\n\tfunction extractCallFields(tokens) {\n\t  var callFields = {\n\t    genotypeIndex: -1,\n\t    fields: tokens\n\t  };\n\n\t  for (var i = 0; i < tokens.length; i++) {\n\t    if (\"GT\" === tokens[i]) {\n\t      callFields.genotypeIndex = i;\n\t    }\n\t  }\n\n\t  return callFields;\n\t}\n\t/**\n\t * Parse data as a collection of Variant objects.\n\t *\n\t * @param data\n\t * @returns {Array}\n\t */\n\n\n\tVcfParser.prototype.parseFeatures = function (data) {\n\t  var allFeatures = [];\n\t  var callSets = this.header.callSets;\n\t  var dataWrapper = getDataWrapper(data);\n\t  var line;\n\n\t  while (line = dataWrapper.nextLine()) {\n\t    if (!line.startsWith(\"#\")) {\n\t      var tokens = line.split(\"\\t\");\n\n\t      if (tokens.length >= 8) {\n\t        var variant = createVCFVariant(tokens);\n\t        variant.header = this.header; // Keep a pointer to the header to interpret fields for popup text\n\n\t        allFeatures.push(variant);\n\n\t        if (tokens.length > 9) {\n\t          var callSet, call;\n\n\t          (function () {\n\t            // Format\n\t            var callFields = extractCallFields(tokens[8].split(\":\"));\n\t            variant.calls = {};\n\n\t            for (var index = 9; index < tokens.length; index++) {\n\t              var token = tokens[index];\n\t              callSet = callSets[index - 9];\n\t              call = {\n\t                callSetName: callSet.name,\n\t                info: {}\n\t              };\n\t              variant.calls[callSet.id] = call;\n\t              token.split(\":\").forEach(function (callToken, idx) {\n\t                switch (idx) {\n\t                  case callFields.genotypeIndex:\n\t                    call.genotype = [];\n\t                    callToken.split(/[\\|\\/]/).forEach(function (s) {\n\t                      call.genotype.push('.' === s ? s : parseInt(s));\n\t                    });\n\t                    break;\n\n\t                  default:\n\t                    call.info[callFields.fields[idx]] = callToken;\n\t                }\n\t              });\n\t            }\n\t          })();\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  return allFeatures;\n\t};\n\n\tvar GCNVParser = /*#__PURE__*/function () {\n\t  function GCNVParser() {\n\t    _classCallCheck(this, GCNVParser);\n\t  }\n\n\t  _createClass(GCNVParser, [{\n\t    key: \"parseFeatures\",\n\t    value: function parseFeatures(data) {\n\t      if (!data) return null;\n\t      var sampleNames = this.parseHeader(data);\n\t      var dataWrapper = getDataWrapper(data);\n\t      var line;\n\t      var allFeatures = [];\n\n\t      while (line = dataWrapper.nextLine()) {\n\t        var tokens = line.split(\"\\t\");\n\t        var chr = tokens[0];\n\t        var start = parseInt(tokens[1]);\n\t        var end = parseInt(tokens[2]);\n\t        var values = tokens.slice(3).map(parseFloat);\n\n\t        if (values.length == sampleNames.length) {\n\t          allFeatures.push({\n\t            chr: chr,\n\t            start: start,\n\t            end: end,\n\t            values: values\n\t          });\n\t        }\n\t      }\n\n\t      console.warn('Parsed', allFeatures.length, 'features from', sampleNames.length, 'samples');\n\t      return allFeatures;\n\t    }\n\t  }, {\n\t    key: \"parseHeader\",\n\t    value: function parseHeader(data) {\n\t      if (!this.sampleNames) {\n\t        var dataWrapper = getDataWrapper(data);\n\t        this.sampleNames = dataWrapper.nextLine().split(\"\\t\").slice(3);\n\t        console.warn('Parsed', this.sampleNames.length, 'samples from gCNV track file header:', this.sampleNames);\n\t      }\n\n\t      return this.sampleNames;\n\t    }\n\t  }]);\n\n\t  return GCNVParser;\n\t}();\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2014 Broad Institute\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t// TODO -- big endian\n\tvar BinaryParser = function BinaryParser(dataView, littleEndian) {\n\t  this.littleEndian = littleEndian !== undefined ? littleEndian : true;\n\t  this.position = 0;\n\t  this.view = dataView;\n\t  this.length = dataView.byteLength;\n\t};\n\n\tBinaryParser.prototype.available = function () {\n\t  return this.length - this.position;\n\t};\n\n\tBinaryParser.prototype.remLength = function () {\n\t  return this.length - this.position;\n\t};\n\n\tBinaryParser.prototype.hasNext = function () {\n\t  return this.position < this.length - 1;\n\t};\n\n\tBinaryParser.prototype.getByte = function () {\n\t  var retValue = this.view.getUint8(this.position, this.littleEndian);\n\t  this.position++;\n\t  return retValue;\n\t};\n\n\tBinaryParser.prototype.getShort = function () {\n\t  var retValue = this.view.getInt16(this.position, this.littleEndian);\n\t  this.position += 2;\n\t  return retValue;\n\t};\n\n\tBinaryParser.prototype.getUShort = function () {\n\t  // var byte1 = this.getByte(),\n\t  //     byte2 = this.getByte(),\n\t  //     retValue = ((byte2 << 24 >>> 16) + (byte1 << 24 >>> 24));\n\t  //     return retValue;\n\t  //\n\t  var retValue = this.view.getUint16(this.position, this.littleEndian);\n\t  this.position += 2;\n\t  return retValue;\n\t};\n\n\tBinaryParser.prototype.getInt = function () {\n\t  var retValue = this.view.getInt32(this.position, this.littleEndian);\n\t  this.position += 4;\n\t  return retValue;\n\t};\n\n\tBinaryParser.prototype.getUInt = function () {\n\t  var retValue = this.view.getUint32(this.position, this.littleEndian);\n\t  this.position += 4;\n\t  return retValue;\n\t};\n\n\tBinaryParser.prototype.getLong = function () {\n\t  // DataView doesn't support long. So we'll try manually\n\t  var b = [];\n\t  b[0] = this.view.getUint8(this.position);\n\t  b[1] = this.view.getUint8(this.position + 1);\n\t  b[2] = this.view.getUint8(this.position + 2);\n\t  b[3] = this.view.getUint8(this.position + 3);\n\t  b[4] = this.view.getUint8(this.position + 4);\n\t  b[5] = this.view.getUint8(this.position + 5);\n\t  b[6] = this.view.getUint8(this.position + 6);\n\t  b[7] = this.view.getUint8(this.position + 7);\n\t  var value = 0;\n\n\t  if (this.littleEndian) {\n\t    for (var i = b.length - 1; i >= 0; i--) {\n\t      value = value * 256 + b[i];\n\t    }\n\t  } else {\n\t    for (var _i = 0; _i < b.length; _i++) {\n\t      value = value * 256 + b[_i];\n\t    }\n\t  }\n\n\t  this.position += 8;\n\t  return value;\n\t};\n\n\tBinaryParser.prototype.getString = function (len) {\n\t  var s = \"\";\n\t  var c;\n\n\t  while ((c = this.view.getUint8(this.position++)) !== 0) {\n\t    s += String.fromCharCode(c);\n\t    if (len && s.length === len) break;\n\t  }\n\n\t  return s;\n\t};\n\n\tBinaryParser.prototype.getFixedLengthString = function (len) {\n\t  var s = \"\";\n\t  var i;\n\t  var c;\n\n\t  for (i = 0; i < len; i++) {\n\t    c = this.view.getUint8(this.position++);\n\n\t    if (c > 0) {\n\t      s += String.fromCharCode(c);\n\t    }\n\t  }\n\n\t  return s;\n\t};\n\n\tBinaryParser.prototype.getFixedLengthTrimmedString = function (len) {\n\t  var s = \"\";\n\t  var i;\n\t  var c;\n\n\t  for (i = 0; i < len; i++) {\n\t    c = this.view.getUint8(this.position++);\n\n\t    if (c > 32) {\n\t      s += String.fromCharCode(c);\n\t    }\n\t  }\n\n\t  return s;\n\t};\n\n\tBinaryParser.prototype.getFloat = function () {\n\t  var retValue = this.view.getFloat32(this.position, this.littleEndian);\n\t  this.position += 4;\n\t  return retValue;\n\t};\n\n\tBinaryParser.prototype.getDouble = function () {\n\t  var retValue = this.view.getFloat64(this.position, this.littleEndian);\n\t  this.position += 8;\n\t  return retValue;\n\t};\n\n\tBinaryParser.prototype.skip = function (n) {\n\t  this.position += n;\n\t  return this.position;\n\t};\n\t/**\n\t * Return a bgzip (bam and tabix) virtual pointer\n\t * TODO -- why isn't 8th byte used ?\n\t * @returns {*}\n\t */\n\n\n\tBinaryParser.prototype.getVPointer = function () {\n\t  var position = this.position,\n\t      offset = this.view.getUint8(position + 1) << 8 | this.view.getUint8(position),\n\t      byte6 = (this.view.getUint8(position + 6) & 0xff) * 0x100000000,\n\t      byte5 = (this.view.getUint8(position + 5) & 0xff) * 0x1000000,\n\t      byte4 = (this.view.getUint8(position + 4) & 0xff) * 0x10000,\n\t      byte3 = (this.view.getUint8(position + 3) & 0xff) * 0x100,\n\t      byte2 = this.view.getUint8(position + 2) & 0xff,\n\t      block = byte6 + byte5 + byte4 + byte3 + byte2;\n\t  this.position += 8; //       if (block == 0 && offset == 0) {\n\t  //           return null;\n\t  //       } else {\n\n\t  return new VPointer(block, offset); //       }\n\t};\n\n\tfunction VPointer(block, offset) {\n\t  this.block = block;\n\t  this.offset = offset;\n\t}\n\n\tVPointer.prototype.isLessThan = function (vp) {\n\t  return this.block < vp.block || this.block === vp.block && this.offset < vp.offset;\n\t};\n\n\tVPointer.prototype.isGreaterThan = function (vp) {\n\t  return this.block > vp.block || this.block === vp.block && this.offset > vp.offset;\n\t};\n\n\tVPointer.prototype.print = function () {\n\t  return \"\" + this.block + \":\" + this.offset;\n\t};\n\n\tvar BAI_MAGIC = 21578050;\n\tvar TABIX_MAGIC = 21578324;\n\t/**\n\t * @param indexURL\n\t * @param config\n\t * @param tabix\n\t *\n\t */\n\n\tfunction loadBamIndex(_x, _x2, _x3, _x4) {\n\t  return _loadBamIndex.apply(this, arguments);\n\t}\n\n\tfunction _loadBamIndex() {\n\t  _loadBamIndex = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(indexURL, config, tabix, genome) {\n\t    var arrayBuffer, indices, blockMin, blockMax, inflate, parser, magic, sequenceIndexMap, nref, format, col_seq, col_beg, col_end, meta, skip, l_nm, i, seq_name, ref, binIndex, linearIndex, nbin, b, binNumber, nchnk, cs, ce, n_maped, nUnmapped, _nchnk, _i, _cs, _ce, nintv, _i2, _cs2;\n\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            _context.next = 2;\n\t            return igvxhr.loadArrayBuffer(indexURL, buildOptions(config));\n\n\t          case 2:\n\t            arrayBuffer = _context.sent;\n\t            indices = [];\n\t            blockMin = Number.MAX_VALUE, blockMax = 0;\n\n\t            if (arrayBuffer) {\n\t              _context.next = 7;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"return\");\n\n\t          case 7:\n\t            if (tabix) {\n\t              inflate = new Zlib.Gunzip(new Uint8Array(arrayBuffer));\n\t              arrayBuffer = inflate.decompress().buffer;\n\t            }\n\n\t            parser = new BinaryParser(new DataView(arrayBuffer));\n\t            magic = parser.getInt();\n\t            sequenceIndexMap = {};\n\n\t            if (!(magic === BAI_MAGIC || tabix && magic === TABIX_MAGIC)) {\n\t              _context.next = 17;\n\t              break;\n\t            }\n\n\t            nref = parser.getInt();\n\n\t            if (tabix) {\n\t              // Tabix header parameters aren't used, but they must be read to advance the pointer\n\t              format = parser.getInt();\n\t              col_seq = parser.getInt();\n\t              col_beg = parser.getInt();\n\t              col_end = parser.getInt();\n\t              meta = parser.getInt();\n\t              skip = parser.getInt();\n\t              l_nm = parser.getInt();\n\n\t              for (i = 0; i < nref; i++) {\n\t                seq_name = parser.getString(); // Translate to \"official\" chr name.\n\n\t                if (genome) {\n\t                  seq_name = genome.getChromosomeName(seq_name);\n\t                }\n\n\t                sequenceIndexMap[seq_name] = i;\n\t              }\n\t            }\n\n\t            for (ref = 0; ref < nref; ref++) {\n\t              binIndex = {};\n\t              linearIndex = [];\n\t              nbin = parser.getInt();\n\n\t              for (b = 0; b < nbin; b++) {\n\t                binNumber = parser.getInt();\n\n\t                if (binNumber === 37450) {\n\t                  // This is a psuedo bin, not used but we have to consume the bytes\n\t                  nchnk = parser.getInt(); // # of chunks for this bin\n\n\t                  cs = parser.getVPointer(); // unmapped beg\n\n\t                  ce = parser.getVPointer(); // unmapped end\n\n\t                  n_maped = parser.getLong();\n\t                  nUnmapped = parser.getLong();\n\t                } else {\n\t                  binIndex[binNumber] = [];\n\t                  _nchnk = parser.getInt(); // # of chunks for this bin\n\n\t                  for (_i = 0; _i < _nchnk; _i++) {\n\t                    _cs = parser.getVPointer(); //chunk_beg\n\n\t                    _ce = parser.getVPointer(); //chunk_end\n\n\t                    if (_cs && _ce) {\n\t                      if (_cs.block < blockMin) {\n\t                        blockMin = _cs.block; // Block containing first alignment\n\t                      }\n\n\t                      if (_ce.block > blockMax) {\n\t                        blockMax = _ce.block;\n\t                      }\n\n\t                      binIndex[binNumber].push([_cs, _ce]);\n\t                    }\n\t                  }\n\t                }\n\t              }\n\n\t              nintv = parser.getInt();\n\n\t              for (_i2 = 0; _i2 < nintv; _i2++) {\n\t                _cs2 = parser.getVPointer();\n\t                linearIndex.push(_cs2); // Might be null\n\t              }\n\n\t              if (nbin > 0) {\n\t                indices[ref] = {\n\t                  binIndex: binIndex,\n\t                  linearIndex: linearIndex\n\t                };\n\t              }\n\t            }\n\n\t            _context.next = 18;\n\t            break;\n\n\t          case 17:\n\t            throw new Error(indexURL + \" is not a \" + (tabix ? \"tabix\" : \"bai\") + \" file\");\n\n\t          case 18:\n\t            return _context.abrupt(\"return\", new BamIndex(indices, blockMin, blockMax, sequenceIndexMap, tabix));\n\n\t          case 19:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee);\n\t  }));\n\t  return _loadBamIndex.apply(this, arguments);\n\t}\n\n\tvar BamIndex = function BamIndex(indices, blockMin, blockMax, sequenceIndexMap, tabix) {\n\t  this.firstAlignmentBlock = blockMin;\n\t  this.lastAlignmentBlock = blockMax;\n\t  this.indices = indices;\n\t  this.sequenceIndexMap = sequenceIndexMap;\n\t  this.tabix = tabix;\n\t};\n\t/**\n\t * Fetch blocks for a particular genomic range.  This method is public so it can be unit-tested.\n\t *\n\t * @param refId  the sequence dictionary index of the chromosome\n\t * @param min  genomic start position\n\t * @param max  genomic end position\n\t * @param return an array of {minv: {filePointer, offset}, {maxv: {filePointer, offset}}\n\t */\n\n\n\tBamIndex.prototype.blocksForRange = function (refId, min, max) {\n\t  var bam = this;\n\t  var ba = bam.indices[refId];\n\n\t  if (!ba) {\n\t    return [];\n\t  } else {\n\t    var overlappingBins = reg2bins(min, max); // List of bin #s that overlap min, max\n\n\t    var chunks = []; // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n\n\t    overlappingBins.forEach(function (bin) {\n\t      if (ba.binIndex[bin]) {\n\t        var binChunks = ba.binIndex[bin],\n\t            nchnk = binChunks.length;\n\n\t        for (var c = 0; c < nchnk; ++c) {\n\t          var cs = binChunks[c][0];\n\t          var ce = binChunks[c][1];\n\t          chunks.push({\n\t            minv: cs,\n\t            maxv: ce,\n\t            bin: bin\n\t          });\n\t        }\n\t      }\n\t    }); // Use the linear index to find minimum file position of chunks that could contain alignments in the region\n\n\t    var nintv = ba.linearIndex.length;\n\t    var lowest = null;\n\t    var minLin = Math.min(min >> 14, nintv - 1);\n\t    var maxLin = Math.min(max >> 14, nintv - 1);\n\n\t    for (var i = minLin; i <= maxLin; ++i) {\n\t      var vp = ba.linearIndex[i];\n\n\t      if (vp) {\n\t        // todo -- I think, but am not sure, that the values in the linear index have to be in increasing order.  So the first non-null should be minimum\n\t        if (!lowest || vp.isLessThan(lowest)) {\n\t          lowest = vp;\n\t        }\n\t      }\n\t    }\n\n\t    return optimizeChunks(chunks, lowest);\n\t  }\n\t};\n\n\tfunction optimizeChunks(chunks, lowest) {\n\t  var mergedChunks = [];\n\t  var lastChunk = null;\n\t  if (chunks.length === 0) return chunks;\n\t  chunks.sort(function (c0, c1) {\n\t    var dif = c0.minv.block - c1.minv.block;\n\n\t    if (dif !== 0) {\n\t      return dif;\n\t    } else {\n\t      return c0.minv.offset - c1.minv.offset;\n\t    }\n\t  });\n\t  chunks.forEach(function (chunk) {\n\t    if (!lowest || chunk.maxv.isGreaterThan(lowest)) {\n\t      if (lastChunk === null) {\n\t        mergedChunks.push(chunk);\n\t        lastChunk = chunk;\n\t      } else {\n\t        if (canMerge(lastChunk, chunk)) {\n\t          if (chunk.maxv.isGreaterThan(lastChunk.maxv)) {\n\t            lastChunk.maxv = chunk.maxv;\n\t          }\n\t        } else {\n\t          mergedChunks.push(chunk);\n\t          lastChunk = chunk;\n\t        }\n\t      }\n\t    }\n\t  });\n\t  return mergedChunks;\n\t}\n\n\tfunction canMerge(chunk1, chunk2) {\n\t  return chunk2.minv.block - chunk1.maxv.block < 65000 && chunk2.maxv.block - chunk1.minv.block < 5000000; // lastChunk.minv.block === lastChunk.maxv.block &&\n\t  // lastChunk.maxv.block === chunk.minv.block &&\n\t  // chunk.minv.block === chunk.maxv.block\n\t}\n\t/**\n\t * Calculate the list of bins that overlap with region [beg, end]\n\t *\n\t */\n\n\n\tfunction reg2bins(beg, end) {\n\t  var k;\n\t  var list = [];\n\t  if (end >= 1 << 29) end = 1 << 29;\n\t  --end;\n\t  list.push(0);\n\n\t  for (k = 1 + (beg >> 26); k <= 1 + (end >> 26); ++k) {\n\t    list.push(k);\n\t  }\n\n\t  for (k = 9 + (beg >> 23); k <= 9 + (end >> 23); ++k) {\n\t    list.push(k);\n\t  }\n\n\t  for (k = 73 + (beg >> 20); k <= 73 + (end >> 20); ++k) {\n\t    list.push(k);\n\t  }\n\n\t  for (k = 585 + (beg >> 17); k <= 585 + (end >> 17); ++k) {\n\t    list.push(k);\n\t  }\n\n\t  for (k = 4681 + (beg >> 14); k <= 4681 + (end >> 14); ++k) {\n\t    list.push(k);\n\t  }\n\n\t  return list;\n\t}\n\n\t/**\n\t *\n\t * @param indexFile\n\t * @param config\n\t * @returns a Promise for the tribble-style (.idx) index.  The fulfill function takes the index as an argument\n\t */\n\n\tfunction loadTribbleIndex(_x, _x2, _x3) {\n\t  return _loadTribbleIndex.apply(this, arguments);\n\t}\n\n\tfunction _loadTribbleIndex() {\n\t  _loadTribbleIndex = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(indexFile, config, genome) {\n\t    var arrayBuffer, index, parser, nChrs, chrIdx, readHeader, readLinear;\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            readLinear = function _ref2(parser) {\n\t              var chr = parser.getString();\n\n\t              if (genome) chr = genome.getChromosomeName(chr);\n\t              var binWidth = parser.getInt();\n\t              var nBins = parser.getInt();\n\t              var longestFeature = parser.getInt();\n\t              var OLD_V3_INDEX = parser.getInt() > 0;\n\t              var nFeatures = parser.getInt(); // note the code below accounts for > 60% of the total time to read an index\n\n\t              var pos = parser.getLong();\n\t              var blocks = new Array();\n\n\t              for (var binNumber = 0; binNumber < nBins; binNumber++) {\n\t                var nextPos = parser.getLong();\n\t                blocks.push({\n\t                  min: pos,\n\t                  max: nextPos\n\t                }); //        {position: pos, size: size});\n\n\t                pos = nextPos;\n\t              }\n\n\t              return {\n\t                chr: chr,\n\t                blocks: blocks,\n\t                longestFeature: longestFeature,\n\t                binWidth: binWidth\n\t              };\n\t            };\n\n\t            readHeader = function _ref(parser) {\n\t              var magicNumber = parser.getInt(); //   view._getInt32(offset += 32, true);\n\n\t              var type = parser.getInt();\n\t              var version = parser.getInt();\n\t              var indexedFile = parser.getString();\n\t              var indexedFileSize = parser.getLong();\n\t              var indexedFileTS = parser.getLong();\n\t              var indexedFileMD5 = parser.getString();\n\t              var flags = parser.getInt();\n\n\t              if (version >= 3) {\n\t                var nProperties = parser.getInt();\n\n\t                while (nProperties-- > 0) {\n\t                  var key = parser.getString();\n\t                  var value = parser.getString();\n\t                }\n\t              }\n\t            };\n\n\t            _context.next = 4;\n\t            return igvxhr.loadArrayBuffer(indexFile, buildOptions(config));\n\n\t          case 4:\n\t            arrayBuffer = _context.sent;\n\n\t            if (!arrayBuffer) {\n\t              _context.next = 14;\n\t              break;\n\t            }\n\n\t            index = {};\n\t            parser = new BinaryParser(new DataView(arrayBuffer));\n\t            readHeader(parser);\n\t            nChrs = parser.getInt();\n\n\t            while (nChrs-- > 0) {\n\t              // todo -- support interval tree index, we're assuming its a linear index\n\t              chrIdx = readLinear(parser);\n\t              index[chrIdx.chr] = chrIdx;\n\t            }\n\n\t            return _context.abrupt(\"return\", new TribbleIndex(index));\n\n\t          case 14:\n\t            return _context.abrupt(\"return\", undefined);\n\n\t          case 15:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee);\n\t  }));\n\t  return _loadTribbleIndex.apply(this, arguments);\n\t}\n\n\tvar TribbleIndex = /*#__PURE__*/function () {\n\t  function TribbleIndex(chrIndexTable) {\n\t    _classCallCheck(this, TribbleIndex);\n\n\t    this.chrIndex = chrIndexTable; // Dictionary of chr -> tribble index\n\t  }\n\t  /**\n\t   * Fetch blocks for a particular genomic range.\n\t   *\n\t   * @param queryChr the sequence dictionary index of the chromosome\n\t   * @param min  genomic start position\n\t   * @param max  genomic end position\n\t   */\n\n\n\t  _createClass(TribbleIndex, [{\n\t    key: \"blocksForRange\",\n\t    value: function blocksForRange(queryChr, min, max) {\n\t      var chrIdx = this.chrIndex[queryChr];\n\n\t      if (chrIdx) {\n\t        var blocks = chrIdx.blocks;\n\t        var longestFeature = chrIdx.longestFeature;\n\t        var binWidth = chrIdx.binWidth;\n\t        var adjustedPosition = Math.max(min - longestFeature, 0);\n\t        var startBinNumber = Math.floor(adjustedPosition / binWidth);\n\t        if (startBinNumber >= blocks.length) // are we off the end of the bin list, so return nothing\n\t          return [];else {\n\t          var endBinNumber = Math.min(Math.floor((max - 1) / binWidth), blocks.length - 1); // By definition blocks are adjacent in the file for the liner index.  Combine them into one merged block\n\n\t          var startPos = blocks[startBinNumber].min;\n\t          var endPos = blocks[endBinNumber].max;\n\t          var size = endPos - startPos;\n\n\t          if (size === 0) {\n\t            return [];\n\t          } else {\n\t            var mergedBlock = {\n\t              minv: {\n\t                block: startPos,\n\t                offset: 0\n\t              },\n\t              maxv: {\n\t                block: endPos,\n\t                offset: 0\n\t              }\n\t            };\n\t            return [mergedBlock];\n\t          }\n\t        }\n\t      } else {\n\t        return undefined;\n\t      }\n\t    }\n\t  }]);\n\n\t  return TribbleIndex;\n\t}();\n\n\t/**\n\t * Reader for \"bed like\" files (tab delimited files with 1 feature per line: bed, gff, vcf, etc)\n\t *\n\t * @param config\n\t * @constructor\n\t */\n\n\tvar FeatureFileReader = function FeatureFileReader(config, genome) {\n\t  var uriParts;\n\t  this.config = config || {};\n\t  this.genome = genome;\n\t  this.indexURL = config.indexURL;\n\t  this.indexed = config.indexed;\n\n\t  if (isFilePath(this.config.url)) {\n\t    this.filename = this.config.url.name;\n\t  } else if (isString(this.config.url) && this.config.url.startsWith('data:')) {\n\t    this.indexed = false; // by definition\n\n\t    this.dataURI = config.url;\n\t  } else {\n\t    uriParts = parseUri(this.config.url);\n\t    this.filename = config.filename || uriParts.file;\n\t  }\n\n\t  this.format = this.config.format;\n\t  this.parser = this.getParser(this.format, this.config.decode, this.config);\n\t};\n\t/**\n\t * Return a promise to load features for the genomic interval\n\t * @param chr\n\t * @param start\n\t * @param end\n\t */\n\n\n\tFeatureFileReader.prototype.readFeatures = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chr, start, end) {\n\t    var index;\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            _context.next = 2;\n\t            return this.getIndex();\n\n\t          case 2:\n\t            index = _context.sent;\n\n\t            if (!index) {\n\t              _context.next = 7;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"return\", this.loadFeaturesWithIndex(chr, start, end));\n\n\t          case 7:\n\t            if (!this.dataURI) {\n\t              _context.next = 11;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"return\", this.loadFeaturesFromDataURI());\n\n\t          case 11:\n\t            return _context.abrupt(\"return\", this.loadFeaturesNoIndex());\n\n\t          case 12:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tFeatureFileReader.prototype.readHeader = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n\t  var header, features, index, iurl, maxSize, bsizeOptions, abuffer, bsize, options, data, _features;\n\n\t  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t    while (1) {\n\t      switch (_context2.prev = _context2.next) {\n\t        case 0:\n\t          if (this.header) {\n\t            _context2.next = 39;\n\t            break;\n\t          }\n\n\t          if (!this.dataURI) {\n\t            _context2.next = 9;\n\t            break;\n\t          }\n\n\t          _context2.next = 4;\n\t          return this.loadFeaturesFromDataURI(this.dataURI);\n\n\t        case 4:\n\t          features = _context2.sent;\n\t          header = this.header || {};\n\t          header.features = features;\n\t          _context2.next = 39;\n\t          break;\n\n\t        case 9:\n\t          if (!(this.config.indexURL || this.config.indexed)) {\n\t            _context2.next = 31;\n\t            break;\n\t          }\n\n\t          _context2.next = 12;\n\t          return this.getIndex();\n\n\t        case 12:\n\t          index = _context2.sent;\n\n\t          if (index) {\n\t            _context2.next = 16;\n\t            break;\n\t          }\n\n\t          // Note - it should be impossible to get here\n\t          iurl = this.config.indexURL || this.config.url;\n\t          throw new Error(\"Unable to load index: \" + iurl);\n\n\t        case 16:\n\t          // Load the file header (not HTTP header) for an indexed file.\n\t          maxSize = \"vcf\" === this.config.format ? 65000 : 1000;\n\n\t          if (!index.tabix) {\n\t            _context2.next = 24;\n\t            break;\n\t          }\n\n\t          bsizeOptions = buildOptions(this.config, {\n\t            range: {\n\t              start: index.firstAlignmentBlock,\n\t              size: 26\n\t            }\n\t          });\n\t          _context2.next = 21;\n\t          return igvxhr.loadArrayBuffer(this.config.url, bsizeOptions);\n\n\t        case 21:\n\t          abuffer = _context2.sent;\n\t          bsize = bgzBlockSize(abuffer);\n\t          maxSize = index.firstAlignmentBlock + bsize;\n\n\t        case 24:\n\t          options = buildOptions(this.config, {\n\t            bgz: index.tabix,\n\t            range: {\n\t              start: 0,\n\t              size: maxSize\n\t            }\n\t          });\n\t          _context2.next = 27;\n\t          return igvxhr.loadString(this.config.url, options);\n\n\t        case 27:\n\t          data = _context2.sent;\n\t          header = this.parser.parseHeader(data);\n\t          _context2.next = 36;\n\t          break;\n\n\t        case 31:\n\t          _context2.next = 33;\n\t          return this.loadFeaturesNoIndex();\n\n\t        case 33:\n\t          _features = _context2.sent;\n\t          header = this.header || {};\n\t          header.features = _features;\n\n\t        case 36:\n\t          if (header && this.parser) {\n\t            this.parser.header = header;\n\t          }\n\n\t          this.header = header;\n\t          return _context2.abrupt(\"return\", header);\n\n\t        case 39:\n\t          return _context2.abrupt(\"return\", this.header);\n\n\t        case 40:\n\t        case \"end\":\n\t          return _context2.stop();\n\t      }\n\t    }\n\t  }, _callee2, this);\n\t}));\n\n\tFeatureFileReader.prototype.getParser = function (format, decode, config) {\n\t  switch (format) {\n\t    case \"vcf\":\n\t      return new VcfParser(config);\n\n\t    case \"seg\":\n\t      return new SegParser();\n\n\t    case \"gcnv\":\n\t      return new GCNVParser();\n\n\t    default:\n\t      return new FeatureParser(format, decode, this.config);\n\t  }\n\t};\n\n\tFeatureFileReader.prototype.loadFeaturesNoIndex = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n\t  var options, data;\n\t  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t    while (1) {\n\t      switch (_context3.prev = _context3.next) {\n\t        case 0:\n\t          options = buildOptions(this.config); // Add oauth token, if any\n\n\t          _context3.next = 3;\n\t          return igvxhr.loadString(this.config.url, options);\n\n\t        case 3:\n\t          data = _context3.sent;\n\t          this.header = this.parser.parseHeader(data);\n\n\t          if (this.header instanceof String && this.header.startsWith(\"##gff-version 3\")) {\n\t            this.format = 'gff3';\n\t          }\n\n\t          return _context3.abrupt(\"return\", this.parser.parseFeatures(data));\n\n\t        case 7:\n\t        case \"end\":\n\t          return _context3.stop();\n\t      }\n\t    }\n\t  }, _callee3, this);\n\t}));\n\n\tFeatureFileReader.prototype.loadFeaturesWithIndex = /*#__PURE__*/function () {\n\t  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(chr, start, end) {\n\t    var config, parser, tabix, refId, allFeatures, genome, blocks, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step;\n\n\t    return regeneratorRuntime.wrap(function _callee4$(_context5) {\n\t      while (1) {\n\t        switch (_context5.prev = _context5.next) {\n\t          case 0:\n\t            //console.log(\"Using index\");\n\t            config = this.config;\n\t            parser = this.parser;\n\t            tabix = this.index.tabix;\n\t            refId = tabix ? this.index.sequenceIndexMap[chr] : chr;\n\t            allFeatures = [];\n\t            genome = this.genome;\n\t            blocks = this.index.blocksForRange(refId, start, end);\n\n\t            if (!(!blocks || blocks.length === 0)) {\n\t              _context5.next = 11;\n\t              break;\n\t            }\n\n\t            return _context5.abrupt(\"return\", []);\n\n\t          case 11:\n\t            _iteratorNormalCompletion = true;\n\t            _didIteratorError = false;\n\t            _iteratorError = undefined;\n\t            _context5.prev = 14;\n\t            _loop = /*#__PURE__*/regeneratorRuntime.mark(function _loop() {\n\t              var block, startPos, startOffset, endOffset, endPos, lastBlockSize, bsizeOptions, abuffer, options, data, inflated, _inflated, parse;\n\n\t              return regeneratorRuntime.wrap(function _loop$(_context4) {\n\t                while (1) {\n\t                  switch (_context4.prev = _context4.next) {\n\t                    case 0:\n\t                      parse = function _ref5(inflated) {\n\t                        var slicedData = startOffset ? inflated.slice(startOffset) : inflated;\n\t                        var slicedFeatures = parser.parseFeatures(slicedData); // Filter features not in requested range.\n\n\t                        var inInterval = false;\n\n\t                        for (var i = 0; i < slicedFeatures.length; i++) {\n\t                          var f = slicedFeatures[i];\n\n\t                          if (genome.getChromosomeName(f.chr) !== chr) {\n\t                            if (allFeatures.length === 0) {\n\t                              continue; //adjacent chr to the left\n\t                            } else {\n\t                                break; //adjacent chr to the right\n\t                              }\n\t                          }\n\n\t                          if (f.start > end) {\n\t                            allFeatures.push(f); // First feature beyond interval\n\n\t                            break;\n\t                          }\n\n\t                          if (f.end >= start && f.start <= end) {\n\t                            if (!inInterval) {\n\t                              inInterval = true;\n\n\t                              if (i > 0) {\n\t                                allFeatures.push(slicedFeatures[i - 1]);\n\t                              }\n\t                            }\n\n\t                            allFeatures.push(f);\n\t                          }\n\t                        }\n\t                      };\n\n\t                      block = _step.value;\n\t                      startPos = block.minv.block;\n\t                      startOffset = block.minv.offset;\n\t                      endOffset = block.maxv.offset;\n\t                      endPos = void 0;\n\n\t                      if (!tabix) {\n\t                        _context4.next = 17;\n\t                        break;\n\t                      }\n\n\t                      lastBlockSize = 0;\n\n\t                      if (!(endOffset > 0)) {\n\t                        _context4.next = 14;\n\t                        break;\n\t                      }\n\n\t                      bsizeOptions = buildOptions(config, {\n\t                        range: {\n\t                          start: block.maxv.block,\n\t                          size: 26\n\t                        }\n\t                      });\n\t                      _context4.next = 12;\n\t                      return igvxhr.loadArrayBuffer(config.url, bsizeOptions);\n\n\t                    case 12:\n\t                      abuffer = _context4.sent;\n\t                      lastBlockSize = bgzBlockSize(abuffer);\n\n\t                    case 14:\n\t                      endPos = block.maxv.block + lastBlockSize;\n\t                      _context4.next = 18;\n\t                      break;\n\n\t                    case 17:\n\t                      endPos = block.maxv.block;\n\n\t                    case 18:\n\t                      options = buildOptions(config, {\n\t                        range: {\n\t                          start: startPos,\n\t                          size: endPos - startPos + 1\n\t                        }\n\t                      });\n\n\t                      if (!tabix) {\n\t                        _context4.next = 27;\n\t                        break;\n\t                      }\n\n\t                      _context4.next = 22;\n\t                      return igvxhr.loadArrayBuffer(config.url, options);\n\n\t                    case 22:\n\t                      data = _context4.sent;\n\t                      inflated = unbgzf(data);\n\t                      parse(inflated);\n\t                      _context4.next = 31;\n\t                      break;\n\n\t                    case 27:\n\t                      _context4.next = 29;\n\t                      return igvxhr.loadString(config.url, options);\n\n\t                    case 29:\n\t                      _inflated = _context4.sent;\n\t                      parse(_inflated);\n\n\t                    case 31:\n\t                    case \"end\":\n\t                      return _context4.stop();\n\t                  }\n\t                }\n\t              }, _loop);\n\t            });\n\t            _iterator = blocks[Symbol.iterator]();\n\n\t          case 17:\n\t            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t              _context5.next = 22;\n\t              break;\n\t            }\n\n\t            return _context5.delegateYield(_loop(), \"t0\", 19);\n\n\t          case 19:\n\t            _iteratorNormalCompletion = true;\n\t            _context5.next = 17;\n\t            break;\n\n\t          case 22:\n\t            _context5.next = 28;\n\t            break;\n\n\t          case 24:\n\t            _context5.prev = 24;\n\t            _context5.t1 = _context5[\"catch\"](14);\n\t            _didIteratorError = true;\n\t            _iteratorError = _context5.t1;\n\n\t          case 28:\n\t            _context5.prev = 28;\n\t            _context5.prev = 29;\n\n\t            if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t              _iterator.return();\n\t            }\n\n\t          case 31:\n\t            _context5.prev = 31;\n\n\t            if (!_didIteratorError) {\n\t              _context5.next = 34;\n\t              break;\n\t            }\n\n\t            throw _iteratorError;\n\n\t          case 34:\n\t            return _context5.finish(31);\n\n\t          case 35:\n\t            return _context5.finish(28);\n\n\t          case 36:\n\t            allFeatures.sort(function (a, b) {\n\t              return a.start - b.start;\n\t            });\n\t            return _context5.abrupt(\"return\", allFeatures);\n\n\t          case 38:\n\t          case \"end\":\n\t            return _context5.stop();\n\t        }\n\t      }\n\t    }, _callee4, this, [[14, 24, 28, 36], [29,, 31, 35]]);\n\t  }));\n\n\t  return function (_x4, _x5, _x6) {\n\t    return _ref4.apply(this, arguments);\n\t  };\n\t}();\n\n\tFeatureFileReader.prototype.getIndex = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n\t  var indexOrUndefined;\n\t  return regeneratorRuntime.wrap(function _callee5$(_context6) {\n\t    while (1) {\n\t      switch (_context6.prev = _context6.next) {\n\t        case 0:\n\t          if (!(this.index !== undefined || this.indexed === false)) {\n\t            _context6.next = 2;\n\t            break;\n\t          }\n\n\t          return _context6.abrupt(\"return\", this.index);\n\n\t        case 2:\n\t          _context6.next = 4;\n\t          return this.loadIndex();\n\n\t        case 4:\n\t          indexOrUndefined = _context6.sent;\n\n\t          if (indexOrUndefined) {\n\t            this.index = indexOrUndefined;\n\t            this.indexed = true;\n\t          } else {\n\t            this.indexed = false;\n\t          }\n\n\t          return _context6.abrupt(\"return\", this.index);\n\n\t        case 7:\n\t        case \"end\":\n\t          return _context6.stop();\n\t      }\n\t    }\n\t  }, _callee5, this);\n\t}));\n\t/**\n\t * Return a Promise for the async loaded index\n\t */\n\n\tFeatureFileReader.prototype.loadIndex = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n\t  var idxFile, index;\n\t  return regeneratorRuntime.wrap(function _callee6$(_context7) {\n\t    while (1) {\n\t      switch (_context7.prev = _context7.next) {\n\t        case 0:\n\t          idxFile = this.config.indexURL;\n\t          _context7.prev = 1;\n\n\t          if (!(this.filename.endsWith('.gz') || this.filename.endsWith('.bgz'))) {\n\t            _context7.next = 9;\n\t            break;\n\t          }\n\n\t          if (!idxFile) {\n\t            idxFile = this.config.url + '.tbi';\n\t          }\n\n\t          _context7.next = 6;\n\t          return loadBamIndex(idxFile, this.config, true, this.genome);\n\n\t        case 6:\n\t          index = _context7.sent;\n\t          _context7.next = 13;\n\t          break;\n\n\t        case 9:\n\t          if (!idxFile) {\n\t            idxFile = this.config.url + '.idx';\n\t          }\n\n\t          _context7.next = 12;\n\t          return loadTribbleIndex(idxFile, this.config, this.genome);\n\n\t        case 12:\n\t          index = _context7.sent;\n\n\t        case 13:\n\t          return _context7.abrupt(\"return\", index);\n\n\t        case 16:\n\t          _context7.prev = 16;\n\t          _context7.t0 = _context7[\"catch\"](1);\n\n\t          if (!(this.config.indexURL || this.config.indexed)) {\n\t            _context7.next = 22;\n\t            break;\n\t          }\n\n\t          throw _context7.t0;\n\n\t        case 22:\n\t          this.indexed = false;\n\t          console.error(_context7.t0);\n\n\t        case 24:\n\t        case \"end\":\n\t          return _context7.stop();\n\t      }\n\t    }\n\t  }, _callee6, this, [[1, 16]]);\n\t}));\n\tFeatureFileReader.prototype.loadFeaturesFromDataURI = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n\t  var plain, features;\n\t  return regeneratorRuntime.wrap(function _callee7$(_context8) {\n\t    while (1) {\n\t      switch (_context8.prev = _context8.next) {\n\t        case 0:\n\t          plain = decodeDataURI(this.dataURI);\n\t          this.header = this.parser.parseHeader(plain);\n\n\t          if (this.header instanceof String && this.header.startsWith(\"##gff-version 3\")) {\n\t            this.format = 'gff3';\n\t          }\n\n\t          features = this.parser.parseFeatures(plain);\n\t          return _context8.abrupt(\"return\", features);\n\n\t        case 5:\n\t        case \"end\":\n\t          return _context8.stop();\n\t      }\n\t    }\n\t  }, _callee7, this);\n\t}));\n\n\t/**\n\t * Object for caching lists of features.  Supports effecient queries for sub-range  (chr, start, end)\n\t *\n\t * @param featureList\n\t * @param The genomic range spanned by featureList (optional)\n\t * @constructor\n\t */\n\n\tvar FeatureCache = function FeatureCache(featureList, genome, range) {\n\t  this.treeMap = this.buildTreeMap(featureList, genome);\n\t  this.range = range;\n\t  this.count = featureList.length;\n\t};\n\n\tFeatureCache.prototype.containsRange = function (genomicRange) {\n\t  // No range means cache contains all features\n\t  return this.range === undefined || this.range.contains(genomicRange.chr, genomicRange.start, genomicRange.end);\n\t};\n\n\tFeatureCache.prototype.queryFeatures = function (chr, start, end) {\n\t  var tree = this.treeMap[chr];\n\t  if (!tree) return [];\n\t  var intervals = tree.findOverlapping(start, end);\n\n\t  if (intervals.length === 0) {\n\t    return [];\n\t  } else {\n\t    // Trim the list of features in the intervals to those\n\t    // overlapping the requested range.\n\t    // Assumption: features are sorted by start position\n\t    var featureList = [];\n\t    var all = this.allFeatures[chr];\n\n\t    if (all) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = intervals[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var interval = _step.value;\n\t          var indexRange = interval.value;\n\n\t          for (var i = indexRange.start; i < indexRange.end; i++) {\n\t            var feature = all[i];\n\t            if (feature.start > end) break;else if (feature.end >= start) {\n\t              featureList.push(feature);\n\t            }\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\n\t      featureList.sort(function (a, b) {\n\t        return a.start - b.start;\n\t      });\n\t    }\n\n\t    return featureList;\n\t  }\n\t};\n\t/**\n\t * Returns all features, unsorted.\n\t *\n\t * @returns {Array}\n\t */\n\n\n\tFeatureCache.prototype.getAllFeatures = function () {\n\t  return this.allFeatures;\n\t};\n\n\tFeatureCache.prototype.buildTreeMap = function (featureList, genome) {\n\t  var treeMap = {};\n\t  var chromosomes = [];\n\t  this.allFeatures = {};\n\n\t  if (featureList) {\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\n\t    try {\n\t      for (var _iterator2 = featureList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var feature = _step2.value;\n\t        var chr = feature.chr; // Translate to \"official\" name\n\n\t        if (genome) {\n\t          chr = genome.getChromosomeName(chr);\n\t        }\n\n\t        var geneList = this.allFeatures[chr];\n\n\t        if (!geneList) {\n\t          chromosomes.push(chr);\n\t          geneList = [];\n\t          this.allFeatures[chr] = geneList;\n\t        }\n\n\t        geneList.push(feature);\n\t      } // Now build interval tree for each chromosome\n\n\t    } catch (err) {\n\t      _didIteratorError2 = true;\n\t      _iteratorError2 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t          _iterator2.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError2) {\n\t          throw _iteratorError2;\n\t        }\n\t      }\n\t    }\n\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\n\t    try {\n\t      for (var _iterator3 = chromosomes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t        var _chr = _step3.value;\n\t        var chrFeatures = this.allFeatures[_chr];\n\t        chrFeatures.sort(function (f1, f2) {\n\t          return f1.start === f2.start ? 0 : f1.start > f2.start ? 1 : -1;\n\t        });\n\t        treeMap[_chr] = buildIntervalTree$1(chrFeatures);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError3 = true;\n\t      _iteratorError3 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t          _iterator3.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError3) {\n\t          throw _iteratorError3;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  return treeMap;\n\t};\n\t/**\n\t * Build an interval tree from the feature list for fast interval based queries.   We lump features in groups\n\t * of 10, or total size / 100,   to reduce size of the tree.\n\t *\n\t * @param featureList\n\t */\n\n\n\tfunction buildIntervalTree$1(featureList) {\n\t  var tree = new IntervalTree();\n\t  var len = featureList.length;\n\t  var chunkSize = Math.max(10, Math.round(len / 10));\n\n\t  for (var i = 0; i < len; i += chunkSize) {\n\t    var e = Math.min(len, i + chunkSize);\n\t    var subArray = new IndexRange(i, e); //featureList.slice(i, e);\n\n\t    var iStart = featureList[i].start; //\n\n\t    var iEnd = iStart;\n\n\t    for (var j = i; j < e; j++) {\n\t      iEnd = Math.max(iEnd, featureList[j].end);\n\t    }\n\n\t    tree.insert(iStart, iEnd, subArray);\n\t  }\n\n\t  return tree;\n\t}\n\n\tvar IndexRange = function IndexRange(start, end) {\n\t  _classCallCheck(this, IndexRange);\n\n\t  this.start = start;\n\t  this.end = end;\n\t};\n\n\tvar CustomServiceReader = function CustomServiceReader(config) {\n\t  this.config = config;\n\t};\n\n\tCustomServiceReader.prototype.readFeatures = function (chr, start, end) {\n\t  var self = this,\n\t      url = self.config.url,\n\t      body = self.config.body;\n\n\t  if (chr.toLowerCase() !== \"all\") {\n\t    url = url.replace(\"$CHR\", chr).replace(\"$START\", start).replace(\"$END\", end);\n\n\t    if (body !== undefined) {\n\t      self.config.body = self.config.body.replace(\"$CHR\", chr).replace(\"$START\", start).replace(\"$END\", end);\n\t    }\n\t  }\n\n\t  return igvxhr.load(url, self.config).then(function (data) {\n\t    if (data) {\n\t      if (typeof self.config.parser === \"function\") {\n\t        return self.config.parser(data);\n\t      } else if (isString(data)) {\n\t        // TODO -- make this explict in config (returnType=\"json\", \"xml\", etc)\n\t        try {\n\t          return JSON.parse(data);\n\t        } catch (e) {\n\t          // Apparently not json, just return data\n\t          return data;\n\t        }\n\t      } else {\n\t        return data;\n\t      }\n\t    } else {\n\t      return [];\n\t    }\n\t  }).then(function (features) {\n\t    if (self.config.mappings) {\n\t      var mappingKeys = Object.keys(self.config.mappings);\n\t      features.forEach(function (f) {\n\t        mappingKeys.forEach(function (key) {\n\t          f[key] = f[self.config.mappings[key]];\n\t        });\n\t      });\n\t    }\n\n\t    return features;\n\t  });\n\t};\n\n\tvar UCSCServiceReader = function UCSCServiceReader(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  this.expandQueryInterval = false;\n\t};\n\n\tUCSCServiceReader.prototype.readFeatures = function (chr, start, end) {\n\t  var s = Math.max(0, Math.floor(start));\n\t  var e = Math.ceil(end);\n\n\t  if (this.genome) {\n\t    var c = this.genome.getChromosome(chr);\n\n\t    if (c && e > c.bpLength) {\n\t      e = c.bpLength;\n\t    }\n\t  }\n\n\t  var url = this.config.url + '?db=' + this.config.db + '&table=' + this.config.tableName + '&chr=' + chr + '&start=' + s + '&end=' + e;\n\t  return igvxhr.loadJson(url, this.config).then(function (data) {\n\t    if (data) {\n\t      data.forEach(function (sample) {\n\t        if (sample.hasOwnProperty('exonStarts') && sample.hasOwnProperty('exonEnds') && sample.hasOwnProperty('exonCount') && sample.hasOwnProperty('cdsStart') && sample.hasOwnProperty('cdsEnd')) {\n\t          addExons(sample);\n\t        }\n\t      });\n\t      return data;\n\t    } else {\n\t      return null;\n\t    }\n\t  });\n\t};\n\n\tfunction addExons(sample) {\n\t  var exonCount, exonStarts, exonEnds, exons, eStart, eEnd;\n\t  exonCount = sample['exonCount'];\n\t  exonStarts = sample['exonStarts'].split(',');\n\t  exonEnds = sample['exonEnds'].split(',');\n\t  exons = [];\n\n\t  for (var i = 0; i < exonCount; i++) {\n\t    eStart = parseInt(exonStarts[i]);\n\t    eEnd = parseInt(exonEnds[i]);\n\t    var exon = {\n\t      start: eStart,\n\t      end: eEnd\n\t    };\n\t    if (sample.cdsStart > eEnd || sample.cdsEnd < sample.cdsStart) exon.utr = true; // Entire exon is UTR\n\n\t    if (sample.cdsStart >= eStart && sample.cdsStart <= eEnd) exon.cdStart = sample.cdsStart;\n\t    if (sample.cdsEnd >= eStart && sample.cdsEnd <= eEnd) exon.cdEnd = sample.cdsEnd;\n\t    exons.push(exon);\n\t  }\n\n\t  sample.exons = exons;\n\t}\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016 University of California San Diego\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\t/**\n\t * Created by jrobinson on 4/7/16.\n\t */\n\tvar transcriptTypes = new Set(['transcript', 'primary_transcript', 'processed_transcript', 'mRNA', 'mrna']);\n\tvar cdsTypes = new Set(['CDS', 'cds']);\n\tvar codonTypes = new Set(['start_codon', 'stop_codon']);\n\tvar utrTypes = new Set(['5UTR', '3UTR', 'UTR', 'five_prime_UTR', 'three_prime_UTR', \"3'-UTR\", \"5'-UTR\"]);\n\tvar exonTypes = new Set(['exon', 'coding-exon']);\n\n\tvar GFFHelper = function GFFHelper(options) {\n\t  this.format = options.format;\n\n\t  if (options.filterTypes) {\n\t    this.filterTypes = new Set(options.filterTypes);\n\t  }\n\t};\n\n\tGFFHelper.prototype.combineFeatures = function (features) {\n\t  if (\"gff3\" === this.format) {\n\t    return combineFeaturesGFF.call(this, features);\n\t  } else {\n\t    return combineFeaturesGTF.call(this, features);\n\t  }\n\t};\n\n\tfunction combineFeaturesGTF(features) {\n\t  var transcripts = Object.create(null);\n\t  var combinedFeatures = [];\n\t  var consumedFeatures = new Set();\n\t  var filterTypes = this.filterTypes;\n\t  features = features.filter(function (f) {\n\t    return filterTypes === undefined || !filterTypes.has(f.type);\n\t  }); // 1. Build dictionary of transcripts\n\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = features[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var f = _step.value;\n\n\t      if (transcriptTypes.has(f.type)) {\n\t        var transcriptId = f.id;\n\n\t        if (undefined !== transcriptId) {\n\t          var gffTranscript = new GFFTranscript(f);\n\t          transcripts[transcriptId] = gffTranscript;\n\t          combinedFeatures.push(gffTranscript);\n\t          consumedFeatures.add(f);\n\t        }\n\t      }\n\t    } // Add exons\n\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  var _iteratorNormalCompletion2 = true;\n\t  var _didIteratorError2 = false;\n\t  var _iteratorError2 = undefined;\n\n\t  try {\n\t    for (var _iterator2 = features[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t      var _f = _step2.value;\n\n\t      if (exonTypes.has(_f.type)) {\n\t        var id = _f.id; // transcript_id,  GTF groups all features with the same ID, does not have a parent/child hierarchy\n\n\t        if (id) {\n\t          var transcript = transcripts[id];\n\n\t          if (transcript === undefined) {\n\t            transcript = new GFFTranscript(_f); // GTF does not require an explicit transcript record\n\n\t            transcripts[id] = transcript;\n\t            combinedFeatures.push(transcript);\n\t          }\n\n\t          transcript.addExon(_f);\n\t          consumedFeatures.add(_f);\n\t        }\n\t      }\n\t    } // Apply CDS and UTR\n\n\t  } catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t        _iterator2.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError2) {\n\t        throw _iteratorError2;\n\t      }\n\t    }\n\t  }\n\n\t  var _iteratorNormalCompletion3 = true;\n\t  var _didIteratorError3 = false;\n\t  var _iteratorError3 = undefined;\n\n\t  try {\n\t    for (var _iterator3 = features[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t      var _f2 = _step3.value;\n\n\t      if (cdsTypes.has(_f2.type) || utrTypes.has(_f2.type) || codonTypes.has(_f2.type)) {\n\t        var _id = _f2.id;\n\n\t        if (_id) {\n\t          var _transcript = transcripts[_id];\n\n\t          if (_transcript === undefined) {\n\t            _transcript = new GFFTranscript(_f2);\n\t            transcripts[_id] = _transcript;\n\t            combinedFeatures.push(_transcript);\n\t          }\n\n\t          if (utrTypes.has(_f2.type)) {\n\t            _transcript.addUTR(_f2);\n\t          } else if (cdsTypes.has(_f2.type)) {\n\t            _transcript.addCDS(_f2);\n\t          } else if (codonTypes.has(_f2.type)) {// Ignore for now\n\t          }\n\n\t          consumedFeatures.add(_f2);\n\t        }\n\t      }\n\t    } // Finish transcripts\n\n\t  } catch (err) {\n\t    _didIteratorError3 = true;\n\t    _iteratorError3 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t        _iterator3.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError3) {\n\t        throw _iteratorError3;\n\t      }\n\t    }\n\t  }\n\n\t  for (var _i = 0, _combinedFeatures = combinedFeatures; _i < _combinedFeatures.length; _i++) {\n\t    var _f3 = _combinedFeatures[_i];\n\n\t    if (typeof _f3.finish === \"function\") {\n\t      _f3.finish();\n\t    }\n\t  } // Add other features\n\n\n\t  var others = features.filter(function (f) {\n\t    return !consumedFeatures.has(f);\n\t  });\n\t  var _iteratorNormalCompletion4 = true;\n\t  var _didIteratorError4 = false;\n\t  var _iteratorError4 = undefined;\n\n\t  try {\n\t    for (var _iterator4 = others[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t      var _f4 = _step4.value;\n\t      combinedFeatures.push(_f4);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError4 = true;\n\t    _iteratorError4 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t        _iterator4.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError4) {\n\t        throw _iteratorError4;\n\t      }\n\t    }\n\t  }\n\n\t  combinedFeatures.sort(function (a, b) {\n\t    return a.start - b.start;\n\t  });\n\t  return combinedFeatures;\n\t}\n\n\tfunction combineFeaturesGFF(features) {\n\t  // 1. Build dictionary of transcripts\n\t  var transcripts = Object.create(null);\n\t  var combinedFeatures = [];\n\t  var consumedFeatures = new Set();\n\t  var filterTypes = this.filterTypes;\n\t  features = features.filter(function (f) {\n\t    return filterTypes === undefined || !filterTypes.has(f.type);\n\t  });\n\t  var _iteratorNormalCompletion5 = true;\n\t  var _didIteratorError5 = false;\n\t  var _iteratorError5 = undefined;\n\n\t  try {\n\t    for (var _iterator5 = features[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t      var f = _step5.value;\n\n\t      if (transcriptTypes.has(f.type)) {\n\t        var transcriptId = f.id; // getAttribute(f.attributeString, \"transcript_id\", /\\s+/);\n\n\t        if (undefined !== transcriptId) {\n\t          var gffTranscript = new GFFTranscript(f);\n\t          transcripts[transcriptId] = gffTranscript;\n\t          combinedFeatures.push(gffTranscript);\n\t          consumedFeatures.add(f);\n\t        }\n\t      }\n\t    } // Add exons\n\n\t  } catch (err) {\n\t    _didIteratorError5 = true;\n\t    _iteratorError5 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t        _iterator5.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError5) {\n\t        throw _iteratorError5;\n\t      }\n\t    }\n\t  }\n\n\t  var _iteratorNormalCompletion6 = true;\n\t  var _didIteratorError6 = false;\n\t  var _iteratorError6 = undefined;\n\n\t  try {\n\t    for (var _iterator6 = features[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t      var _f5 = _step6.value;\n\n\t      if (exonTypes.has(_f5.type)) {\n\t        var parents = getParents(_f5);\n\n\t        if (parents) {\n\t          var _iteratorNormalCompletion9 = true;\n\t          var _didIteratorError9 = false;\n\t          var _iteratorError9 = undefined;\n\n\t          try {\n\t            for (var _iterator9 = parents[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t              var id = _step9.value;\n\t              var transcript = transcripts[id];\n\n\t              if (transcript !== undefined) {\n\t                transcript.addExon(_f5);\n\t                consumedFeatures.add(_f5);\n\t              }\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError9 = true;\n\t            _iteratorError9 = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n\t                _iterator9.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError9) {\n\t                throw _iteratorError9;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } // Apply CDS and UTR\n\n\t  } catch (err) {\n\t    _didIteratorError6 = true;\n\t    _iteratorError6 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n\t        _iterator6.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError6) {\n\t        throw _iteratorError6;\n\t      }\n\t    }\n\t  }\n\n\t  var _iteratorNormalCompletion7 = true;\n\t  var _didIteratorError7 = false;\n\t  var _iteratorError7 = undefined;\n\n\t  try {\n\t    for (var _iterator7 = features[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t      var _f6 = _step7.value;\n\n\t      if (cdsTypes.has(_f6.type) || utrTypes.has(_f6.type) || codonTypes.has(_f6.type)) {\n\t        var _parents = getParents(_f6);\n\n\t        if (_parents) {\n\t          var _iteratorNormalCompletion10 = true;\n\t          var _didIteratorError10 = false;\n\t          var _iteratorError10 = undefined;\n\n\t          try {\n\t            for (var _iterator10 = _parents[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t              var _id2 = _step10.value;\n\t              var _transcript2 = transcripts[_id2];\n\n\t              if (_transcript2 !== undefined) {\n\t                if (utrTypes.has(_f6.type)) {\n\t                  _transcript2.addUTR(_f6);\n\t                } else if (cdsTypes.has(_f6.type)) {\n\t                  _transcript2.addCDS(_f6);\n\t                } else if (codonTypes.has(_f6.type)) {// Ignore for now\n\t                }\n\n\t                consumedFeatures.add(_f6);\n\t              }\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError10 = true;\n\t            _iteratorError10 = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n\t                _iterator10.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError10) {\n\t                throw _iteratorError10;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } // Finish transcripts\n\n\t  } catch (err) {\n\t    _didIteratorError7 = true;\n\t    _iteratorError7 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n\t        _iterator7.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError7) {\n\t        throw _iteratorError7;\n\t      }\n\t    }\n\t  }\n\n\t  combinedFeatures.forEach(function (f) {\n\t    if (typeof f.finish === \"function\") {\n\t      f.finish();\n\t    }\n\t  }); // Add other features\n\n\t  var others = features.filter(function (f) {\n\t    return !consumedFeatures.has(f);\n\t  });\n\t  var _iteratorNormalCompletion8 = true;\n\t  var _didIteratorError8 = false;\n\t  var _iteratorError8 = undefined;\n\n\t  try {\n\t    for (var _iterator8 = others[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t      var _f7 = _step8.value;\n\t      combinedFeatures.push(_f7);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError8 = true;\n\t    _iteratorError8 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n\t        _iterator8.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError8) {\n\t        throw _iteratorError8;\n\t      }\n\t    }\n\t  }\n\n\t  combinedFeatures.sort(function (a, b) {\n\t    return a.start - b.start;\n\t  });\n\t  return combinedFeatures;\n\n\t  function getParents(f) {\n\t    if (f.parent && f.parent.trim() !== \"\") {\n\t      return f.parent.trim().split(\",\");\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t}\n\n\tvar GFFTranscript = function GFFTranscript(feature) {\n\t  Object.assign(this, feature);\n\t  this.exons = [];\n\t};\n\n\tGFFTranscript.prototype.addExon = function (feature) {\n\t  this.exons.push(feature); // Expand feature --  for transcripts not explicitly represented in the file\n\n\t  this.start = Math.min(this.start, feature.start);\n\t  this.end = Math.max(this.end, feature.end);\n\t};\n\n\tGFFTranscript.prototype.addCDS = function (cds) {\n\t  var exon;\n\t  var exons = this.exons; // Find exon containing CDS\n\n\t  for (var i = 0; i < exons.length; i++) {\n\t    if (exons[i].start <= cds.start && exons[i].end >= cds.end) {\n\t      exon = exons[i];\n\t      break;\n\t    }\n\t  }\n\n\t  if (exon) {\n\t    exon.cdStart = exon.cdStart ? Math.min(cds.start, exon.cdStart) : cds.start;\n\t    exon.cdEnd = exon.cdEnd ? Math.max(cds.end, exon.cdEnd) : cds.end;\n\n\t    if (!exon.children) {\n\t      exon.children = [];\n\t    }\n\n\t    exon.children.push(cds);\n\t  } else {\n\t    cds.cdStart = cds.start;\n\t    cds.cdEnd = cds.end;\n\t    exons.push(cds);\n\t  } // Expand feature --  for transcripts not explicitly represented in the file (gtf files)\n\n\n\t  this.start = Math.min(this.start, cds.start);\n\t  this.end = Math.max(this.end, cds.end);\n\t  this.cdStart = this.cdStart ? Math.min(cds.start, this.cdStart) : cds.start;\n\t  this.cdEnd = this.cdEnd ? Math.max(cds.end, this.cdEnd) : cds.end;\n\t};\n\n\tGFFTranscript.prototype.addUTR = function (utr) {\n\t  var exon;\n\t  var exons = this.exons; // Find exon containing CDS\n\n\t  for (var i = 0; i < exons.length; i++) {\n\t    if (exons[i].start <= utr.start && exons[i].end >= utr.end) {\n\t      exon = exons[i];\n\t      break;\n\t    }\n\t  }\n\n\t  if (exon) {\n\t    if (utr.start === exon.start && utr.end === exon.end) {\n\t      exon.utr = true;\n\t    } else {\n\t      if (utr.end < exon.end) {\n\t        exon.cdStart = utr.end;\n\t      }\n\n\t      if (utr.start > exon.start) {\n\t        exon.cdEnd = utr.start;\n\t      }\n\t    }\n\n\t    if (!exon.children) {\n\t      exon.children = [];\n\t    }\n\n\t    exon.children.push(utr);\n\t  } else {\n\t    utr.utr = true;\n\t    exons.push(utr);\n\t  } // Expand feature --  for transcripts not explicitly represented in the file\n\n\n\t  this.start = Math.min(this.start, utr.start);\n\t  this.end = Math.max(this.end, utr.end);\n\t};\n\n\tGFFTranscript.prototype.finish = function () {\n\t  var cdStart = this.cdStart;\n\t  var cdEnd = this.cdEnd;\n\t  this.exons.sort(function (a, b) {\n\t    return a.start - b.start;\n\t  }); // Search for UTR exons that were not explicitly tagged\n\n\t  if (cdStart) {\n\t    this.exons.forEach(function (exon) {\n\t      if (exon.end < cdStart || exon.start > cdEnd) exon.utr = true;\n\t    });\n\t  }\n\t};\n\n\tGFFTranscript.prototype.popupData = function (genomicLocation) {\n\t  var kvs = this.attributeString.split(';');\n\t  var pd = [];\n\t  pd.push({\n\t    name: 'type',\n\t    value: this.type\n\t  });\n\t  pd.push({\n\t    name: 'start',\n\t    value: this.start + 1\n\t  });\n\t  pd.push({\n\t    name: 'end',\n\t    value: this.end\n\t  });\n\t  var _iteratorNormalCompletion11 = true;\n\t  var _didIteratorError11 = false;\n\t  var _iteratorError11 = undefined;\n\n\t  try {\n\t    for (var _iterator11 = kvs[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t      var kv = _step11.value;\n\t      var t = kv.trim().split(this.delim, 2);\n\n\t      if (t.length === 2 && t[1] !== undefined) {\n\t        var key = t[0].trim();\n\t        var value = t[1].trim(); //Strip off quotes, if any\n\n\t        if (value.startsWith('\"') && value.endsWith('\"')) {\n\t          value = value.substr(1, value.length - 2);\n\t        }\n\n\t        pd.push({\n\t          name: key,\n\t          value: value\n\t        });\n\t      }\n\t    } // If clicked over an exon add its attributes\n\n\t  } catch (err) {\n\t    _didIteratorError11 = true;\n\t    _iteratorError11 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n\t        _iterator11.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError11) {\n\t        throw _iteratorError11;\n\t      }\n\t    }\n\t  }\n\n\t  var _iteratorNormalCompletion12 = true;\n\t  var _didIteratorError12 = false;\n\t  var _iteratorError12 = undefined;\n\n\t  try {\n\t    for (var _iterator12 = this.exons[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t      var exon = _step12.value;\n\n\t      if (genomicLocation >= exon.start && genomicLocation < exon.end) {\n\t        pd.push(\"<hr>\");\n\t        var exonData = exon.popupData(genomicLocation);\n\t        var _iteratorNormalCompletion13 = true;\n\t        var _didIteratorError13 = false;\n\t        var _iteratorError13 = undefined;\n\n\t        try {\n\t          for (var _iterator13 = exonData[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t            var _att = _step13.value;\n\t            pd.push(_att);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError13 = true;\n\t          _iteratorError13 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n\t              _iterator13.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError13) {\n\t              throw _iteratorError13;\n\t            }\n\t          }\n\t        }\n\n\t        if (exon.children) {\n\t          var _iteratorNormalCompletion14 = true;\n\t          var _didIteratorError14 = false;\n\t          var _iteratorError14 = undefined;\n\n\t          try {\n\t            for (var _iterator14 = exon.children[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n\t              var c = _step14.value;\n\t              pd.push(\"<hr>\");\n\n\t              var _exonData = c.popupData(genomicLocation);\n\n\t              var _iteratorNormalCompletion15 = true;\n\t              var _didIteratorError15 = false;\n\t              var _iteratorError15 = undefined;\n\n\t              try {\n\t                for (var _iterator15 = _exonData[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n\t                  var att = _step15.value;\n\t                  pd.push(att);\n\t                }\n\t              } catch (err) {\n\t                _didIteratorError15 = true;\n\t                _iteratorError15 = err;\n\t              } finally {\n\t                try {\n\t                  if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n\t                    _iterator15.return();\n\t                  }\n\t                } finally {\n\t                  if (_didIteratorError15) {\n\t                    throw _iteratorError15;\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError14 = true;\n\t            _iteratorError14 = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n\t                _iterator14.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError14) {\n\t                throw _iteratorError14;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError12 = true;\n\t    _iteratorError12 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n\t        _iterator12.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError12) {\n\t        throw _iteratorError12;\n\t      }\n\t    }\n\t  }\n\n\t  return pd;\n\t};\n\n\tvar GtexReader = function GtexReader(config) {\n\t  this.config = config;\n\t  this.url = config.url;\n\t  this.tissueId = config.tissueSiteDetailId;\n\t  this.indexed = true;\n\t  this.datasetId = config.datasetId || \"gtex_v8\";\n\t};\n\n\tGtexReader.prototype.readFeatures = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chr, bpStart, bpEnd) {\n\t    var self, queryChr, queryStart, queryEnd, datasetId, queryURL, json;\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            self = this, queryChr = chr.startsWith(\"chr\") ? chr : \"chr\" + chr, queryStart = Math.floor(bpStart), queryEnd = Math.ceil(bpEnd), datasetId = this.datasetId, queryURL = this.url + \"?chromosome=\" + queryChr + \"&start=\" + queryStart + \"&end=\" + queryEnd + \"&tissueSiteDetailId=\" + this.tissueId + \"&datasetId=\" + datasetId;\n\t            _context.next = 3;\n\t            return igvxhr.loadJson(queryURL, {\n\t              withCredentials: self.config.withCredentials\n\t            });\n\n\t          case 3:\n\t            json = _context.sent;\n\n\t            if (!(json && json.singleTissueEqtl)) {\n\t              _context.next = 9;\n\t              break;\n\t            }\n\n\t            //variants = json.variants;\n\t            //variants.sort(function (a, b) {\n\t            //    return a.POS - b.POS;\n\t            //});\n\t            //source.cache = new FeatureCache(chr, queryStart, queryEnd, variants);\n\t            json.singleTissueEqtl.forEach(function (eqtl) {\n\t              eqtl.chr = eqtl.chromosome;\n\t              eqtl.position = eqtl.pos;\n\t              eqtl.start = eqtl.pos - 1;\n\t              eqtl.end = eqtl.start + 1;\n\t              eqtl.snp = eqtl.snpId;\n\t              eqtl.geneName = eqtl.geneSymbol;\n\t              eqtl.geneId = eqtl.gencodeId;\n\t            });\n\t            return _context.abrupt(\"return\", json.singleTissueEqtl);\n\n\t          case 9:\n\t            return _context.abrupt(\"return\", undefined);\n\n\t          case 10:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\t// http://immvar.broadinstitute.org:3000/load_data?chromosome=&start=&end=&categories=\n\n\tvar ImmVarReader = function ImmVarReader(config) {\n\t  this.config = config;\n\t  this.url = config.url;\n\t  this.cellConditionId = config.cellConditionId;\n\t  this.valueThreshold = config.valueThreshold ? config.valueThreshold : 5E-2;\n\t};\n\n\tImmVarReader.prototype.readFeatures = function (queryChr, queryStart, queryEnd) {\n\t  var self = this,\n\t      queryURL = this.url + \"?chromosome=\" + queryChr + \"&start=\" + queryStart + \"&end=\" + queryEnd + \"&cell_condition_id=\" + this.cellConditionId;\n\t  return new Promise(function (fulfill, reject) {\n\t    igvxhr.loadJson(queryURL, {\n\t      withCredentials: self.config.withCredentials\n\t    }).then(function (json) {\n\t      if (json) {\n\t        //variants = json.variants;\n\t        //variants.sort(function (a, b) {\n\t        //    return a.POS - b.POS;\n\t        //});\n\t        //source.cache = new FeatureCache(chr, queryStart, queryEnd, variants);\n\t        json.eqtls.forEach(function (eqtl) {\n\t          eqtl.chr = eqtl.chromosome;\n\t          eqtl.start = eqtl.position;\n\t          eqtl.end = eqtl.position + 1;\n\t        });\n\t        fulfill(json.eqtls);\n\t      } else {\n\t        fulfill(null);\n\t      }\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    });\n\t  });\n\t};\n\n\tfunction ga4ghGet(options) {\n\t  var url = options.url + \"/\" + options.entity + \"/\" + options.entityId;\n\t  options.headers = ga4ghHeaders();\n\t  return igvxhr.loadJson(url, options); // Returns a promise\n\t}\n\n\tfunction ga4ghSearch(options) {\n\t  return new Promise(function (fulfill, reject) {\n\t    var results = options.results ? options.results : [],\n\t        url = options.url,\n\t        body = options.body,\n\t        decode = options.decode,\n\t        apiKey = google.apiKey,\n\t        paramSeparator = \"?\",\n\t        fields = options.fields; // Partial response\n\n\t    if (apiKey) {\n\t      url = url + paramSeparator + \"key=\" + apiKey;\n\t      paramSeparator = \"&\";\n\t    }\n\n\t    if (fields) {\n\t      url = url + paramSeparator + \"fields=\" + fields;\n\t    } // Start the recursive load cycle.  Data is fetched in chunks, if more data is available a \"nextPageToken\" is returned.\n\n\n\t    return loadChunk();\n\n\t    function loadChunk(pageToken) {\n\t      if (pageToken) {\n\t        body.pageToken = pageToken;\n\t      } else {\n\t        if (body.pageToken !== undefined) delete body.pageToken; // Remove previous page token, if any\n\t      }\n\n\t      var sendData = JSON.stringify(body);\n\t      igvxhr.loadJson(url, {\n\t        sendData: sendData,\n\t        contentType: \"application/json\",\n\t        headers: ga4ghHeaders() //    oauthToken: ga4ghToken()\n\n\t      }).then(function (json) {\n\t        var nextPageToken, tmp;\n\n\t        if (json) {\n\t          tmp = decode ? decode(json) : json;\n\n\t          if (tmp) {\n\t            tmp.forEach(function (a) {\n\n\t              {\n\t                results.push(a);\n\t              }\n\t            });\n\t          }\n\n\t          nextPageToken = json[\"nextPageToken\"];\n\n\t          if (nextPageToken) {\n\t            loadChunk(nextPageToken);\n\t          } else {\n\t            fulfill(results);\n\t          }\n\t        } else {\n\t          fulfill(results);\n\t        }\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    }\n\t  });\n\t}\n\n\tfunction ga4ghHeaders() {\n\t  return {\n\t    \"Cache-Control\": \"no-cache\"\n\t  };\n\t}\n\n\tvar Ga4ghVariantReader = function Ga4ghVariantReader(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  this.url = config.url;\n\t  this.variantSetId = config.variantSetId;\n\t  this.callSetIds = config.callSetIds;\n\t  this.includeCalls = config.includeCalls === undefined ? true : config.includeCalls;\n\t}; // Simulate a VCF file header\n\n\n\tGa4ghVariantReader.prototype.readHeader = function () {\n\t  var self = this;\n\n\t  if (self.header) {\n\t    return Promise.resolve(self.header);\n\t  } else {\n\t    self.header = {};\n\n\t    if (self.includeCalls === false) {\n\t      return Promise.resolve(self.header);\n\t    } else {\n\t      var readURL = self.url + \"/callsets/search\";\n\t      return ga4ghSearch({\n\t        url: readURL,\n\t        fields: \"nextPageToken,callSets(id,name)\",\n\t        body: {\n\t          \"variantSetIds\": Array.isArray(self.variantSetId) ? self.variantSetId : [self.variantSetId],\n\t          \"pageSize\": \"10000\"\n\t        },\n\t        decode: function decode(json) {\n\t          // If specific callSetIds are specified filter to those\n\t          if (self.callSetIds) {\n\t            var callSets = [],\n\t                csIdSet = new Set();\n\t            self.callSetIds.forEach(function (csid) {\n\t              csIdSet.add(csid);\n\t            });\n\t            json.callSets.forEach(function (cs) {\n\t              if (csIdSet.has(cs.id)) {\n\t                callSets.push(cs);\n\t              }\n\t            });\n\t            return callSets;\n\t          } else {\n\t            return json.callSets;\n\t          }\n\t        }\n\t      }).then(function (callSets) {\n\t        self.header.callSets = callSets;\n\t        return self.header;\n\t      });\n\t    }\n\t  }\n\t};\n\n\tGa4ghVariantReader.prototype.readFeatures = function (chr, bpStart, bpEnd) {\n\t  var self = this;\n\t  var genome = this.genome;\n\t  return self.readHeader().then(function (header) {\n\t    return getChrAliasTable();\n\t  }).then(function (chrAliasTable) {\n\t    var queryChr = chrAliasTable.hasOwnProperty(chr) ? chrAliasTable[chr] : chr,\n\t        readURL = self.url + \"/variants/search\";\n\t    return ga4ghSearch({\n\t      url: readURL,\n\t      fields: self.includeCalls ? undefined : \"nextPageToken,variants(id,variantSetId,names,referenceName,start,end,referenceBases,alternateBases,quality,filter,info)\",\n\t      body: {\n\t        \"variantSetIds\": Array.isArray(self.variantSetId) ? self.variantSetId : [self.variantSetId],\n\t        \"callSetIds\": self.callSetIds ? self.callSetIds : undefined,\n\t        \"referenceName\": queryChr,\n\t        \"start\": bpStart.toString(),\n\t        \"end\": bpEnd.toString(),\n\t        \"pageSize\": \"10000\"\n\t      },\n\t      decode: function decode(json) {\n\t        var v;\n\t        var variants = [];\n\t        json.variants.forEach(function (json) {\n\t          v = createGAVariant(json);\n\n\t          if (!v.isRefBlock()) {\n\t            variants.push(v);\n\t          }\n\t        });\n\t        return variants;\n\t      }\n\t    });\n\t  });\n\n\t  function getChrAliasTable() {\n\t    return new Promise(function (fulfill, reject) {\n\t      if (self.chrAliasTable) {\n\t        fulfill(self.chrAliasTable);\n\t      } else {\n\t        self.readMetadata().then(function (json) {\n\t          self.metadata = json.metadata;\n\t          self.chrAliasTable = {};\n\n\t          if (json.referenceBounds && genome) {\n\t            json.referenceBounds.forEach(function (rb) {\n\t              var refName = rb.referenceName,\n\t                  alias = genome.getChromosomeName(refName);\n\t              self.chrAliasTable[alias] = refName;\n\t            });\n\t          }\n\n\t          fulfill(self.chrAliasTable);\n\t        });\n\t      }\n\t    });\n\t  }\n\t};\n\n\tGa4ghVariantReader.prototype.readMetadata = function () {\n\t  return ga4ghGet({\n\t    url: this.url,\n\t    entity: \"variantsets\",\n\t    entityId: this.variantSetId\n\t  });\n\t};\n\n\tvar CivicReader = function CivicReader(config) {\n\t  this.config = config;\n\t};\n\n\tCivicReader.prototype.readFeatures = function (chr, start, end) {\n\t  return igvxhr.loadJson(this.config.url + \"/variants/?count=5000\").then(function (json) {\n\t    var records = json.records;\n\t    var features = [];\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = records[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var record = _step.value;\n\n\t        if (record.coordinates) {\n\t          var id = record.id;\n\t          var coordinates = record.coordinates;\n\n\t          if (coordinates.chromosome) {\n\t            features.push(new CivicVariant(coordinates.chromosome, coordinates.start - 1, // UCSC 0 convention\n\t            coordinates.stop, record));\n\t          }\n\n\t          if (coordinates.chromosome2) {\n\t            features.push(new CivicVariant(coordinates.chromosome2, coordinates.start2 - 1, // UCSC 0 convention\n\t            coordinates.stop2, record));\n\t          }\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\n\t    return features;\n\t  });\n\t};\n\n\tfunction CivicVariant(chr, start, end, record) {\n\t  this.chr = chr;\n\t  this.start = start;\n\t  this.end = end;\n\t  this.id = record.id;\n\t  this.entrezName = record.entrez_name;\n\t  this.name = record.name;\n\t  this.actionabilityScore = record.civic_actionability_score;\n\n\t  if (record.coordinates.reference_bases) {\n\t    this.refBases = record.coordinates.reference_bases;\n\t  }\n\n\t  if (record.coordinates.variant_bases) {\n\t    this.altBases = record.coordinates.variant_bases;\n\t  }\n\n\t  if (record.variant_types) {\n\t    this.variant_types = record.variant_types;\n\t  }\n\n\t  this.locationString = this.chr + \":\" + numberFormatter(this.start + 1) + \"-\" + numberFormatter(this.end); // Color based on actionability score\n\n\t  if (this.actionabilityScore !== undefined) {\n\t    var alpha;\n\n\t    if (this.actionabilityScore <= 10) {\n\t      alpha = 0.2;\n\t    } else {\n\t      var v = Math.min(30, this.actionabilityScore);\n\t      alpha = 0.2 + 0.8 * Math.log10((v - 10) / 2);\n\t    }\n\n\t    this.alpha = alpha;\n\t  }\n\t}\n\n\tCivicVariant.prototype.popupData = function () {\n\t  var link = createLink(\"CIViC\", \"https://civicdb.org/links/variants/\" + this.id);\n\t  var isSnp = this.refBases !== this.altBases && this.refBases && this.refBases.length === 1 && this.altBases && this.altBases.length === 1;\n\t  var pd = [link];\n\t  pd.push({\n\t    name: \"Entrez\",\n\t    value: createLink(this.entrezName, \"https://ghr.nlm.nih.gov/gene/\" + this.entrezName)\n\t  });\n\t  pd.push({\n\t    name: \"Name\",\n\t    value: this.name\n\t  });\n\n\t  if (this.variant_types && this.variant_types.length > 0) {\n\t    var name = this.variant_types.length === 1 ? \"Type\" : \"Types\";\n\t    var typeString;\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\n\t    try {\n\t      for (var _iterator2 = this.variant_types[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var vt = _step2.value;\n\t        if (!typeString) typeString = vt.display_name;else typeString += \", \" + vt.display_name;\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError2 = true;\n\t      _iteratorError2 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t          _iterator2.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError2) {\n\t          throw _iteratorError2;\n\t        }\n\t      }\n\t    }\n\n\t    pd.push({\n\t      name: name,\n\t      value: typeString\n\t    });\n\t  }\n\n\t  pd.push({\n\t    name: \"Actionability\",\n\t    value: this.actionabilityScore\n\t  });\n\t  pd.push({\n\t    name: \"Location\",\n\t    value: this.locationString\n\t  });\n\t  return pd;\n\n\t  function createLink(text, href) {\n\t    return \"<a target='_blank' \" + \"href='\" + href + \"'>\" + text + \"</a>\";\n\t  }\n\t};\n\n\tvar queryableFormats = new Set([\"bigwig\", \"bw\", \"bigbed\", \"bb\", \"tdf\"]);\n\t/**\n\t * feature source for \"bed like\" files (tab delimited files with 1 feature per line: bed, gff, vcf, etc)\n\t *\n\t * @param config\n\t * @constructor\n\t */\n\n\tvar FeatureSource = function FeatureSource(config, genome) {\n\t  this.config = config || {};\n\t  this.genome = genome;\n\t  this.sourceType = config.sourceType === undefined ? \"file\" : config.sourceType; // Default GFF filter -- these feature types will be filtered out\n\n\t  if (undefined === config.filterTypes) {\n\t    config.filterTypes = ['chromosome', 'gene'];\n\t  }\n\n\t  if (config.features && Array.isArray(config.features)) {\n\t    var features = config.features;\n\t    packFeatures(features);\n\n\t    if (config.mappings) {\n\t      mapProperties(features, config.mappings);\n\t    }\n\n\t    this.featureCache = new FeatureCache(features, genome);\n\t    this.static = true;\n\t  } else if (config.sourceType === \"ga4gh\") {\n\t    this.reader = new Ga4ghVariantReader(config, genome);\n\t    this.queryable = true;\n\t  } else if (config.sourceType === \"immvar\") {\n\t    this.reader = new ImmVarReader(config);\n\t    this.queryable = true;\n\t  } else if (config.type === \"eqtl\" && config.sourceType === \"gtex-ws\") {\n\t    this.reader = new GtexReader(config);\n\t    this.queryable = true;\n\t  } else if (config.sourceType === 'ucscservice') {\n\t    this.reader = new UCSCServiceReader(config.source);\n\t    this.queryable = true;\n\t  } else if (config.sourceType === 'custom' || config.source !== undefined) {\n\t    // Second test for backward compatibility\n\t    this.reader = new CustomServiceReader(config.source);\n\t    this.queryable = config.source.queryable !== undefined ? config.source.queryable : true;\n\t  } else if (\"civic-ws\" === config.sourceType) {\n\t    this.reader = new CivicReader(config);\n\t    this.queryable = false;\n\t  } else {\n\t    this.reader = new FeatureFileReader(config, genome);\n\n\t    if (config.queryable !== undefined) {\n\t      this.queryable = config.queryable;\n\t    } else if (queryableFormats.has(config.format)) {\n\t      this.queryable = queryableFormats.has(config.format) || this.reader.indexed;\n\t    }\n\t  }\n\n\t  this.supportsWG = !this.queryable; // Can be dynamically changed\n\t};\n\n\tFeatureSource.prototype.supportsWholeGenome = function () {\n\t  return this.supportsWG;\n\t};\n\n\tFeatureSource.prototype.getFileHeader = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t  var header, features;\n\t  return regeneratorRuntime.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          if (this.header) {\n\t            _context.next = 10;\n\t            break;\n\t          }\n\n\t          if (!(this.reader && typeof this.reader.readHeader === \"function\")) {\n\t            _context.next = 9;\n\t            break;\n\t          }\n\n\t          _context.next = 4;\n\t          return this.reader.readHeader();\n\n\t        case 4:\n\t          header = _context.sent;\n\n\t          if (header) {\n\t            this.header = header; // Non-indexed readers will return features as a side effect (entire file is read).\n\n\t            features = header.features;\n\n\t            if (features) {\n\t              this.ingestFeatures(features);\n\t            }\n\n\t            if (header.format) this.config.format = header.format;\n\t          }\n\n\t          this.header = header;\n\t          _context.next = 10;\n\t          break;\n\n\t        case 9:\n\t          this.header = {};\n\n\t        case 10:\n\t          return _context.abrupt(\"return\", this.header);\n\n\t        case 11:\n\t        case \"end\":\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t}));\n\n\tfunction addFeaturesToDB(featureList) {\n\t  var self = this;\n\t  featureList.forEach(function (feature) {\n\t    if (feature.name) {\n\t      //TODO igv.browser => igv.Globals or igv.FeatureDB\n\t      self.config.browser.featureDB[feature.name.toUpperCase()] = feature;\n\t    }\n\t  });\n\t}\n\t/**\n\t * Required function for all data source objects.  Fetches features for the\n\t * range requested.\n\t *\n\t * @param chr\n\t * @param bpStart\n\t * @param bpEnd\n\t * @param bpPerPixel\n\t */\n\n\n\tFeatureSource.prototype.getFeatures = /*#__PURE__*/function () {\n\t  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(chr, bpStart, bpEnd, bpPerPixel, visibilityWindow) {\n\t    var reader, genome, queryChr, featureCache, isQueryable, getFeatureCache, _getFeatureCache;\n\n\t    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t      while (1) {\n\t        switch (_context3.prev = _context3.next) {\n\t          case 0:\n\t            _getFeatureCache = function _ref4() {\n\t              _getFeatureCache = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n\t                var intervalStart, intervalEnd, genomicInterval, expansionWindow, featureList;\n\t                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t                  while (1) {\n\t                    switch (_context2.prev = _context2.next) {\n\t                      case 0:\n\t                        intervalStart = bpStart;\n\t                        intervalEnd = bpEnd;\n\t                        genomicInterval = new GenomicInterval(queryChr, intervalStart, intervalEnd);\n\n\t                        if (!(this.featureCache && (this.static || this.featureCache.containsRange(genomicInterval) || \"all\" === chr.toLowerCase()))) {\n\t                          _context2.next = 7;\n\t                          break;\n\t                        }\n\n\t                        return _context2.abrupt(\"return\", this.featureCache);\n\n\t                      case 7:\n\t                        // If a visibility window is defined, potentially expand query interval.\n\t                        // This can save re-queries as we zoom out.  Visibility window <= 0 is a special case\n\t                        // indicating whole chromosome should be read at once.\n\t                        if (undefined !== visibilityWindow) {\n\t                          if (visibilityWindow <= 0) {\n\t                            // Whole chromosome\n\t                            intervalStart = 0;\n\t                            intervalEnd = Number.MAX_VALUE;\n\t                          } else if (visibilityWindow > bpEnd - bpStart) {\n\t                            expansionWindow = Math.min(4.1 * (bpEnd - bpStart), visibilityWindow);\n\t                            intervalStart = Math.max(0, (bpStart + bpEnd - expansionWindow) / 2);\n\t                            intervalEnd = bpStart + expansionWindow;\n\t                          }\n\t                        }\n\n\t                        genomicInterval = new GenomicInterval(queryChr, intervalStart, intervalEnd);\n\t                        _context2.next = 11;\n\t                        return reader.readFeatures(queryChr, genomicInterval.start, genomicInterval.end);\n\n\t                      case 11:\n\t                        featureList = _context2.sent;\n\n\t                        if (this.queryable === undefined) {\n\t                          this.queryable = reader.indexed;\n\t                        }\n\n\t                        if (featureList) {\n\t                          this.ingestFeatures(featureList, genomicInterval);\n\t                        } else {\n\t                          this.featureCache = new FeatureCache(); // Empty cache\n\t                        }\n\n\t                        return _context2.abrupt(\"return\", this.featureCache);\n\n\t                      case 15:\n\t                      case \"end\":\n\t                        return _context2.stop();\n\t                    }\n\t                  }\n\t                }, _callee2, this);\n\t              }));\n\t              return _getFeatureCache.apply(this, arguments);\n\t            };\n\n\t            getFeatureCache = function _ref3() {\n\t              return _getFeatureCache.apply(this, arguments);\n\t            };\n\n\t            reader = this.reader;\n\t            genome = this.genome;\n\t            queryChr = genome ? genome.getChromosomeName(chr) : chr;\n\t            _context3.next = 7;\n\t            return getFeatureCache.call(this);\n\n\t          case 7:\n\t            featureCache = _context3.sent;\n\t            isQueryable = this.queryable;\n\n\t            if (!(\"all\" === chr.toLowerCase())) {\n\t              _context3.next = 22;\n\t              break;\n\t            }\n\n\t            if (!isQueryable) {\n\t              _context3.next = 14;\n\t              break;\n\t            }\n\n\t            return _context3.abrupt(\"return\", []);\n\n\t          case 14:\n\t            if (!(featureCache.count > 500000)) {\n\t              _context3.next = 19;\n\t              break;\n\t            }\n\n\t            this.supportsWG = false;\n\t            return _context3.abrupt(\"return\", []);\n\n\t          case 19:\n\t            return _context3.abrupt(\"return\", this.getWGFeatures(featureCache.getAllFeatures()));\n\n\t          case 20:\n\t            _context3.next = 23;\n\t            break;\n\n\t          case 22:\n\t            return _context3.abrupt(\"return\", featureCache.queryFeatures(queryChr, bpStart, bpEnd));\n\n\t          case 23:\n\t          case \"end\":\n\t            return _context3.stop();\n\t        }\n\t      }\n\t    }, _callee3, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3, _x4, _x5) {\n\t    return _ref2.apply(this, arguments);\n\t  };\n\t}();\n\n\tFeatureSource.prototype.ingestFeatures = function (featureList, genomicInterval) {\n\t  if (\"gtf\" === this.config.format || \"gff3\" === this.config.format || \"gff\" === this.config.format) {\n\t    featureList = new GFFHelper(this.config).combineFeatures(featureList);\n\t  } // Assign overlapping features to rows\n\n\n\t  if (this.config.format !== \"wig\" && this.config.type !== \"junctions\") {\n\t    var maxRows = this.config.maxRows || 500;\n\t    packFeatures(featureList, maxRows);\n\t  } // Note - replacing previous cache with new one\n\n\n\t  this.featureCache = this.queryable ? new FeatureCache(featureList, this.genome, genomicInterval) : new FeatureCache(featureList, this.genome); // If track is marked \"searchable\"< cache features by name -- use this with caution, memory intensive\n\n\t  if (this.config.searchable) {\n\t    addFeaturesToDB.call(this, featureList);\n\t  }\n\t};\n\n\tfunction packFeatures(features, maxRows) {\n\t  maxRows = maxRows || 1000;\n\n\t  if (features == null || features.length === 0) {\n\t    return;\n\t  } // Segregate by chromosome\n\n\n\t  var chrFeatureMap = {},\n\t      chrs = [];\n\t  features.forEach(function (feature) {\n\t    var chr = feature.chr,\n\t        flist = chrFeatureMap[chr];\n\n\t    if (!flist) {\n\t      flist = [];\n\t      chrFeatureMap[chr] = flist;\n\t      chrs.push(chr);\n\t    }\n\n\t    flist.push(feature);\n\t  }); // Loop through chrosomosomes and pack features;\n\n\t  chrs.forEach(function (chr) {\n\t    pack(chrFeatureMap[chr], maxRows);\n\t  }); // Assigns a row # to each feature.  If the feature does not fit in any row and #rows == maxRows no\n\t  // row number is assigned.\n\n\t  function pack(featureList, maxRows) {\n\t    var rows = [];\n\t    featureList.sort(function (a, b) {\n\t      return a.start - b.start;\n\t    });\n\t    rows.push(-1000);\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = featureList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var feature = _step.value;\n\t        var r = 0;\n\t        var len = Math.min(rows.length, maxRows);\n\n\t        for (r = 0; r < len; r++) {\n\t          if (feature.start > rows[r]) {\n\t            feature.row = r;\n\t            rows[r] = feature.end;\n\t            break;\n\t          }\n\t        }\n\n\t        feature.row = r;\n\t        rows[r] = feature.end;\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t  }\n\t} // TODO -- filter by pixel size\n\n\n\tFeatureSource.prototype.getWGFeatures = function (allFeatures) {\n\t  var genome = this.genome;\n\t  var wgChromosomeNames = new Set(genome.wgChromosomeNames);\n\t  var wgFeatures = [];\n\t  var _iteratorNormalCompletion2 = true;\n\t  var _didIteratorError2 = false;\n\t  var _iteratorError2 = undefined;\n\n\t  try {\n\t    for (var _iterator2 = genome.wgChromosomeNames[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t      var c = _step2.value;\n\t      var features = allFeatures[c];\n\n\t      if (features) {\n\t        var _iteratorNormalCompletion3 = true;\n\t        var _didIteratorError3 = false;\n\t        var _iteratorError3 = undefined;\n\n\t        try {\n\t          for (var _iterator3 = features[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t            var f = _step3.value;\n\n\t            var _queryChr = genome.getChromosomeName(f.chr);\n\n\t            if (wgChromosomeNames.has(_queryChr)) {\n\t              var wg = Object.create(Object.getPrototypeOf(f));\n\t              Object.assign(wg, f);\n\t              wg.realChr = f.chr;\n\t              wg.realStart = f.start;\n\t              wg.realEnd = f.end;\n\t              wg.chr = \"all\";\n\t              wg.start = genome.getGenomeCoordinate(f.chr, f.start);\n\t              wg.end = genome.getGenomeCoordinate(f.chr, f.end); // Don't draw exons in whole genome view\n\n\t              if (wg[\"exons\"]) delete wg[\"exons\"];\n\n\t              wg.popupData = function (genomeLocation) {\n\t                var clonedObject = Object.assign({}, this);\n\t                clonedObject.chr = this.realChr;\n\t                clonedObject.start = this.realStart + 1;\n\t                clonedObject.end = this.realEnd;\n\t                delete clonedObject.realChr;\n\t                delete clonedObject.realStart;\n\t                delete clonedObject.realEnd;\n\t                return TrackBase.extractPopupData(clonedObject, genome.id);\n\t              };\n\n\t              wgFeatures.push(wg);\n\t            }\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError3 = true;\n\t          _iteratorError3 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t              _iterator3.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError3) {\n\t              throw _iteratorError3;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t        _iterator2.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError2) {\n\t        throw _iteratorError2;\n\t      }\n\t    }\n\t  }\n\n\t  wgFeatures.sort(function (a, b) {\n\t    return a.start - b.start;\n\t  });\n\t  return wgFeatures;\n\t};\n\n\tfunction mapProperties(features, mappings) {\n\t  var mappingKeys = Object.keys(mappings);\n\t  features.forEach(function (f) {\n\t    mappingKeys.forEach(function (key) {\n\t      f[key] = f[mappings[key]];\n\t    });\n\t  });\n\t}\n\n\tvar globalIsFinite = global_1.isFinite; // `Number.isFinite` method\n\t// https://tc39.github.io/ecma262/#sec-number.isfinite\n\n\tvar numberIsFinite = Number.isFinite || function isFinite(it) {\n\t  return typeof it == 'number' && globalIsFinite(it);\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-number.isfinite\n\n\t_export({\n\t  target: 'Number',\n\t  stat: true\n\t}, {\n\t  isFinite: numberIsFinite\n\t});\n\n\tvar BufferedReader = function BufferedReader(config, contentLength, bufferSize) {\n\t  this.path = config.url;\n\t  this.bufferSize = bufferSize ? bufferSize : 512000;\n\t  this.range = {\n\t    start: -1,\n\t    size: -1\n\t  };\n\t  this.config = config;\n\t};\n\t/**\n\t *\n\t * @param requestedRange - byte rangeas {start, size}\n\t * @param fulfill - function to receive result\n\t * @param asUint8 - optional flag to return result as an UInt8Array\n\t */\n\n\n\tBufferedReader.prototype.dataViewForRange = function (requestedRange, asUint8) {\n\t  var self = this;\n\t  var hasData = self.data && self.range.start <= requestedRange.start && self.range.start + self.range.size >= requestedRange.start + requestedRange.size,\n\t      bufferSize,\n\t      loadRange;\n\n\t  if (hasData) {\n\t    return Promise.resolve(subbuffer(self, requestedRange, asUint8));\n\t  } else {\n\t    // If requested range size is specified, expand buffer size\n\t    if (requestedRange.size) {\n\t      bufferSize = Math.max(self.bufferSize, requestedRange.size);\n\t    } else {\n\t      bufferSize = self.bufferSize;\n\t    }\n\n\t    loadRange = {\n\t      start: requestedRange.start,\n\t      size: bufferSize\n\t    };\n\t    return igvxhr.loadArrayBuffer(self.path, buildOptions(self.config, {\n\t      range: loadRange\n\t    })).then(function (arrayBuffer) {\n\t      self.data = arrayBuffer;\n\t      self.range = loadRange;\n\t      return subbuffer(self, requestedRange, asUint8);\n\t    });\n\t  }\n\n\t  function subbuffer(bufferedReader, requestedRange, asUint8) {\n\t    var len = bufferedReader.data.byteLength,\n\t        bufferStart = requestedRange.start - bufferedReader.range.start,\n\t        result = asUint8 ? new Uint8Array(bufferedReader.data, bufferStart, len - bufferStart) : new DataView(bufferedReader.data, bufferStart, len - bufferStart);\n\t    return result;\n\t  }\n\t};\n\n\tvar BIGWIG_MAGIC_LTH = 0x888FFC26; // BigWig Magic Low to High\n\n\tvar BIGWIG_MAGIC_HTL = 0x26FC8F66; // BigWig Magic High to Low\n\n\tvar BIGBED_MAGIC_LTH = 0x8789F2EB; // BigBed Magic Low to High\n\n\tvar BIGBED_MAGIC_HTL = 0xEBF28987; // BigBed Magic High to Low\n\n\tvar BBFILE_HEADER_SIZE = 64;\n\tvar RPTREE_HEADER_SIZE = 48;\n\tvar RPTREE_NODE_LEAF_ITEM_SIZE = 32; // leaf item size\n\n\tvar RPTREE_NODE_CHILD_ITEM_SIZE = 24; // child item size\n\n\tvar BUFFER_SIZE = 512000; //  buffer\n\n\tvar BWReader = function BWReader(config, genome) {\n\t  this.path = config.url;\n\t  this.genome = genome;\n\t  this.rpTreeCache = {};\n\t  this.config = config;\n\t};\n\n\tBWReader.prototype.readWGFeatures = function (bpPerPixel, windowFunction) {\n\t  var self = this;\n\t  var genome = this.genome;\n\t  return self.getZoomHeaders().then(function (zoomLevelHeaders) {\n\t    var chrIdx1, chrIdx2, chr1, chr2;\n\t    chrIdx1 = 0;\n\t    chrIdx2 = self.chromTree.idToChrom.length - 1;\n\t    chr1 = self.chromTree.idToChrom[chrIdx1];\n\t    chr2 = self.chromTree.idToChrom[chrIdx2];\n\t    return self.readFeatures(chr1, 0, chr2, Number.MAX_VALUE, bpPerPixel, windowFunction);\n\t  });\n\t};\n\n\tBWReader.prototype.readFeatures = function (chr1, bpStart, chr2, bpEnd, bpPerPixel, windowFunction) {\n\t  var self = this,\n\t      decodeFunction,\n\t      chrIdx1,\n\t      chrIdx2;\n\t  return self.getZoomHeaders().then(function (zoomLevelHeaders) {\n\t    // Select a biwig \"zoom level\" appropriate for the current resolution\n\t    var zoomLevelHeader = zoomLevelForScale(bpPerPixel, zoomLevelHeaders),\n\t        treeOffset;\n\n\t    if (zoomLevelHeader) {\n\t      treeOffset = zoomLevelHeader.indexOffset;\n\t      decodeFunction = decodeZoomData;\n\t    } else {\n\t      treeOffset = self.header.fullIndexOffset;\n\n\t      if (self.type === \"BigWig\") {\n\t        decodeFunction = decodeWigData;\n\t      } else {\n\t        decodeFunction = decodeBedData;\n\t      }\n\t    }\n\n\t    return self.loadRPTree(treeOffset);\n\t  }).then(function (rpTree) {\n\t    chrIdx1 = self.chromTree.chromToID[chr1];\n\t    chrIdx2 = self.chromTree.chromToID[chr2];\n\n\t    if (chrIdx1 === undefined || chrIdx2 === undefined) {\n\t      return undefined;\n\t    } else {\n\t      return rpTree.findLeafItemsOverlapping(chrIdx1, bpStart, chrIdx2, bpEnd);\n\t    }\n\t  }).then(function (leafItems) {\n\t    if (!leafItems || leafItems.length === 0) {\n\t      return [];\n\t    } else {\n\t      // Consolidate leaf items and get all data at once\n\t      var start = Number.MAX_VALUE;\n\t      var end = 0;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = leafItems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var item = _step.value;\n\t          start = Math.min(start, item.dataOffset);\n\t          end = Math.max(end, item.dataOffset + item.dataSize);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\n\t      var size = end - start;\n\t      return igvxhr.loadArrayBuffer(self.config.url, buildOptions(self.config, {\n\t        range: {\n\t          start: start,\n\t          size: size\n\t        }\n\t      })).then(function (arrayBuffer) {\n\t        var allFeatures = [];\n\t        var buffer = new Uint8Array(arrayBuffer);\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\n\t        try {\n\t          for (var _iterator2 = leafItems[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var item = _step2.value;\n\t            var uint8Array = buffer.subarray(item.dataOffset - start, item.dataOffset + item.dataSize);\n\t            var plain = void 0;\n\t            var isCompressed = self.header.uncompressBuffSize > 0;\n\n\t            if (isCompressed) {\n\t              var inflate = new Zlib.Inflate(uint8Array);\n\t              plain = inflate.decompress();\n\t            } else {\n\t              plain = uint8Array;\n\t            }\n\n\t            decodeFunction(new DataView(plain.buffer), chrIdx1, bpStart, chrIdx2, bpEnd, allFeatures, self.chromTree.idToChrom, windowFunction);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t              _iterator2.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError2) {\n\t              throw _iteratorError2;\n\t            }\n\t          }\n\t        }\n\n\t        allFeatures.sort(function (a, b) {\n\t          return a.start - b.start;\n\t        });\n\t        return allFeatures;\n\t      });\n\t    }\n\t  });\n\t};\n\n\tBWReader.prototype.getZoomHeaders = function () {\n\t  var self = this;\n\n\t  if (self.zoomLevelHeaders) {\n\t    return Promise.resolve(self.zoomLevelHeaders);\n\t  } else {\n\t    return self.loadHeader().then(function () {\n\t      return self.zoomLevelHeaders;\n\t    });\n\t  }\n\t};\n\n\tBWReader.prototype.loadHeader = function () {\n\t  var self = this;\n\n\t  if (self.header) {\n\t    return Promise.resolve(self.header);\n\t  } else {\n\t    return igvxhr.loadArrayBuffer(self.path, buildOptions(self.config, {\n\t      range: {\n\t        start: 0,\n\t        size: BBFILE_HEADER_SIZE\n\t      }\n\t    })).then(function (data) {\n\t      var header; // Assume low-to-high unless proven otherwise\n\n\t      self.littleEndian = true;\n\t      var binaryParser = new BinaryParser(new DataView(data));\n\t      var magic = binaryParser.getUInt();\n\n\t      if (magic === BIGWIG_MAGIC_LTH) {\n\t        self.type = \"BigWig\";\n\t      } else if (magic === BIGBED_MAGIC_LTH) {\n\t        self.type = \"BigBed\";\n\t      } else {\n\t        //Try big endian order\n\t        self.littleEndian = false;\n\t        binaryParser.littleEndian = false;\n\t        binaryParser.position = 0;\n\n\t        var _magic = binaryParser.getUInt();\n\n\t        if (_magic === BIGWIG_MAGIC_HTL) {\n\t          self.type = \"BigWig\";\n\t        } else if (_magic === BIGBED_MAGIC_HTL) {\n\t          self.type = \"BigBed\";\n\t        }\n\t      } // Table 5  \"Common header for BigWig and BigBed files\"\n\n\n\t      header = {};\n\t      header.bwVersion = binaryParser.getUShort();\n\t      header.nZoomLevels = binaryParser.getUShort();\n\t      header.chromTreeOffset = binaryParser.getLong();\n\t      header.fullDataOffset = binaryParser.getLong();\n\t      header.fullIndexOffset = binaryParser.getLong();\n\t      header.fieldCount = binaryParser.getUShort();\n\t      header.definedFieldCount = binaryParser.getUShort();\n\t      header.autoSqlOffset = binaryParser.getLong();\n\t      header.totalSummaryOffset = binaryParser.getLong();\n\t      header.uncompressBuffSize = binaryParser.getInt();\n\t      header.reserved = binaryParser.getLong();\n\t      return header;\n\t    }).then(function (header) {\n\t      self.header = header;\n\t      return loadZoomHeadersAndChrTree.call(self);\n\t    });\n\t  }\n\n\t  function loadZoomHeadersAndChrTree() {\n\t    var self = this;\n\t    var startOffset = BBFILE_HEADER_SIZE;\n\t    var range = {\n\t      start: startOffset,\n\t      size: self.header.fullDataOffset - startOffset + 5\n\t    };\n\t    return igvxhr.loadArrayBuffer(self.path, buildOptions(self.config, {\n\t      range: range\n\t    })).then(function (data) {\n\t      var nZooms = self.header.nZoomLevels;\n\t      var binaryParser = new BinaryParser(new DataView(data));\n\t      self.zoomLevelHeaders = [];\n\t      self.firstZoomDataOffset = Number.MAX_VALUE;\n\n\t      for (var i = 1; i <= nZooms; i++) {\n\t        var zoomNumber = nZooms - i;\n\t        var zlh = new ZoomLevelHeader(zoomNumber, binaryParser);\n\t        self.firstZoomDataOffset = Math.min(zlh.dataOffset, self.firstZoomDataOffset);\n\t        self.zoomLevelHeaders[zoomNumber] = zlh;\n\t      } // Autosql\n\n\n\t      if (self.header.autoSqlOffset > 0) {\n\t        binaryParser.position = self.header.autoSqlOffset - startOffset;\n\t        self.autoSql = binaryParser.getString();\n\t      } // Total summary\n\n\n\t      if (self.header.totalSummaryOffset > 0) {\n\t        binaryParser.position = self.header.totalSummaryOffset - startOffset;\n\t        self.totalSummary = new BWTotalSummary(binaryParser);\n\t      } // Chrom data index\n\n\n\t      if (self.header.chromTreeOffset > 0) {\n\t        binaryParser.position = self.header.chromTreeOffset - startOffset;\n\t        self.chromTree = new BPTree(binaryParser, startOffset, self.genome);\n\t      } else {\n\t        // TODO -- this is an error, not expected\n\t        throw \"BigWig chromosome tree offset <= 0\";\n\t      } //Finally total data count\n\n\n\t      binaryParser.position = self.header.fullDataOffset - startOffset;\n\t      self.header.dataCount = binaryParser.getInt();\n\t      return self.header;\n\t    });\n\t  }\n\t};\n\n\tBWReader.prototype.loadRPTree = function (offset) {\n\t  var self = this;\n\t  var rpTree = self.rpTreeCache[offset];\n\n\t  if (rpTree) {\n\t    return Promise.resolve(rpTree);\n\t  } else {\n\t    rpTree = new RPTree(offset, self.config, self.littleEndian);\n\t    return rpTree.load().then(function () {\n\t      self.rpTreeCache[offset] = rpTree;\n\t      return rpTree;\n\t    });\n\t  }\n\t};\n\n\tfunction ZoomLevelHeader(index, byteBuffer) {\n\t  this.index = index;\n\t  this.reductionLevel = byteBuffer.getInt();\n\t  this.reserved = byteBuffer.getInt();\n\t  this.dataOffset = byteBuffer.getLong();\n\t  this.indexOffset = byteBuffer.getLong();\n\t}\n\n\tfunction RPTree(fileOffset, config, littleEndian) {\n\t  this.config = config;\n\t  this.fileOffset = fileOffset; // File offset to beginning of tree\n\n\t  this.path = config.url;\n\t  this.littleEndian = littleEndian;\n\t}\n\n\tRPTree.prototype.load = function () {\n\t  var self = this;\n\t  var rootNodeOffset = self.fileOffset + RPTREE_HEADER_SIZE,\n\t      bufferedReader = new BufferedReader(self.config, BUFFER_SIZE);\n\t  return self.readNode(rootNodeOffset, bufferedReader).then(function (node) {\n\t    self.rootNode = node;\n\t    return self;\n\t  });\n\t};\n\n\tRPTree.prototype.readNode = function (filePosition, bufferedReader) {\n\t  var self = this;\n\t  var count, isLeaf;\n\t  return bufferedReader.dataViewForRange({\n\t    start: filePosition,\n\t    size: 4\n\t  }, false).then(function (dataView) {\n\t    var binaryParser, type, reserved;\n\t    binaryParser = new BinaryParser(dataView, self.littleEndian);\n\t    type = binaryParser.getByte();\n\t    isLeaf = type === 1;\n\t    reserved = binaryParser.getByte();\n\t    count = binaryParser.getUShort();\n\t    filePosition += 4;\n\t    var bytesRequired = count * (isLeaf ? RPTREE_NODE_LEAF_ITEM_SIZE : RPTREE_NODE_CHILD_ITEM_SIZE);\n\t    var range2 = {\n\t      start: filePosition,\n\t      size: bytesRequired\n\t    };\n\t    return bufferedReader.dataViewForRange(range2, false);\n\t  }).then(function (dataView) {\n\t    var i,\n\t        items = new Array(count),\n\t        binaryParser = new BinaryParser(dataView);\n\n\t    if (isLeaf) {\n\t      for (i = 0; i < count; i++) {\n\t        var item = {\n\t          isLeaf: true,\n\t          startChrom: binaryParser.getInt(),\n\t          startBase: binaryParser.getInt(),\n\t          endChrom: binaryParser.getInt(),\n\t          endBase: binaryParser.getInt(),\n\t          dataOffset: binaryParser.getLong(),\n\t          dataSize: binaryParser.getLong()\n\t        };\n\t        items[i] = item;\n\t      }\n\n\t      return new RPTreeNode(items);\n\t    } else {\n\t      // non-leaf\n\t      for (i = 0; i < count; i++) {\n\t        var _item = {\n\t          isLeaf: false,\n\t          startChrom: binaryParser.getInt(),\n\t          startBase: binaryParser.getInt(),\n\t          endChrom: binaryParser.getInt(),\n\t          endBase: binaryParser.getInt(),\n\t          childOffset: binaryParser.getLong()\n\t        };\n\t        items[i] = _item;\n\t      }\n\n\t      return new RPTreeNode(items);\n\t    }\n\t  });\n\t};\n\n\tRPTree.prototype.findLeafItemsOverlapping = function (chrIdx1, startBase, chrIdx2, endBase) {\n\t  var self = this;\n\t  return new Promise(function (fulfill, reject) {\n\t    var leafItems = [],\n\t        processing = new Set(),\n\t        bufferedReader = new BufferedReader(self.config, BUFFER_SIZE);\n\t    processing.add(0); // Zero represents the root node\n\n\t    findLeafItems(self.rootNode, 0);\n\n\t    function findLeafItems(node, nodeId) {\n\t      if (overlaps(node, chrIdx1, startBase, chrIdx2, endBase)) {\n\t        var items = node.items;\n\t        items.forEach(function (item) {\n\t          if (overlaps(item, chrIdx1, startBase, chrIdx2, endBase)) {\n\t            if (item.isLeaf) {\n\t              leafItems.push(item);\n\t            } else {\n\t              if (item.childNode) {\n\t                findLeafItems(item.childNode);\n\t              } else {\n\t                processing.add(item.childOffset); // Represent node to-be-loaded by its file position\n\n\t                self.readNode(item.childOffset, bufferedReader).then(function (node) {\n\t                  item.childNode = node;\n\t                  findLeafItems(node, item.childOffset);\n\t                }).catch(reject);\n\t              }\n\t            }\n\t          }\n\t        });\n\t      }\n\n\t      if (nodeId !== undefined) processing.delete(nodeId); // Wait until all nodes are processed\n\n\t      if (processing.size === 0) {\n\t        fulfill(leafItems);\n\t      }\n\t    }\n\t  });\n\t};\n\n\tfunction RPTreeNode(items) {\n\t  this.items = items;\n\t  var minChromId = Number.MAX_VALUE,\n\t      maxChromId = 0,\n\t      minStartBase = Number.MAX_VALUE,\n\t      maxEndBase = 0,\n\t      i,\n\t      item;\n\n\t  for (i = 0; i < items.length; i++) {\n\t    item = items[i];\n\t    minChromId = Math.min(minChromId, item.startChrom);\n\t    maxChromId = Math.max(maxChromId, item.endChrom);\n\t    minStartBase = Math.min(minStartBase, item.startBase);\n\t    maxEndBase = Math.max(maxEndBase, item.endBase);\n\t  }\n\n\t  this.startChrom = minChromId;\n\t  this.endChrom = maxChromId;\n\t  this.startBase = minStartBase;\n\t  this.endBase = maxEndBase;\n\t}\n\n\tfunction BPTree(binaryParser, startOffset, genome) {\n\t  var magic = binaryParser.getInt();\n\t  var blockSize = binaryParser.getInt();\n\t  var keySize = binaryParser.getInt();\n\t  var valSize = binaryParser.getInt();\n\t  var itemCount = binaryParser.getLong();\n\t  var reserved = binaryParser.getLong();\n\t  var chromToId = {};\n\t  var idToChrom = [];\n\t  this.header = {\n\t    magic: magic,\n\t    blockSize: blockSize,\n\t    keySize: keySize,\n\t    valSize: valSize,\n\t    itemCount: itemCount,\n\t    reserved: reserved\n\t  };\n\t  this.chromToID = chromToId;\n\t  this.idToChrom = idToChrom; // Recursively walk tree to populate dictionary\n\n\t  readTreeNode(binaryParser, -1);\n\n\t  function readTreeNode(byteBuffer, offset) {\n\t    if (offset >= 0) byteBuffer.position = offset;\n\t    var type = byteBuffer.getByte(),\n\t        reserved = byteBuffer.getByte(),\n\t        count = byteBuffer.getUShort(),\n\t        i,\n\t        key,\n\t        chromId,\n\t        chromSize,\n\t        childOffset,\n\t        bufferOffset,\n\t        currOffset;\n\n\t    if (type === 1) {\n\t      for (i = 0; i < count; i++) {\n\t        key = byteBuffer.getFixedLengthTrimmedString(keySize);\n\t        chromId = byteBuffer.getInt();\n\t        chromSize = byteBuffer.getInt();\n\t        if (genome) key = genome.getChromosomeName(key); // Translate to canonical chr name\n\n\t        chromToId[key] = chromId;\n\t        idToChrom[chromId] = key;\n\t      }\n\t    } else {\n\t      // non-leaf\n\t      for (i = 0; i < count; i++) {\n\t        key = byteBuffer.getFixedLengthTrimmedString(keySize);\n\t        childOffset = byteBuffer.getLong();\n\t        bufferOffset = childOffset - startOffset;\n\t        currOffset = byteBuffer.position;\n\t        readTreeNode(byteBuffer, bufferOffset);\n\t        byteBuffer.position = currOffset;\n\t      }\n\t    }\n\t  }\n\t}\n\t/**\n\t * Return true if {chrIdx1:startBase-chrIdx2:endBase} overlaps item's interval\n\t * @returns {boolean}\n\t */\n\n\n\tfunction overlaps(item, chrIdx1, startBase, chrIdx2, endBase) {\n\t  if (!item) {\n\t    return false;\n\t  }\n\n\t  return (chrIdx2 > item.startChrom || chrIdx2 === item.startChrom && endBase >= item.startBase) && (chrIdx1 < item.endChrom || chrIdx1 === item.endChrom && startBase <= item.endBase);\n\t}\n\n\tfunction BWTotalSummary(byteBuffer) {\n\t  if (byteBuffer) {\n\t    this.basesCovered = byteBuffer.getLong();\n\t    this.minVal = byteBuffer.getDouble();\n\t    this.maxVal = byteBuffer.getDouble();\n\t    this.sumData = byteBuffer.getDouble();\n\t    this.sumSquares = byteBuffer.getDouble();\n\t    computeStats.call(this);\n\t  } else {\n\t    this.basesCovered = 0;\n\t    this.minVal = 0;\n\t    this.maxVal = 0;\n\t    this.sumData = 0;\n\t    this.sumSquares = 0;\n\t    this.mean = 0;\n\t    this.stddev = 0;\n\t  }\n\t}\n\n\tfunction computeStats() {\n\t  var n = this.basesCovered;\n\n\t  if (n > 0) {\n\t    this.mean = this.sumData / n;\n\t    this.stddev = Math.sqrt(this.sumSquares / (n - 1));\n\t    var min = this.minVal < 0 ? this.mean - 2 * this.stddev : 0,\n\t        max = this.maxVal > 0 ? this.mean + 2 * this.stddev : 0;\n\t    this.defaultRange = {\n\t      min: min,\n\t      max: max\n\t    };\n\t  }\n\t}\n\n\tfunction zoomLevelForScale(bpPerPixel, zoomLevelHeaders) {\n\t  var level = null,\n\t      i,\n\t      zl;\n\n\t  for (i = 0; i < zoomLevelHeaders.length; i++) {\n\t    zl = zoomLevelHeaders[i];\n\n\t    if (zl.reductionLevel < bpPerPixel) {\n\t      level = zl;\n\t      break;\n\t    }\n\t  }\n\n\t  return level;\n\t}\n\n\tfunction decodeWigData(data, chrIdx1, bpStart, chrIdx2, bpEnd, featureArray, chrDict) {\n\t  var binaryParser = new BinaryParser(data),\n\t      chromId = binaryParser.getInt(),\n\t      chromStart = binaryParser.getInt(),\n\t      chromEnd = binaryParser.getInt(),\n\t      itemStep = binaryParser.getInt(),\n\t      itemSpan = binaryParser.getInt(),\n\t      type = binaryParser.getByte(),\n\t      reserved = binaryParser.getByte(),\n\t      itemCount = binaryParser.getUShort(),\n\t      value,\n\t      chr;\n\n\t  if (chromId >= chrIdx1 && chromId <= chrIdx2) {\n\t    while (itemCount-- > 0) {\n\t      switch (type) {\n\t        case 1:\n\t          chromStart = binaryParser.getInt();\n\t          chromEnd = binaryParser.getInt();\n\t          value = binaryParser.getFloat();\n\t          break;\n\n\t        case 2:\n\t          chromStart = binaryParser.getInt();\n\t          value = binaryParser.getFloat();\n\t          chromEnd = chromStart + itemSpan;\n\t          break;\n\n\t        case 3:\n\t          // Fixed step\n\t          value = binaryParser.getFloat();\n\t          chromEnd = chromStart + itemSpan;\n\t          chromStart += itemStep;\n\t          break;\n\t      }\n\n\t      if (chromId < chrIdx1 || chromId === chrIdx1 && chromEnd < bpStart) continue;else if (chromId > chrIdx2 || chromId === chrIdx2 && chromStart >= bpEnd) break;\n\n\t      if (Number.isFinite(value)) {\n\t        chr = chrDict[chromId];\n\t        featureArray.push({\n\t          chr: chr,\n\t          start: chromStart,\n\t          end: chromEnd,\n\t          value: value\n\t        });\n\t      }\n\t    }\n\t  }\n\t}\n\n\tfunction decodeBedData(data, chrIdx1, bpStart, chrIdx2, bpEnd, featureArray, chrDict) {\n\t  var binaryParser = new BinaryParser(data),\n\t      minSize = 3 * 4 + 1,\n\t      // Minimum # of bytes required for a bed record\n\t  chromId,\n\t      chromStart,\n\t      chromEnd,\n\t      rest,\n\t      tokens,\n\t      feature,\n\t      exonCount,\n\t      exonSizes,\n\t      exonStarts,\n\t      exons,\n\t      eStart,\n\t      eEnd,\n\t      chr;\n\n\t  while (binaryParser.remLength() >= minSize) {\n\t    chromId = binaryParser.getInt();\n\t    chr = chrDict[chromId];\n\t    chromStart = binaryParser.getInt();\n\t    chromEnd = binaryParser.getInt();\n\t    rest = binaryParser.getString();\n\t    if (chromId < chrIdx1 || chromId === chrIdx1 && chromEnd < bpStart) continue;else if (chromId > chrIdx2 || chromId === chrIdx2 && chromStart >= bpEnd) break;\n\t    feature = {\n\t      chr: chr,\n\t      start: chromStart,\n\t      end: chromEnd\n\t    };\n\t    featureArray.push(feature);\n\t    tokens = rest.split(\"\\t\");\n\n\t    if (tokens.length > 0) {\n\t      feature.name = tokens[0];\n\t    }\n\n\t    if (tokens.length > 1) {\n\t      feature.score = parseFloat(tokens[1]);\n\t    }\n\n\t    if (tokens.length > 2) {\n\t      feature.strand = tokens[2];\n\t    }\n\n\t    if (tokens.length > 3) {\n\t      feature.cdStart = parseInt(tokens[3]);\n\t    }\n\n\t    if (tokens.length > 4) {\n\t      feature.cdEnd = parseInt(tokens[4]);\n\t    }\n\n\t    if (tokens.length > 5) {\n\t      if (tokens[5] !== \".\" && tokens[5] !== \"0\" && tokens[5] !== \"-1\") {\n\t        var c = IGVColor.createColorString(tokens[5]);\n\t        feature.color = c.startsWith(\"rgb\") ? c : undefined;\n\t      }\n\t    }\n\n\t    if (tokens.length > 8) {\n\t      exonCount = parseInt(tokens[6]);\n\t      exonSizes = tokens[7].split(',');\n\t      exonStarts = tokens[8].split(',');\n\t      exons = [];\n\n\t      for (var i = 0; i < exonCount; i++) {\n\t        eStart = chromStart + parseInt(exonStarts[i]);\n\t        eEnd = eStart + parseInt(exonSizes[i]);\n\t        exons.push({\n\t          start: eStart,\n\t          end: eEnd\n\t        });\n\t      }\n\n\t      feature.exons = exons;\n\t    }\n\t  }\n\t}\n\n\tfunction decodeZoomData(data, chrIdx1, bpStart, chrIdx2, bpEnd, featureArray, chrDict, windowFunction) {\n\t  var binaryParser = new BinaryParser(data),\n\t      minSize = 8 * 4,\n\t      // Minimum # of bytes required for a zoom record\n\t  chromId,\n\t      chromStart,\n\t      chromEnd,\n\t      validCount,\n\t      minVal,\n\t      maxVal,\n\t      sumData,\n\t      sumSquares,\n\t      value,\n\t      chr;\n\n\t  while (binaryParser.remLength() >= minSize) {\n\t    chromId = binaryParser.getInt();\n\t    chr = chrDict[chromId];\n\t    chromStart = binaryParser.getInt();\n\t    chromEnd = binaryParser.getInt();\n\t    validCount = binaryParser.getInt();\n\t    minVal = binaryParser.getFloat();\n\t    maxVal = binaryParser.getFloat();\n\t    sumData = binaryParser.getFloat();\n\t    sumSquares = binaryParser.getFloat();\n\n\t    switch (windowFunction) {\n\t      case \"min\":\n\t        value = minVal;\n\t        break;\n\n\t      case \"max\":\n\t        value = maxVal;\n\t        break;\n\n\t      default:\n\t        value = validCount === 0 ? 0 : sumData / validCount;\n\t    }\n\n\t    if (chromId < chrIdx1 || chromId === chrIdx1 && chromEnd < bpStart) continue;else if (chromId > chrIdx2 || chromId === chrIdx2 && chromStart >= bpEnd) break;\n\n\t    if (Number.isFinite(value)) {\n\t      featureArray.push({\n\t        chr: chr,\n\t        start: chromStart,\n\t        end: chromEnd,\n\t        value: value\n\t      });\n\t    }\n\t  }\n\t}\n\n\tvar BWSource = function BWSource(config, genome) {\n\t  this.reader = new BWReader(config, genome);\n\t  this.genome = genome;\n\t  this.wgValues = {};\n\t};\n\n\tBWSource.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel, windowFunction) {\n\t  var self = this;\n\n\t  if (chr.toLowerCase() === \"all\") {\n\t    return self.getWGValues(windowFunction);\n\t  } else {\n\t    return self.reader.readFeatures(chr, bpStart, chr, bpEnd, bpPerPixel, windowFunction);\n\t  }\n\t};\n\n\tBWSource.prototype.getDefaultRange = function () {\n\t  if (this.reader.totalSummary !== undefined) {\n\t    return this.reader.totalSummary.defaultRange;\n\t  } else {\n\t    return undefined;\n\t  }\n\t};\n\n\tBWSource.prototype.defaultVisibilityWindow = function () {\n\t  if (this.reader.type === 'bigwig') {\n\t    return Promise.resolve(undefined);\n\t  } else {\n\t    // bigbed\n\t    var genomeSize = this.genome ? this.genome.getGenomeLength() : 3088286401;\n\t    return this.reader.loadHeader().then(function (header) {\n\t      // Estimate window size to return ~ 1,000 features, assuming even distribution across the genome\n\t      return 1000 * (genomeSize / header.dataCount);\n\t    });\n\t  }\n\t};\n\n\tBWSource.prototype.getWGValues = function (windowFunction) {\n\t  var self = this,\n\t      bpPerPixel,\n\t      nominalScreenWidth = 500; // This doesn't need to be precise\n\n\t  var genome = this.genome;\n\n\t  if (self.wgValues[windowFunction]) {\n\t    return Promise.resolve(self.wgValues[windowFunction]);\n\t  } else {\n\t    bpPerPixel = genome.getGenomeLength() / nominalScreenWidth;\n\t    return self.reader.readWGFeatures(bpPerPixel, windowFunction).then(function (features) {\n\t      var wgValues = [];\n\t      features.forEach(function (f) {\n\t        var wgFeature, offset, chr;\n\t        chr = f.chr;\n\t        offset = genome.getCumulativeOffset(chr);\n\t        wgFeature = Object.assign({}, f);\n\t        wgFeature.chr = \"all\";\n\t        wgFeature.start = offset + f.start;\n\t        wgFeature.end = offset + f.end;\n\t        wgValues.push(wgFeature);\n\t      });\n\t      self.wgValues[windowFunction] = wgValues;\n\t      return wgValues;\n\t    });\n\t  }\n\t};\n\n\tBWSource.prototype.supportsWholeGenome = function () {\n\t  return true;\n\t};\n\n\tvar GtexUtils = {\n\t  getTissueInfo: function getTissueInfo(datasetId, baseURL) {\n\t    datasetId = datasetId || 'gtex_v8';\n\t    baseURL = baseURL || 'https://gtexportal.org/rest/v1';\n\t    var url = baseURL + '/dataset/tissueInfo?datasetId=' + datasetId;\n\t    return igvxhr.loadJson(url, {});\n\t  },\n\t  //https://gtexportal.org/rest/v1/association/singleTissueEqtlByLocation?chromosome=7&start=98358766&end=101523798&tissueName=Liver&datasetId=gtex_v7\n\t  //https://gtexportal.org/rest/v1/association/singleTissueEqtlByLocation?chromosome=7&start=98358766&end=101523798&tissueSiteDetailId=Liver&datasetId=gtex_v8\n\t  trackConfiguration: function trackConfiguration(tissueSummary, baseURL) {\n\t    baseURL = baseURL || 'https://gtexportal.org/rest/v1';\n\t    return {\n\t      type: \"eqtl\",\n\t      sourceType: \"gtex-ws\",\n\t      url: baseURL + '/association/singleTissueEqtlByLocation',\n\t      tissueSiteDetailId: tissueSummary.tissueSiteDetailId,\n\t      name: tissueSummary.tissueSiteDetailId.split('_').join(' '),\n\t      visibilityWindow: 250000\n\t    };\n\t  }\n\t};\n\n\tvar JUNCTION_MOTIF_PALETTE = new PaletteColorTable(\"Dark2\"); // Lock in color-to-motif mapping so it's independent of data loading order. This list may not include all possible\n\t// motif values as this varies depending on the RNA-seq pipeline. The current list is based on STAR v2.4 docs.\n\n\tvar someMotifValues = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'];\n\tsomeMotifValues.forEach(function (motif) {\n\t  JUNCTION_MOTIF_PALETTE.getColor(motif);\n\t});\n\tvar FeatureTrack = extend(TrackBase, function (config, browser) {\n\t  this.type = \"feature\";\n\t  TrackBase.call(this, config, browser); // Set maxRows -- protects against pathological feature packing cases (# of rows of overlapping feaures)\n\n\t  if (config.maxRows === undefined) {\n\t    config.maxRows = 500;\n\t  }\n\n\t  this.maxRows = config.maxRows;\n\t  this.displayMode = config.displayMode || \"EXPANDED\"; // COLLAPSED | EXPANDED | SQUISHED\n\n\t  this.labelDisplayMode = config.labelDisplayMode;\n\t  var format = config.format ? config.format.toLowerCase() : undefined;\n\n\t  if ('bigwig' === format || 'bigbed' === format) {\n\t    this.featureSource = new BWSource(config, browser.genome);\n\t  } else {\n\t    this.featureSource = new FeatureSource(config, browser.genome);\n\t  } // Set default heights\n\n\n\t  this.autoHeight = config.autoHeight;\n\t  this.margin = config.margin === undefined ? 10 : config.margin;\n\t  this.featureHeight = config.featureHeight || 14;\n\n\t  if (\"FusionJuncSpan\" === config.type) {\n\t    this.squishedRowHeight = config.squishedRowHeight || 50;\n\t    this.expandedRowHeight = config.expandedRowHeight || 50;\n\t    this.height = config.height || this.margin + 2 * this.expandedRowHeight;\n\t  } else if ('snp' === config.type) {\n\t    this.expandedRowHeight = config.expandedRowHeight || 10;\n\t    this.squishedRowHeight = config.squishedRowHeight || 5;\n\t    this.height = config.height || 30;\n\t  } else {\n\t    this.squishedRowHeight = config.squishedRowHeight || 15;\n\t    this.expandedRowHeight = config.expandedRowHeight || 30;\n\t    this.height = config.height || this.margin + 2 * this.expandedRowHeight;\n\t  }\n\n\t  if (this.height === undefined || !this.height) {\n\t    this.height = 100;\n\t  } //set defaults\n\n\n\t  if ('spliceJunctions' === config.type && config.colorByNumReadsThreshold === undefined) {\n\t    config.colorByNumReadsThreshold = 5;\n\t  } // Set the render function.  This can optionally be passed in the config\n\n\n\t  if (config.render) {\n\t    this.render = config.render;\n\t  } else if (\"FusionJuncSpan\" === config.type) {\n\t    this.render = renderFusionJuncSpan;\n\t  } else if ('spliceJunctions' === config.type) {\n\t    this.render = renderJunctions;\n\t  } else if ('snp' === config.type) {\n\t    this.render = renderSnp; // colors ordered based on priority least to greatest\n\n\t    this.snpColors = ['rgb(0,0,0)', 'rgb(0,0,255)', 'rgb(0,255,0)', 'rgb(255,0,0)'];\n\t    this.colorBy = 'function';\n\t  } else {\n\t    this.render = renderFeature;\n\t    this.arrowSpacing = 30; // adjust label positions to make sure they're always visible\n\n\t    monitorTrackDrag(this);\n\t  }\n\t});\n\tFeatureTrack.prototype.postInit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t  var header, format;\n\t  return regeneratorRuntime.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          _context.next = 2;\n\t          return this.readFileHeader();\n\n\t        case 2:\n\t          header = _context.sent;\n\t          // Set properties from track line\n\t          if (header) this.setTrackProperties(header);\n\t          format = this.config.format;\n\n\t          if (!(format && format.toLowerCase() === 'bigbed' && this.visibilityWindow === undefined && typeof this.featureSource.defaultVisibilityWindow === 'function')) {\n\t            _context.next = 10;\n\t            break;\n\t          }\n\n\t          _context.next = 8;\n\t          return this.featureSource.defaultVisibilityWindow();\n\n\t        case 8:\n\t          this.visibilityWindow = _context.sent;\n\t          this.featureSource.visibilityWindow = this.visibilityWindow;\n\n\t        case 10:\n\t          return _context.abrupt(\"return\", this);\n\n\t        case 11:\n\t        case \"end\":\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t}));\n\n\tFeatureTrack.prototype.supportsWholeGenome = function () {\n\t  return this.config.indexed === false && this.config.supportsWholeGenome !== false;\n\t};\n\n\tFeatureTrack.prototype.readFileHeader = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n\t  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t    while (1) {\n\t      switch (_context2.prev = _context2.next) {\n\t        case 0:\n\t          if (!(typeof this.featureSource.getFileHeader === \"function\")) {\n\t            _context2.next = 4;\n\t            break;\n\t          }\n\n\t          _context2.next = 3;\n\t          return this.featureSource.getFileHeader();\n\n\t        case 3:\n\t          this.header = _context2.sent;\n\n\t        case 4:\n\t          return _context2.abrupt(\"return\", this.header);\n\n\t        case 5:\n\t        case \"end\":\n\t          return _context2.stop();\n\t      }\n\t    }\n\t  }, _callee2, this);\n\t}));\n\n\tFeatureTrack.prototype.getFeatures = /*#__PURE__*/function () {\n\t  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(chr, bpStart, bpEnd, bpPerPixel) {\n\t    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t      while (1) {\n\t        switch (_context3.prev = _context3.next) {\n\t          case 0:\n\t            return _context3.abrupt(\"return\", this.featureSource.getFeatures(chr, bpStart, bpEnd, bpPerPixel, this.visibilityWindow));\n\n\t          case 1:\n\t          case \"end\":\n\t            return _context3.stop();\n\t        }\n\t      }\n\t    }, _callee3, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3, _x4) {\n\t    return _ref3.apply(this, arguments);\n\t  };\n\t}();\n\t/**\n\t * The required height in pixels required for the track content.   This is not the visible track height, which\n\t * can be smaller (with a scrollbar) or larger.\n\t *\n\t * @param features\n\t * @returns {*}\n\t */\n\n\n\tFeatureTrack.prototype.computePixelHeight = function (features) {\n\t  if (this.type === 'spliceJunctions') {\n\t    return this.height;\n\t  } else if (this.displayMode === \"COLLAPSED\") {\n\t    return this.margin + this.expandedRowHeight;\n\t  } else {\n\t    var maxRow = 0;\n\n\t    if (features && typeof features.forEach === \"function\") {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = features[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var feature = _step.value;\n\n\t          if (feature.row && feature.row > maxRow) {\n\t            maxRow = feature.row;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    var height = this.margin + (maxRow + 1) * (\"SQUISHED\" === this.displayMode ? this.squishedRowHeight : this.expandedRowHeight);\n\t    return height;\n\t  }\n\t};\n\n\tFeatureTrack.prototype.draw = function (options) {\n\t  var featureList = options.features;\n\t  var ctx = options.context;\n\t  var bpPerPixel = options.bpPerPixel;\n\t  var bpStart = options.bpStart;\n\t  var pixelWidth = options.pixelWidth;\n\t  var pixelHeight = options.pixelHeight;\n\t  var bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\n\t  if (!this.config.isMergedTrack) {\n\t    IGVGraphics.fillRect(ctx, 0, options.pixelTop, pixelWidth, pixelHeight, {\n\t      'fillStyle': \"rgb(255, 255, 255)\"\n\t    });\n\t  }\n\n\t  if (featureList) {\n\t    var rowFeatureCount = [];\n\t    options.rowLastX = [];\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\n\t    try {\n\t      for (var _iterator2 = featureList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var feature = _step2.value;\n\t        var row = feature.row || 0;\n\n\t        if (rowFeatureCount[row] === undefined) {\n\t          rowFeatureCount[row] = 1;\n\t        } else {\n\t          rowFeatureCount[row]++;\n\t        }\n\n\t        options.rowLastX[row] = -Number.MAX_VALUE;\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError2 = true;\n\t      _iteratorError2 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t          _iterator2.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError2) {\n\t          throw _iteratorError2;\n\t        }\n\t      }\n\t    }\n\n\t    var lastPxEnd = [];\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\n\t    try {\n\t      for (var _iterator3 = featureList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t        var _feature = _step3.value;\n\t        if (_feature.end < bpStart) continue;\n\t        if (_feature.start > bpEnd) break;\n\n\t        var _row = this.displayMode === 'COLLAPSED' ? 0 : _feature.row;\n\n\t        var featureDensity = pixelWidth / rowFeatureCount[_row];\n\t        options.drawLabel = options.labelAllFeatures || featureDensity > 10;\n\t        var pxEnd = Math.ceil((_feature.end - bpStart) / bpPerPixel);\n\t        var last = lastPxEnd[_row];\n\n\t        if (!last || pxEnd > last || this.config.type === 'spliceJunctions') {\n\t          this.render.call(this, _feature, bpStart, bpPerPixel, pixelHeight, ctx, options);\n\n\t          if (this.config.type !== 'spliceJunctions') {\n\t            // Ensure a visible gap between features\n\t            var pxStart = Math.floor((_feature.start - bpStart) / bpPerPixel);\n\n\t            if (last && pxStart - last <= 0) {\n\t              ctx.globalAlpha = 0.5;\n\t              IGVGraphics.strokeLine(ctx, pxStart, 0, pxStart, pixelHeight, {\n\t                'strokeStyle': \"rgb(255, 255, 255)\"\n\t              });\n\t              ctx.globalAlpha = 1.0;\n\t            }\n\n\t            lastPxEnd[_row] = pxEnd;\n\t          }\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError3 = true;\n\t      _iteratorError3 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t          _iterator3.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError3) {\n\t          throw _iteratorError3;\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n\tFeatureTrack.prototype.clickedFeatures = function (clickState) {\n\t  var y = clickState.y - this.margin;\n\t  var allFeatures = TrackBase.prototype.clickedFeatures.call(this, clickState);\n\t  var row;\n\n\t  switch (this.displayMode) {\n\t    case 'SQUISHED':\n\t      row = Math.floor(y / this.squishedRowHeight);\n\t      break;\n\n\t    case 'EXPANDED':\n\t      row = Math.floor(y / this.expandedRowHeight);\n\t      break;\n\n\t    default:\n\t      row = undefined;\n\t  }\n\n\t  return allFeatures.filter(function (feature) {\n\t    return row === undefined || feature.row === undefined || row === feature.row;\n\t  });\n\t};\n\t/**\n\t * Return \"popup data\" for feature @ genomic location.  Data is an array of key-value pairs\n\t */\n\n\n\tFeatureTrack.prototype.popupData = function (clickState, features) {\n\t  if (!features) features = this.clickedFeatures(clickState);\n\t  var genomicLocation = clickState.genomicLocation;\n\t  var data = [];\n\t  var _iteratorNormalCompletion4 = true;\n\t  var _didIteratorError4 = false;\n\t  var _iteratorError4 = undefined;\n\n\t  try {\n\t    for (var _iterator4 = features[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t      var feature = _step4.value;\n\t      var featureData = typeof feature.popupData === \"function\" ? feature.popupData(genomicLocation) : TrackBase.extractPopupData(feature, this.getGenomeId());\n\n\t      if (featureData) {\n\t        if (data.length > 0) {\n\t          data.push(\"<HR>\");\n\t        }\n\n\t        Array.prototype.push.apply(data, featureData);\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError4 = true;\n\t    _iteratorError4 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t        _iterator4.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError4) {\n\t        throw _iteratorError4;\n\t      }\n\t    }\n\t  }\n\n\t  return data;\n\t};\n\n\tFeatureTrack.prototype.menuItemList = function () {\n\t  var self = this;\n\t  var menuItems = [];\n\n\t  if (this.render === renderSnp) {\n\t    [\"function\", \"class\"].forEach(function (colorScheme) {\n\t      menuItems.push({\n\t        object: createCheckbox('Color by ' + colorScheme, colorScheme === self.colorBy),\n\t        click: function click() {\n\t          self.colorBy = colorScheme;\n\t          self.trackView.repaintViews();\n\t        }\n\t      });\n\t    });\n\t    menuItems.push({\n\t      object: $('<div class=\"igv-track-menu-border-top\">')\n\t    });\n\t  }\n\n\t  menuItems.push({\n\t    object: $('<div class=\"igv-track-menu-border-top\">')\n\t  });\n\t  [\"COLLAPSED\", \"SQUISHED\", \"EXPANDED\"].forEach(function (displayMode) {\n\t    var lut = {\n\t      \"COLLAPSED\": \"Collapse\",\n\t      \"SQUISHED\": \"Squish\",\n\t      \"EXPANDED\": \"Expand\"\n\t    };\n\t    menuItems.push({\n\t      object: createCheckbox(lut[displayMode], displayMode === self.displayMode),\n\t      click: function click() {\n\t        self.displayMode = displayMode;\n\t        self.config.displayMode = displayMode;\n\t        self.trackView.checkContentHeight();\n\t        self.trackView.repaintViews();\n\t      }\n\t    });\n\t  });\n\t  return menuItems;\n\t};\n\n\tFeatureTrack.prototype.description = function () {\n\t  // if('snp' === this.type) {\n\t  if (renderSnp === this.render) {\n\t    var desc = \"<html>\" + this.name + \"<hr>\";\n\t    desc += '<em>Color By Function:</em><br>';\n\t    desc += '<span style=\"color:red\">Red</span>: Coding-Non-Synonymous, Splice Site<br>';\n\t    desc += '<span style=\"color:green\">Green</span>: Coding-Synonymous<br>';\n\t    desc += '<span style=\"color:blue\">Blue</span>: Untranslated<br>';\n\t    desc += '<span style=\"color:black\">Black</span>: Intron, Locus, Unknown<br><br>';\n\t    desc += '<em>Color By Class:</em><br>';\n\t    desc += '<span style=\"color:red\">Red</span>: Deletion<br>';\n\t    desc += '<span style=\"color:green\">Green</span>: MNP<br>';\n\t    desc += '<span style=\"color:blue\">Blue</span>: Microsatellite, Named<br>';\n\t    desc += '<span style=\"color:black\">Black</span>: Indel, Insertion, SNP';\n\t    desc += \"</html>\";\n\t    return desc;\n\t  } else {\n\t    return this.name;\n\t  }\n\t};\n\t/**\n\t * Called when the track is removed.  Do any needed cleanup here\n\t */\n\n\n\tFeatureTrack.prototype.dispose = function () {\n\t  this.trackView = undefined;\n\t};\n\t/**\n\t * Monitors track drag events, updates label position to ensure that they're always visible.\n\t * @param track\n\t */\n\n\n\tfunction monitorTrackDrag(track) {\n\t  if (track.browser.on) {\n\t    track.browser.on('trackdragend', onDragEnd);\n\t    track.browser.on('trackremoved', unSubscribe);\n\t  }\n\n\t  function onDragEnd() {\n\t    if (!track.trackView || !track.trackView.tile || track.displayMode === \"SQUISHED\") {\n\t      return;\n\t    }\n\n\t    track.trackView.repaintViews();\n\t  }\n\n\t  function unSubscribe(removedTrack) {\n\t    if (track.browser.un && track === removedTrack) {\n\t      track.browser.un('trackdrag', onDragEnd);\n\t      track.browser.un('trackremoved', unSubscribe);\n\t    }\n\t  }\n\t}\n\t/**\n\t * @param feature\n\t * @param bpStart  genomic location of the left edge of the current canvas\n\t * @param xScale  scale in base-pairs per pixel\n\t * @returns {{px: number, px1: number, pw: number, h: number, py: number}}\n\t */\n\n\n\tfunction calculateFeatureCoordinates(feature, bpStart, xScale) {\n\t  var px = (feature.start - bpStart) / xScale;\n\t  var px1 = (feature.end - bpStart) / xScale; //px = Math.round((feature.start - bpStart) / xScale),\n\t  //px1 = Math.round((feature.end - bpStart) / xScale),\n\n\t  var pw = px1 - px;\n\n\t  if (pw < 3) {\n\t    pw = 3;\n\t    px -= 1.5;\n\t  }\n\n\t  return {\n\t    px: px,\n\t    px1: px1,\n\t    pw: pw\n\t  };\n\t}\n\t/**\n\t *\n\t * @param feature\n\t * @param bpStart  genomic location of the left edge of the current canvas\n\t * @param xScale  scale in base-pairs per pixel\n\t * @param pixelHeight  pixel height of the current canvas\n\t * @param ctx  the canvas 2d context\n\t * @param options  genomic state\n\t */\n\n\n\tfunction renderFeature(feature, bpStart, xScale, pixelHeight, ctx, options) {\n\t  var browser = this.browser;\n\t  var color = this.color; // default\n\n\t  if (feature.alpha && feature.alpha !== 1) {\n\t    color = IGVColor.addAlpha(this.color, feature.alpha);\n\t  }\n\n\t  if (this.config.colorBy) {\n\t    var colorByValue = feature[this.config.colorBy.field];\n\n\t    if (colorByValue) {\n\t      color = this.config.colorBy.pallete[colorByValue];\n\t    }\n\t  } else if (feature.color) {\n\t    color = feature.color;\n\t  }\n\n\t  ctx.fillStyle = color;\n\t  ctx.strokeStyle = color;\n\t  var h;\n\t  var py;\n\n\t  if (this.displayMode === \"SQUISHED\" && feature.row !== undefined) {\n\t    h = this.featureHeight / 2;\n\t    py = this.margin + this.squishedRowHeight * feature.row;\n\t  } else if (this.displayMode === \"EXPANDED\" && feature.row !== undefined) {\n\t    h = this.featureHeight;\n\t    py = this.margin + this.expandedRowHeight * feature.row;\n\t  } else {\n\t    // collapsed\n\t    h = this.featureHeight;\n\t    py = this.margin;\n\t  }\n\n\t  var cy = py + h / 2;\n\t  var h2 = h / 2;\n\t  var py2 = cy - h2 / 2;\n\t  var exonCount = feature.exons ? feature.exons.length : 0;\n\t  var coord = calculateFeatureCoordinates(feature, bpStart, xScale);\n\t  var step = this.arrowSpacing;\n\t  var direction = feature.strand === '+' ? 1 : feature.strand === '-' ? -1 : 0;\n\n\t  if (exonCount === 0) {\n\t    // single-exon transcript\n\t    ctx.fillRect(coord.px, py, coord.pw, h); // Arrows\n\t    // Do not draw if strand is not +/-\n\n\t    if (direction !== 0) {\n\t      ctx.fillStyle = \"white\";\n\t      ctx.strokeStyle = \"white\";\n\n\t      for (var x = coord.px + step / 2; x < coord.px1; x += step) {\n\t        // draw arrowheads along central line indicating transcribed orientation\n\t        IGVGraphics.strokeLine(ctx, x - direction * 2, cy - 2, x, cy);\n\t        IGVGraphics.strokeLine(ctx, x - direction * 2, cy + 2, x, cy);\n\t      }\n\n\t      ctx.fillStyle = color;\n\t      ctx.strokeStyle = color;\n\t    }\n\t  } else {\n\t    // multi-exon transcript\n\t    IGVGraphics.strokeLine(ctx, coord.px + 1, cy, coord.px1 - 1, cy); // center line for introns\n\n\t    var pixelWidth = options.pixelWidth;\n\t    var xLeft = Math.max(0, coord.px) + step / 2;\n\t    var xRight = Math.min(pixelWidth, coord.px1);\n\n\t    for (var _x5 = xLeft; _x5 < xRight; _x5 += step) {\n\t      // draw arrowheads along central line indicating transcribed orientation\n\t      IGVGraphics.strokeLine(ctx, _x5 - direction * 2, cy - 2, _x5, cy);\n\t      IGVGraphics.strokeLine(ctx, _x5 - direction * 2, cy + 2, _x5, cy);\n\t    }\n\n\t    for (var e = 0; e < exonCount; e++) {\n\t      // draw the exons\n\t      var exon = feature.exons[e];\n\t      var ePx = Math.round((exon.start - bpStart) / xScale);\n\t      var ePx1 = Math.round((exon.end - bpStart) / xScale);\n\t      var ePw = Math.max(1, ePx1 - ePx);\n\t      var ePxU = void 0;\n\n\t      if (ePx + ePw < 0) {\n\t        continue; // Off the left edge\n\t      }\n\n\t      if (ePx > pixelWidth) {\n\t        break; // Off the right edge\n\t      }\n\n\t      if (exon.utr) {\n\t        ctx.fillRect(ePx, py2, ePw, h2); // Entire exon is UTR\n\t      } else {\n\t        if (exon.cdStart) {\n\t          ePxU = Math.round((exon.cdStart - bpStart) / xScale);\n\t          ctx.fillRect(ePx, py2, ePxU - ePx, h2); // start is UTR\n\n\t          ePw -= ePxU - ePx;\n\t          ePx = ePxU;\n\t        }\n\n\t        if (exon.cdEnd) {\n\t          ePxU = Math.round((exon.cdEnd - bpStart) / xScale);\n\t          ctx.fillRect(ePxU, py2, ePx1 - ePxU, h2); // start is UTR\n\n\t          ePw -= ePx1 - ePxU;\n\t          ePx1 = ePxU;\n\t        }\n\n\t        ctx.fillRect(ePx, py, ePw, h); // Arrows\n\n\t        if (ePw > step + 5 && direction !== 0) {\n\t          ctx.fillStyle = \"white\";\n\t          ctx.strokeStyle = \"white\";\n\n\t          for (var _x6 = ePx + step / 2; _x6 < ePx1; _x6 += step) {\n\t            // draw arrowheads along central line indicating transcribed orientation\n\t            IGVGraphics.strokeLine(ctx, _x6 - direction * 2, cy - 2, _x6, cy);\n\t            IGVGraphics.strokeLine(ctx, _x6 - direction * 2, cy + 2, _x6, cy);\n\t          }\n\n\t          ctx.fillStyle = color;\n\t          ctx.strokeStyle = color;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  var windowX = Math.round(options.viewportContainerX);\n\t  var nLoci = browser.genomicStateList ? browser.genomicStateList.length : 1;\n\t  var windowX1 = windowX + options.viewportContainerWidth / nLoci;\n\n\t  if (options.drawLabel) {\n\t    renderFeatureLabel.call(this, ctx, feature, coord.px, coord.px1, py, windowX, windowX1, options.genomicState, options);\n\t  }\n\t}\n\t/**\n\t * @param ctx       the canvas 2d context\n\t * @param feature\n\t * @param featureX  feature start x-coordinate\n\t * @param featureX1 feature end x-coordinate\n\t * @param featureY  feature y-coordinate\n\t * @param windowX   visible window start x-coordinate\n\t * @param windowX1  visible window end x-coordinate\n\t * @param genomicState  genomic state\n\t * @param options  options\n\t */\n\n\n\tfunction renderFeatureLabel(ctx, feature, featureX, featureX1, featureY, windowX, windowX1, genomicState, options) {\n\t  if (feature.name === undefined) return; // feature outside of viewable window\n\n\t  var boxX;\n\t  var boxX1;\n\n\t  if (featureX1 < windowX || featureX > windowX1) {\n\t    boxX = featureX;\n\t    boxX1 = featureX1;\n\t  } else {\n\t    // center label within visible portion of the feature\n\t    boxX = Math.max(featureX, windowX);\n\t    boxX1 = Math.min(featureX1, windowX1);\n\t  }\n\n\t  var geneColor;\n\t  var gtexSelection = false;\n\n\t  if (genomicState.selection && GtexUtils.gtexLoaded) {\n\t    // TODO -- for gtex, figure out a better way to do this\n\t    gtexSelection = true;\n\t    geneColor = genomicState.selection.colorForGene(feature.name);\n\t  }\n\n\t  if (this.displayMode !== \"SQUISHED\") {\n\t    var geneFontStyle = {\n\t      textAlign: \"SLANT\" === this.labelDisplayMode ? undefined : 'center',\n\t      fillStyle: geneColor || feature.color || this.color,\n\t      strokeStyle: geneColor || feature.color || this.color\n\t    };\n\t    var transform;\n\n\t    if (this.displayMode === \"COLLAPSED\" && this.labelDisplayMode === \"SLANT\") {\n\t      transform = {\n\t        rotate: {\n\t          angle: 45\n\t        }\n\t      };\n\t    }\n\n\t    var labelX = boxX + (boxX1 - boxX) / 2;\n\t    var labelY = getFeatureLabelY(featureY, transform);\n\t    var textBox = ctx.measureText(feature.name);\n\t    var xleft = labelX - textBox.width / 2;\n\t    var xright = labelX + textBox.width / 2;\n\n\t    if (options.labelAllFeatures || xleft > options.rowLastX[feature.row] || gtexSelection) {\n\t      options.rowLastX[feature.row] = xright; // This is for compatibility with JuiceboxJS.\n\n\t      if (options.labelTransform) {\n\t        ctx.save();\n\t        options.labelTransform(ctx, labelX);\n\t        IGVGraphics.fillText(ctx, feature.name, labelX, labelY, geneFontStyle, undefined);\n\t        ctx.restore();\n\t      } else {\n\t        IGVGraphics.fillText(ctx, feature.name, labelX, labelY, geneFontStyle, transform);\n\t      }\n\t    }\n\t  }\n\t}\n\n\tfunction getFeatureLabelY(featureY, transform) {\n\t  return transform ? featureY + 20 : featureY + 25;\n\t}\n\t/**\n\t *\n\t * @param feature\n\t * @param bpStart  genomic location of the left edge of the current canvas\n\t * @param xScale  scale in base-pairs per pixel\n\t * @param pixelHeight  pixel height of the current canvas\n\t * @param ctx  the canvas 2d context\n\t */\n\n\n\tfunction renderFusionJuncSpan(feature, bpStart, xScale, pixelHeight, ctx) {\n\t  var py;\n\t  var rowHeight = this.displayMode === \"EXPANDED\" ? this.expandedRowHeight : this.squishedRowHeight;\n\n\t  if (this.display === \"COLLAPSED\") {\n\t    py = this.margin;\n\t  }\n\n\t  if (this.displayMode === \"SQUISHED\" && feature.row !== undefined) {\n\t    py = this.margin + rowHeight * feature.row;\n\t  } else if (this.displayMode === \"EXPANDED\" && feature.row !== undefined) {\n\t    py = this.margin + rowHeight * feature.row;\n\t  }\n\n\t  var cy = py + 0.5 * rowHeight;\n\t  var topY = cy - 0.5 * rowHeight;\n\t  var bottomY = cy + 0.5 * rowHeight; // draw the junction arc\n\n\t  var junctionLeftPx = Math.round((feature.junction_left - bpStart) / xScale);\n\t  var junctionRightPx = Math.round((feature.junction_right - bpStart) / xScale);\n\t  ctx.beginPath();\n\t  ctx.moveTo(junctionLeftPx, cy);\n\t  ctx.bezierCurveTo(junctionLeftPx, topY, junctionRightPx, topY, junctionRightPx, cy);\n\t  ctx.lineWidth = 1 + Math.log(feature.num_junction_reads) / Math.log(2);\n\t  ctx.strokeStyle = 'blue';\n\t  ctx.stroke(); // draw the spanning arcs\n\n\t  var spanningCoords = feature.spanning_frag_coords;\n\n\t  for (var i = 0; i < spanningCoords.length; i++) {\n\t    var spanningInfo = spanningCoords[i];\n\t    var spanLeftPx = Math.round((spanningInfo.left - bpStart) / xScale);\n\t    var spanRightPx = Math.round((spanningInfo.right - bpStart) / xScale);\n\t    ctx.beginPath();\n\t    ctx.moveTo(spanLeftPx, cy);\n\t    ctx.bezierCurveTo(spanLeftPx, bottomY, spanRightPx, bottomY, spanRightPx, cy);\n\t    ctx.lineWidth = 1;\n\t    ctx.strokeStyle = 'purple';\n\t    ctx.stroke();\n\t  }\n\t}\n\t/**\n\t *\n\t * @param feature\n\t * @param bpStart  genomic location of the left edge of the current canvas\n\t * @param xScale  scale in base-pairs per pixel\n\t * @param pixelHeight  pixel height of the current canvas\n\t * @param ctx  the canvas 2d context\n\t */\n\n\n\tfunction renderJunctions(feature, bpStart, xScale, pixelHeight, ctx) {\n\t  // TODO: cache filter and pixel calculations by doing them earlier when features are initially parsed?\n\t  if (this.config.hideAnnotatedJunctions && feature.attributes.annotated_junction === \"true\") {\n\t    return;\n\t  }\n\n\t  if (this.config.hideUnannotatedJunctions && feature.attributes.annotated_junction === \"false\") {\n\t    return;\n\t  }\n\n\t  if (this.config.hideMotifs && this.config.hideMotifs.includes(feature.attributes.motif)) {\n\t    return;\n\t  }\n\n\t  if (this.config.hideStrand === feature.strand) {\n\t    return;\n\t  }\n\n\t  var uniquelyMappedReadCount = parseInt(feature.attributes.uniquely_mapped);\n\n\t  if (uniquelyMappedReadCount < this.config.minUniquelyMappedReads) {\n\t    return;\n\t  }\n\n\t  var multiMappedReadCount = parseInt(feature.attributes.multi_mapped);\n\t  var totalReadCount = uniquelyMappedReadCount + multiMappedReadCount;\n\n\t  if (totalReadCount < this.config.minTotalReads) {\n\t    return;\n\t  }\n\n\t  if (totalReadCount > 0 && multiMappedReadCount / totalReadCount > this.config.maxFractionMultiMappedReads) {\n\t    return;\n\t  }\n\n\t  var maximumSplicedAlignmentOverhang = parseInt(feature.attributes.maximum_spliced_alignment_overhang);\n\n\t  if (maximumSplicedAlignmentOverhang < this.config.minSplicedAlignmentOverhang) {\n\t    return;\n\t  }\n\n\t  var py = this.margin;\n\t  var rowHeight = this.height;\n\t  var cy = py + 0.5 * rowHeight;\n\t  var topY = py;\n\t  var bottomY = py + rowHeight;\n\t  var bezierBottomY = bottomY - 10; // draw the junction arc\n\n\t  var junctionLeftPx = Math.round((feature.start - bpStart) / xScale);\n\t  var junctionRightPx = Math.round((feature.end - bpStart) / xScale);\n\t  var junctionMiddlePx = (junctionLeftPx + junctionRightPx) / 2;\n\t  var bezierControlLeftPx = (junctionLeftPx + junctionMiddlePx) / 2;\n\t  var bezierControlRightPx = (junctionMiddlePx + junctionRightPx) / 2;\n\t  var lineWidth;\n\n\t  if (this.config.thicknessBasedOn === undefined || this.config.thicknessBasedOn === 'numUniqueReads') {\n\t    lineWidth = uniquelyMappedReadCount;\n\t  } else if (this.config.thicknessBasedOn === 'numReads') {\n\t    lineWidth = totalReadCount;\n\t  } else if (this.config.thicknessBasedOn === 'isAnnotatedJunction') {\n\t    lineWidth = feature.attributes.annotated_junction === \"true\" ? 20 : 100;\n\t  }\n\n\t  lineWidth = 1 + Math.log(lineWidth + 1) / Math.log(12);\n\t  var bounceHeight;\n\n\t  if (this.config.bounceHeightBasedOn === undefined || this.config.bounceHeightBasedOn === 'random') {\n\t    // randomly but deterministically stagger topY coordinates to reduce overlap\n\t    bounceHeight = (feature.start + feature.end) % 7;\n\t  } else if (this.config.bounceHeightBasedOn === 'distance') {\n\t    bounceHeight = (feature.end - feature.start) / 1000;\n\t  } else if (this.config.bounceHeightBasedOn === 'thickness') {\n\t    bounceHeight = 2 * lineWidth;\n\t  }\n\n\t  topY += rowHeight * Math.max(7 - bounceHeight, 0) / 10;\n\t  var color;\n\n\t  if (this.config.colorBy === undefined || this.config.colorBy === 'numUniqueReads') {\n\t    color = uniquelyMappedReadCount > this.config.colorByNumReadsThreshold ? 'blue' : '#AAAAAA'; // color gradient?\n\t  } else if (this.config.colorBy === 'numReads') {\n\t    color = totalReadCount > this.config.colorByNumReadsThreshold ? 'blue' : '#AAAAAA';\n\t  } else if (this.config.colorBy === 'isAnnotatedJunction') {\n\t    color = feature.attributes.annotated_junction === \"true\" ? '#b0b0ec' : 'orange';\n\t  } else if (this.config.colorBy === 'strand') {\n\t    color = feature.strand === \"+\" ? '#b0b0ec' : '#ecb0b0';\n\t  } else if (this.config.colorBy === 'motif') {\n\t    color = JUNCTION_MOTIF_PALETTE.getColor(feature.attributes.motif);\n\t  }\n\n\t  var label = '';\n\n\t  if (this.config.labelUniqueReadCount === undefined && this.config.labelMultiMappedReadCount === undefined && this.config.labelTotalReadCount === undefined) {\n\t    //default label\n\t    label += uniquelyMappedReadCount + (multiMappedReadCount == 0 ? '' : '(+' + multiMappedReadCount + ')');\n\t  } else {\n\t    if (this.config.labelTotalReadCount) {\n\t      label += totalReadCount;\n\t    } else if (this.config.labelUniqueReadCount) {\n\t      label += uniquelyMappedReadCount;\n\t    }\n\n\t    if (this.config.labelMultiMappedReadCount && multiMappedReadCount > 0) {\n\t      label += ' (+' + multiMappedReadCount + ')';\n\t    }\n\t  }\n\n\t  if (this.config.labelAnnotatedJunction && feature.attributes.annotated_junction === \"true\") {\n\t    label += this.config.labelAnnotatedJunction;\n\t  }\n\n\t  if (this.config.labelMotif && feature.attributes.motif) {\n\t    label += \" \".concat(feature.attributes.motif);\n\t  } // data source: STAR splice junctions (eg. SJ.out.tab file converted to bed).\n\t  // .bed \"name\" field used to store unique + multi-mapped read counts, so:\n\t  // feature.score:  unique spanning read counts\n\t  // feature.name:   unique + multi-mapped spanning read counts\n\t  //example feature:  { chr: \"chr17\", start: 39662344, end: 39662803, name: \"59\", row: 0, score: 38, strand: \"+\"}\n\n\n\t  ctx.beginPath();\n\t  ctx.moveTo(junctionLeftPx, bezierBottomY);\n\t  ctx.bezierCurveTo(bezierControlLeftPx, topY, bezierControlRightPx, topY, junctionRightPx, bezierBottomY);\n\t  ctx.lineWidth = lineWidth;\n\t  ctx.strokeStyle = color;\n\t  ctx.stroke();\n\t  ctx.fillText(label, junctionMiddlePx - ctx.measureText(label).width / 2, (7 * topY + cy) / 8);\n\t} // SNP constants\n\n\n\tvar codingNonSynonSet = new Set(['nonsense', 'missense', 'stop-loss', 'frameshift', 'cds-indel']);\n\tvar codingSynonSet = new Set(['coding-synon']);\n\tvar spliceSiteSet = new Set(['splice-3', 'splice-5']);\n\tvar untranslatedSet = new Set(['untranslated-5', 'untranslated-3']);\n\t/**\n\t *\n\t * @param snp\n\t * @param bpStart  genomic location of the left edge of the current canvas\n\t * @param xScale  scale in base-pairs per pixel\n\t * @param pixelHeight  pixel height of the current canvas\n\t * @param ctx  the canvas 2d context\n\t */\n\n\tfunction renderSnp(snp, bpStart, xScale, pixelHeight, ctx) {\n\t  var coord = calculateFeatureCoordinates(snp, bpStart, xScale),\n\t      py = this.margin,\n\t      h,\n\t      colorArrLength = this.snpColors.length,\n\t      colorPriority;\n\t  h = this.displayMode === \"squished\" ? this.squishedRowHeight : this.expandedRowHeight;\n\n\t  switch (this.colorBy) {\n\t    case 'function':\n\t      colorPriority = colorByFunc(snp.func);\n\t      break;\n\n\t    case 'class':\n\t      colorPriority = colorByClass(snp['class']);\n\t  }\n\n\t  ctx.fillStyle = this.snpColors[colorPriority];\n\t  ctx.fillRect(coord.px, py, coord.pw, h); // Coloring functions, convert a value to a priority\n\n\t  function colorByFunc(theFunc) {\n\t    var priorities;\n\t    var funcArray = theFunc.split(','); // possible func values\n\n\t    priorities = funcArray.map(function (func) {\n\t      if (codingNonSynonSet.has(func) || spliceSiteSet.has(func)) {\n\t        return colorArrLength - 1;\n\t      } else if (codingSynonSet.has(func)) {\n\t        return colorArrLength - 2;\n\t      } else if (untranslatedSet.has(func)) {\n\t        return colorArrLength - 3;\n\t      } else {\n\t        // locusSet.has(func) || intronSet.has(func)\n\t        return 0;\n\t      }\n\t    });\n\t    return priorities.reduce(function (a, b) {\n\t      return Math.max(a, b);\n\t    });\n\t  }\n\n\t  function colorByClass(cls) {\n\t    if (cls === 'deletion') {\n\t      return colorArrLength - 1;\n\t    } else if (cls === 'mnp') {\n\t      return colorArrLength - 2;\n\t    } else if (cls === 'microsatellite' || cls === 'named') {\n\t      return colorArrLength - 3;\n\t    } else {\n\t      // cls === 'single' || cls === 'in-del' || cls === 'insertion'\n\t      return 0;\n\t    }\n\t  }\n\t}\n\n\tvar SequenceTrack = function SequenceTrack(config, browser) {\n\t  this.type = \"sequence\";\n\t  this.browser = browser;\n\t  this.removable = false;\n\t  this.config = config;\n\t  this.name = \"\";\n\t  this.id = \"sequence\";\n\t  this.sequenceType = config.sequenceType || \"dna\"; //   dna | rna | prot\n\n\t  this.height = 25;\n\t  this.disableButtons = false;\n\t  this.order = config.order || -Number.MAX_VALUE;\n\t  this.ignoreTrackMenu = false;\n\t  this.removable = false;\n\t  this.reversed = false;\n\t  this.frameTranslate = false;\n\t  this.complement = {\n\t    'A': 'T',\n\t    'C': 'G',\n\t    'G': 'C',\n\t    'T': 'A'\n\t  };\n\t  this.translationDict = {\n\t    'TTT': 'F',\n\t    'TTC': 'F',\n\t    'TTA': 'L',\n\t    'TTG': 'L',\n\t    'CTT': 'L',\n\t    'CTC': 'L',\n\t    'CTA': 'L',\n\t    'CTG': 'L',\n\t    'ATT': 'I',\n\t    'ATC': 'I',\n\t    'ATA': 'I',\n\t    'ATG': 'M',\n\t    'GTT': 'V',\n\t    'GTC': 'V',\n\t    'GTA': 'V',\n\t    'GTG': 'V',\n\t    'TCT': 'S',\n\t    'TCC': 'S',\n\t    'TCA': 'S',\n\t    'TCG': 'S',\n\t    'CCT': 'P',\n\t    'CCC': 'P',\n\t    'CCA': 'P',\n\t    'CCG': 'P',\n\t    'ACT': 'T',\n\t    'ACC': 'T',\n\t    'ACA': 'T',\n\t    'ACG': 'T',\n\t    'GCT': 'A',\n\t    'GCC': 'A',\n\t    'GCA': 'A',\n\t    'GCG': 'A',\n\t    'TAT': 'Y',\n\t    'TAC': 'Y',\n\t    'TAA': 'STOP',\n\t    'TAG': 'STOP',\n\t    'CAT': 'H',\n\t    'CAC': 'H',\n\t    'CAA': 'Q',\n\t    'CAG': 'Q',\n\t    'AAT': 'N',\n\t    'AAC': 'N',\n\t    'AAA': 'K',\n\t    'AAG': 'K',\n\t    'GAT': 'D',\n\t    'GAC': 'D',\n\t    'GAA': 'E',\n\t    'GAG': 'E',\n\t    'TGT': 'C',\n\t    'TGC': 'C',\n\t    'TGA': 'STOP',\n\t    'TGG': 'W',\n\t    'CGT': 'R',\n\t    'CGC': 'R',\n\t    'CGA': 'R',\n\t    'CGG': 'R',\n\t    'AGT': 'S',\n\t    'AGC': 'S',\n\t    'AGA': 'R',\n\t    'AGG': 'R',\n\t    'GGT': 'G',\n\t    'GGC': 'G',\n\t    'GGA': 'G',\n\t    'GGG': 'G'\n\t  };\n\t};\n\n\tSequenceTrack.prototype.menuItemList = function () {\n\t  var self = this;\n\t  return [{\n\t    name: self.reversed ? \"Forward\" : \"Reverse\",\n\t    click: function click() {\n\t      self.reversed = !self.reversed;\n\t      self.trackView.repaintViews();\n\t    }\n\t  }, {\n\t    name: self.frameTranslate ? \"Close Translation\" : \"Three-frame Translate\",\n\t    click: function click() {\n\t      self.frameTranslate = !self.frameTranslate;\n\n\t      if (self.frameTranslate) {\n\t        self.trackView.viewports.forEach(function (vp) {\n\t          vp.setContentHeight(115);\n\t        });\n\t        self.trackView.setTrackHeight(115);\n\t      } else {\n\t        self.trackView.viewports.forEach(function (vp) {\n\t          vp.setContentHeight(25);\n\t        });\n\t        self.trackView.setTrackHeight(25);\n\t      }\n\n\t      self.trackView.repaintViews();\n\t    }\n\t  }];\n\t};\n\n\tSequenceTrack.prototype.translateSequence = function (seq) {\n\t  var threeFrame = [[], [], []];\n\t  var self = this;\n\t  [0, 1, 2].forEach(function (fNum) {\n\t    var idx = fNum;\n\t    var obj, st;\n\n\t    while (seq.length - idx >= 3) {\n\t      obj = {};\n\t      st = seq.slice(idx, idx + 3);\n\n\t      if (self.reversed) {\n\t        st = st.split('').reverse().join('');\n\t      }\n\n\t      obj.codons = st;\n\t      obj.aminoA = self.translationDict[st.toUpperCase()];\n\t      threeFrame[fNum].push(obj);\n\t      obj = null;\n\t      idx += 3;\n\t    }\n\t  });\n\t  return threeFrame;\n\t};\n\n\tSequenceTrack.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel) {\n\t  var browser = this.browser;\n\n\t  if (bpPerPixel && bpPerPixel > 1) {\n\t    return Promise.resolve(null);\n\t  } else {\n\t    return browser.genome.sequence.getSequence(chr, bpStart, bpEnd).then(function (sequence) {\n\t      return {\n\t        bpStart: bpStart,\n\t        sequence: sequence\n\t      };\n\t    });\n\t  }\n\t};\n\n\tSequenceTrack.prototype.draw = function (options) {\n\t  var self = this;\n\t  var ctx = options.context;\n\n\t  if (options.features) {\n\t    var sequence = options.features.sequence;\n\t    var sequenceBpStart = options.features.bpStart;\n\t    var bpEnd = 1 + options.bpStart + options.pixelWidth * options.bpPerPixel;\n\t    var height = 15;\n\n\t    for (var bp = sequenceBpStart; bp <= bpEnd; bp++) {\n\t      var seqOffsetBp = Math.floor(bp - sequenceBpStart);\n\n\t      if (seqOffsetBp < sequence.length) {\n\t        var letter = sequence[seqOffsetBp];\n\n\t        if (this.reversed) {\n\t          letter = this.complement[letter.toUpperCase()];\n\t        }\n\n\t        var offsetBP = bp - options.bpStart;\n\t        var aPixel = offsetBP / options.bpPerPixel;\n\t        var bPixel = (offsetBP + 1) / options.bpPerPixel;\n\t        var color = fillColor.call(this, letter);\n\n\t        if (options.bpPerPixel > 1 / 10) {\n\t          IGVGraphics.fillRect(ctx, aPixel, 5, bPixel - aPixel, height - 5, {\n\t            fillStyle: color\n\t          });\n\t        } else {\n\t          var xPixel = 0.5 * (aPixel + bPixel - ctx.measureText(letter).width);\n\t          IGVGraphics.strokeText(ctx, letter, xPixel, height, {\n\t            strokeStyle: color\n\t          });\n\t        }\n\t      }\n\t    }\n\n\t    if (this.frameTranslate) {\n\t      var transSeq;\n\n\t      if (this.reversed) {\n\t        transSeq = sequence.split('').map(function (cv) {\n\t          return self.complement[cv];\n\t        });\n\t        transSeq = transSeq.join('');\n\t      } else {\n\t        transSeq = sequence;\n\t      }\n\n\t      var y = height;\n\t      var translatedSequence = this.translateSequence(transSeq);\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = translatedSequence[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var arr = _step.value;\n\t          var i = translatedSequence.indexOf(arr);\n\t          var fNum = i;\n\t          var h = 25;\n\t          y = i === 0 ? y + 10 : y + 30; //Little less room at first.\n\n\t          var _iteratorNormalCompletion2 = true;\n\t          var _didIteratorError2 = false;\n\t          var _iteratorError2 = undefined;\n\n\t          try {\n\t            for (var _iterator2 = arr[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t              var cv = _step2.value;\n\t              var aaS = void 0;\n\t              var idx = arr.indexOf(cv);\n\t              var xSeed = idx + fNum + 2 * idx;\n\n\t              var _color = 0 === idx % 2 ? 'rgb(160,160,160)' : 'rgb(224,224,224)';\n\n\t              var p0 = Math.floor(xSeed / options.bpPerPixel);\n\t              var p1 = Math.floor((xSeed + 3) / options.bpPerPixel);\n\t              var pc = Math.round((p0 + p1) / 2);\n\n\t              if (cv.aminoA.indexOf('STOP') > -1) {\n\t                _color = 'rgb(255, 0, 0)';\n\t                aaS = 'STOP'; //Color blind accessible\n\t              } else {\n\t                aaS = cv.aminoA;\n\t              }\n\n\t              if (cv.aminoA === 'M') {\n\t                _color = 'rgb(0, 153, 0)';\n\t                aaS = 'START'; //Color blind accessible\n\t              }\n\n\t              IGVGraphics.fillRect(ctx, p0, y, p1 - p0, h, {\n\t                fillStyle: _color\n\t              });\n\n\t              if (options.bpPerPixel <= 1 / 10) {\n\t                IGVGraphics.strokeText(ctx, aaS, pc - ctx.measureText(aaS).width / 2, y + 15);\n\t              }\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError2 = true;\n\t            _iteratorError2 = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t                _iterator2.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError2) {\n\t                throw _iteratorError2;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n\tfunction fillColor(index) {\n\t  if (this.color) {\n\t    return this.color;\n\t  } else if (\"dna\" === this.sequenceType) {\n\t    return nucleotideColors[index] || 'gray';\n\t  } else {\n\t    return 'rgb(0, 0, 150)';\n\t  }\n\t}\n\n\tSequenceTrack.prototype.supportsWholeGenome = function () {\n\t  return false;\n\t};\n\n\tSequenceTrack.prototype.computePixelHeight = function (ignore) {\n\t  return this.height;\n\t};\n\n\tvar GZIP_FLAG = 0x1;\n\n\tvar TDFReader = function TDFReader(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  this.path = config.url;\n\t  this.groupCache = {};\n\t  this.datasetCache = {};\n\t};\n\n\tTDFReader.prototype.readHeader = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t  var data, binaryParser, headerSize, nWindowFunctions, nTracks, nEntries, _name, pos, size, _name2, _pos, _size;\n\n\t  return regeneratorRuntime.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          if (!(this.magic !== undefined)) {\n\t            _context.next = 2;\n\t            break;\n\t          }\n\n\t          return _context.abrupt(\"return\", this);\n\n\t        case 2:\n\t          _context.next = 4;\n\t          return igvxhr.loadArrayBuffer(this.path, buildOptions(this.config, {\n\t            range: {\n\t              start: 0,\n\t              size: 64000\n\t            }\n\t          }));\n\n\t        case 4:\n\t          data = _context.sent;\n\t          binaryParser = new BinaryParser(new DataView(data));\n\t          this.magic = binaryParser.getInt();\n\t          this.version = binaryParser.getInt();\n\t          this.indexPos = binaryParser.getLong();\n\t          this.indexSize = binaryParser.getInt();\n\t          headerSize = binaryParser.getInt();\n\n\t          if (this.version >= 2) {\n\t            nWindowFunctions = binaryParser.getInt();\n\t            this.windowFunctions = [];\n\n\t            while (nWindowFunctions-- > 0) {\n\t              this.windowFunctions.push(binaryParser.getString());\n\t            }\n\t          }\n\n\t          this.trackType = binaryParser.getString();\n\t          this.trackLine = binaryParser.getString();\n\t          nTracks = binaryParser.getInt();\n\t          this.trackNames = [];\n\n\t          while (nTracks-- > 0) {\n\t            this.trackNames.push(binaryParser.getString());\n\t          }\n\n\t          this.genomeID = binaryParser.getString();\n\t          this.flags = binaryParser.getInt();\n\t          this.compressed = (this.flags & GZIP_FLAG) !== 0; // Now read index\n\n\t          _context.next = 22;\n\t          return igvxhr.loadArrayBuffer(this.path, buildOptions(this.config, {\n\t            range: {\n\t              start: this.indexPos,\n\t              size: this.indexSize\n\t            }\n\t          }));\n\n\t        case 22:\n\t          data = _context.sent;\n\t          binaryParser = new BinaryParser(new DataView(data));\n\t          this.datasetIndex = {};\n\t          nEntries = binaryParser.getInt();\n\n\t          while (nEntries-- > 0) {\n\t            _name = binaryParser.getString();\n\t            pos = binaryParser.getLong();\n\t            size = binaryParser.getInt();\n\t            this.datasetIndex[_name] = {\n\t              position: pos,\n\t              size: size\n\t            };\n\t          }\n\n\t          this.groupIndex = {};\n\t          nEntries = binaryParser.getInt();\n\n\t          while (nEntries-- > 0) {\n\t            _name2 = binaryParser.getString();\n\t            _pos = binaryParser.getLong();\n\t            _size = binaryParser.getInt();\n\t            this.groupIndex[_name2] = {\n\t              position: _pos,\n\t              size: _size\n\t            };\n\t          }\n\n\t          return _context.abrupt(\"return\", this);\n\n\t        case 31:\n\t        case \"end\":\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t}));\n\n\tTDFReader.prototype.readDataset = /*#__PURE__*/function () {\n\t  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(chr, windowFunction, zoom) {\n\t    var key, wf, zoomString, dsName, indexEntry, data, binaryParser, nAttributes, attributes, dataType, tileWidth, nTiles, tiles, dataset;\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            key = chr + \"_\" + windowFunction + \"_\" + zoom;\n\n\t            if (!this.datasetCache[key]) {\n\t              _context2.next = 5;\n\t              break;\n\t            }\n\n\t            return _context2.abrupt(\"return\", this.datasetCache[key]);\n\n\t          case 5:\n\t            _context2.next = 7;\n\t            return this.readHeader();\n\n\t          case 7:\n\t            wf = this.version < 2 ? \"\" : \"/\" + windowFunction;\n\t            zoomString = chr.toLowerCase() === \"all\" || zoom === undefined ? \"0\" : zoom.toString();\n\n\t            if (windowFunction === \"raw\") {\n\t              dsName = \"/\" + chr + \"/raw\";\n\t            } else {\n\t              dsName = \"/\" + chr + \"/z\" + zoomString + wf;\n\t            }\n\n\t            indexEntry = this.datasetIndex[dsName];\n\n\t            if (!(indexEntry === undefined)) {\n\t              _context2.next = 13;\n\t              break;\n\t            }\n\n\t            return _context2.abrupt(\"return\", undefined);\n\n\t          case 13:\n\t            _context2.next = 15;\n\t            return igvxhr.loadArrayBuffer(this.path, buildOptions(this.config, {\n\t              range: {\n\t                start: indexEntry.position,\n\t                size: indexEntry.size\n\t              }\n\t            }));\n\n\t          case 15:\n\t            data = _context2.sent;\n\n\t            if (data) {\n\t              _context2.next = 18;\n\t              break;\n\t            }\n\n\t            return _context2.abrupt(\"return\", undefined);\n\n\t          case 18:\n\t            binaryParser = new BinaryParser(new DataView(data));\n\t            nAttributes = binaryParser.getInt();\n\t            attributes = {};\n\n\t            while (nAttributes-- > 0) {\n\t              attributes[binaryParser.getString()] = binaryParser.getString();\n\t            }\n\n\t            dataType = binaryParser.getString();\n\t            tileWidth = binaryParser.getFloat();\n\t            nTiles = binaryParser.getInt();\n\t            tiles = [];\n\n\t            while (nTiles-- > 0) {\n\t              tiles.push({\n\t                position: binaryParser.getLong(),\n\t                size: binaryParser.getInt()\n\t              });\n\t            }\n\n\t            dataset = {\n\t              name: dsName,\n\t              attributes: attributes,\n\t              dataType: dataType,\n\t              tileWidth: tileWidth,\n\t              tiles: tiles\n\t            };\n\t            this.datasetCache[key] = dataset;\n\t            return _context2.abrupt(\"return\", dataset);\n\n\t          case 30:\n\t          case \"end\":\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3) {\n\t    return _ref2.apply(this, arguments);\n\t  };\n\t}();\n\n\tTDFReader.prototype.readRootGroup = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n\t  var genome, rootGroup, group, names, maxZoomString, chrAliasTable;\n\t  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t    while (1) {\n\t      switch (_context3.prev = _context3.next) {\n\t        case 0:\n\t          genome = this.genome;\n\t          rootGroup = this.groupCache[\"/\"];\n\n\t          if (!rootGroup) {\n\t            _context3.next = 6;\n\t            break;\n\t          }\n\n\t          return _context3.abrupt(\"return\", rootGroup);\n\n\t        case 6:\n\t          _context3.next = 8;\n\t          return this.readGroup(\"/\");\n\n\t        case 8:\n\t          group = _context3.sent;\n\t          names = group[\"chromosomes\"];\n\t          maxZoomString = group[\"maxZoom\"]; // Now parse out interesting attributes.  This is a side effect, but the alternative is messy as well.\n\n\t          if (maxZoomString) {\n\t            this.maxZoom = Number(maxZoomString);\n\t          } // Chromosome names\n\n\n\t          chrAliasTable = {};\n\n\t          if (names) {\n\t            names.split(\",\").forEach(function (chr) {\n\t              var canonicalName = genome.getChromosomeName(chr);\n\t              chrAliasTable[canonicalName] = chr;\n\t            });\n\t          }\n\n\t          this.chrAliasTable = chrAliasTable;\n\t          this.groupCache[\"/\"] = group;\n\t          return _context3.abrupt(\"return\", group);\n\n\t        case 17:\n\t        case \"end\":\n\t          return _context3.stop();\n\t      }\n\t    }\n\t  }, _callee3, this);\n\t}));\n\n\tTDFReader.prototype.readGroup = /*#__PURE__*/function () {\n\t  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(name) {\n\t    var group, indexEntry, data, binaryParser, _group, nAttributes, key, value;\n\n\t    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t      while (1) {\n\t        switch (_context4.prev = _context4.next) {\n\t          case 0:\n\t            group = this.groupCache[name];\n\n\t            if (!group) {\n\t              _context4.next = 5;\n\t              break;\n\t            }\n\n\t            return _context4.abrupt(\"return\", group);\n\n\t          case 5:\n\t            _context4.next = 7;\n\t            return this.readHeader();\n\n\t          case 7:\n\t            indexEntry = this.groupIndex[name];\n\n\t            if (!(indexEntry === undefined)) {\n\t              _context4.next = 10;\n\t              break;\n\t            }\n\n\t            return _context4.abrupt(\"return\", undefined);\n\n\t          case 10:\n\t            _context4.next = 12;\n\t            return igvxhr.loadArrayBuffer(this.path, buildOptions(this.config, {\n\t              range: {\n\t                start: indexEntry.position,\n\t                size: indexEntry.size\n\t              }\n\t            }));\n\n\t          case 12:\n\t            data = _context4.sent;\n\n\t            if (data) {\n\t              _context4.next = 15;\n\t              break;\n\t            }\n\n\t            return _context4.abrupt(\"return\", undefined);\n\n\t          case 15:\n\t            binaryParser = new BinaryParser(new DataView(data));\n\t            _group = {\n\t              name: name\n\t            };\n\t            nAttributes = binaryParser.getInt();\n\n\t            while (nAttributes-- > 0) {\n\t              key = binaryParser.getString();\n\t              value = binaryParser.getString();\n\t              _group[key] = value;\n\t            }\n\n\t            this.groupCache[name] = _group;\n\t            return _context4.abrupt(\"return\", _group);\n\n\t          case 21:\n\t          case \"end\":\n\t            return _context4.stop();\n\t        }\n\t      }\n\t    }, _callee4, this);\n\t  }));\n\n\t  return function (_x4) {\n\t    return _ref4.apply(this, arguments);\n\t  };\n\t}();\n\n\tfunction createFixedStep(binaryParser, nTracks) {\n\t  var nPositions = binaryParser.getInt();\n\t  var start = binaryParser.getInt();\n\t  var span = binaryParser.getFloat();\n\t  var data = [];\n\t  var nt = nTracks;\n\n\t  while (nt-- > 0) {\n\t    var np = nPositions;\n\t    var dtrack = [];\n\n\t    while (np-- > 0) {\n\t      dtrack.push(binaryParser.getFloat());\n\t    }\n\n\t    data.push(dtrack);\n\t  }\n\n\t  return {\n\t    type: \"fixedStep\",\n\t    start: start,\n\t    span: span,\n\t    data: data,\n\t    nTracks: nTracks,\n\t    nPositions: nPositions\n\t  };\n\t}\n\n\tfunction createVariableStep(binaryParser, nTracks) {\n\t  var tileStart = binaryParser.getInt();\n\t  var span = binaryParser.getFloat();\n\t  var nPositions = binaryParser.getInt();\n\t  var start = [];\n\t  var np = nPositions;\n\n\t  while (np-- > 0) {\n\t    start.push(binaryParser.getInt());\n\t  }\n\n\t  var nS = binaryParser.getInt(); // # of samples, ignored but should === nTracks\n\n\t  var data = [];\n\t  var nt = nTracks;\n\n\t  while (nt-- > 0) {\n\t    np = nPositions;\n\t    var dtrack = [];\n\n\t    while (np-- > 0) {\n\t      dtrack.push(binaryParser.getFloat());\n\t    }\n\n\t    data.push(dtrack);\n\t  }\n\n\t  return {\n\t    type: \"variableStep\",\n\t    tileStart: tileStart,\n\t    span: span,\n\t    start: start,\n\t    data: data,\n\t    nTracks: nTracks,\n\t    nPositions: nPositions\n\t  };\n\t}\n\n\tfunction createBed(binaryParser, nTracks, type) {\n\t  var nPositions = binaryParser.getInt();\n\t  var n = nPositions;\n\t  var start = [];\n\n\t  while (n-- > 0) {\n\t    start.push(binaryParser.getInt());\n\t  }\n\n\t  n = nPositions;\n\t  var end = [];\n\n\t  while (n-- > 0) {\n\t    end.push(binaryParser.getInt());\n\t  }\n\n\t  var nS = binaryParser.getInt(); // # of samples, ignored but should === nTracks\n\n\t  var data = [];\n\t  var nt = nTracks;\n\n\t  while (nt-- > 0) {\n\t    var np = nPositions;\n\t    var dtrack = [];\n\n\t    while (np-- > 0) {\n\t      dtrack.push(binaryParser.getFloat());\n\t    }\n\n\t    data.push(dtrack);\n\t  }\n\n\t  if (type === \"bedWithName\") {\n\t    n = nPositions;\n\t    var _name3 = [];\n\n\t    while (n-- > 0) {\n\t      _name3.push(binaryParser.getString());\n\t    }\n\t  }\n\n\t  return {\n\t    type: type,\n\t    start: start,\n\t    end: end,\n\t    data: data,\n\t    name: name,\n\t    nTracks: nTracks,\n\t    nPositions: nPositions\n\t  };\n\t}\n\n\tTDFReader.prototype.readTiles = /*#__PURE__*/function () {\n\t  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(tileIndeces, nTracks) {\n\t    var firstEntry, lastEntry, position, size, data, tiles, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, indexEntry, start, _size2, tileData, inflate, plain, binaryParser, type, tile;\n\n\t    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t      while (1) {\n\t        switch (_context5.prev = _context5.next) {\n\t          case 0:\n\t            tileIndeces.sort(function (a, b) {\n\t              return a.position - b.position;\n\t            });\n\t            tileIndeces = tileIndeces.filter(function (idx) {\n\t              return idx.size > 0;\n\t            });\n\n\t            if (!(tileIndeces.length === 0)) {\n\t              _context5.next = 4;\n\t              break;\n\t            }\n\n\t            return _context5.abrupt(\"return\", Promise.resolve([]));\n\n\t          case 4:\n\t            firstEntry = tileIndeces[0];\n\t            lastEntry = tileIndeces[tileIndeces.length - 1];\n\t            position = firstEntry.position;\n\t            size = lastEntry.position + lastEntry.size - position;\n\t            _context5.next = 10;\n\t            return igvxhr.loadArrayBuffer(this.path, buildOptions(this.config, {\n\t              range: {\n\t                start: position,\n\t                size: size\n\t              }\n\t            }));\n\n\t          case 10:\n\t            data = _context5.sent;\n\t            tiles = []; // Loop through and decode tiles\n\n\t            _iteratorNormalCompletion = true;\n\t            _didIteratorError = false;\n\t            _iteratorError = undefined;\n\t            _context5.prev = 15;\n\t            _iterator = tileIndeces[Symbol.iterator]();\n\n\t          case 17:\n\t            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t              _context5.next = 41;\n\t              break;\n\t            }\n\n\t            indexEntry = _step.value;\n\t            start = indexEntry.position - position;\n\t            _size2 = indexEntry.size;\n\n\t            if (!(_size2 > 0)) {\n\t              _context5.next = 38;\n\t              break;\n\t            }\n\n\t            tileData = void 0;\n\n\t            if (this.compressed) {\n\t              inflate = new Zlib.Inflate(new Uint8Array(data, start, _size2));\n\t              plain = inflate.decompress();\n\t              tileData = plain.buffer;\n\t            } else {\n\t              tileData = data.slice(start, start + _size2);\n\t            }\n\n\t            binaryParser = new BinaryParser(new DataView(tileData));\n\t            type = binaryParser.getString();\n\t            tile = void 0;\n\t            _context5.t0 = type;\n\t            _context5.next = _context5.t0 === \"fixedStep\" ? 30 : _context5.t0 === \"variableStep\" ? 32 : _context5.t0 === \"bed\" ? 34 : _context5.t0 === \"bedWithName\" ? 34 : 36;\n\t            break;\n\n\t          case 30:\n\t            tile = createFixedStep(binaryParser, nTracks);\n\t            return _context5.abrupt(\"break\", 37);\n\n\t          case 32:\n\t            tile = createVariableStep(binaryParser, nTracks);\n\t            return _context5.abrupt(\"break\", 37);\n\n\t          case 34:\n\t            tile = createBed(binaryParser, nTracks, type);\n\t            return _context5.abrupt(\"break\", 37);\n\n\t          case 36:\n\t            throw \"Unknown tile type: \" + type;\n\n\t          case 37:\n\t            tiles.push(tile);\n\n\t          case 38:\n\t            _iteratorNormalCompletion = true;\n\t            _context5.next = 17;\n\t            break;\n\n\t          case 41:\n\t            _context5.next = 47;\n\t            break;\n\n\t          case 43:\n\t            _context5.prev = 43;\n\t            _context5.t1 = _context5[\"catch\"](15);\n\t            _didIteratorError = true;\n\t            _iteratorError = _context5.t1;\n\n\t          case 47:\n\t            _context5.prev = 47;\n\t            _context5.prev = 48;\n\n\t            if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t              _iterator.return();\n\t            }\n\n\t          case 50:\n\t            _context5.prev = 50;\n\n\t            if (!_didIteratorError) {\n\t              _context5.next = 53;\n\t              break;\n\t            }\n\n\t            throw _iteratorError;\n\n\t          case 53:\n\t            return _context5.finish(50);\n\n\t          case 54:\n\t            return _context5.finish(47);\n\n\t          case 55:\n\t            return _context5.abrupt(\"return\", tiles);\n\n\t          case 56:\n\t          case \"end\":\n\t            return _context5.stop();\n\t        }\n\t      }\n\t    }, _callee5, this, [[15, 43, 47, 55], [48,, 50, 54]]);\n\t  }));\n\n\t  return function (_x5, _x6) {\n\t    return _ref5.apply(this, arguments);\n\t  };\n\t}();\n\n\tTDFReader.prototype.readTile = /*#__PURE__*/function () {\n\t  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(indexEntry, nTracks) {\n\t    var data, inflate, plain, binaryParser, type;\n\t    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n\t      while (1) {\n\t        switch (_context6.prev = _context6.next) {\n\t          case 0:\n\t            _context6.next = 2;\n\t            return igvxhr.loadArrayBuffer(this.path, buildOptions(this.config, {\n\t              range: {\n\t                start: indexEntry.position,\n\t                size: indexEntry.size\n\t              }\n\t            }));\n\n\t          case 2:\n\t            data = _context6.sent;\n\n\t            if (this.compressed) {\n\t              inflate = new Zlib.Inflate(new Uint8Array(data));\n\t              plain = inflate.decompress();\n\t              data = plain.buffer;\n\t            }\n\n\t            binaryParser = new BinaryParser(new DataView(data));\n\t            type = binaryParser.getString();\n\t            _context6.t0 = type;\n\t            _context6.next = _context6.t0 === \"fixedStep\" ? 9 : _context6.t0 === \"variableStep\" ? 10 : _context6.t0 === \"bed\" ? 11 : _context6.t0 === \"bedWithName\" ? 11 : 12;\n\t            break;\n\n\t          case 9:\n\t            return _context6.abrupt(\"return\", createFixedStep(binaryParser, nTracks));\n\n\t          case 10:\n\t            return _context6.abrupt(\"return\", createVariableStep(binaryParser, nTracks));\n\n\t          case 11:\n\t            return _context6.abrupt(\"return\", createBed(binaryParser, nTracks, type));\n\n\t          case 12:\n\t            throw \"Unknown tile type: \" + type;\n\n\t          case 13:\n\t          case \"end\":\n\t            return _context6.stop();\n\t        }\n\t      }\n\t    }, _callee6, this);\n\t  }));\n\n\t  return function (_x7, _x8) {\n\t    return _ref6.apply(this, arguments);\n\t  };\n\t}();\n\n\tvar TDFSource = function TDFSource(config, genome) {\n\t  this.genome = genome;\n\t  this.windowFunction = config.windowFunction || \"mean\";\n\t  this.reader = new TDFReader(config, genome);\n\t};\n\n\tTDFSource.prototype.getFeatures = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(chr, bpStart, bpEnd, bpPerPixel) {\n\t    var genomicInterval, genome, group, zoom, queryChr, maxZoom, wf, dataset, tileWidth, startTile, endTile, NTRACKS, tiles, features, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, tile, getRootGroup, _getRootGroup;\n\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            _getRootGroup = function _ref3() {\n\t              _getRootGroup = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t                return regeneratorRuntime.wrap(function _callee$(_context) {\n\t                  while (1) {\n\t                    switch (_context.prev = _context.next) {\n\t                      case 0:\n\t                        if (!this.rootGroup) {\n\t                          _context.next = 4;\n\t                          break;\n\t                        }\n\n\t                        return _context.abrupt(\"return\", this.rootGroup);\n\n\t                      case 4:\n\t                        _context.next = 6;\n\t                        return this.reader.readRootGroup();\n\n\t                      case 6:\n\t                        this.rootGroup = _context.sent;\n\t                        return _context.abrupt(\"return\", this.rootGroup);\n\n\t                      case 8:\n\t                      case \"end\":\n\t                        return _context.stop();\n\t                    }\n\t                  }\n\t                }, _callee, this);\n\t              }));\n\t              return _getRootGroup.apply(this, arguments);\n\t            };\n\n\t            getRootGroup = function _ref2() {\n\t              return _getRootGroup.apply(this, arguments);\n\t            };\n\n\t            _context2.next = 4;\n\t            return getRootGroup.call(this);\n\n\t          case 4:\n\t            genomicInterval = new GenomicInterval(chr, bpStart, bpEnd);\n\t            genome = this.genome;\n\n\t            if (!(chr.toLowerCase() === \"all\")) {\n\t              _context2.next = 8;\n\t              break;\n\t            }\n\n\t            return _context2.abrupt(\"return\", []);\n\n\t          case 8:\n\t            genomicInterval.bpPerPixel = bpPerPixel;\n\t            _context2.next = 11;\n\t            return getRootGroup.call(this);\n\n\t          case 11:\n\t            group = _context2.sent;\n\t            zoom = zoomLevelForScale$1(chr, bpPerPixel, genome);\n\t            queryChr = this.reader.chrAliasTable[chr];\n\t            maxZoom = this.reader.maxZoom;\n\t            if (queryChr === undefined) queryChr = chr;\n\t            if (maxZoom === undefined) maxZoom = -1;\n\t            wf = zoom > maxZoom ? \"raw\" : this.windowFunction;\n\t            _context2.next = 20;\n\t            return this.reader.readDataset(queryChr, wf, zoom);\n\n\t          case 20:\n\t            dataset = _context2.sent;\n\n\t            if (!(dataset == null)) {\n\t              _context2.next = 23;\n\t              break;\n\t            }\n\n\t            return _context2.abrupt(\"return\", []);\n\n\t          case 23:\n\t            tileWidth = dataset.tileWidth;\n\t            startTile = Math.floor(bpStart / tileWidth);\n\t            endTile = Math.floor(bpEnd / tileWidth);\n\t            NTRACKS = 1; // TODO read this\n\n\t            _context2.next = 29;\n\t            return this.reader.readTiles(dataset.tiles.slice(startTile, endTile + 1), NTRACKS);\n\n\t          case 29:\n\t            tiles = _context2.sent;\n\t            features = [];\n\t            _iteratorNormalCompletion = true;\n\t            _didIteratorError = false;\n\t            _iteratorError = undefined;\n\t            _context2.prev = 34;\n\t            _iterator = tiles[Symbol.iterator]();\n\n\t          case 36:\n\t            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t              _context2.next = 51;\n\t              break;\n\t            }\n\n\t            tile = _step.value;\n\t            _context2.t0 = tile.type;\n\t            _context2.next = _context2.t0 === \"bed\" ? 41 : _context2.t0 === \"variableStep\" ? 43 : _context2.t0 === \"fixedStep\" ? 45 : 47;\n\t            break;\n\n\t          case 41:\n\t            decodeBedTile(tile, chr, bpStart, bpEnd, bpPerPixel, features);\n\t            return _context2.abrupt(\"break\", 48);\n\n\t          case 43:\n\t            decodeVaryTile(tile, chr, bpStart, bpEnd, bpPerPixel, features);\n\t            return _context2.abrupt(\"break\", 48);\n\n\t          case 45:\n\t            decodeFixedTile(tile, chr, bpStart, bpEnd, bpPerPixel, features);\n\t            return _context2.abrupt(\"break\", 48);\n\n\t          case 47:\n\t            throw \"Unknown tile type: \" + tile.type;\n\n\t          case 48:\n\t            _iteratorNormalCompletion = true;\n\t            _context2.next = 36;\n\t            break;\n\n\t          case 51:\n\t            _context2.next = 57;\n\t            break;\n\n\t          case 53:\n\t            _context2.prev = 53;\n\t            _context2.t1 = _context2[\"catch\"](34);\n\t            _didIteratorError = true;\n\t            _iteratorError = _context2.t1;\n\n\t          case 57:\n\t            _context2.prev = 57;\n\t            _context2.prev = 58;\n\n\t            if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t              _iterator.return();\n\t            }\n\n\t          case 60:\n\t            _context2.prev = 60;\n\n\t            if (!_didIteratorError) {\n\t              _context2.next = 63;\n\t              break;\n\t            }\n\n\t            throw _iteratorError;\n\n\t          case 63:\n\t            return _context2.finish(60);\n\n\t          case 64:\n\t            return _context2.finish(57);\n\n\t          case 65:\n\t            features.sort(function (a, b) {\n\t              return a.start - b.start;\n\t            });\n\t            return _context2.abrupt(\"return\", features);\n\n\t          case 67:\n\t          case \"end\":\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this, [[34, 53, 57, 65], [58,, 60, 64]]);\n\t  }));\n\n\t  return function (_x, _x2, _x3, _x4) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tTDFSource.prototype.supportsWholeGenome = function () {\n\t  return false;\n\t};\n\n\tfunction decodeBedTile(tile, chr, bpStart, bpEnd, bpPerPixel, features) {\n\t  var nPositions = tile.nPositions;\n\t  var starts = tile.start;\n\t  var ends = tile.end;\n\t  var data = tile.data[0]; // Single track for now\n\n\t  for (var i = 0; i < nPositions; i++) {\n\t    var s = starts[i];\n\t    var e = ends[i];\n\t    if (e < bpStart) continue;\n\t    if (s > bpEnd) break;\n\t    features.push({\n\t      chr: chr,\n\t      start: s,\n\t      end: e,\n\t      value: data[i]\n\t    });\n\t  }\n\t}\n\n\tfunction decodeVaryTile(tile, chr, bpStart, bpEnd, bpPerPixel, features) {\n\t  var nPositions = tile.nPositions;\n\t  var starts = tile.start;\n\t  var span = tile.span;\n\t  var data = tile.data[0]; // Single track for now\n\n\t  for (var i = 0; i < nPositions; i++) {\n\t    var s = starts[i];\n\t    var e = s + span;\n\t    if (e < bpStart) continue;\n\t    if (s > bpEnd) break;\n\t    features.push({\n\t      chr: chr,\n\t      start: s,\n\t      end: e,\n\t      value: data[i]\n\t    });\n\t  }\n\t}\n\n\tfunction decodeFixedTile(tile, chr, bpStart, bpEnd, bpPerPixel, features) {\n\t  var nPositions = tile.nPositions;\n\t  var s = tile.start;\n\t  var span = tile.span;\n\t  var data = tile.data[0]; // Single track for now\n\n\t  for (var i = 0; i < nPositions; i++) {\n\t    var e = s + span;\n\t    if (s > bpEnd) break;\n\n\t    if (e >= bpStart) {\n\t      if (!Number.isNaN(data[i])) {\n\t        features.push({\n\t          chr: chr,\n\t          start: s,\n\t          end: e,\n\t          value: data[i]\n\t        });\n\t      }\n\t    }\n\n\t    s = e;\n\t  }\n\t}\n\n\tvar log2 = Math.log(2);\n\n\tfunction zoomLevelForScale$1(chr, bpPerPixel, genome) {\n\t  // Convert bpPerPixel to IGV \"zoom\" level.   This is a bit convoluted,  IGV computes zoom levels assuming\n\t  // display in a 700 pixel window.  The fully zoomed out view of a chromosome is zoom level \"0\".\n\t  // Zoom level 1 is magnified 2X,  and so forth\n\t  var chrSize = genome.getChromosome(chr).bpLength;\n\t  return Math.ceil(Math.log(Math.max(0, chrSize / (bpPerPixel * 700))) / log2);\n\t}\n\n\tfunction paintAxis(ctx, pixelWidth, pixelHeight) {\n\t  var x1,\n\t      x2,\n\t      y1,\n\t      y2,\n\t      a,\n\t      b,\n\t      reference,\n\t      shim,\n\t      font = {\n\t    'font': 'normal 10px Arial',\n\t    'textAlign': 'right',\n\t    'strokeStyle': \"black\"\n\t  };\n\n\t  if (undefined === this.dataRange || undefined === this.dataRange.max || undefined === this.dataRange.min) {\n\t    return;\n\t  }\n\n\t  IGVGraphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {\n\t    'fillStyle': \"rgb(255, 255, 255)\"\n\t  });\n\t  reference = 0.95 * pixelWidth;\n\t  x1 = reference - 8;\n\t  x2 = reference; //shim = 0.5 * 0.125;\n\n\t  shim = .01;\n\t  y1 = y2 = shim * pixelHeight;\n\t  a = {\n\t    x: x2,\n\t    y: y1\n\t  }; // tick\n\n\t  IGVGraphics.strokeLine(ctx, x1, y1, x2, y2, font);\n\t  IGVGraphics.fillText(ctx, prettyPrint(this.dataRange.max), x1 + 4, y1 + 12, font); //shim = 0.25 * 0.125;\n\n\t  y1 = y2 = (1.0 - shim) * pixelHeight;\n\t  b = {\n\t    x: x2,\n\t    y: y1\n\t  }; // tick\n\n\t  IGVGraphics.strokeLine(ctx, x1, y1, x2, y2, font);\n\t  IGVGraphics.fillText(ctx, prettyPrint(this.dataRange.min), x1 + 4, y1 - 4, font);\n\t  IGVGraphics.strokeLine(ctx, a.x, a.y, b.x, b.y, font);\n\n\t  function prettyPrint(number) {\n\t    // if number >= 100, show whole number\n\t    // if >= 1 show 1 significant digits\n\t    // if <  1 show 2 significant digits\n\t    if (number === 0) {\n\t      return \"0\";\n\t    } else if (Math.abs(number) >= 10) {\n\t      return number.toFixed();\n\t    } else if (Math.abs(number) >= 1) {\n\t      return number.toFixed(1);\n\t    } else {\n\t      return number.toFixed(2);\n\t    }\n\t  }\n\t}\n\n\tvar dataRangeMenuItem = MenuUtils.dataRangeMenuItem;\n\tvar WigTrack = extend(TrackBase, function (config, browser) {\n\t  this.type = \"wig\";\n\t  this.featureType = 'numeric'; // Default color, might be overridden by track line\n\n\t  if (config.color === undefined) {\n\t    config.color = \"rgb(150,150,150)\";\n\t  }\n\n\t  if (config.height === undefined) {\n\t    config.height = 50;\n\t  }\n\n\t  TrackBase.call(this, config, browser);\n\t  var format = config.format ? config.format.toLowerCase() : config.format;\n\n\t  if (\"bigwig\" === format) {\n\t    this.featureSource = new BWSource(config, browser.genome);\n\t  } else if (\"tdf\" === format) {\n\t    this.featureSource = new TDFSource(config, browser.genome);\n\t  } else {\n\t    this.featureSource = new FeatureSource(config, browser.genome);\n\t  }\n\n\t  this.autoscale = config.autoscale || config.max === undefined;\n\n\t  if (!this.autoscale) {\n\t    this.dataRange = {\n\t      min: config.min || 0,\n\t      max: config.max\n\t    };\n\t  }\n\n\t  this.windowFunction = config.windowFunction || \"mean\";\n\t  this.paintAxis = paintAxis;\n\t  this.graphType = config.graphType || \"bar\";\n\t});\n\tWigTrack.prototype.postInit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t  var header;\n\t  return regeneratorRuntime.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          _context.next = 2;\n\t          return this.getFileHeader();\n\n\t        case 2:\n\t          header = _context.sent;\n\t          if (header) this.setTrackProperties(header);\n\n\t        case 4:\n\t        case \"end\":\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t}));\n\n\tWigTrack.prototype.getFeatures = /*#__PURE__*/function () {\n\t  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(chr, bpStart, bpEnd, bpPerPixel) {\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            return _context2.abrupt(\"return\", this.featureSource.getFeatures(chr, bpStart, bpEnd, bpPerPixel, this.windowFunction));\n\n\t          case 1:\n\t          case \"end\":\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3, _x4) {\n\t    return _ref2.apply(this, arguments);\n\t  };\n\t}();\n\n\tWigTrack.prototype.menuItemList = function () {\n\t  var self = this,\n\t      menuItems = [];\n\t  menuItems.push(dataRangeMenuItem(this.trackView));\n\t  menuItems.push({\n\t    object: createCheckbox(\"Autoscale\", self.autoscale),\n\t    click: function click() {\n\t      self.autoscale = !self.autoscale;\n\t      self.config.autoscale = self.autoscale;\n\t      self.trackView.setDataRange(undefined, undefined, self.autoscale);\n\t    }\n\t  });\n\t  return menuItems;\n\t};\n\n\tWigTrack.prototype.getFileHeader = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n\t  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t    while (1) {\n\t      switch (_context3.prev = _context3.next) {\n\t        case 0:\n\t          if (!(typeof this.featureSource.getFileHeader === \"function\")) {\n\t            _context3.next = 4;\n\t            break;\n\t          }\n\n\t          _context3.next = 3;\n\t          return this.featureSource.getFileHeader();\n\n\t        case 3:\n\t          this.header = _context3.sent;\n\n\t        case 4:\n\t          return _context3.abrupt(\"return\", this.header);\n\n\t        case 5:\n\t        case \"end\":\n\t          return _context3.stop();\n\t      }\n\t    }\n\t  }, _callee3, this);\n\t}));\n\n\tWigTrack.prototype.draw = function (options) {\n\t  var self = this;\n\t  var features = options.features;\n\t  var ctx = options.context;\n\t  var bpPerPixel = options.bpPerPixel;\n\t  var bpStart = options.bpStart;\n\t  var pixelWidth = options.pixelWidth;\n\t  var pixelHeight = options.pixelHeight;\n\t  var bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\t  var lastPixelEnd = -1;\n\t  var lastValue = -1;\n\t  var lastNegValue = 1;\n\t  var baselineColor;\n\n\t  if (typeof self.color === \"string\" && self.color.startsWith(\"rgb(\")) {\n\t    baselineColor = IGVColor.addAlpha(self.color, 0.1);\n\t  }\n\n\t  var yScale = function yScale(yValue) {\n\t    return (self.dataRange.max - yValue) / (self.dataRange.max - self.dataRange.min) * pixelHeight;\n\t  };\n\n\t  var getX = function getX(feature) {\n\t    var x = Math.floor((feature.start - bpStart) / bpPerPixel);\n\t    return x;\n\t  };\n\n\t  var getWidth = function getWidth(feature, x) {\n\t    var rectEnd = Math.ceil((feature.end - bpStart) / bpPerPixel);\n\t    return Math.max(1, rectEnd - x);\n\t  };\n\n\t  var drawGuideLines = function drawGuideLines(options) {\n\t    if (self.config.hasOwnProperty('guideLines')) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = self.config.guideLines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var line = _step.value;\n\n\t          if (line.hasOwnProperty('color') && line.hasOwnProperty('y') && line.hasOwnProperty('dotted')) {\n\t            var y = yScale(line.y);\n\t            var props = {\n\t              'strokeStyle': line['color'],\n\t              'strokeWidth': 2\n\t            };\n\t            if (line['dotted']) IGVGraphics.dashedLine(options.context, 0, y, options.pixelWidth, y, 5, props);else IGVGraphics.strokeLine(options.context, 0, y, options.pixelWidth, y, props);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  if (features && features.length > 0) {\n\t    if (self.dataRange.min === undefined) self.dataRange.min = 0; // Max can be less than min if config.min is set but max left to autoscale.   If that's the case there is\n\t    // nothing to paint.\n\n\t    if (self.dataRange.max > self.dataRange.min) {\n\t      if (renderFeature.end < bpStart) return;\n\t      if (renderFeature.start > bpEnd) return;\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\n\t      try {\n\t        for (var _iterator2 = features[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var f = _step2.value;\n\t          renderFeature(f);\n\t        } // If the track includes negative values draw a baseline\n\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\n\t      if (self.dataRange.min < 0) {\n\t        var basepx = self.dataRange.max / (self.dataRange.max - self.dataRange.min) * options.pixelHeight;\n\t        IGVGraphics.strokeLine(ctx, 0, basepx, options.pixelWidth, basepx, {\n\t          strokeStyle: baselineColor\n\t        });\n\t      }\n\t    }\n\t  }\n\n\t  drawGuideLines(options);\n\n\t  function renderFeature(feature) {\n\t    if (feature.value < self.dataRange.min) return;\n\t    var y = yScale(feature.value);\n\t    var x = getX(feature);\n\t    if (isNaN(x)) return;\n\t    var height = yScale(0) - y;\n\t    var width = getWidth(feature, x);\n\t    var c = feature.value < 0 && self.altColor ? self.altColor : self.color;\n\t    var color = typeof c === \"function\" ? c(feature.value) : c;\n\n\t    if (self.graphType === \"points\") {\n\t      var pointSize = self.config.pointSize || 3;\n\t      var px = x + width / 2;\n\t      IGVGraphics.fillCircle(ctx, px, y, pointSize / 2, {\n\t        \"fillStyle\": color,\n\t        \"strokeStyle\": color\n\t      });\n\t    } else {\n\t      var pixelEnd = x + width;\n\n\t      if (pixelEnd > lastPixelEnd || feature.value >= 0 && feature.value > lastValue || feature.value < 0 && feature.value < lastNegValue) {\n\t        IGVGraphics.fillRect(ctx, x, y, width, height, {\n\t          fillStyle: color\n\t        });\n\t      }\n\n\t      lastValue = feature.value;\n\t      lastPixelEnd = pixelEnd;\n\t    }\n\t  }\n\t};\n\n\tWigTrack.prototype.popupData = function (clickState, features) {\n\t  // We use the featureCache property rather than method to avoid async load.  If the\n\t  // feature is not already loaded this won't work,  but the user wouldn't be mousing over it either.\n\t  if (!features) features = this.clickedFeatures(clickState);\n\n\t  if (features && features.length > 0) {\n\t    var genomicLocation = clickState.genomicLocation;\n\t    var referenceFrame = clickState.viewport.genomicState.referenceFrame;\n\t    var popupData = []; // We need some tolerance around genomicLocation, start with +/- 2 pixels\n\n\t    var tolerance = 2 * referenceFrame.bpPerPixel;\n\t    var selectedFeature = binarySearch(features, genomicLocation, tolerance);\n\n\t    if (selectedFeature) {\n\t      var posString = selectedFeature.end - selectedFeature.start === 1 ? numberFormatter(selectedFeature.start + 1) : numberFormatter(selectedFeature.start + 1) + \"-\" + numberFormatter(selectedFeature.end);\n\t      popupData.push({\n\t        name: \"Position:\",\n\t        value: posString\n\t      });\n\t      popupData.push({\n\t        name: \"Value:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\",\n\t        value: numberFormatter(selectedFeature.value)\n\t      });\n\t    }\n\n\t    return popupData;\n\t  } else {\n\t    return [];\n\t  }\n\t};\n\t/**\n\t * Called when the track is removed.  Do any needed cleanup here\n\t */\n\n\n\tWigTrack.prototype.dispose = function () {\n\t  this.trackView = undefined;\n\t};\n\t/**\n\t * Return the closest feature to the genomic position +/- the specified tolerance.  Closest is defined\n\t * by the minimum of the distance between position and start or end of the feature.\n\t *\n\t * @param features\n\t * @param position\n\t * @returns {*}\n\t */\n\n\n\tfunction binarySearch(features, position, tolerance) {\n\t  var startIndex = 0,\n\t      stopIndex = features.length - 1,\n\t      index = startIndex + stopIndex >> 1,\n\t      candidateFeature,\n\t      tmp; // Use binary search to get the index of at least 1 feature in the click tolerance bounds\n\n\t  while (!test(features[index], position, tolerance) && startIndex < stopIndex) {\n\t    if (position < features[index].start) {\n\t      stopIndex = index - 1;\n\t    } else if (position > features[index].end) {\n\t      startIndex = index + 1;\n\t    }\n\n\t    index = startIndex + stopIndex >> 1;\n\t  }\n\n\t  if (test(features[index], position, tolerance)) {\n\t    candidateFeature = features[index];\n\t    if (test(candidateFeature, position, 0)) return candidateFeature; // Else, find closest feature to click\n\n\t    tmp = index;\n\n\t    while (tmp-- >= 0) {\n\t      if (!test(features[tmp]), tolerance) {\n\t        break;\n\t      }\n\n\t      if (test(features[tmp], position, 0)) {\n\t        return features[tmp];\n\t      }\n\n\t      if (delta(features[tmp], position) < delta(candidateFeature, position)) {\n\t        candidateFeature = features[tmp];\n\t      }\n\n\t      tmp = index;\n\n\t      while (tmp++ < features.length) {\n\t        if (!test(features[tmp]), tolerance) {\n\t          break;\n\t        }\n\n\t        if (test(features[tmp], position, 0)) {\n\t          return features[tmp];\n\t        }\n\n\t        if (delta(features[tmp], position) < delta(candidateFeature, position)) {\n\t          candidateFeature = features[tmp];\n\t        }\n\t      }\n\t    }\n\n\t    return candidateFeature;\n\t  } else {\n\t    return undefined;\n\t  }\n\n\t  function test(feature, position, tolerance) {\n\t    return position >= feature.start - tolerance && position <= feature.end + tolerance;\n\t  }\n\n\t  function delta(feature, position) {\n\t    return Math.min(Math.abs(feature.start - position), Math.abs(feature.end - position));\n\t  }\n\t}\n\n\tWigTrack.prototype.getState = function () {\n\t  var config = this.config;\n\t  config.autoscale = this.autoscale;\n\n\t  if (!this.autoscale && this.dataRange) {\n\t    config.min = this.dataRange.min;\n\t    config.max = this.dataRange.max;\n\t  }\n\n\t  return config;\n\t};\n\n\tWigTrack.prototype.supportsWholeGenome = function () {\n\t  if (typeof this.featureSource.supportsWholeGenome === 'function') {\n\t    return this.featureSource.supportsWholeGenome();\n\t  } else {\n\t    return false;\n\t  }\n\t};\n\n\t/**\n\t *\n\t * @param cs - object containing\n\t * 1) array of threshold values defining bin boundaries in ascending order\n\t * 2) array of colors for bins  (length == thresholds.length + 1)\n\t * @constructor\n\t */\n\tfunction BinnedColorScale(cs) {\n\t  this.thresholds = cs.thresholds;\n\t  this.colors = cs.colors;\n\t}\n\n\tBinnedColorScale.prototype.getColor = function (value) {\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = this.thresholds[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var threshold = _step.value;\n\n\t      if (value < threshold) {\n\t        return this.colors[this.thresholds.indexOf(threshold)];\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return this.colors[this.colors.length - 1];\n\t};\n\t/**\n\t *\n\t * @param scale - object with the following properties\n\t *           low\n\t *           lowR\n\t *           lowG\n\t *           lowB\n\t *           high\n\t *           highR\n\t *           highG\n\t *           highB\n\t *\n\t * @constructor\n\t */\n\n\n\tfunction GradientColorScale(scale) {\n\t  this.scale = scale;\n\t  this.lowColor = \"rgb(\" + scale.lowR + \",\" + scale.lowG + \",\" + scale.lowB + \")\";\n\t  this.highColor = \"rgb(\" + scale.highR + \",\" + scale.highG + \",\" + scale.highB + \")\";\n\t  this.diff = scale.high - scale.low;\n\t}\n\n\tGradientColorScale.prototype.getColor = function (value) {\n\t  var scale = this.scale,\n\t      r,\n\t      g,\n\t      b,\n\t      frac;\n\t  if (value <= scale.low) return this.lowColor;else if (value >= scale.high) return this.highColor;\n\t  frac = (value - scale.low) / this.diff;\n\t  r = Math.floor(scale.lowR + frac * (scale.highR - scale.lowR));\n\t  g = Math.floor(scale.lowG + frac * (scale.highG - scale.lowG));\n\t  b = Math.floor(scale.lowB + frac * (scale.highB - scale.lowB));\n\t  return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\t};\n\n\tvar SegTrack = extend(TrackBase, function (config, browser) {\n\t  TrackBase.call(this, config, browser);\n\t  this.isLog = config.isLog;\n\t  this.displayMode = config.displayMode || \"SQUISHED\"; // EXPANDED | SQUISHED\n\n\t  this.maxHeight = config.maxHeight || 500;\n\t  this.squishedRowHeight = config.sampleSquishHeight || config.squishedRowHeight || 2;\n\t  this.expandedRowHeight = config.sampleExpandHeight || config.expandedRowHeight || 12;\n\t  this.posColorScale = config.posColorScale || new GradientColorScale({\n\t    low: 0.1,\n\t    lowR: 255,\n\t    lowG: 255,\n\t    lowB: 255,\n\t    high: 1.5,\n\t    highR: 255,\n\t    highG: 0,\n\t    highB: 0\n\t  });\n\t  this.negColorScale = config.negColorScale || new GradientColorScale({\n\t    low: -1.5,\n\t    lowR: 0,\n\t    lowG: 0,\n\t    lowB: 255,\n\t    high: -0.1,\n\t    highR: 255,\n\t    highG: 255,\n\t    highB: 255\n\t  });\n\t  this.sampleKeys = []; //   this.featureSource = config.sourceType === \"bigquery\" ?\n\t  //       new igv.BigQueryFeatureSource(this.config) :\n\n\t  this.featureSource = new FeatureSource(this.config, browser.genome);\n\n\t  if (config.sort) {\n\t    var sort = config.sort;\n\t    this.sortSamples(sort.chr, sort.start, sort.end, sort.direction);\n\t  }\n\t});\n\n\tSegTrack.prototype.menuItemList = function () {\n\t  var self = this;\n\t  var menuItems = [];\n\t  var lut = {\n\t    \"SQUISHED\": \"Squish\",\n\t    \"EXPANDED\": \"Expand\",\n\t    \"FILL\": \"Fill\"\n\t  };\n\t  menuItems.push(\"<hr/>\");\n\t  menuItems.push(\"Sample Height\");\n\t  [\"SQUISHED\", \"EXPANDED\", \"FILL\"].forEach(function (displayMode) {\n\t    menuItems.push({\n\t      object: createCheckbox(lut[displayMode], displayMode === self.displayMode),\n\t      click: function click() {\n\t        self.displayMode = displayMode;\n\t        self.config.displayMode = displayMode;\n\t        self.trackView.checkContentHeight();\n\t        self.trackView.repaintViews();\n\t      }\n\t    });\n\t  });\n\t  return menuItems;\n\t};\n\n\tSegTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\t  return this.featureSource.getFeatures(chr, bpStart, bpEnd);\n\t};\n\n\tSegTrack.prototype.draw = function (options) {\n\t  var self = this;\n\t  var v2 = IGVMath.log2(2);\n\t  var ctx = options.context;\n\t  var pixelWidth = options.pixelWidth;\n\t  var pixelHeight = options.pixelHeight;\n\t  IGVGraphics.fillRect(ctx, 0, options.pixelTop, pixelWidth, pixelHeight, {\n\t    'fillStyle': \"rgb(255, 255, 255)\"\n\t  });\n\t  var featureList = options.features;\n\n\t  if (featureList && featureList.length > 0) {\n\t    if (self.isLog === undefined) checkForLog(featureList);\n\t    var bpPerPixel = options.bpPerPixel;\n\t    var bpStart = options.bpStart;\n\t    var bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\t    var xScale = bpPerPixel;\n\t    this.updateSampleKeys(featureList); // Create a map for fast id -> row lookup\n\n\t    var samples = {};\n\t    this.sampleKeys.forEach(function (id, index) {\n\t      samples[id] = index;\n\t    });\n\t    var sampleHeight;\n\t    var border;\n\n\t    switch (this.displayMode) {\n\t      case \"FILL\":\n\t        sampleHeight = options.pixelHeight / this.sampleKeys.length;\n\t        border = 0;\n\t        break;\n\n\t      case \"SQUISHED\":\n\t        sampleHeight = this.squishedRowHeight;\n\t        border = 0;\n\t        break;\n\n\t      default:\n\t        // EXPANDED\n\t        sampleHeight = this.expandedRowHeight;\n\t        border = 1;\n\t    }\n\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = featureList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var segment = _step.value;\n\t        if (segment.end < bpStart) continue;\n\t        if (segment.start > bpEnd) break;\n\t        var sampleKey = segment.sampleKey || segment.sample;\n\t        segment.row = samples[sampleKey];\n\t        var y = samples[sampleKey] * sampleHeight + border;\n\t        var value = segment.value;\n\n\t        if (!self.isLog) {\n\t          value = IGVMath.log2(value / 2);\n\t        }\n\n\t        var color = void 0;\n\n\t        if (value < -0.1) {\n\t          color = self.negColorScale.getColor(value);\n\t        } else if (value > 0.1) {\n\t          color = self.posColorScale.getColor(value);\n\t        } else {\n\t          color = \"white\";\n\t        }\n\n\t        var segmentStart = Math.max(segment.start, bpStart); // const segmentStart = segment.start;\n\n\t        var px = Math.round((segmentStart - bpStart) / xScale);\n\t        var segmentEnd = Math.min(segment.end, bpEnd); // const segmentEnd = segment.end;\n\n\t        var px1 = Math.round((segmentEnd - bpStart) / xScale);\n\t        var pw = Math.max(1, px1 - px); // const sign = px < 0 ? '-' : '+';\n\t        // console.log('start ' + sign + numberFormatter(Math.abs(px)) + ' width ' + numberFormatter(pw) + ' end ' + numberFormatter(px + pw));\n\n\t        ctx.fillStyle = color; // Enhance the contrast of sub-pixel displays (FILL mode) by adjusting sample height.\n\n\t        var sh = sampleHeight;\n\n\t        if (sampleHeight < 0.25) {\n\t          var f = 0.1 + 2 * Math.abs(value);\n\t          sh = Math.min(1, f * sampleHeight);\n\t        }\n\n\t        segment.pixelRect = {\n\t          x: px,\n\t          y: y,\n\t          w: pw,\n\t          h: sh - 2 * border\n\t        };\n\t        ctx.fillRect(px, y, pw, sh - 2 * border); //IGVGraphics.fillRect(ctx, px, y, pw, sampleHeight - 2 * border, {fillStyle: color});\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  function checkForLog(featureList) {\n\t    if (self.isLog === undefined) {\n\t      self.isLog = false;\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\n\t      try {\n\t        for (var _iterator2 = featureList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var feature = _step2.value;\n\n\t          if (feature.value < 0) {\n\t            self.isLog = true;\n\t            return;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t/**\n\t * Optional method to compute pixel height to accomodate the list of features.  The implementation below\n\t * has side effects (modifiying the samples hash).  This is unfortunate, but harmless.\n\t *\n\t * @param features\n\t * @returns {number}\n\t */\n\n\n\tSegTrack.prototype.computePixelHeight = function (features) {\n\t  if (!features) return 0;\n\t  var sampleHeight = \"SQUISHED\" === this.displayMode ? this.squishedRowHeight : this.expandedRowHeight;\n\t  this.updateSampleKeys(features);\n\t  return this.sampleKeys.length * sampleHeight;\n\t};\n\t/**\n\t * Sort samples by the average value over the genomic range in the direction indicated (1 = ascending, -1 descending)\n\t */\n\n\n\tSegTrack.prototype.sortSamples = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chr, bpStart, bpEnd, direction) {\n\t    var featureList, scores, bpLength, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, segment, min, max, f, sampleKey, s, d2;\n\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            _context.next = 2;\n\t            return this.featureSource.getFeatures(chr, bpStart, bpEnd);\n\n\t          case 2:\n\t            featureList = _context.sent;\n\t            this.updateSampleKeys(featureList);\n\t            scores = {};\n\t            bpLength = bpEnd - bpStart + 1; // Compute weighted average score for each sample\n\n\t            _iteratorNormalCompletion3 = true;\n\t            _didIteratorError3 = false;\n\t            _iteratorError3 = undefined;\n\t            _context.prev = 9;\n\t            _iterator3 = featureList[Symbol.iterator]();\n\n\t          case 11:\n\t            if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n\t              _context.next = 26;\n\t              break;\n\t            }\n\n\t            segment = _step3.value;\n\n\t            if (!(segment.end < bpStart)) {\n\t              _context.next = 15;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"continue\", 23);\n\n\t          case 15:\n\t            if (!(segment.start > bpEnd)) {\n\t              _context.next = 17;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"break\", 26);\n\n\t          case 17:\n\t            min = Math.max(bpStart, segment.start);\n\t            max = Math.min(bpEnd, segment.end);\n\t            f = (max - min) / bpLength;\n\t            sampleKey = segment.sampleKey || segment.sample;\n\t            s = scores[sampleKey] || 0;\n\t            scores[sampleKey] = s + f * segment.value;\n\n\t          case 23:\n\t            _iteratorNormalCompletion3 = true;\n\t            _context.next = 11;\n\t            break;\n\n\t          case 26:\n\t            _context.next = 32;\n\t            break;\n\n\t          case 28:\n\t            _context.prev = 28;\n\t            _context.t0 = _context[\"catch\"](9);\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = _context.t0;\n\n\t          case 32:\n\t            _context.prev = 32;\n\t            _context.prev = 33;\n\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t              _iterator3.return();\n\t            }\n\n\t          case 35:\n\t            _context.prev = 35;\n\n\t            if (!_didIteratorError3) {\n\t              _context.next = 38;\n\t              break;\n\t            }\n\n\t            throw _iteratorError3;\n\n\t          case 38:\n\t            return _context.finish(35);\n\n\t          case 39:\n\t            return _context.finish(32);\n\n\t          case 40:\n\t            // Now sort sample names by score\n\t            d2 = direction === \"ASC\" ? 1 : -1;\n\t            this.sampleKeys.sort(function (a, b) {\n\t              var s1 = scores[a];\n\t              var s2 = scores[b];\n\t              if (!s1) s1 = d2 * Number.MAX_VALUE;\n\t              if (!s2) s2 = d2 * Number.MAX_VALUE;\n\t              if (s1 === s2) return 0;else if (s1 > s2) return d2;else return d2 * -1;\n\t            });\n\t            this.trackView.repaintViews(); // self.trackView.$viewport.scrollTop(0);\n\n\t          case 43:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this, [[9, 28, 32, 40], [33,, 35, 39]]);\n\t  }));\n\n\t  return function (_x, _x2, _x3, _x4) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tSegTrack.prototype.clickedFeatures = function (clickState) {\n\t  var allFeatures = TrackBase.prototype.clickedFeatures.call(this, clickState);\n\t  return filterByRow(allFeatures, clickState.y);\n\n\t  function filterByRow(features, y) {\n\t    return features.filter(function (feature) {\n\t      var rect = feature.pixelRect;\n\t      return rect && y >= rect.y && y <= rect.y + rect.h;\n\t    });\n\t  }\n\t};\n\n\tSegTrack.prototype.popupData = function (clickState, featureList) {\n\t  if (!featureList) featureList = this.clickedFeatures(clickState);\n\t  var items = [];\n\t  var _iteratorNormalCompletion4 = true;\n\t  var _didIteratorError4 = false;\n\t  var _iteratorError4 = undefined;\n\n\t  try {\n\t    for (var _iterator4 = featureList[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t      var f = _step4.value;\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError4 = true;\n\t    _iteratorError4 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t        _iterator4.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError4) {\n\t        throw _iteratorError4;\n\t      }\n\t    }\n\t  }\n\n\t  featureList.forEach(function (f) {\n\t    extractPopupData(f, items);\n\t  });\n\t  return items;\n\n\t  function extractPopupData(feature, data) {\n\t    var filteredProperties = new Set(['row', 'color', 'sampleKey', 'uniqueSampleKey', 'uniquePatientKey']); // hack for whole genome properties\n\n\t    var f;\n\n\t    if (feature.hasOwnProperty('realChr')) {\n\t      f = Object.assign({}, feature);\n\t      f.chr = feature.realChr;\n\t      f.start = feature.realStart;\n\t      f.end = feature.realEnd;\n\t      delete f.realChr;\n\t      delete f.realStart;\n\t      delete f.realEnd;\n\t    } else {\n\t      f = feature;\n\t    }\n\n\t    for (var _i = 0, _Object$keys = Object.keys(f); _i < _Object$keys.length; _i++) {\n\t      var property = _Object$keys[_i];\n\n\t      if (!filteredProperties.has(property) && isSimpleType(f[property])) {\n\t        data.push({\n\t          name: property,\n\t          value: f[property]\n\t        });\n\t      }\n\t    }\n\t  }\n\t};\n\n\tSegTrack.prototype.contextMenuItemList = function (clickState) {\n\t  var self = this;\n\t  var referenceFrame = clickState.viewport.genomicState.referenceFrame;\n\t  var genomicLocation = clickState.genomicLocation; // Define a region 5 \"pixels\" wide in genomic coordinates\n\n\t  var sortDirection = this.config.sort ? this.config.sort.direction === \"ASC\" ? \"DESC\" : \"ASC\" : // Toggle from previous sort\n\t  \"DESC\";\n\t  var bpWidth = referenceFrame.toBP(2.5);\n\n\t  function sortHandler(sort) {\n\t    self.sortSamples(sort.chr, sort.start, sort.end, sort.direction);\n\t  }\n\n\t  return [{\n\t    label: 'Sort by value',\n\t    click: function click(e) {\n\t      var sort = {\n\t        direction: sortDirection,\n\t        chr: referenceFrame.chrName,\n\t        start: genomicLocation - bpWidth,\n\t        end: genomicLocation + bpWidth\n\t      };\n\t      sortHandler(sort);\n\t      self.config.sort = sort;\n\t    }\n\t  }];\n\t};\n\n\tSegTrack.prototype.supportsWholeGenome = function () {\n\t  return this.featureSource.supportsWholeGenome();\n\t};\n\n\tSegTrack.prototype.updateSampleKeys = function (featureList) {\n\t  var samples = new Set(this.sampleKeys);\n\t  var _iteratorNormalCompletion5 = true;\n\t  var _didIteratorError5 = false;\n\t  var _iteratorError5 = undefined;\n\n\t  try {\n\t    for (var _iterator5 = featureList[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t      var feature = _step5.value;\n\t      var sampleKey = feature.sampleKey || feature.sample;\n\n\t      if (!samples.has(sampleKey)) {\n\t        samples.add(sampleKey);\n\t        this.sampleKeys.push(sampleKey);\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError5 = true;\n\t    _iteratorError5 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t        _iterator5.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError5) {\n\t        throw _iteratorError5;\n\t      }\n\t    }\n\t  }\n\t};\n\n\tvar MergedTrack = extend(TrackBase, function (config, browser) {\n\t  var self = this;\n\n\t  if (!config.tracks) {\n\t    return;\n\t  }\n\n\t  TrackBase.call(this, config, browser);\n\t  this.tracks = [];\n\t  config.tracks.forEach(function (tconf) {\n\t    if (!tconf.type) inferTrackTypes(tconf);\n\t    tconf.isMergedTrack = true;\n\t    var t = browser.createTrack(tconf);\n\n\t    if (t) {\n\t      t.autoscale = false; // Scaling done from merged track\n\n\t      self.tracks.push(t);\n\t    } else {\n\t      console.warn(\"Could not create track \" + tconf);\n\t    }\n\t  });\n\t  Object.defineProperty(this, \"height\", {\n\t    get: function get() {\n\t      return this._height;\n\t    },\n\t    set: function set(h) {\n\t      this._height = h;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = this.tracks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var t = _step.value;\n\t          t.height = h;\n\t          t.config.height = h;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  });\n\t  this.height = config.height || 100;\n\t});\n\n\tMergedTrack.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel) {\n\t  var promises = this.tracks.map(function (t) {\n\t    return t.getFeatures(chr, bpStart, bpEnd, bpPerPixel);\n\t  });\n\t  return Promise.all(promises);\n\t};\n\n\tMergedTrack.prototype.draw = function (options) {\n\t  var i, len, mergedFeatures, trackOptions, dataRange;\n\t  mergedFeatures = options.features; // Array of feature arrays, 1 for each track\n\n\t  dataRange = autoscale(options.genomicState.chromosome.name, mergedFeatures); //IGVGraphics.fillRect(options.context, 0, options.pixelTop, options.pixelWidth, options.pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n\t  for (i = 0, len = this.tracks.length; i < len; i++) {\n\t    trackOptions = Object.assign({}, options);\n\t    trackOptions.features = mergedFeatures[i];\n\t    this.tracks[i].dataRange = dataRange;\n\t    this.tracks[i].draw(trackOptions);\n\t  }\n\t};\n\n\tMergedTrack.prototype.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\t  var i, len, autoscale, track;\n\t  autoscale = true; // Hardcoded for now\n\n\t  for (i = 0, len = this.tracks.length; i < len; i++) {\n\t    track = this.tracks[i];\n\n\t    if (typeof track.paintAxis === 'function') {\n\t      track.paintAxis(ctx, pixelWidth, pixelHeight);\n\t      if (autoscale) break;\n\t    }\n\t  }\n\t};\n\n\tMergedTrack.prototype.popupData = function (config) {\n\t  var popupDataFromAllTracks = [];\n\n\t  for (var i = 0, len = this.tracks.length; i < len; i++) {\n\t    var popupData = this.tracks[i].popupData(config);\n\t    popupDataFromAllTracks.push.apply(popupDataFromAllTracks, _toConsumableArray(popupData));\n\t  }\n\n\t  return popupDataFromAllTracks;\n\t};\n\n\tfunction autoscale(chr, featureArrays) {\n\t  var min = 0,\n\t      max = -Number.MAX_VALUE;\n\t // if (chr === 'all') {\n\t  //     allValues = [];\n\t  //     featureArrays.forEach(function (features) {\n\t  //         features.forEach(function (f) {\n\t  //             if (!Number.isNaN(f.value)) {\n\t  //                 allValues.push(f.value);\n\t  //             }\n\t  //         });\n\t  //     });\n\t  //\n\t  //     min = Math.min(0, IGVMath.percentile(allValues, .1));\n\t  //     max = IGVMath.percentile(allValues, 99.9);\n\t  //\n\t  // }\n\t  // else {\n\n\t  featureArrays.forEach(function (features, i) {\n\t    features.forEach(function (f) {\n\t      if (typeof f.value !== 'undefined' && !Number.isNaN(f.value)) {\n\t        min = Math.min(min, f.value);\n\t        max = Math.max(max, f.value);\n\t      }\n\t    });\n\t  }); //  }\n\n\t  return {\n\t    min: min,\n\t    max: max\n\t  };\n\t}\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016 University of California San Diego\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tvar PairedAlignment = function PairedAlignment(firstAlignment) {\n\t  this.paired = true;\n\t  this.firstAlignment = firstAlignment;\n\t  this.chr = firstAlignment.chr;\n\t  this.readName = firstAlignment.readName;\n\n\t  if (firstAlignment.start < firstAlignment.mate.position) {\n\t    this.start = firstAlignment.start;\n\t    this.scStart = firstAlignment.scStart;\n\t    this.connectingStart = firstAlignment.start + firstAlignment.lengthOnRef;\n\t    this.connectingEnd = firstAlignment.mate.position;\n\t  } else {\n\t    this.start = firstAlignment.mate.position;\n\t    this.scStart = this.start;\n\t    this.connectingStart = firstAlignment.mate.position;\n\t    this.connectingEnd = firstAlignment.start;\n\t  }\n\n\t  this.end = Math.max(firstAlignment.mate.position, firstAlignment.start + firstAlignment.lengthOnRef); // Approximate\n\n\t  this.lengthOnRef = this.end - this.start;\n\t  var scEnd = Math.max(this.end, firstAlignment.scStart + firstAlignment.scLengthOnRef);\n\t  this.scLengthOnRef = scEnd - this.scStart;\n\t};\n\n\tPairedAlignment.prototype.setSecondAlignment = function (secondAlignment) {\n\t  // TODO -- check the chrs are equal,  error otherwise\n\t  this.secondAlignment = secondAlignment;\n\t  var firstAlignment = this.firstAlignment;\n\n\t  if (secondAlignment.start > firstAlignment.start) {\n\t    this.connectingEnd = secondAlignment.start;\n\t  } else {\n\t    this.connectingStart = secondAlignment.start + secondAlignment.lengthOnRef;\n\t  }\n\n\t  this.start = Math.min(firstAlignment.start, secondAlignment.start);\n\t  this.end = Math.max(firstAlignment.start + firstAlignment.lengthOnRef, secondAlignment.start + secondAlignment.lengthOnRef);\n\t  this.lengthOnRef = this.end - this.start;\n\t  this.scStart = Math.min(firstAlignment.scStart, secondAlignment.scStart);\n\t  var scEnd = Math.max(firstAlignment.scStart + firstAlignment.scLengthOnRef, secondAlignment.scStart + secondAlignment.scLengthOnRef);\n\t  this.scLengthOnRef = scEnd - this.scStart;\n\t};\n\n\tPairedAlignment.prototype.popupData = function (genomicLocation) {\n\t  var nameValues = [];\n\t  nameValues = nameValues.concat(this.firstAlignment.popupData(genomicLocation));\n\n\t  if (this.secondAlignment) {\n\t    nameValues.push(\"-------------------------------\");\n\t    nameValues = nameValues.concat(this.secondAlignment.popupData(genomicLocation));\n\t  }\n\n\t  return nameValues;\n\t};\n\n\tPairedAlignment.prototype.isPaired = function () {\n\t  return true; // By definition\n\t};\n\n\tPairedAlignment.prototype.firstOfPairStrand = function () {\n\t  if (this.firstAlignment.isFirstOfPair()) {\n\t    return this.firstAlignment.strand;\n\t  } else if (this.secondAlignment && this.secondAlignment.isFirstOfPair()) {\n\t    return this.secondAlignment.strand;\n\t  } else {\n\t    return this.firstAlignment.mate.strand; // Assumption is mate is first-of-pair\n\t  }\n\t};\n\n\tfunction canBePaired(alignment) {\n\t  return alignment.isPaired() && alignment.mate && alignment.isMateMapped() && alignment.chr === alignment.mate.chr && (alignment.isFirstOfPair() || alignment.isSecondOfPair()) && !(alignment.isSecondary() || alignment.isSupplementary());\n\t}\n\n\tvar AlignmentContainer = function AlignmentContainer(chr, start, end, samplingWindowSize, samplingDepth, pairsSupported, alleleFreqThreshold) {\n\t  this.chr = chr;\n\t  this.start = Math.floor(start);\n\t  this.end = Math.ceil(end);\n\t  this.length = end - start;\n\t  this.alleleFreqThreshold = alleleFreqThreshold;\n\t  this.coverageMap = new CoverageMap(chr, start, end, this.alleleFreqThreshold);\n\t  this.alignments = [];\n\t  this.downsampledIntervals = [];\n\t  this.samplingWindowSize = samplingWindowSize === undefined ? 100 : samplingWindowSize;\n\t  this.samplingDepth = samplingDepth === undefined ? 1000 : samplingDepth;\n\t  this.pairsSupported = pairsSupported === undefined ? true : pairsSupported;\n\t  this.paired = false; // false until proven otherwise\n\n\t  this.pairsCache = {}; // working cache of paired alignments by read name\n\n\t  this.downsampledReads = new Set();\n\t  this.currentBucket = new DownsampleBucket(this.start, this.start + this.samplingWindowSize, this);\n\n\t  this.filter = function filter(alignment) {\n\t    // TODO -- pass this in\n\t    return alignment.isMapped() && !alignment.isFailsVendorQualityCheck();\n\t  };\n\n\t  this.pairedEndStats = new PairedEndStats();\n\t};\n\n\tAlignmentContainer.prototype.push = function (alignment) {\n\t  if (this.filter(alignment) === false) return;\n\n\t  if (alignment.isPaired()) {\n\t    this.pairedEndStats.push(alignment);\n\t  }\n\n\t  this.coverageMap.incCounts(alignment); // Count coverage before any downsampling\n\n\t  if (this.pairsSupported && this.downsampledReads.has(alignment.readName)) {\n\t    return; // Mate already downsampled -- pairs are treated as a single alignment for downsampling\n\t  }\n\n\t  if (alignment.start >= this.currentBucket.end) {\n\t    finishBucket.call(this);\n\t    this.currentBucket = new DownsampleBucket(alignment.start, alignment.start + this.samplingWindowSize, this);\n\t  }\n\n\t  this.currentBucket.addAlignment(alignment);\n\t};\n\n\tAlignmentContainer.prototype.forEach = function (callback) {\n\t  this.alignments.forEach(callback);\n\t};\n\n\tAlignmentContainer.prototype.finish = function () {\n\t  if (this.currentBucket !== undefined) {\n\t    finishBucket.call(this);\n\t  }\n\n\t  this.alignments.sort(function (a, b) {\n\t    return a.start - b.start;\n\t  });\n\t  this.pairsCache = undefined;\n\t  this.downsampledReads = undefined;\n\t  this.pairedEndStats.compute();\n\t};\n\n\tAlignmentContainer.prototype.contains = function (chr, start, end) {\n\t  return this.chr === chr && this.start <= start && this.end >= end;\n\t};\n\n\tAlignmentContainer.prototype.hasDownsampledIntervals = function () {\n\t  return this.downsampledIntervals && this.downsampledIntervals.length > 0;\n\t};\n\n\tfunction finishBucket() {\n\t  this.alignments = this.alignments.concat(this.currentBucket.alignments);\n\n\t  if (this.currentBucket.downsampledCount > 0) {\n\t    this.downsampledIntervals.push(new DownsampledInterval(this.currentBucket.start, this.currentBucket.end, this.currentBucket.downsampledCount));\n\t  }\n\n\t  this.paired = this.paired || this.currentBucket.paired;\n\t}\n\n\tfunction DownsampleBucket(start, end, alignmentContainer) {\n\t  this.start = start;\n\t  this.end = end;\n\t  this.alignments = [];\n\t  this.downsampledCount = 0;\n\t  this.samplingDepth = alignmentContainer.samplingDepth;\n\t  this.pairsSupported = alignmentContainer.pairsSupported;\n\t  this.downsampledReads = alignmentContainer.downsampledReads;\n\t  this.pairsCache = alignmentContainer.pairsCache;\n\t}\n\n\tDownsampleBucket.prototype.addAlignment = function (alignment) {\n\t  var idx, replacedAlignment, pairedAlignment;\n\n\t  if (this.pairsSupported && canBePaired(alignment)) {\n\t    pairedAlignment = this.pairsCache[alignment.readName];\n\n\t    if (pairedAlignment) {\n\t      // Not subject to downsampling, just update the existing alignment\n\t      pairedAlignment.setSecondAlignment(alignment);\n\t      this.pairsCache[alignment.readName] = undefined; // Don't need to track this anymore. NOTE: Don't \"delete\", causes runtime performance issues\n\n\t      return;\n\t    }\n\t  }\n\n\t  if (this.alignments.length < this.samplingDepth) {\n\t    if (this.pairsSupported && canBePaired(alignment)) {\n\t      // First alignment in a pair\n\t      pairedAlignment = new PairedAlignment(alignment);\n\t      this.paired = true;\n\t      this.pairsCache[alignment.readName] = pairedAlignment;\n\t      this.alignments.push(pairedAlignment);\n\t    } else {\n\t      this.alignments.push(alignment);\n\t    }\n\t  } else {\n\t    idx = Math.floor(Math.random() * (this.samplingDepth + this.downsampledCount - 1));\n\n\t    if (idx < this.samplingDepth) {\n\t      // Keep the new item\n\t      //  idx = Math.floor(Math.random() * (this.alignments.length - 1));\n\t      replacedAlignment = this.alignments[idx]; // To be replaced\n\n\t      if (this.pairsSupported && canBePaired(alignment)) {\n\t        if (this.pairsCache[replacedAlignment.readName] !== undefined) {\n\t          this.pairsCache[replacedAlignment.readName] = undefined;\n\t        }\n\n\t        pairedAlignment = new PairedAlignment(alignment);\n\t        this.paired = true;\n\t        this.pairsCache[alignment.readName] = pairedAlignment;\n\t        this.alignments[idx] = pairedAlignment;\n\t      } else {\n\t        this.alignments[idx] = alignment;\n\t      }\n\n\t      this.downsampledReads.add(replacedAlignment.readName);\n\t    } else {\n\t      this.downsampledReads.add(alignment.readName);\n\t    }\n\n\t    this.downsampledCount++;\n\t  }\n\t}; // TODO -- refactor this to use an object, rather than an array,  if end-start is > some threshold\n\n\n\tfunction CoverageMap(chr, start, end, alleleFreqThreshold) {\n\t  this.chr = chr;\n\t  this.bpStart = start;\n\t  this.length = end - start;\n\t  this.coverage = new Array(this.length);\n\t  this.maximum = 0;\n\t  this.threshold = alleleFreqThreshold;\n\t  this.qualityWeight = true;\n\t}\n\n\tCoverageMap.prototype.incCounts = function (alignment) {\n\t  var self = this;\n\n\t  if (alignment.blocks === undefined) {\n\t    incBlockCount(alignment);\n\t  } else {\n\t    alignment.blocks.forEach(function (block) {\n\t      incBlockCount(block);\n\t    });\n\t  }\n\n\t  if (alignment.gaps) {\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = alignment.gaps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var del = _step.value;\n\n\t        if (del.type === 'D') {\n\t          var offset = del.start - self.bpStart;\n\n\t          for (var i = offset; i < offset + del.len; i++) {\n\t            if (i < 0) continue;\n\n\t            if (!this.coverage[i]) {\n\t              this.coverage[i] = new Coverage(self.threshold);\n\t            }\n\n\t            this.coverage[i].del++;\n\t          }\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  if (alignment.insertions) {\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\n\t    try {\n\t      for (var _iterator2 = alignment.insertions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var _del = _step2.value;\n\n\t        var _i = _del.start - this.bpStart;\n\n\t        if (_i < 0) continue;\n\n\t        if (!this.coverage[_i]) {\n\t          this.coverage[_i] = new Coverage(self.threshold);\n\t        }\n\n\t        this.coverage[_i].ins++;\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError2 = true;\n\t      _iteratorError2 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t          _iterator2.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError2) {\n\t          throw _iteratorError2;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  function incBlockCount(block) {\n\t    if ('S' === block.type) return;\n\t    var seq = alignment.seq;\n\t    var qual = alignment.qual;\n\t    var seqOffset = block.seqOffset;\n\n\t    for (var _i2 = block.start - self.bpStart, j = 0; j < block.len; _i2++, j++) {\n\t      if (!self.coverage[_i2]) {\n\t        self.coverage[_i2] = new Coverage(self.threshold);\n\t      }\n\n\t      var base = seq.charAt(seqOffset + j);\n\t      var key = alignment.strand ? \"pos\" + base : \"neg\" + base;\n\t      var q = qual && seqOffset + j < qual.length ? qual[seqOffset + j] : 30;\n\t      self.coverage[_i2][key] += 1;\n\t      self.coverage[_i2][\"qual\" + base] += q;\n\t      self.coverage[_i2].total += 1;\n\t      self.coverage[_i2].qual += q;\n\t      self.maximum = Math.max(self.coverage[_i2].total, self.maximum);\n\t    }\n\t  }\n\t};\n\n\tfunction Coverage(alleleThreshold) {\n\t  this.posA = 0;\n\t  this.negA = 0;\n\t  this.posT = 0;\n\t  this.negT = 0;\n\t  this.posC = 0;\n\t  this.negC = 0;\n\t  this.posG = 0;\n\t  this.negG = 0;\n\t  this.posN = 0;\n\t  this.negN = 0;\n\t  this.pos = 0;\n\t  this.neg = 0;\n\t  this.qualA = 0;\n\t  this.qualT = 0;\n\t  this.qualC = 0;\n\t  this.qualG = 0;\n\t  this.qualN = 0;\n\t  this.qual = 0;\n\t  this.total = 0;\n\t  this.del = 0;\n\t  this.ins = 0;\n\t  this.t = alleleThreshold;\n\t}\n\n\tCoverage.prototype.isMismatch = function (refBase) {\n\t  var myself = this,\n\t      mismatchQualitySum,\n\t      threshold = this.t * ( this.qual ? this.qual : this.total);\n\t  mismatchQualitySum = 0;\n\t  [\"A\", \"T\", \"C\", \"G\"].forEach(function (base) {\n\t    if (base !== refBase) {\n\t      mismatchQualitySum +=  myself.qual ? myself[\"qual\" + base] : myself[\"pos\" + base] + myself[\"neg\" + base];\n\t    }\n\t  });\n\t  return mismatchQualitySum >= threshold;\n\t};\n\n\tfunction DownsampledInterval(start, end, counts) {\n\t  this.start = start;\n\t  this.end = end;\n\t  this.counts = counts;\n\t}\n\n\tDownsampledInterval.prototype.popupData = function (genomicLocation) {\n\t  return [{\n\t    name: \"start\",\n\t    value: this.start + 1\n\t  }, {\n\t    name: \"end\",\n\t    value: this.end\n\t  }, {\n\t    name: \"# downsampled:\",\n\t    value: this.counts\n\t  }];\n\t};\n\n\tfunction PairedEndStats(lowerPercentile, upperPercentile) {\n\t  this.totalCount = 0;\n\t  this.frCount = 0;\n\t  this.rfCount = 0;\n\t  this.ffCount = 0;\n\t  this.sumF = 0;\n\t  this.sumF2 = 0; //this.lp = lowerPercentile === undefined ? 0.005 : lowerPercentile;\n\t  //this.up = upperPercentile === undefined ? 0.995 : upperPercentile;\n\t  //this.digest = new Digest();\n\t}\n\n\tPairedEndStats.prototype.push = function (alignment) {\n\t  if (alignment.isProperPair()) {\n\t    var fragmentLength = Math.abs(alignment.fragmentLength); //this.digest.push(fragmentLength);\n\n\t    this.sumF += fragmentLength;\n\t    this.sumF2 += fragmentLength * fragmentLength;\n\t    var po = alignment.pairOrientation;\n\n\t    if (typeof po === \"string\" && po.length === 4) {\n\t      var tmp = '' + po.charAt(0) + po.charAt(2);\n\n\t      switch (tmp) {\n\t        case 'FF':\n\t        case 'RR':\n\t          this.ffCount++;\n\t          break;\n\n\t        case \"FR\":\n\t          this.frCount++;\n\t          break;\n\n\t        case \"RF\":\n\t          this.rfCount++;\n\t      }\n\t    }\n\n\t    this.totalCount++;\n\t  }\n\t};\n\n\tPairedEndStats.prototype.compute = function () {\n\t  if (this.totalCount > 100) {\n\t    if (this.ffCount / this.totalCount > 0.9) this.orienation = \"ff\";else if (this.frCount / this.totalCount > 0.9) this.orienation = \"fr\";else if (this.rfCount / this.totalCount > 0.9) this.orienation = \"rf\";\n\t    var fMean = this.sumF / this.totalCount;\n\t    var stdDev = Math.sqrt((this.totalCount * this.sumF2 - this.sumF * this.sumF) / (this.totalCount * this.totalCount));\n\t    this.lowerFragmentLength = fMean - 3 * stdDev;\n\t    this.upperFragmentLength = fMean + 3 * stdDev; //this.lowerFragmentLength = this.digest.percentile(this.lp);\n\t    //this.upperFragmentLength = this.digest.percentile(this.up);\n\t    //this.digest = undefined;\n\t  }\n\t};\n\n\tvar READ_PAIRED_FLAG = 0x1;\n\tvar PROPER_PAIR_FLAG = 0x2;\n\tvar READ_UNMAPPED_FLAG = 0x4;\n\tvar MATE_UNMAPPED_FLAG = 0x8;\n\tvar READ_STRAND_FLAG = 0x10;\n\tvar MATE_STRAND_FLAG = 0x20;\n\tvar FIRST_OF_PAIR_FLAG = 0x40;\n\tvar SECOND_OF_PAIR_FLAG = 0x80;\n\tvar SECONDARY_ALIGNMNET_FLAG = 0x100;\n\tvar READ_FAILS_VENDOR_QUALITY_CHECK_FLAG = 0x200;\n\tvar DUPLICATE_READ_FLAG = 0x400;\n\tvar SUPPLEMENTARY_ALIGNMENT_FLAG = 0x800;\n\t/**\n\t * readName\n\t * chr\n\t * cigar\n\t * lengthOnRef\n\t * start\n\t * seq\n\t * qual\n\t * mq\n\t * strand\n\t * blocks\n\t */\n\n\tfunction BamAlignment() {\n\t  this.hidden = false;\n\t}\n\n\tBamAlignment.prototype.isMapped = function () {\n\t  return (this.flags & READ_UNMAPPED_FLAG) === 0;\n\t};\n\n\tBamAlignment.prototype.isPaired = function () {\n\t  return (this.flags & READ_PAIRED_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isProperPair = function () {\n\t  return (this.flags & PROPER_PAIR_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isFirstOfPair = function () {\n\t  return (this.flags & FIRST_OF_PAIR_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isSecondOfPair = function () {\n\t  return (this.flags & SECOND_OF_PAIR_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isSecondary = function () {\n\t  return (this.flags & SECONDARY_ALIGNMNET_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isSupplementary = function () {\n\t  return (this.flags & SUPPLEMENTARY_ALIGNMENT_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isFailsVendorQualityCheck = function () {\n\t  return (this.flags & READ_FAILS_VENDOR_QUALITY_CHECK_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isDuplicate = function () {\n\t  return (this.flags & DUPLICATE_READ_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isMateMapped = function () {\n\t  return (this.flags & MATE_UNMAPPED_FLAG) === 0;\n\t};\n\n\tBamAlignment.prototype.isNegativeStrand = function () {\n\t  return (this.flags & READ_STRAND_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.isMateNegativeStrand = function () {\n\t  return (this.flags & MATE_STRAND_FLAG) !== 0;\n\t};\n\n\tBamAlignment.prototype.tags = function () {\n\t  if (!this.tagDict) {\n\t    if (this.tagBA) {\n\t      this.tagDict = decodeTags(this.tagBA);\n\t      this.tagBA = undefined;\n\t    } else {\n\t      this.tagDict = {}; // Mark so we don't try again.  The record has no tags\n\t    }\n\t  }\n\n\t  return this.tagDict;\n\n\t  function decodeTags(ba) {\n\t    var p = 0,\n\t        len = ba.length,\n\t        tags = {};\n\n\t    while (p < len) {\n\t      var tag = String.fromCharCode(ba[p]) + String.fromCharCode(ba[p + 1]);\n\t      var type = String.fromCharCode(ba[p + 2]);\n\t      var value;\n\n\t      if (type === 'A') {\n\t        value = String.fromCharCode(ba[p + 3]);\n\t        p += 4;\n\t      } else if (type === 'i' || type === 'I') {\n\t        value = readInt(ba, p + 3);\n\t        p += 7;\n\t      } else if (type === 'c' || type === 'C') {\n\t        value = ba[p + 3];\n\t        p += 4;\n\t      } else if (type === 's' || type === 'S') {\n\t        value = readShort(ba, p + 3);\n\t        p += 5;\n\t      } else if (type === 'f') {\n\t        value = readFloat(ba, p + 3);\n\t        p += 7;\n\t      } else if (type === 'Z') {\n\t        p += 3;\n\t        value = '';\n\n\t        for (;;) {\n\t          var cc = ba[p++];\n\n\t          if (cc === 0) {\n\t            break;\n\t          } else {\n\t            value += String.fromCharCode(cc);\n\t          }\n\t        }\n\t      } else if (type === 'B') {\n\t        value = 'Arrays not currently supported';\n\t      } else {\n\t        //'Unknown type ' + type;\n\t        value = 'Error unknown type: ' + type;\n\t      }\n\n\t      tags[tag] = value;\n\t    }\n\n\t    return tags;\n\t  }\n\t};\n\n\tBamAlignment.prototype.popupData = function (genomicLocation) {\n\t  // if the user clicks on a base next to an insertion, show just the\n\t  // inserted bases in a popup (like in desktop IGV).\n\t  var nameValues = []; // Consert genomic location to int\n\n\t  genomicLocation = Math.floor(genomicLocation);\n\n\t  if (this.insertions) {\n\t    var seq = this.seq;\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = this.insertions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var insertion = _step.value;\n\t        var ins_start = insertion.start;\n\n\t        if (genomicLocation === ins_start || genomicLocation === ins_start - 1) {\n\t          nameValues.push({\n\t            name: 'Insertion',\n\t            value: seq.substr(insertion.seqOffset, insertion.len)\n\t          });\n\t          nameValues.push({\n\t            name: 'Location',\n\t            value: ins_start\n\t          });\n\t          return nameValues;\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  nameValues.push({\n\t    name: 'Read Name',\n\t    value: this.readName\n\t  }); // Sample\n\t  // Read group\n\n\t  nameValues.push(\"<hr>\"); // Add 1 to genomic location to map from 0-based computer units to user-based units\n\n\t  nameValues.push({\n\t    name: 'Alignment Start',\n\t    value: numberFormatter(1 + this.start),\n\t    borderTop: true\n\t  });\n\t  nameValues.push({\n\t    name: 'Read Strand',\n\t    value: true === this.strand ? '(+)' : '(-)',\n\t    borderTop: true\n\t  });\n\t  nameValues.push({\n\t    name: 'Cigar',\n\t    value: this.cigar\n\t  });\n\t  nameValues.push({\n\t    name: 'Mapped',\n\t    value: yesNo(this.isMapped())\n\t  });\n\t  nameValues.push({\n\t    name: 'Mapping Quality',\n\t    value: this.mq\n\t  });\n\t  nameValues.push({\n\t    name: 'Secondary',\n\t    value: yesNo(this.isSecondary())\n\t  });\n\t  nameValues.push({\n\t    name: 'Supplementary',\n\t    value: yesNo(this.isSupplementary())\n\t  });\n\t  nameValues.push({\n\t    name: 'Duplicate',\n\t    value: yesNo(this.isDuplicate())\n\t  });\n\t  nameValues.push({\n\t    name: 'Failed QC',\n\t    value: yesNo(this.isFailsVendorQualityCheck())\n\t  });\n\n\t  if (this.isPaired()) {\n\t    nameValues.push(\"<hr>\");\n\t    nameValues.push({\n\t      name: 'First in Pair',\n\t      value: !this.isSecondOfPair(),\n\t      borderTop: true\n\t    });\n\t    nameValues.push({\n\t      name: 'Mate is Mapped',\n\t      value: yesNo(this.isMateMapped())\n\t    });\n\n\t    if (this.pairOrientation) {\n\t      nameValues.push({\n\t        name: 'Pair Orientation',\n\t        value: this.pairOrientation\n\t      });\n\t    }\n\n\t    if (this.isMateMapped()) {\n\t      nameValues.push({\n\t        name: 'Mate Chromosome',\n\t        value: this.mate.chr\n\t      });\n\t      nameValues.push({\n\t        name: 'Mate Start',\n\t        value: this.mate.position + 1\n\t      });\n\t      nameValues.push({\n\t        name: 'Mate Strand',\n\t        value: true === this.mate.strand ? '(+)' : '(-)'\n\t      });\n\t      nameValues.push({\n\t        name: 'Insert Size',\n\t        value: this.fragmentLength\n\t      }); // Mate Start\n\t      // Mate Strand\n\t      // Insert Size\n\t    } // First in Pair\n\t    // Pair Orientation\n\n\t  }\n\n\t  nameValues.push(\"<hr>\");\n\t  var tagDict = this.tags();\n\t  var isFirst = true;\n\n\t  for (var key in tagDict) {\n\t    if (tagDict.hasOwnProperty(key)) {\n\t      if (isFirst) {\n\t        nameValues.push({\n\t          name: key,\n\t          value: tagDict[key],\n\t          borderTop: true\n\t        });\n\t        isFirst = false;\n\t      } else {\n\t        nameValues.push({\n\t          name: key,\n\t          value: tagDict[key]\n\t        });\n\t      }\n\t    }\n\t  }\n\n\t  nameValues.push(\"<hr>\");\n\t  nameValues.push({\n\t    name: 'Genomic Location: ',\n\t    value: numberFormatter(1 + genomicLocation)\n\t  });\n\t  nameValues.push({\n\t    name: 'Read Base:',\n\t    value: this.readBaseAt(genomicLocation)\n\t  });\n\t  nameValues.push({\n\t    name: 'Base Quality:',\n\t    value: this.readBaseQualityAt(genomicLocation)\n\t  });\n\t  return nameValues;\n\n\t  function yesNo(bool) {\n\t    return bool ? 'Yes' : 'No';\n\t  }\n\t};\n\n\tBamAlignment.prototype.readBaseAt = function (genomicLocation) {\n\t  var block = blockAtGenomicLocation(this.blocks, genomicLocation);\n\n\t  if (block) {\n\t    if (\"*\" === this.seq) {\n\t      return \"*\";\n\t    } else {\n\t      var idx = block.seqIndexAt(genomicLocation); // if (idx >= 0 && idx < this.seq.length) {\n\n\t      return this.seq[idx]; //  }\n\t    }\n\t  } else {\n\t    return undefined;\n\t  }\n\t};\n\n\tBamAlignment.prototype.readBaseQualityAt = function (genomicLocation) {\n\t  var block = blockAtGenomicLocation(this.blocks, genomicLocation);\n\n\t  if (block) {\n\t    if (\"*\" === this.qual) {\n\t      return 30;\n\t    } else {\n\t      var idx = block.seqIndexAt(genomicLocation);\n\n\t      if (idx >= 0 && this.qual && idx < this.qual.length) {\n\t        return this.qual[idx];\n\t      } else {\n\t        return 30;\n\t      }\n\t    }\n\t  } else {\n\t    return undefined;\n\t  }\n\t};\n\n\tfunction blockAtGenomicLocation(blocks, genomicLocation) {\n\t  for (var i = 0; i < blocks.length; i++) {\n\t    var block = blocks[i];\n\n\t    if (genomicLocation >= block.start && genomicLocation < block.start + block.len) {\n\t      return block;\n\t    }\n\t  }\n\n\t  return undefined;\n\t}\n\n\tfunction readInt(ba, offset) {\n\t  return ba[offset + 3] << 24 | ba[offset + 2] << 16 | ba[offset + 1] << 8 | ba[offset];\n\t}\n\n\tfunction readShort(ba, offset) {\n\t  return ba[offset + 1] << 8 | ba[offset];\n\t}\n\n\tfunction readFloat(ba, offset) {\n\t  var dataView = new DataView(ba.buffer),\n\t      littleEndian = true;\n\t  return dataView.getFloat32(offset, littleEndian);\n\t}\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016-2017 The Regents of the University of California\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\t/**\n\t * Created by jrobinso on 4/5/18.\n\t */\n\tvar AlignmentBlock = function AlignmentBlock(b) {\n\t  if (b) {\n\t    Object.assign(this, b);\n\t  }\n\t};\n\n\tAlignmentBlock.prototype.seqIndexAt = function (genomicLocation) {\n\t  return Math.floor(genomicLocation) - this.start + this.seqOffset;\n\t};\n\n\tfunction BamFilter(options) {\n\t  if (!options) options = {};\n\t  this.vendorFailed = options.vendorFailed === undefined ? true : options.vendorFailed;\n\t  this.duplicates = options.duplicates === undefined ? true : options.duplicates;\n\t  this.secondary = options.secondary || false;\n\t  this.supplementary = options.supplementary || false;\n\t  this.mqThreshold = options.mqThreshold === undefined ? 0 : options.mqThreshold;\n\n\t  if (options.readgroups) {\n\t    this.readgroups = new Set(options.readgroups);\n\t  }\n\t}\n\n\tBamFilter.prototype.pass = function (alignment) {\n\t  if (this.vendorFailed && alignment.isFailsVendorQualityCheck()) return false;\n\t  if (this.duplicates && alignment.isDuplicate()) return false;\n\t  if (this.secondary && alignment.isSecondary()) return false;\n\t  if (this.supplementary && alignment.isSupplementary()) return false;\n\t  if (alignment.mq < this.mqThreshold) return false;\n\n\t  if (this.readgroups) {\n\t    var rg = alignment.tags()['RG'];\n\t    return this.readgroups.has(rg);\n\t  }\n\n\t  return true;\n\t};\n\n\t/**\n\t * This code is based on the Biodalliance BAM reader by Thomas Down,  2011\n\t *\n\t * https://github.com/dasmoth/dalliance/blob/master/js/bam.js\n\t */\n\n\tvar SEQ_DECODER = ['=', 'A', 'C', 'x', 'G', 'x', 'x', 'x', 'T', 'x', 'x', 'x', 'x', 'x', 'x', 'N'];\n\tvar CIGAR_DECODER = ['M', 'I', 'D', 'N', 'S', 'H', 'P', '=', 'X', '?', '?', '?', '?', '?', '?', '?'];\n\tvar READ_STRAND_FLAG$1 = 0x10;\n\tvar MATE_STRAND_FLAG$1 = 0x20;\n\tvar BAM1_MAGIC_BYTES = new Uint8Array([0x42, 0x41, 0x4d, 0x01]); // BAM\\1\n\n\tvar BAM1_MAGIC_NUMBER = readInt$1(BAM1_MAGIC_BYTES, 0);\n\tvar DEFAULT_ALLELE_FREQ_THRESHOLD = 0.2;\n\tvar DEFAULT_SAMPLING_WINDOW_SIZE = 100;\n\tvar DEFAULT_SAMPLING_DEPTH = 500;\n\tvar MAXIMUM_SAMPLING_DEPTH = 10000;\n\tvar BamUtils = {\n\t  readHeader: function readHeader(url, options, genome) {\n\t    return igvxhr.loadArrayBuffer(url, options).then(function (compressedBuffer) {\n\t      var header, unc, uncba;\n\t      unc = unbgzf(compressedBuffer);\n\t      uncba = unc;\n\t      header = BamUtils.decodeBamHeader(uncba, genome);\n\t      return header;\n\t    });\n\t  },\n\n\t  /**\n\t   *\n\t   * @param ba  bytes to decode as a UInt8Array\n\t   * @param genome  optional igv genome object\n\t   * @returns {{ magicNumer: number, size: number, chrNames: Array, chrToIndex: ({}|*), chrAliasTable: ({}|*) }}\n\t   */\n\t  decodeBamHeader: function decodeBamHeader(ba, genome) {\n\t    var magic, samHeaderLen, samHeader, chrToIndex, chrNames, chrAliasTable, alias;\n\t    magic = readInt$1(ba, 0);\n\n\t    if (magic !== BAM1_MAGIC_NUMBER) {\n\t      throw new Error('BAM header errror: bad magic number.  This could be caused by either a corrupt or missing file.');\n\t    }\n\n\t    samHeaderLen = readInt$1(ba, 4);\n\t    samHeader = '';\n\n\t    for (var i = 0; i < samHeaderLen; ++i) {\n\t      samHeader += String.fromCharCode(ba[i + 8]);\n\t    }\n\n\t    var nRef = readInt$1(ba, samHeaderLen + 8);\n\t    var p = samHeaderLen + 12;\n\t    chrToIndex = {};\n\t    chrNames = [];\n\t    chrAliasTable = {};\n\n\t    for (i = 0; i < nRef; ++i) {\n\t      var lName = readInt$1(ba, p);\n\t      var name = '';\n\n\t      for (var j = 0; j < lName - 1; ++j) {\n\t        name += String.fromCharCode(ba[p + 4 + j]);\n\t      }\n\n\t      var lRef = readInt$1(ba, p + lName + 4); //dlog(name + ': ' + lRef);\n\n\t      chrToIndex[name] = i;\n\t      chrNames[i] = name;\n\n\t      if (genome) {\n\t        alias = genome.getChromosomeName(name);\n\t        chrAliasTable[alias] = name;\n\t      }\n\n\t      p = p + 8 + lName;\n\t    }\n\n\t    return {\n\t      magicNumber: magic,\n\t      size: p,\n\t      chrNames: chrNames,\n\t      chrToIndex: chrToIndex,\n\t      chrAliasTable: chrAliasTable\n\t    };\n\t  },\n\t  bam_tag2cigar: function bam_tag2cigar(ba, block_end, seq_offset, lseq, al, cigarArray) {\n\t    function type2size(x) {\n\t      if (x === 'C' || x === 'c' || x === 'A') return 1;else if (x === 'S' || x === 's') return 2;else if (x === 'I' || x === 'i' || x === 'f') return 4;else return 0;\n\t    } // test if the real CIGAR is encoded in a CG:B,I tag\n\n\n\t    if (cigarArray.length !== 1 || al.start < 0) return false;\n\t    var p = seq_offset + (lseq + 1 >> 1) + lseq;\n\n\t    while (p + 4 < block_end) {\n\t      var tag = String.fromCharCode(ba[p]) + String.fromCharCode(ba[p + 1]);\n\t      if (tag === 'CG') break;\n\t      var type = String.fromCharCode(ba[p + 2]);\n\n\t      if (type === 'B') {\n\t        // the binary array type\n\t        type = String.fromCharCode(ba[p + 3]);\n\t        var size = type2size(type);\n\t        var len = readInt$1(ba, p + 4);\n\t        p += 8 + size * len;\n\t      } else if (type === 'Z' || type === 'H') {\n\t        // 0-terminated string\n\t        p += 3;\n\n\t        while (ba[p++] !== 0) {}\n\t      } else {\n\t        // other atomic types\n\t        p += 3 + type2size(type);\n\t      }\n\t    }\n\n\t    if (p >= block_end) return false; // no CG tag\n\n\t    if (String.fromCharCode(ba[p + 2]) !== 'B' || String.fromCharCode(ba[p + 3]) !== 'I') return false; // not of type B,I\n\t    // now we know the real CIGAR length and its offset in the binary array\n\n\t    var cigar_len = readInt$1(ba, p + 4);\n\t    var cigar_offset = p + 8; // 4 for \"CGBI\" and 4 for length\n\n\t    if (cigar_offset + cigar_len * 4 > block_end) return false; // out of bound\n\t    // decode CIGAR\n\n\t    var cigar = '';\n\t    var lengthOnRef = 0;\n\t    cigarArray.length = 0; // empty the old array\n\n\t    p = cigar_offset;\n\n\t    for (var k = 0; k < cigar_len; ++k, p += 4) {\n\t      var cigop = readInt$1(ba, p);\n\t      var opLen = cigop >> 4;\n\t      var opLtr = CIGAR_DECODER[cigop & 0xf];\n\t      if (opLtr === 'M' || opLtr === 'EQ' || opLtr === 'X' || opLtr === 'D' || opLtr === 'N' || opLtr === '=') lengthOnRef += opLen;\n\t      cigar = cigar + opLen + opLtr;\n\t      cigarArray.push({\n\t        len: opLen,\n\t        ltr: opLtr\n\t      });\n\t    } // update alignment record. We are not updating bin, as apparently it is not used.\n\n\n\t    al.cigar = cigar;\n\t    al.lengthOnRef = lengthOnRef;\n\t    return true;\n\t  },\n\n\t  /**\n\t   *\n\t   * @param ba                 bytes to decode as an UInt8Array\n\t   * @param offset             offset position of ba array to start decoding\n\t   * @param alignmentContainer container to receive the decoded alignments\n\t   * @param min                minimum genomic position\n\t   * @param max                maximum genomic position\n\t   * @param chrIdx             chromosome index\n\t   * @param chrNames            array of chromosome names\n\t   * @param filter             a BamFilter object\n\t   *\n\t   * @return true if we have moved beyond the right end of the genomic range.\n\t   */\n\t  decodeBamRecords: function decodeBamRecords(ba, offset, alignmentContainer, chrNames, chrIdx, min, max, filter) {\n\t    while (offset < ba.length) {\n\t      var blockSize = readInt$1(ba, offset);\n\t      var blockEnd = offset + blockSize + 4;\n\t      var alignment = new BamAlignment();\n\t      var refID = readInt$1(ba, offset + 4);\n\t      var pos = readInt$1(ba, offset + 8);\n\n\t      if (blockEnd > ba.length) {\n\t        return;\n\t      }\n\n\t      if (refID < 0) {\n\t        offset = blockEnd;\n\t        continue; // unmapped read\n\t      } else if (chrIdx !== undefined && (refID > chrIdx || pos > max)) {\n\t        return true; // off right edge, we're done\n\t      } else if (chrIdx !== undefined && refID < chrIdx) {\n\t        offset = blockEnd;\n\t        continue; // ref ID to left of start, not sure this is possible\n\t      }\n\n\t      var bin_mq_nl = readInt$1(ba, offset + 12);\n\t      var mq = (bin_mq_nl & 0xff00) >> 8;\n\t      var nl = bin_mq_nl & 0xff;\n\t      var flag_nc = readInt$1(ba, offset + 16);\n\t      var flag = (flag_nc & 0xffff0000) >> 16;\n\t      var nc = flag_nc & 0xffff;\n\t      var lseq = readInt$1(ba, offset + 20);\n\t      var mateChrIdx = readInt$1(ba, offset + 24);\n\t      var matePos = readInt$1(ba, offset + 28);\n\t      var tlen = readInt$1(ba, offset + 32);\n\t      var readName = [];\n\n\t      for (var j = 0; j < nl - 1; ++j) {\n\t        readName.push(String.fromCharCode(ba[offset + 36 + j]));\n\t      }\n\n\t      readName = readName.join('');\n\t      var lengthOnRef = 0;\n\t      var cigar = '';\n\t      var p = offset + 36 + nl;\n\t      var cigarArray = []; // concatenate M,=,EQ,and X\n\n\t      var lastCigRecord = void 0;\n\n\t      for (var c = 0; c < nc; ++c) {\n\t        var cigop = readInt$1(ba, p);\n\t        var opLen = cigop >> 4;\n\t        var opLtr = CIGAR_DECODER[cigop & 0xf];\n\t        if (opLtr === 'M' || opLtr === 'EQ' || opLtr === 'X' || opLtr === 'D' || opLtr === 'N' || opLtr === '=') lengthOnRef += opLen;\n\t        cigar = cigar + opLen + opLtr;\n\t        p += 4; // if(mOperators.has(opLtr) && mOperators.has(lastCigRecord.ltr)) {\n\t        //     lastCigRecord.len += opLen;\n\t        //     lastCigRecord.ltr = 'M'\n\t        // }\n\t        // else {\n\n\t        lastCigRecord = {\n\t          len: opLen,\n\t          ltr: opLtr\n\t        };\n\t        cigarArray.push(lastCigRecord); //}\n\t      }\n\n\t      alignment.chr = chrNames[refID];\n\t      alignment.start = pos;\n\t      alignment.flags = flag;\n\t      alignment.strand = !(flag & READ_STRAND_FLAG$1);\n\t      alignment.readName = readName;\n\t      alignment.cigar = cigar;\n\t      alignment.lengthOnRef = lengthOnRef;\n\t      alignment.fragmentLength = tlen;\n\t      alignment.mq = mq;\n\t      BamUtils.bam_tag2cigar(ba, blockEnd, p, lseq, alignment, cigarArray);\n\t      alignment.end = alignment.start + alignment.lengthOnRef;\n\n\t      if (alignment.end < min) {\n\t        offset = blockEnd;\n\t        continue;\n\t      } // Record out-of-range \"to the left\", skip to next one\n\n\n\t      var seq = [];\n\t      var seqBytes = lseq + 1 >> 1;\n\n\t      for (var _j = 0; _j < seqBytes; ++_j) {\n\t        var sb = ba[p + _j];\n\t        seq.push(SEQ_DECODER[(sb & 0xf0) >> 4]);\n\t        seq.push(SEQ_DECODER[sb & 0x0f]);\n\t      }\n\n\t      seq = seq.slice(0, lseq).join(''); // seq might have one extra character (if lseq is an odd number)\n\n\t      p += seqBytes;\n\t      var qualArray = [];\n\n\t      for (var _j2 = 0; _j2 < lseq; ++_j2) {\n\t        qualArray.push(ba[p + _j2]);\n\t      }\n\n\t      p += lseq;\n\n\t      if (mateChrIdx >= 0) {\n\t        alignment.mate = {\n\t          chr: chrNames[mateChrIdx],\n\t          position: matePos,\n\t          strand: !(flag & MATE_STRAND_FLAG$1)\n\t        };\n\t      }\n\n\t      alignment.seq = seq;\n\t      alignment.qual = qualArray;\n\t      alignment.tagBA = new Uint8Array(ba.buffer.slice(p, blockEnd)); // decode these on demand\n\n\t      this.setPairOrientation(alignment);\n\n\t      if (undefined === filter || filter.pass(alignment)) {\n\t        makeBlocks(alignment, cigarArray);\n\t        alignmentContainer.push(alignment);\n\t      }\n\n\t      offset = blockEnd;\n\t    }\n\t  },\n\t  decodeSamRecords: function decodeSamRecords(sam, alignmentContainer, chr, min, max, filter) {\n\t    var lines, i, j, len, tokens, qualString, rnext, lengthOnRef, alignment, cigarArray, started;\n\t    lines = splitLines(sam);\n\t    len = lines.length;\n\t    started = false;\n\n\t    for (i = 0; i < len; i++) {\n\t      tokens = lines[i].split('\\t');\n\t      alignment = new BamAlignment();\n\t      alignment.chr = tokens[2];\n\t      alignment.start = Number.parseInt(tokens[3]) - 1;\n\t      alignment.flags = Number.parseInt(tokens[1]);\n\t      alignment.readName = tokens[0];\n\t      alignment.strand = !(alignment.flags & READ_STRAND_FLAG$1);\n\t      alignment.mq = Number.parseInt(tokens[4]);\n\t      alignment.cigar = tokens[5];\n\t      alignment.fragmentLength = Number.parseInt(tokens[8]);\n\t      alignment.seq = tokens[9];\n\t      if (alignment.chr === '*' || !alignment.isMapped()) continue; // Unmapped\n\n\t      if (alignment.chr !== chr) {\n\t        if (started) break; // Off the right edge, we're done\n\t        else continue; // Possibly to the left, skip but keep looping\n\t      } else if (alignment.start > max) {\n\t        break; // off right edge, we're done\n\t      }\n\n\t      lengthOnRef = 0;\n\t      cigarArray = buildOperators(alignment.cigar);\n\t      cigarArray.forEach(function (op) {\n\t        var opLen = op.len;\n\t        var opLtr = op.ltr;\n\t        if (opLtr === 'M' || opLtr === 'EQ' || opLtr === 'X' || opLtr === 'D' || opLtr === 'N' || opLtr === '=') lengthOnRef += opLen;\n\t      });\n\t      alignment.lengthOnRef = lengthOnRef; // TODO for lh3: parse the CG:B,I tag in SAM here\n\n\t      if (alignment.start + lengthOnRef < min) {\n\t        continue; // To the left, skip and continue\n\t      }\n\n\t      qualString = tokens[10];\n\t      alignment.qual = [];\n\n\t      for (j = 0; j < qualString.length; j++) {\n\t        alignment.qual[j] = qualString.charCodeAt(j) - 33;\n\t      }\n\n\t      alignment.tagDict = tokens.length < 11 ? {} : decodeSamTags(tokens.slice(11));\n\n\t      if (alignment.isMateMapped()) {\n\t        rnext = tokens[6];\n\t        alignment.mate = {\n\t          chr: rnext === '=' ? alignment.chr : rnext,\n\t          position: Number.parseInt(tokens[7]),\n\t          strand: !(alignment.flags & MATE_STRAND_FLAG$1)\n\t        };\n\t      }\n\n\t      this.setPairOrientation(alignment);\n\n\t      if (undefined === filter || filter.pass(alignment)) {\n\t        makeBlocks(alignment, cigarArray);\n\t        alignmentContainer.push(alignment);\n\t      }\n\t    }\n\t  },\n\t  setReaderDefaults: function setReaderDefaults(reader, config) {\n\t    reader.filter = new BamFilter(config.filter);\n\n\t    if (config.readgroup) {\n\t      reader.filter.readgroups = new Set([config.readgroup]);\n\t    }\n\n\t    reader.alleleFreqThreshold = config.alleleFreqThreshold === undefined ? DEFAULT_ALLELE_FREQ_THRESHOLD : config.alleleFreqThreshold;\n\t    reader.samplingWindowSize = config.samplingWindowSize === undefined ? DEFAULT_SAMPLING_WINDOW_SIZE : config.samplingWindowSize;\n\t    reader.samplingDepth = config.samplingDepth === undefined ? DEFAULT_SAMPLING_DEPTH : config.samplingDepth;\n\n\t    if (reader.samplingDepth > MAXIMUM_SAMPLING_DEPTH) {\n\t      reader.samplingDepth = MAXIMUM_SAMPLING_DEPTH;\n\t    }\n\n\t    if (config.viewAsPairs) {\n\t      reader.pairsSupported = true;\n\t    } else {\n\t      reader.pairsSupported = config.pairsSupported === undefined ? true : config.pairsSupported;\n\t    }\n\t  },\n\t  setPairOrientation: function setPairOrientation(alignment) {\n\t    if (alignment.isMapped() && alignment.mate && alignment.isMateMapped() && alignment.mate.chr === alignment.chr) {\n\t      var s1 = alignment.strand ? 'F' : 'R';\n\t      var mate = alignment.mate;\n\t      var s2 = mate.strand ? 'F' : 'R';\n\t      var o1 = ' ';\n\t      var o2 = ' ';\n\n\t      if (alignment.isFirstOfPair()) {\n\t        o1 = '1';\n\t        o2 = '2';\n\t      } else if (alignment.isSecondOfPair()) {\n\t        o1 = '2';\n\t        o2 = '1';\n\t      }\n\n\t      var tmp = [];\n\t      var isize = alignment.fragmentLength;\n\t      var estReadLen = alignment.end - alignment.start;\n\n\t      if (isize === 0) {\n\t        //isize not recorded.  Need to estimate.  This calculation was validated against an Illumina\n\t        // -> <- library bam.\n\t        var estMateEnd = alignment.start < mate.position ? mate.position + estReadLen : mate.position - estReadLen;\n\t        isize = estMateEnd - alignment.start;\n\t      } //if (isize > estReadLen) {\n\n\n\t      if (isize > 0) {\n\t        tmp[0] = s1;\n\t        tmp[1] = o1;\n\t        tmp[2] = s2;\n\t        tmp[3] = o2;\n\t      } else {\n\t        tmp[2] = s1;\n\t        tmp[3] = o1;\n\t        tmp[0] = s2;\n\t        tmp[1] = o2;\n\t      } // }\n\n\n\t      alignment.pairOrientation = tmp.join('');\n\t    }\n\t  }\n\t};\n\t/**\n\t * Split the alignment record into blocks as specified in the cigarArray.  Each aligned block contains\n\t * its portion of the read sequence and base quality strings.  A read sequence or base quality string\n\t * of \"*\" indicates the value is not recorded.  In all other cases the length of the block sequence (block.seq)\n\t * and quality string (block.qual) must == the block length.\n\t *\n\t * @param alignment\n\t * @param cigarArray\n\t * @returns array of blocks\n\t */\n\n\tfunction makeBlocks(alignment, cigarArray) {\n\t  var blocks = [];\n\t  var insertions;\n\t  var gaps;\n\t  var seqOffset = 0;\n\t  var pos = alignment.start;\n\t  alignment.scStart = alignment.start;\n\t  alignment.scLengthOnRef = alignment.lengthOnRef;\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = cigarArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var c = _step.value;\n\t      var scPos = void 0;\n\n\t      switch (c.ltr) {\n\t        case 'H':\n\t          break;\n\t        // ignore hard clips\n\n\t        case 'P':\n\t          break;\n\t        // ignore pads\n\n\t        case 'S':\n\t          scPos = pos;\n\t          alignment.scLengthOnRef += c.len;\n\n\t          if (blocks.length === 0) {\n\t            alignment.scStart -= c.len;\n\t            scPos -= c.len;\n\t          }\n\n\t          blocks.push(new AlignmentBlock({\n\t            start: scPos,\n\t            seqOffset: seqOffset,\n\t            len: c.len,\n\t            type: 'S'\n\t          }));\n\t          seqOffset += c.len;\n\t          break;\n\t        // soft clip read bases\n\n\t        case 'N':\n\t        case 'D':\n\t          if (gaps === undefined) {\n\t            gaps = [];\n\t          }\n\n\t          gaps.push({\n\t            start: pos,\n\t            len: c.len,\n\t            type: c.ltr\n\t          });\n\t          pos += c.len;\n\t          break;\n\n\t        case 'I':\n\t          if (insertions === undefined) {\n\t            insertions = [];\n\t          }\n\n\t          insertions.push(new AlignmentBlock({\n\t            start: pos,\n\t            len: c.len,\n\t            seqOffset: seqOffset,\n\t            type: 'I'\n\t          }));\n\t          seqOffset += c.len;\n\t          break;\n\n\t        case 'M':\n\t        case 'EQ':\n\t        case '=':\n\t        case 'X':\n\t          blocks.push(new AlignmentBlock({\n\t            start: pos,\n\t            seqOffset: seqOffset,\n\t            len: c.len,\n\t            type: 'M'\n\t          }));\n\t          seqOffset += c.len;\n\t          pos += c.len;\n\t          break;\n\n\t        default:\n\t          void 0;\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  alignment.blocks = blocks;\n\t  alignment.insertions = insertions;\n\t  alignment.gaps = gaps;\n\t}\n\n\tfunction readInt$1(ba, offset) {\n\t  return ba[offset + 3] << 24 | ba[offset + 2] << 16 | ba[offset + 1] << 8 | ba[offset];\n\t}\n\t/**\n\t * Build a list of cigar operators from a cigarString.  Removes padding operators and concatenates consecutive\n\t * operators of the same type\n\t *\n\t * @param cigarString\n\t * @return\n\t */\n\n\n\tfunction buildOperators(cigarString) {\n\t  var operators, buffer, i, len, prevOp, next, op, nBases;\n\t  operators = [];\n\t  buffer = []; // Create list of cigar operators\n\n\t  prevOp = null;\n\t  len = cigarString.length;\n\n\t  for (i = 0; i < len; i++) {\n\t    next = cigarString.charAt(i);\n\n\t    if (isDigit(next)) {\n\t      buffer.push(next);\n\t    } else {\n\t      op = next;\n\t      nBases = Number.parseInt(buffer.join(''));\n\t      buffer = [];\n\n\t      if (prevOp !== null && prevOp.ltr === op) {\n\t        prevOp.len += nBases;\n\t      } else {\n\t        prevOp = {\n\t          len: nBases,\n\t          ltr: op\n\t        };\n\t        operators.push(prevOp);\n\t      }\n\t    }\n\t  }\n\n\t  return operators;\n\t}\n\n\tfunction isDigit(a) {\n\t  var charCode = a.charCodeAt(0);\n\t  return charCode >= 48 && charCode <= 57; // 0-9\n\t}\n\n\tfunction decodeSamTags(tags) {\n\t  var tagDict = {};\n\t  tags.forEach(function (tag) {\n\t    var tokens = tag.split(':');\n\t    tagDict[tokens[0]] = tokens[2];\n\t  });\n\t  return tagDict;\n\t}\n\n\t/**\n\t * Class for reading a bam file\n\t *\n\t * @param config\n\t * @constructor\n\t */\n\n\tvar BamReaderNonIndexed = function BamReaderNonIndexed(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  this.bamPath = config.url;\n\t  this.isDataUri = isString(config.url) && config.url.startsWith(\"data:\");\n\t  BamUtils.setReaderDefaults(this, config);\n\t}; // Return an alignment container\n\n\n\tBamReaderNonIndexed.prototype.readAlignments = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chr, bpStart, bpEnd) {\n\t    var genome, header, queryChr, qAlignments, alignmentContainer, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, a, data, unc, arrayBuffer, _unc, parseAlignments, fetchAlignments;\n\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            fetchAlignments = function _ref3(chr, bpStart, bpEnd) {\n\t              var header, queryChr, qAlignments, alignmentContainer;\n\t              header = this.header;\n\t              queryChr = header.chrAliasTable.hasOwnProperty(chr) ? header.chrAliasTable[chr] : chr;\n\t              qAlignments = this.alignmentCache.queryFeatures(queryChr, bpStart, bpEnd);\n\t              alignmentContainer = new AlignmentContainer(chr, bpStart, bpEnd, this.samplingWindowSize, this.samplingDepth, this.pairsSupported);\n\t              qAlignments.forEach(function (a) {\n\t                alignmentContainer.push(a);\n\t              });\n\t              alignmentContainer.finish();\n\t              return alignmentContainer;\n\t            };\n\n\t            parseAlignments = function _ref2(data) {\n\t              var alignments = [];\n\t              this.header = BamUtils.decodeBamHeader(data);\n\t              BamUtils.decodeBamRecords(data, this.header.size, alignments, this.header.chrNames);\n\t              this.alignmentCache = new FeatureCache(alignments, genome);\n\t            };\n\n\t            genome = this.genome;\n\n\t            if (!this.alignmentCache) {\n\t              _context.next = 31;\n\t              break;\n\t            }\n\n\t            header = this.header;\n\t            queryChr = header.chrAliasTable.hasOwnProperty(chr) ? header.chrAliasTable[chr] : chr;\n\t            qAlignments = this.alignmentCache.queryFeatures(queryChr, bpStart, bpEnd);\n\t            alignmentContainer = new AlignmentContainer(chr, bpStart, bpEnd, this.samplingWindowSize, this.samplingDepth, this.pairsSupported, this.alleleFreqThreshold);\n\t            _iteratorNormalCompletion = true;\n\t            _didIteratorError = false;\n\t            _iteratorError = undefined;\n\t            _context.prev = 11;\n\n\t            for (_iterator = qAlignments[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t              a = _step.value;\n\t              alignmentContainer.push(a);\n\t            }\n\n\t            _context.next = 19;\n\t            break;\n\n\t          case 15:\n\t            _context.prev = 15;\n\t            _context.t0 = _context[\"catch\"](11);\n\t            _didIteratorError = true;\n\t            _iteratorError = _context.t0;\n\n\t          case 19:\n\t            _context.prev = 19;\n\t            _context.prev = 20;\n\n\t            if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t              _iterator.return();\n\t            }\n\n\t          case 22:\n\t            _context.prev = 22;\n\n\t            if (!_didIteratorError) {\n\t              _context.next = 25;\n\t              break;\n\t            }\n\n\t            throw _iteratorError;\n\n\t          case 25:\n\t            return _context.finish(22);\n\n\t          case 26:\n\t            return _context.finish(19);\n\n\t          case 27:\n\t            alignmentContainer.finish();\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 31:\n\t            if (!this.isDataUri) {\n\t              _context.next = 38;\n\t              break;\n\t            }\n\n\t            data = decodeDataURI$1(this.bamPath);\n\t            unc = unbgzf(data.buffer);\n\t            parseAlignments.call(this, unc);\n\t            return _context.abrupt(\"return\", fetchAlignments.call(this, chr, bpStart, bpEnd));\n\n\t          case 38:\n\t            _context.next = 40;\n\t            return igvxhr.loadArrayBuffer(this.bamPath, buildOptions(this.config));\n\n\t          case 40:\n\t            arrayBuffer = _context.sent;\n\t            _unc = unbgzf(arrayBuffer);\n\t            parseAlignments.call(this, _unc);\n\t            return _context.abrupt(\"return\", fetchAlignments.call(this, chr, bpStart, bpEnd));\n\n\t          case 44:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this, [[11, 15, 19, 27], [20,, 22, 26]]);\n\t  }));\n\n\t  return function (_x, _x2, _x3) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tfunction decodeDataURI$1(dataURI) {\n\t  var split = dataURI.split(',');\n\t  var info = split[0].split(':')[1];\n\t  var dataString = split[1];\n\n\t  if (info.indexOf('base64') >= 0) {\n\t    dataString = atob(dataString);\n\t  } else {\n\t    dataString = decodeURI(dataString);\n\t  }\n\n\t  var bytes = new Uint8Array(dataString.length);\n\n\t  for (var i = 0; i < dataString.length; i++) {\n\t    bytes[i] = dataString.charCodeAt(i);\n\t  }\n\n\t  return bytes;\n\t}\n\n\t/**\n\t * Class for reading a bam file\n\t *\n\t * @param config\n\t * @constructor\n\t */\n\n\tvar BamReader = function BamReader(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  this.bamPath = config.url; // Todo - deal with Picard convention.  WHY DOES THERE HAVE TO BE 2?\n\n\t  this.baiPath = config.indexURL || inferIndexPath(this.bamPath, \"bai\"); // If there is an indexURL provided, use it!\n\n\t  BamUtils.setReaderDefaults(this, config);\n\t};\n\n\tBamReader.prototype.readAlignments = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chr, bpStart, bpEnd) {\n\t    var chrToIndex, queryChr, chrId, alignmentContainer, bamIndex, chunks, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, c, lastBlockSize, bsizeOptions, abuffer, fetchMin, fetchMax, range, compressed, ba, done;\n\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            _context.next = 2;\n\t            return getChrIndex.call(this);\n\n\t          case 2:\n\t            chrToIndex = _context.sent;\n\t            queryChr = this.chrAliasTable.hasOwnProperty(chr) ? this.chrAliasTable[chr] : chr;\n\t            chrId = chrToIndex[queryChr];\n\t            alignmentContainer = new AlignmentContainer(chr, bpStart, bpEnd, this.config.samplingWindowSize, this.config.samplingDepth, this.config.pairsSupported, this.config.alleleFreqThreshold);\n\n\t            if (!(chrId === undefined)) {\n\t              _context.next = 10;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 10:\n\t            _context.next = 12;\n\t            return getIndex.call(this);\n\n\t          case 12:\n\t            bamIndex = _context.sent;\n\t            chunks = bamIndex.blocksForRange(chrId, bpStart, bpEnd);\n\n\t            if (!(!chunks || chunks.length === 0)) {\n\t              _context.next = 16;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 16:\n\t            _iteratorNormalCompletion = true;\n\t            _didIteratorError = false;\n\t            _iteratorError = undefined;\n\t            _context.prev = 20;\n\t            _iterator = chunks[Symbol.iterator]();\n\n\t          case 22:\n\t            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t              _context.next = 48;\n\t              break;\n\t            }\n\n\t            c = _step.value;\n\t            lastBlockSize = void 0;\n\n\t            if (!(c.maxv.offset === 0)) {\n\t              _context.next = 29;\n\t              break;\n\t            }\n\n\t            lastBlockSize = 0; // Don't need to read the last block.\n\n\t            _context.next = 34;\n\t            break;\n\n\t          case 29:\n\t            bsizeOptions = buildOptions(this.config, {\n\t              range: {\n\t                start: c.maxv.block,\n\t                size: 26\n\t              }\n\t            });\n\t            _context.next = 32;\n\t            return igvxhr.loadArrayBuffer(this.bamPath, bsizeOptions);\n\n\t          case 32:\n\t            abuffer = _context.sent;\n\t            lastBlockSize = bgzBlockSize(abuffer);\n\n\t          case 34:\n\t            fetchMin = c.minv.block;\n\t            fetchMax = c.maxv.block + lastBlockSize;\n\t            range = {\n\t              start: fetchMin,\n\t              size: fetchMax - fetchMin + 1\n\t            };\n\t            _context.next = 39;\n\t            return igvxhr.loadArrayBuffer(this.bamPath, buildOptions(this.config, {\n\t              range: range\n\t            }));\n\n\t          case 39:\n\t            compressed = _context.sent;\n\t            ba = unbgzf(compressed); //new Uint8Array(unbgzf(compressed)); //, c.maxv.block - c.minv.block + 1));\n\n\t            done = BamUtils.decodeBamRecords(ba, c.minv.offset, alignmentContainer, this.indexToChr, chrId, bpStart, bpEnd, this.filter);\n\n\t            if (!done) {\n\t              _context.next = 44;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"break\", 48);\n\n\t          case 44:\n\n\t          case 45:\n\t            _iteratorNormalCompletion = true;\n\t            _context.next = 22;\n\t            break;\n\n\t          case 48:\n\t            _context.next = 54;\n\t            break;\n\n\t          case 50:\n\t            _context.prev = 50;\n\t            _context.t0 = _context[\"catch\"](20);\n\t            _didIteratorError = true;\n\t            _iteratorError = _context.t0;\n\n\t          case 54:\n\t            _context.prev = 54;\n\t            _context.prev = 55;\n\n\t            if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t              _iterator.return();\n\t            }\n\n\t          case 57:\n\t            _context.prev = 57;\n\n\t            if (!_didIteratorError) {\n\t              _context.next = 60;\n\t              break;\n\t            }\n\n\t            throw _iteratorError;\n\n\t          case 60:\n\t            return _context.finish(57);\n\n\t          case 61:\n\t            return _context.finish(54);\n\n\t          case 62:\n\t            alignmentContainer.finish();\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 64:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this, [[20, 50, 54, 62], [55,, 57, 61]]);\n\t  }));\n\n\t  return function (_x, _x2, _x3) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tfunction getHeader() {\n\t  return _getHeader.apply(this, arguments);\n\t}\n\n\tfunction _getHeader() {\n\t  _getHeader = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n\t    var genome, index, bsizeOptions, abuffer, bsize, len, options;\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            if (this.header) {\n\t              _context2.next = 15;\n\t              break;\n\t            }\n\n\t            genome = this.genome;\n\t            _context2.next = 4;\n\t            return getIndex.call(this);\n\n\t          case 4:\n\t            index = _context2.sent;\n\t            bsizeOptions = buildOptions(this.config, {\n\t              range: {\n\t                start: index.firstAlignmentBlock,\n\t                size: 26\n\t              }\n\t            });\n\t            _context2.next = 8;\n\t            return igvxhr.loadArrayBuffer(this.bamPath, bsizeOptions);\n\n\t          case 8:\n\t            abuffer = _context2.sent;\n\t            bsize = bgzBlockSize(abuffer);\n\t            len = index.firstAlignmentBlock + bsize; // Insure we get the complete compressed block containing the header\n\n\t            options = buildOptions(this.config, {\n\t              range: {\n\t                start: 0,\n\t                size: len\n\t              }\n\t            });\n\t            _context2.next = 14;\n\t            return BamUtils.readHeader(this.bamPath, options, genome);\n\n\t          case 14:\n\t            this.header = _context2.sent;\n\n\t          case 15:\n\t            return _context2.abrupt(\"return\", this.header);\n\n\t          case 16:\n\t          case \"end\":\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this);\n\t  }));\n\t  return _getHeader.apply(this, arguments);\n\t}\n\n\tfunction getIndex() {\n\t  return _getIndex.apply(this, arguments);\n\t}\n\n\tfunction _getIndex() {\n\t  _getIndex = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n\t    var genome;\n\t    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t      while (1) {\n\t        switch (_context3.prev = _context3.next) {\n\t          case 0:\n\t            genome = this.genome;\n\n\t            if (this.index) {\n\t              _context3.next = 6;\n\t              break;\n\t            }\n\n\t            _context3.next = 4;\n\t            return loadBamIndex(this.baiPath, this.config, false, genome);\n\n\t          case 4:\n\t            this.index = _context3.sent;\n\t            return _context3.abrupt(\"return\", this.index);\n\n\t          case 6:\n\t            return _context3.abrupt(\"return\", this.index);\n\n\t          case 7:\n\t          case \"end\":\n\t            return _context3.stop();\n\t        }\n\t      }\n\t    }, _callee3, this);\n\t  }));\n\t  return _getIndex.apply(this, arguments);\n\t}\n\n\tfunction getChrIndex() {\n\t  return _getChrIndex.apply(this, arguments);\n\t}\n\n\tfunction _getChrIndex() {\n\t  _getChrIndex = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n\t    var header;\n\t    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t      while (1) {\n\t        switch (_context4.prev = _context4.next) {\n\t          case 0:\n\t            if (!this.chrToIndex) {\n\t              _context4.next = 4;\n\t              break;\n\t            }\n\n\t            return _context4.abrupt(\"return\", this.chrToIndex);\n\n\t          case 4:\n\t            _context4.next = 6;\n\t            return getHeader.call(this);\n\n\t          case 6:\n\t            header = _context4.sent;\n\t            this.chrToIndex = header.chrToIndex;\n\t            this.indexToChr = header.chrNames;\n\t            this.chrAliasTable = header.chrAliasTable;\n\t            return _context4.abrupt(\"return\", this.chrToIndex);\n\n\t          case 11:\n\t          case \"end\":\n\t            return _context4.stop();\n\t        }\n\t      }\n\t    }, _callee4, this);\n\t  }));\n\t  return _getChrIndex.apply(this, arguments);\n\t}\n\n\tvar ShardedBamReader = function ShardedBamReader(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  var bamReaders = {};\n\t  var chrAliasTable = {};\n\t  config.sources.sequences.forEach(function (chr) {\n\t    bamReaders[chr] = null; // Placeholder\n\n\t    if (genome) {\n\t      var alias = genome.getChromosomeName(chr);\n\t      chrAliasTable[alias] = chr;\n\t    }\n\t  });\n\t  this.chrAliasTable = chrAliasTable;\n\t  this.bamReaders = bamReaders;\n\t  BamUtils.setReaderDefaults(this, config);\n\t};\n\n\tShardedBamReader.prototype.readAlignments = function (chr, start, end) {\n\t  var genome = this.genome;\n\t  var self = this;\n\t  var queryChr = self.chrAliasTable.hasOwnProperty(chr) ? self.chrAliasTable[chr] : chr;\n\n\t  if (!this.bamReaders.hasOwnProperty(queryChr) || \"none\" === this.bamReaders[queryChr]) {\n\t    return Promise.resolve(new AlignmentContainer(chr, start, end));\n\t  } else {\n\t    var reader = self.bamReaders[queryChr];\n\t    var tmp;\n\n\t    if (!reader) {\n\t      tmp = {\n\t        url: self.config.sources.url.replace(\"$CHR\", queryChr)\n\t      };\n\n\t      if (self.config.sources.indexURL) {\n\t        tmp.indexURL = self.config.sources.indexURL.replace(\"$CHR\", queryChr);\n\t      }\n\n\t      var bamConfig = Object.assign(self.config, tmp);\n\t      reader = new BamReader(bamConfig);\n\t      self.bamReaders[queryChr] = reader;\n\t    }\n\n\t    return reader.readAlignments(queryChr, start, end).catch(function (error) {\n\t      console.error(error);\n\t      Alert.presentAlert(\"Error reading BAM or index file for: \" + tmp ? tmp.url : \"\");\n\t      self.bamReaders[queryChr] = \"none\";\n\t      return new AlignmentContainer(chr, start, end); // Empty alignment container\n\t    });\n\t  }\n\t};\n\n\t/**\n\t * Class for reading bam records from an igv.js-flask server\n\t *\n\t * @param config\n\t * @constructor\n\t */\n\n\tvar BamWebserviceReader = function BamWebserviceReader(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  BamUtils.setReaderDefaults(this, config);\n\t}; // Example http://localhost:5000/alignments/?reference=/Users/jrobinso/hg19mini.fa&file=/Users/jrobinso/cram_with_crai_index.cram&region=1:100-2000\n\n\n\tBamWebserviceReader.prototype.readAlignments = function (chr, bpStart, bpEnd) {\n\t  var self = this;\n\t  return getHeader$1.call(self).then(function (header) {\n\t    var queryChr, url;\n\t    queryChr = header.chrAliasTable.hasOwnProperty(chr) ? header.chrAliasTable[chr] : chr;\n\t    url = self.config.url + \"?reference=\" + self.config.referenceFile + \"&file=\" + self.config.alignmentFile + \"\" + \"&region=\" + queryChr + \":\" + bpStart + \"-\" + bpEnd;\n\t    return igvxhr.loadString(url, buildOptions(self.config)).then(function (sam) {\n\t      var alignmentContainer, chrId;\n\t      chrId = header.chrToIndex[queryChr];\n\t      alignmentContainer = new AlignmentContainer(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported, self.alleleFreqThreshold);\n\t      BamUtils.decodeSamRecords(sam, alignmentContainer, queryChr, bpStart, bpEnd, self.filter);\n\t      return alignmentContainer;\n\t    });\n\t  });\n\t}; // Example  http://localhost:5000/alignments/?reference=/Users/jrobinso/hg19mini.fa&file=/Users/jrobinso/cram_with_crai_index.cram&options=-b%20-H\n\n\n\tfunction getHeader$1() {\n\t  var self = this;\n\t  var genome = this.genome;\n\n\t  if (this.header) {\n\t    return Promise.resolve(this.header);\n\t  } else {\n\t    var url = this.config.url + \"?file=\" + this.config.alignmentFile + \"&options=-b,-H\";\n\t    var options = buildOptions(this.config);\n\t    return BamUtils.readHeader(url, options, genome).then(function (header) {\n\t      self.header = header;\n\t      return header;\n\t    });\n\t  }\n\t}\n\n\tvar HtsgetReader = function HtsgetReader(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  BamUtils.setReaderDefaults(this, config);\n\t};\n\n\tHtsgetReader.prototype.readAlignments = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chr, start, end, retryCount) {\n\t    var genome, queryChr, endpointURL, url, data, dataArr, compressedData, unc, ba, chrIdx, alignmentContainer;\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            if (!(this.config.format && this.config.format.toUpperCase() !== \"BAM\")) {\n\t              _context.next = 2;\n\t              break;\n\t            }\n\n\t            throw Error(\"htsget format \".concat(this.config.format, \" is not supported\"));\n\n\t          case 2:\n\t            genome = this.genome;\n\n\t            if (this.header) {\n\t              queryChr = this.header.chrAliasTable.hasOwnProperty(chr) ? this.header.chrAliasTable[chr] : chr;\n\t            } else {\n\t              queryChr = chr;\n\t            }\n\n\t            if (!this.config.url) {\n\t              endpointURL = this.config.endpoint + '/reads/'; // Backward compatibility\n\t            } else {\n\t              endpointURL = this.config.url + this.config.endpoint;\n\t            }\n\n\t            url = endpointURL + this.config.id + '?format=BAM' + '&referenceName=' + queryChr + '&start=' + start + '&end=' + end;\n\t            _context.next = 8;\n\t            return igvxhr.loadJson(url, this.config);\n\n\t          case 8:\n\t            data = _context.sent;\n\t            _context.next = 11;\n\t            return loadUrls(data.htsget.urls);\n\n\t          case 11:\n\t            dataArr = _context.sent;\n\t            compressedData = concatArrays(dataArr); // In essence a complete bam file\n\n\t            unc = unbgzf(compressedData.buffer);\n\t            ba = unc;\n\t            this.header = BamUtils.decodeBamHeader(ba, genome);\n\t            chrIdx = this.header.chrToIndex[chr];\n\t            alignmentContainer = new AlignmentContainer(chr, start, end, this.samplingWindowSize, this.samplingDepth, this.pairsSupported, this.alleleFreqThreshold);\n\t            BamUtils.decodeBamRecords(ba, this.header.size, alignmentContainer, this.header.chrNames, chrIdx, start, end);\n\t            alignmentContainer.finish();\n\n\t            if (!(alignmentContainer.alignments.length === 0)) {\n\t              _context.next = 29;\n\t              break;\n\t            }\n\n\t            if (!(chrIdx === undefined && this.header.chrAliasTable.hasOwnProperty(chr) && !retryCount)) {\n\t              _context.next = 26;\n\t              break;\n\t            }\n\n\t            queryChr = this.header.chrAliasTable[chr];\n\t            return _context.abrupt(\"return\", this.readAlignments(queryChr, start, end, 1));\n\n\t          case 26:\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 27:\n\t            _context.next = 30;\n\t            break;\n\n\t          case 29:\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 30:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3, _x4) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tfunction loadUrls(urls) {\n\t  var promiseArray = [];\n\t  urls.forEach(function (urlData) {\n\t    if (urlData.url.startsWith('data:')) {\n\t      // this is a data-uri\n\t      promiseArray.push(Promise.resolve(dataUriToBytes(urlData.url)));\n\t    } else {\n\t      var options = {};\n\n\t      if (urlData.headers) {\n\t        options.headers = urlData.headers;\n\n\t        if (options.headers.hasOwnProperty(\"referer\")) {\n\t          delete options.headers[\"referer\"];\n\t        }\n\t      }\n\n\t      promiseArray.push(new Promise(function (fulfill, reject) {\n\t        igvxhr.loadArrayBuffer(urlData.url, options).then(function (buffer) {\n\t          fulfill(new Uint8Array(buffer));\n\t        });\n\t      }));\n\t    }\n\t  });\n\t  return Promise.all(promiseArray);\n\t}\n\t/**\n\t * Concatenate a list of Uint8Arrays\n\t * @param arrays\n\t */\n\n\n\tfunction concatArrays(arrays) {\n\t  var len = 0;\n\t  arrays.forEach(function (a) {\n\t    len += a.length;\n\t  });\n\t  var offset = 0;\n\t  var newArray = new Uint8Array(len);\n\t  arrays.forEach(function (a) {\n\t    newArray.set(a, offset);\n\t    offset += a.length;\n\t  });\n\t  return newArray;\n\t}\n\n\tfunction dataUriToBytes(dataUri) {\n\t  var split = dataUri.split(',');\n\t  var info = split[0].split(':')[1];\n\t  var dataString = split[1];\n\n\t  if (info.indexOf('base64') >= 0) {\n\t    dataString = atob(dataString);\n\t  } else {\n\t    dataString = decodeURI(dataString);\n\t  }\n\n\t  var bytes = new Uint8Array(dataString.length);\n\n\t  for (var i = 0; i < dataString.length; i++) {\n\t    bytes[i] = dataString.charCodeAt(i);\n\t  }\n\n\t  return bytes;\n\t}\n\n\t// https://tc39.github.io/ecma262/#sec-map-objects\n\n\n\tvar es_map = collection('Map', function (init) {\n\t  return function Map() {\n\t    return init(this, arguments.length ? arguments[0] : undefined);\n\t  };\n\t}, collectionStrong);\n\n\t// https://tc39.github.io/ecma262/#sec-symbol.hasinstance\n\n\tdefineWellKnownSymbol('hasInstance');\n\n\t// https://tc39.github.io/ecma262/#sec-symbol.species\n\n\tdefineWellKnownSymbol('species');\n\n\t// https://tc39.github.io/ecma262/#sec-symbol.tostringtag\n\n\tdefineWellKnownSymbol('toStringTag');\n\n\tvar $some$1 = arrayIteration.some;\n\tvar STRICT_METHOD$5 = arrayMethodIsStrict('some');\n\tvar USES_TO_LENGTH$a = arrayMethodUsesToLength('some'); // `Array.prototype.some` method\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.some\n\n\t_export({\n\t  target: 'Array',\n\t  proto: true,\n\t  forced: !STRICT_METHOD$5 || !USES_TO_LENGTH$a\n\t}, {\n\t  some: function some(callbackfn\n\t  /* , thisArg */\n\t  ) {\n\t    return $some$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-get-array-@@species\n\n\tsetSpecies('Array');\n\n\tvar ARRAY_BUFFER$1 = 'ArrayBuffer';\n\tvar ArrayBuffer$2 = arrayBuffer[ARRAY_BUFFER$1];\n\tvar NativeArrayBuffer$1 = global_1[ARRAY_BUFFER$1]; // `ArrayBuffer` constructor\n\t// https://tc39.github.io/ecma262/#sec-arraybuffer-constructor\n\n\t_export({\n\t  global: true,\n\t  forced: NativeArrayBuffer$1 !== ArrayBuffer$2\n\t}, {\n\t  ArrayBuffer: ArrayBuffer$2\n\t});\n\tsetSpecies(ARRAY_BUFFER$1);\n\n\tvar HAS_INSTANCE = wellKnownSymbol('hasInstance');\n\tvar FunctionPrototype$1 = Function.prototype; // `Function.prototype[@@hasInstance]` method\n\t// https://tc39.github.io/ecma262/#sec-function.prototype-@@hasinstance\n\n\tif (!(HAS_INSTANCE in FunctionPrototype$1)) {\n\t  objectDefineProperty.f(FunctionPrototype$1, HAS_INSTANCE, {\n\t    value: function (O) {\n\t      if (typeof this != 'function' || !isObject(O)) return false;\n\t      if (!isObject(this.prototype)) return O instanceof this; // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n\n\t      while (O = objectGetPrototypeOf(O)) if (this.prototype === O) return true;\n\n\t      return false;\n\t    }\n\t  });\n\t}\n\n\t// https://tc39.github.io/ecma262/#sec-json-@@tostringtag\n\n\tsetToStringTag(global_1.JSON, 'JSON', true);\n\n\t// https://tc39.github.io/ecma262/#sec-math-@@tostringtag\n\n\tsetToStringTag(Math, 'Math', true);\n\n\t// https://tc39.github.io/ecma262/#sec-number.max_safe_integer\n\n\t_export({\n\t  target: 'Number',\n\t  stat: true\n\t}, {\n\t  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-number.min_safe_integer\n\n\t_export({\n\t  target: 'Number',\n\t  stat: true\n\t}, {\n\t  MIN_SAFE_INTEGER: -0x1FFFFFFFFFFFFF\n\t});\n\n\tvar onFreeze = internalMetadata.onFreeze;\n\tvar nativeFreeze = Object.freeze;\n\tvar FAILS_ON_PRIMITIVES$3 = fails(function () {\n\t  nativeFreeze(1);\n\t}); // `Object.freeze` method\n\t// https://tc39.github.io/ecma262/#sec-object.freeze\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: FAILS_ON_PRIMITIVES$3,\n\t  sham: !freezing\n\t}, {\n\t  freeze: function freeze(it) {\n\t    return nativeFreeze && isObject(it) ? nativeFreeze(onFreeze(it)) : it;\n\t  }\n\t});\n\n\tvar nativeGetOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;\n\tvar FAILS_ON_PRIMITIVES$4 = fails(function () {\n\t  nativeGetOwnPropertyDescriptor$2(1);\n\t});\n\tvar FORCED$a = !descriptors || FAILS_ON_PRIMITIVES$4; // `Object.getOwnPropertyDescriptor` method\n\t// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n\n\t_export({\n\t  target: 'Object',\n\t  stat: true,\n\t  forced: FORCED$a,\n\t  sham: !descriptors\n\t}, {\n\t  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n\t    return nativeGetOwnPropertyDescriptor$2(toIndexedObject(it), key);\n\t  }\n\t});\n\n\tvar quot = /\"/g; // B.2.3.2.1 CreateHTML(string, tag, attribute, value)\n\t// https://tc39.github.io/ecma262/#sec-createhtml\n\n\tvar createHtml = function (string, tag, attribute, value) {\n\t  var S = String(requireObjectCoercible(string));\n\t  var p1 = '<' + tag;\n\t  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n\t  return p1 + '>' + S + '</' + tag + '>';\n\t};\n\n\t// of a tag and escaping quotes in arguments\n\n\tvar stringHtmlForced = function (METHOD_NAME) {\n\t  return fails(function () {\n\t    var test = ''[METHOD_NAME]('\"');\n\t    return test !== test.toLowerCase() || test.split('\"').length > 3;\n\t  });\n\t};\n\n\t// https://tc39.github.io/ecma262/#sec-string.prototype.sub\n\n\n\t_export({\n\t  target: 'String',\n\t  proto: true,\n\t  forced: stringHtmlForced('sub')\n\t}, {\n\t  sub: function sub() {\n\t    return createHtml(this, 'sub', '', '');\n\t  }\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-typedarray-objects\n\n\ttypedArrayConstructor('Float32', function (init) {\n\t  return function Float32Array(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-typedarray-objects\n\n\ttypedArrayConstructor('Float64', function (init) {\n\t  return function Float64Array(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n\t// https://tc39.github.io/ecma262/#sec-typedarray-objects\n\n\ttypedArrayConstructor('Int32', function (init) {\n\t  return function Int32Array(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n\tvar FORCED$b = !global_1.setImmediate || !global_1.clearImmediate; // http://w3c.github.io/setImmediate/\n\n\t_export({\n\t  global: true,\n\t  bind: true,\n\t  enumerable: true,\n\t  forced: FORCED$b\n\t}, {\n\t  // `setImmediate` method\n\t  // http://w3c.github.io/setImmediate/#si-setImmediate\n\t  setImmediate: task.set,\n\t  // `clearImmediate` method\n\t  // http://w3c.github.io/setImmediate/#si-clearImmediate\n\t  clearImmediate: task.clear\n\t});\n\n\tvar eval2 = eval;\n\n\tvar gmodCRAM = function (e) {\n\t  var t = {};\n\n\t  function r(n) {\n\t    if (t[n]) return t[n].exports;\n\t    var i = t[n] = {\n\t      i: n,\n\t      l: !1,\n\t      exports: {}\n\t    };\n\t    return e[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;\n\t  }\n\n\t  return r.m = e, r.c = t, r.d = function (e, t, n) {\n\t    r.o(e, t) || Object.defineProperty(e, t, {\n\t      enumerable: !0,\n\t      get: n\n\t    });\n\t  }, r.r = function (e) {\n\t    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n\t      value: \"Module\"\n\t    }), Object.defineProperty(e, \"__esModule\", {\n\t      value: !0\n\t    });\n\t  }, r.t = function (e, t) {\n\t    if (1 & t && (e = r(e)), 8 & t) return e;\n\t    if (4 & t && \"object\" == _typeof(e) && e && e.__esModule) return e;\n\t    var n = Object.create(null);\n\t    if (r.r(n), Object.defineProperty(n, \"default\", {\n\t      enumerable: !0,\n\t      value: e\n\t    }), 2 & t && \"string\" != typeof e) for (var i in e) {\n\t      r.d(n, i, function (t) {\n\t        return e[t];\n\t      }.bind(null, i));\n\t    }\n\t    return n;\n\t  }, r.n = function (e) {\n\t    var t = e && e.__esModule ? function () {\n\t      return e.default;\n\t    } : function () {\n\t      return e;\n\t    };\n\t    return r.d(t, \"a\", t), t;\n\t  }, r.o = function (e, t) {\n\t    return Object.prototype.hasOwnProperty.call(e, t);\n\t  }, r.p = \"\", r(r.s = 35);\n\t}([function (e, t) {\n\t  var r = /*#__PURE__*/function (_Error) {\n\t    _inherits(r, _Error);\n\n\t    function r() {\n\t      _classCallCheck(this, r);\n\n\t      return _possibleConstructorReturn(this, _getPrototypeOf(r).apply(this, arguments));\n\t    }\n\n\t    return r;\n\t  }( /*#__PURE__*/_wrapNativeSuper(Error));\n\n\t  var n = /*#__PURE__*/function (_r) {\n\t    _inherits(n, _r);\n\n\t    function n() {\n\t      _classCallCheck(this, n);\n\n\t      return _possibleConstructorReturn(this, _getPrototypeOf(n).apply(this, arguments));\n\t    }\n\n\t    return n;\n\t  }(r);\n\n\t  e.exports = {\n\t    CramBufferOverrunError: /*#__PURE__*/function (_n) {\n\t      _inherits(CramBufferOverrunError, _n);\n\n\t      function CramBufferOverrunError() {\n\t        _classCallCheck(this, CramBufferOverrunError);\n\n\t        return _possibleConstructorReturn(this, _getPrototypeOf(CramBufferOverrunError).apply(this, arguments));\n\t      }\n\n\t      return CramBufferOverrunError;\n\t    }(n),\n\t    CramMalformedError: n,\n\t    CramUnimplementedError: /*#__PURE__*/function (_Error2) {\n\t      _inherits(CramUnimplementedError, _Error2);\n\n\t      function CramUnimplementedError() {\n\t        _classCallCheck(this, CramUnimplementedError);\n\n\t        return _possibleConstructorReturn(this, _getPrototypeOf(CramUnimplementedError).apply(this, arguments));\n\t      }\n\n\t      return CramUnimplementedError;\n\t    }( /*#__PURE__*/_wrapNativeSuper(Error)),\n\t    CramSizeLimitError: /*#__PURE__*/function (_r2) {\n\t      _inherits(CramSizeLimitError, _r2);\n\n\t      function CramSizeLimitError() {\n\t        _classCallCheck(this, CramSizeLimitError);\n\n\t        return _possibleConstructorReturn(this, _getPrototypeOf(CramSizeLimitError).apply(this, arguments));\n\t      }\n\n\t      return CramSizeLimitError;\n\t    }(r),\n\t    CramArgumentError: /*#__PURE__*/function (_r3) {\n\t      _inherits(CramArgumentError, _r3);\n\n\t      function CramArgumentError() {\n\t        _classCallCheck(this, CramArgumentError);\n\n\t        return _possibleConstructorReturn(this, _getPrototypeOf(CramArgumentError).apply(this, arguments));\n\t      }\n\n\t      return CramArgumentError;\n\t    }(r)\n\t  };\n\t}, function (e, t, r) {\n\n\t  (function (e) {\n\t    /*!\n\t     * The buffer module from node.js, for the browser.\n\t     *\n\t     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t     * @license  MIT\n\t     */\n\t    var n = r(37),\n\t        i = r(38),\n\t        o = r(19);\n\n\t    function s() {\n\t      return h.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;\n\t    }\n\n\t    function a(e, t) {\n\t      if (s() < t) throw new RangeError(\"Invalid typed array length\");\n\t      return h.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = h.prototype : (null === e && (e = new h(t)), e.length = t), e;\n\t    }\n\n\t    function h(e, t, r) {\n\t      if (!(h.TYPED_ARRAY_SUPPORT || this instanceof h)) return new h(e, t, r);\n\n\t      if (\"number\" == typeof e) {\n\t        if (\"string\" == typeof t) throw new Error(\"If encoding is specified then the first argument must be a string\");\n\t        return c(this, e);\n\t      }\n\n\t      return f(this, e, t, r);\n\t    }\n\n\t    function f(e, t, r, n) {\n\t      if (\"number\" == typeof t) throw new TypeError('\"value\" argument must not be a number');\n\t      return \"undefined\" != typeof ArrayBuffer && t instanceof ArrayBuffer ? function (e, t, r, n) {\n\t        if (t.byteLength, r < 0 || t.byteLength < r) throw new RangeError(\"'offset' is out of bounds\");\n\t        if (t.byteLength < r + (n || 0)) throw new RangeError(\"'length' is out of bounds\");\n\t        t = void 0 === r && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t, r) : new Uint8Array(t, r, n);\n\t        h.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = h.prototype : e = l(e, t);\n\t        return e;\n\t      }(e, t, r, n) : \"string\" == typeof t ? function (e, t, r) {\n\t        \"string\" == typeof r && \"\" !== r || (r = \"utf8\");\n\t        if (!h.isEncoding(r)) throw new TypeError('\"encoding\" must be a valid string encoding');\n\t        var n = 0 | p(t, r),\n\t            i = (e = a(e, n)).write(t, r);\n\t        i !== n && (e = e.slice(0, i));\n\t        return e;\n\t      }(e, t, r) : function (e, t) {\n\t        if (h.isBuffer(t)) {\n\t          var r = 0 | d(t.length);\n\t          return 0 === (e = a(e, r)).length ? e : (t.copy(e, 0, 0, r), e);\n\t        }\n\n\t        if (t) {\n\t          if (\"undefined\" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || \"length\" in t) return \"number\" != typeof t.length || (n = t.length) != n ? a(e, 0) : l(e, t);\n\t          if (\"Buffer\" === t.type && o(t.data)) return l(e, t.data);\n\t        }\n\n\t        var n;\n\t        throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\");\n\t      }(e, t);\n\t    }\n\n\t    function u(e) {\n\t      if (\"number\" != typeof e) throw new TypeError('\"size\" argument must be a number');\n\t      if (e < 0) throw new RangeError('\"size\" argument must not be negative');\n\t    }\n\n\t    function c(e, t) {\n\t      if (u(t), e = a(e, t < 0 ? 0 : 0 | d(t)), !h.TYPED_ARRAY_SUPPORT) for (var r = 0; r < t; ++r) {\n\t        e[r] = 0;\n\t      }\n\t      return e;\n\t    }\n\n\t    function l(e, t) {\n\t      var r = t.length < 0 ? 0 : 0 | d(t.length);\n\t      e = a(e, r);\n\n\t      for (var n = 0; n < r; n += 1) {\n\t        e[n] = 255 & t[n];\n\t      }\n\n\t      return e;\n\t    }\n\n\t    function d(e) {\n\t      if (e >= s()) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + s().toString(16) + \" bytes\");\n\t      return 0 | e;\n\t    }\n\n\t    function p(e, t) {\n\t      if (h.isBuffer(e)) return e.length;\n\t      if (\"undefined\" != typeof ArrayBuffer && \"function\" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) return e.byteLength;\n\t      \"string\" != typeof e && (e = \"\" + e);\n\t      var r = e.length;\n\t      if (0 === r) return 0;\n\n\t      for (var n = !1;;) {\n\t        switch (t) {\n\t          case \"ascii\":\n\t          case \"latin1\":\n\t          case \"binary\":\n\t            return r;\n\n\t          case \"utf8\":\n\t          case \"utf-8\":\n\t          case void 0:\n\t            return D(e).length;\n\n\t          case \"ucs2\":\n\t          case \"ucs-2\":\n\t          case \"utf16le\":\n\t          case \"utf-16le\":\n\t            return 2 * r;\n\n\t          case \"hex\":\n\t            return r >>> 1;\n\n\t          case \"base64\":\n\t            return j(e).length;\n\n\t          default:\n\t            if (n) return D(e).length;\n\t            t = (\"\" + t).toLowerCase(), n = !0;\n\t        }\n\t      }\n\t    }\n\n\t    function g(e, t, r) {\n\t      var n = e[t];\n\t      e[t] = e[r], e[r] = n;\n\t    }\n\n\t    function m(e, t, r, n, i) {\n\t      if (0 === e.length) return -1;\n\n\t      if (\"string\" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {\n\t        if (i) return -1;\n\t        r = e.length - 1;\n\t      } else if (r < 0) {\n\t        if (!i) return -1;\n\t        r = 0;\n\t      }\n\n\t      if (\"string\" == typeof t && (t = h.from(t, n)), h.isBuffer(t)) return 0 === t.length ? -1 : _(e, t, r, n, i);\n\t      if (\"number\" == typeof t) return t &= 255, h.TYPED_ARRAY_SUPPORT && \"function\" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : _(e, [t], r, n, i);\n\t      throw new TypeError(\"val must be string, number or Buffer\");\n\t    }\n\n\t    function _(e, t, r, n, i) {\n\t      var o,\n\t          s = 1,\n\t          a = e.length,\n\t          h = t.length;\n\n\t      if (void 0 !== n && (\"ucs2\" === (n = String(n).toLowerCase()) || \"ucs-2\" === n || \"utf16le\" === n || \"utf-16le\" === n)) {\n\t        if (e.length < 2 || t.length < 2) return -1;\n\t        s = 2, a /= 2, h /= 2, r /= 2;\n\t      }\n\n\t      function f(e, t) {\n\t        return 1 === s ? e[t] : e.readUInt16BE(t * s);\n\t      }\n\n\t      if (i) {\n\t        var u = -1;\n\n\t        for (o = r; o < a; o++) {\n\t          if (f(e, o) === f(t, -1 === u ? 0 : o - u)) {\n\t            if (-1 === u && (u = o), o - u + 1 === h) return u * s;\n\t          } else -1 !== u && (o -= o - u), u = -1;\n\t        }\n\t      } else for (r + h > a && (r = a - h), o = r; o >= 0; o--) {\n\t        for (var c = !0, l = 0; l < h; l++) {\n\t          if (f(e, o + l) !== f(t, l)) {\n\t            c = !1;\n\t            break;\n\t          }\n\t        }\n\n\t        if (c) return o;\n\t      }\n\n\t      return -1;\n\t    }\n\n\t    function y(e, t, r, n) {\n\t      r = Number(r) || 0;\n\t      var i = e.length - r;\n\t      n ? (n = Number(n)) > i && (n = i) : n = i;\n\t      var o = t.length;\n\t      if (o % 2 != 0) throw new TypeError(\"Invalid hex string\");\n\t      n > o / 2 && (n = o / 2);\n\n\t      for (var s = 0; s < n; ++s) {\n\t        var a = parseInt(t.substr(2 * s, 2), 16);\n\t        if (isNaN(a)) return s;\n\t        e[r + s] = a;\n\t      }\n\n\t      return s;\n\t    }\n\n\t    function b(e, t, r, n) {\n\t      return q(D(t, e.length - r), e, r, n);\n\t    }\n\n\t    function w(e, t, r, n) {\n\t      return q(function (e) {\n\t        for (var t = [], r = 0; r < e.length; ++r) {\n\t          t.push(255 & e.charCodeAt(r));\n\t        }\n\n\t        return t;\n\t      }(t), e, r, n);\n\t    }\n\n\t    function v(e, t, r, n) {\n\t      return w(e, t, r, n);\n\t    }\n\n\t    function E(e, t, r, n) {\n\t      return q(j(t), e, r, n);\n\t    }\n\n\t    function S(e, t, r, n) {\n\t      return q(function (e, t) {\n\t        for (var r, n, i, o = [], s = 0; s < e.length && !((t -= 2) < 0); ++s) {\n\t          r = e.charCodeAt(s), n = r >> 8, i = r % 256, o.push(i), o.push(n);\n\t        }\n\n\t        return o;\n\t      }(t, e.length - r), e, r, n);\n\t    }\n\n\t    function A(e, t, r) {\n\t      return 0 === t && r === e.length ? n.fromByteArray(e) : n.fromByteArray(e.slice(t, r));\n\t    }\n\n\t    function k(e, t, r) {\n\t      r = Math.min(e.length, r);\n\n\t      for (var n = [], i = t; i < r;) {\n\t        var o,\n\t            s,\n\t            a,\n\t            h,\n\t            f = e[i],\n\t            u = null,\n\t            c = f > 239 ? 4 : f > 223 ? 3 : f > 191 ? 2 : 1;\n\t        if (i + c <= r) switch (c) {\n\t          case 1:\n\t            f < 128 && (u = f);\n\t            break;\n\n\t          case 2:\n\t            128 == (192 & (o = e[i + 1])) && (h = (31 & f) << 6 | 63 & o) > 127 && (u = h);\n\t            break;\n\n\t          case 3:\n\t            o = e[i + 1], s = e[i + 2], 128 == (192 & o) && 128 == (192 & s) && (h = (15 & f) << 12 | (63 & o) << 6 | 63 & s) > 2047 && (h < 55296 || h > 57343) && (u = h);\n\t            break;\n\n\t          case 4:\n\t            o = e[i + 1], s = e[i + 2], a = e[i + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && (h = (15 & f) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) > 65535 && h < 1114112 && (u = h);\n\t        }\n\t        null === u ? (u = 65533, c = 1) : u > 65535 && (u -= 65536, n.push(u >>> 10 & 1023 | 55296), u = 56320 | 1023 & u), n.push(u), i += c;\n\t      }\n\n\t      return function (e) {\n\t        var t = e.length;\n\t        if (t <= x) return String.fromCharCode.apply(String, e);\n\t        var r = \"\",\n\t            n = 0;\n\n\t        for (; n < t;) {\n\t          r += String.fromCharCode.apply(String, e.slice(n, n += x));\n\t        }\n\n\t        return r;\n\t      }(n);\n\t    }\n\n\t    t.Buffer = h, t.SlowBuffer = function (e) {\n\t      +e != e && (e = 0);\n\t      return h.alloc(+e);\n\t    }, t.INSPECT_MAX_BYTES = 50, h.TYPED_ARRAY_SUPPORT = void 0 !== e.TYPED_ARRAY_SUPPORT ? e.TYPED_ARRAY_SUPPORT : function () {\n\t      try {\n\t        var e = new Uint8Array(1);\n\t        return e.__proto__ = {\n\t          __proto__: Uint8Array.prototype,\n\t          foo: function foo() {\n\t            return 42;\n\t          }\n\t        }, 42 === e.foo() && \"function\" == typeof e.subarray && 0 === e.subarray(1, 1).byteLength;\n\t      } catch (e) {\n\t        return !1;\n\t      }\n\t    }(), t.kMaxLength = s(), h.poolSize = 8192, h._augment = function (e) {\n\t      return e.__proto__ = h.prototype, e;\n\t    }, h.from = function (e, t, r) {\n\t      return f(null, e, t, r);\n\t    }, h.TYPED_ARRAY_SUPPORT && (h.prototype.__proto__ = Uint8Array.prototype, h.__proto__ = Uint8Array, \"undefined\" != typeof Symbol && Symbol.species && h[Symbol.species] === h && Object.defineProperty(h, Symbol.species, {\n\t      value: null,\n\t      configurable: !0\n\t    })), h.alloc = function (e, t, r) {\n\t      return function (e, t, r, n) {\n\t        return u(t), t <= 0 ? a(e, t) : void 0 !== r ? \"string\" == typeof n ? a(e, t).fill(r, n) : a(e, t).fill(r) : a(e, t);\n\t      }(null, e, t, r);\n\t    }, h.allocUnsafe = function (e) {\n\t      return c(null, e);\n\t    }, h.allocUnsafeSlow = function (e) {\n\t      return c(null, e);\n\t    }, h.isBuffer = function (e) {\n\t      return !(null == e || !e._isBuffer);\n\t    }, h.compare = function (e, t) {\n\t      if (!h.isBuffer(e) || !h.isBuffer(t)) throw new TypeError(\"Arguments must be Buffers\");\n\t      if (e === t) return 0;\n\n\t      for (var r = e.length, n = t.length, i = 0, o = Math.min(r, n); i < o; ++i) {\n\t        if (e[i] !== t[i]) {\n\t          r = e[i], n = t[i];\n\t          break;\n\t        }\n\t      }\n\n\t      return r < n ? -1 : n < r ? 1 : 0;\n\t    }, h.isEncoding = function (e) {\n\t      switch (String(e).toLowerCase()) {\n\t        case \"hex\":\n\t        case \"utf8\":\n\t        case \"utf-8\":\n\t        case \"ascii\":\n\t        case \"latin1\":\n\t        case \"binary\":\n\t        case \"base64\":\n\t        case \"ucs2\":\n\t        case \"ucs-2\":\n\t        case \"utf16le\":\n\t        case \"utf-16le\":\n\t          return !0;\n\n\t        default:\n\t          return !1;\n\t      }\n\t    }, h.concat = function (e, t) {\n\t      if (!o(e)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t      if (0 === e.length) return h.alloc(0);\n\t      var r;\n\t      if (void 0 === t) for (t = 0, r = 0; r < e.length; ++r) {\n\t        t += e[r].length;\n\t      }\n\t      var n = h.allocUnsafe(t),\n\t          i = 0;\n\n\t      for (r = 0; r < e.length; ++r) {\n\t        var s = e[r];\n\t        if (!h.isBuffer(s)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t        s.copy(n, i), i += s.length;\n\t      }\n\n\t      return n;\n\t    }, h.byteLength = p, h.prototype._isBuffer = !0, h.prototype.swap16 = function () {\n\t      var e = this.length;\n\t      if (e % 2 != 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n\n\t      for (var t = 0; t < e; t += 2) {\n\t        g(this, t, t + 1);\n\t      }\n\n\t      return this;\n\t    }, h.prototype.swap32 = function () {\n\t      var e = this.length;\n\t      if (e % 4 != 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n\n\t      for (var t = 0; t < e; t += 4) {\n\t        g(this, t, t + 3), g(this, t + 1, t + 2);\n\t      }\n\n\t      return this;\n\t    }, h.prototype.swap64 = function () {\n\t      var e = this.length;\n\t      if (e % 8 != 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n\n\t      for (var t = 0; t < e; t += 8) {\n\t        g(this, t, t + 7), g(this, t + 1, t + 6), g(this, t + 2, t + 5), g(this, t + 3, t + 4);\n\t      }\n\n\t      return this;\n\t    }, h.prototype.toString = function () {\n\t      var e = 0 | this.length;\n\t      return 0 === e ? \"\" : 0 === arguments.length ? k(this, 0, e) : function (e, t, r) {\n\t        var n = !1;\n\t        if ((void 0 === t || t < 0) && (t = 0), t > this.length) return \"\";\n\t        if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return \"\";\n\t        if ((r >>>= 0) <= (t >>>= 0)) return \"\";\n\n\t        for (e || (e = \"utf8\");;) {\n\t          switch (e) {\n\t            case \"hex\":\n\t              return T(this, t, r);\n\n\t            case \"utf8\":\n\t            case \"utf-8\":\n\t              return k(this, t, r);\n\n\t            case \"ascii\":\n\t              return C(this, t, r);\n\n\t            case \"latin1\":\n\t            case \"binary\":\n\t              return R(this, t, r);\n\n\t            case \"base64\":\n\t              return A(this, t, r);\n\n\t            case \"ucs2\":\n\t            case \"ucs-2\":\n\t            case \"utf16le\":\n\t            case \"utf-16le\":\n\t              return I(this, t, r);\n\n\t            default:\n\t              if (n) throw new TypeError(\"Unknown encoding: \" + e);\n\t              e = (e + \"\").toLowerCase(), n = !0;\n\t          }\n\t        }\n\t      }.apply(this, arguments);\n\t    }, h.prototype.equals = function (e) {\n\t      if (!h.isBuffer(e)) throw new TypeError(\"Argument must be a Buffer\");\n\t      return this === e || 0 === h.compare(this, e);\n\t    }, h.prototype.inspect = function () {\n\t      var e = \"\",\n\t          r = t.INSPECT_MAX_BYTES;\n\t      return this.length > 0 && (e = this.toString(\"hex\", 0, r).match(/.{2}/g).join(\" \"), this.length > r && (e += \" ... \")), \"<Buffer \" + e + \">\";\n\t    }, h.prototype.compare = function (e, t, r, n, i) {\n\t      if (!h.isBuffer(e)) throw new TypeError(\"Argument must be a Buffer\");\n\t      if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), t < 0 || r > e.length || n < 0 || i > this.length) throw new RangeError(\"out of range index\");\n\t      if (n >= i && t >= r) return 0;\n\t      if (n >= i) return -1;\n\t      if (t >= r) return 1;\n\t      if (this === e) return 0;\n\n\t      for (var o = (i >>>= 0) - (n >>>= 0), s = (r >>>= 0) - (t >>>= 0), a = Math.min(o, s), f = this.slice(n, i), u = e.slice(t, r), c = 0; c < a; ++c) {\n\t        if (f[c] !== u[c]) {\n\t          o = f[c], s = u[c];\n\t          break;\n\t        }\n\t      }\n\n\t      return o < s ? -1 : s < o ? 1 : 0;\n\t    }, h.prototype.includes = function (e, t, r) {\n\t      return -1 !== this.indexOf(e, t, r);\n\t    }, h.prototype.indexOf = function (e, t, r) {\n\t      return m(this, e, t, r, !0);\n\t    }, h.prototype.lastIndexOf = function (e, t, r) {\n\t      return m(this, e, t, r, !1);\n\t    }, h.prototype.write = function (e, t, r, n) {\n\t      if (void 0 === t) n = \"utf8\", r = this.length, t = 0;else if (void 0 === r && \"string\" == typeof t) n = t, r = this.length, t = 0;else {\n\t        if (!isFinite(t)) throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n\t        t |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = \"utf8\")) : (n = r, r = void 0);\n\t      }\n\t      var i = this.length - t;\n\t      if ((void 0 === r || r > i) && (r = i), e.length > 0 && (r < 0 || t < 0) || t > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n\t      n || (n = \"utf8\");\n\n\t      for (var o = !1;;) {\n\t        switch (n) {\n\t          case \"hex\":\n\t            return y(this, e, t, r);\n\n\t          case \"utf8\":\n\t          case \"utf-8\":\n\t            return b(this, e, t, r);\n\n\t          case \"ascii\":\n\t            return w(this, e, t, r);\n\n\t          case \"latin1\":\n\t          case \"binary\":\n\t            return v(this, e, t, r);\n\n\t          case \"base64\":\n\t            return E(this, e, t, r);\n\n\t          case \"ucs2\":\n\t          case \"ucs-2\":\n\t          case \"utf16le\":\n\t          case \"utf-16le\":\n\t            return S(this, e, t, r);\n\n\t          default:\n\t            if (o) throw new TypeError(\"Unknown encoding: \" + n);\n\t            n = (\"\" + n).toLowerCase(), o = !0;\n\t        }\n\t      }\n\t    }, h.prototype.toJSON = function () {\n\t      return {\n\t        type: \"Buffer\",\n\t        data: Array.prototype.slice.call(this._arr || this, 0)\n\t      };\n\t    };\n\t    var x = 4096;\n\n\t    function C(e, t, r) {\n\t      var n = \"\";\n\t      r = Math.min(e.length, r);\n\n\t      for (var i = t; i < r; ++i) {\n\t        n += String.fromCharCode(127 & e[i]);\n\t      }\n\n\t      return n;\n\t    }\n\n\t    function R(e, t, r) {\n\t      var n = \"\";\n\t      r = Math.min(e.length, r);\n\n\t      for (var i = t; i < r; ++i) {\n\t        n += String.fromCharCode(e[i]);\n\t      }\n\n\t      return n;\n\t    }\n\n\t    function T(e, t, r) {\n\t      var n = e.length;\n\t      (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);\n\n\t      for (var i = \"\", o = t; o < r; ++o) {\n\t        i += z(e[o]);\n\t      }\n\n\t      return i;\n\t    }\n\n\t    function I(e, t, r) {\n\t      for (var n = e.slice(t, r), i = \"\", o = 0; o < n.length; o += 2) {\n\t        i += String.fromCharCode(n[o] + 256 * n[o + 1]);\n\t      }\n\n\t      return i;\n\t    }\n\n\t    function B(e, t, r) {\n\t      if (e % 1 != 0 || e < 0) throw new RangeError(\"offset is not uint\");\n\t      if (e + t > r) throw new RangeError(\"Trying to access beyond buffer length\");\n\t    }\n\n\t    function L(e, t, r, n, i, o) {\n\t      if (!h.isBuffer(e)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n\t      if (t > i || t < o) throw new RangeError('\"value\" argument is out of bounds');\n\t      if (r + n > e.length) throw new RangeError(\"Index out of range\");\n\t    }\n\n\t    function N(e, t, r, n) {\n\t      t < 0 && (t = 65535 + t + 1);\n\n\t      for (var i = 0, o = Math.min(e.length - r, 2); i < o; ++i) {\n\t        e[r + i] = (t & 255 << 8 * (n ? i : 1 - i)) >>> 8 * (n ? i : 1 - i);\n\t      }\n\t    }\n\n\t    function F(e, t, r, n) {\n\t      t < 0 && (t = 4294967295 + t + 1);\n\n\t      for (var i = 0, o = Math.min(e.length - r, 4); i < o; ++i) {\n\t        e[r + i] = t >>> 8 * (n ? i : 3 - i) & 255;\n\t      }\n\t    }\n\n\t    function M(e, t, r, n, i, o) {\n\t      if (r + n > e.length) throw new RangeError(\"Index out of range\");\n\t      if (r < 0) throw new RangeError(\"Index out of range\");\n\t    }\n\n\t    function O(e, t, r, n, o) {\n\t      return o || M(e, 0, r, 4), i.write(e, t, r, n, 23, 4), r + 4;\n\t    }\n\n\t    function P(e, t, r, n, o) {\n\t      return o || M(e, 0, r, 8), i.write(e, t, r, n, 52, 8), r + 8;\n\t    }\n\n\t    h.prototype.slice = function (e, t) {\n\t      var r,\n\t          n = this.length;\n\t      if ((e = ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), (t = void 0 === t ? n : ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), t < e && (t = e), h.TYPED_ARRAY_SUPPORT) (r = this.subarray(e, t)).__proto__ = h.prototype;else {\n\t        var i = t - e;\n\t        r = new h(i, void 0);\n\n\t        for (var o = 0; o < i; ++o) {\n\t          r[o] = this[o + e];\n\t        }\n\t      }\n\t      return r;\n\t    }, h.prototype.readUIntLE = function (e, t, r) {\n\t      e |= 0, t |= 0, r || B(e, t, this.length);\n\n\t      for (var n = this[e], i = 1, o = 0; ++o < t && (i *= 256);) {\n\t        n += this[e + o] * i;\n\t      }\n\n\t      return n;\n\t    }, h.prototype.readUIntBE = function (e, t, r) {\n\t      e |= 0, t |= 0, r || B(e, t, this.length);\n\n\t      for (var n = this[e + --t], i = 1; t > 0 && (i *= 256);) {\n\t        n += this[e + --t] * i;\n\t      }\n\n\t      return n;\n\t    }, h.prototype.readUInt8 = function (e, t) {\n\t      return t || B(e, 1, this.length), this[e];\n\t    }, h.prototype.readUInt16LE = function (e, t) {\n\t      return t || B(e, 2, this.length), this[e] | this[e + 1] << 8;\n\t    }, h.prototype.readUInt16BE = function (e, t) {\n\t      return t || B(e, 2, this.length), this[e] << 8 | this[e + 1];\n\t    }, h.prototype.readUInt32LE = function (e, t) {\n\t      return t || B(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];\n\t    }, h.prototype.readUInt32BE = function (e, t) {\n\t      return t || B(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);\n\t    }, h.prototype.readIntLE = function (e, t, r) {\n\t      e |= 0, t |= 0, r || B(e, t, this.length);\n\n\t      for (var n = this[e], i = 1, o = 0; ++o < t && (i *= 256);) {\n\t        n += this[e + o] * i;\n\t      }\n\n\t      return n >= (i *= 128) && (n -= Math.pow(2, 8 * t)), n;\n\t    }, h.prototype.readIntBE = function (e, t, r) {\n\t      e |= 0, t |= 0, r || B(e, t, this.length);\n\n\t      for (var n = t, i = 1, o = this[e + --n]; n > 0 && (i *= 256);) {\n\t        o += this[e + --n] * i;\n\t      }\n\n\t      return o >= (i *= 128) && (o -= Math.pow(2, 8 * t)), o;\n\t    }, h.prototype.readInt8 = function (e, t) {\n\t      return t || B(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];\n\t    }, h.prototype.readInt16LE = function (e, t) {\n\t      t || B(e, 2, this.length);\n\t      var r = this[e] | this[e + 1] << 8;\n\t      return 32768 & r ? 4294901760 | r : r;\n\t    }, h.prototype.readInt16BE = function (e, t) {\n\t      t || B(e, 2, this.length);\n\t      var r = this[e + 1] | this[e] << 8;\n\t      return 32768 & r ? 4294901760 | r : r;\n\t    }, h.prototype.readInt32LE = function (e, t) {\n\t      return t || B(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;\n\t    }, h.prototype.readInt32BE = function (e, t) {\n\t      return t || B(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];\n\t    }, h.prototype.readFloatLE = function (e, t) {\n\t      return t || B(e, 4, this.length), i.read(this, e, !0, 23, 4);\n\t    }, h.prototype.readFloatBE = function (e, t) {\n\t      return t || B(e, 4, this.length), i.read(this, e, !1, 23, 4);\n\t    }, h.prototype.readDoubleLE = function (e, t) {\n\t      return t || B(e, 8, this.length), i.read(this, e, !0, 52, 8);\n\t    }, h.prototype.readDoubleBE = function (e, t) {\n\t      return t || B(e, 8, this.length), i.read(this, e, !1, 52, 8);\n\t    }, h.prototype.writeUIntLE = function (e, t, r, n) {\n\t      (e = +e, t |= 0, r |= 0, n) || L(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);\n\t      var i = 1,\n\t          o = 0;\n\n\t      for (this[t] = 255 & e; ++o < r && (i *= 256);) {\n\t        this[t + o] = e / i & 255;\n\t      }\n\n\t      return t + r;\n\t    }, h.prototype.writeUIntBE = function (e, t, r, n) {\n\t      (e = +e, t |= 0, r |= 0, n) || L(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);\n\t      var i = r - 1,\n\t          o = 1;\n\n\t      for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) {\n\t        this[t + i] = e / o & 255;\n\t      }\n\n\t      return t + r;\n\t    }, h.prototype.writeUInt8 = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 1, 255, 0), h.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), this[t] = 255 & e, t + 1;\n\t    }, h.prototype.writeUInt16LE = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 2, 65535, 0), h.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : N(this, e, t, !0), t + 2;\n\t    }, h.prototype.writeUInt16BE = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 2, 65535, 0), h.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : N(this, e, t, !1), t + 2;\n\t    }, h.prototype.writeUInt32LE = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 4, 4294967295, 0), h.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e) : F(this, e, t, !0), t + 4;\n\t    }, h.prototype.writeUInt32BE = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 4, 4294967295, 0), h.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : F(this, e, t, !1), t + 4;\n\t    }, h.prototype.writeIntLE = function (e, t, r, n) {\n\t      if (e = +e, t |= 0, !n) {\n\t        var i = Math.pow(2, 8 * r - 1);\n\t        L(this, e, t, r, i - 1, -i);\n\t      }\n\n\t      var o = 0,\n\t          s = 1,\n\t          a = 0;\n\n\t      for (this[t] = 255 & e; ++o < r && (s *= 256);) {\n\t        e < 0 && 0 === a && 0 !== this[t + o - 1] && (a = 1), this[t + o] = (e / s >> 0) - a & 255;\n\t      }\n\n\t      return t + r;\n\t    }, h.prototype.writeIntBE = function (e, t, r, n) {\n\t      if (e = +e, t |= 0, !n) {\n\t        var i = Math.pow(2, 8 * r - 1);\n\t        L(this, e, t, r, i - 1, -i);\n\t      }\n\n\t      var o = r - 1,\n\t          s = 1,\n\t          a = 0;\n\n\t      for (this[t + o] = 255 & e; --o >= 0 && (s *= 256);) {\n\t        e < 0 && 0 === a && 0 !== this[t + o + 1] && (a = 1), this[t + o] = (e / s >> 0) - a & 255;\n\t      }\n\n\t      return t + r;\n\t    }, h.prototype.writeInt8 = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 1, 127, -128), h.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1;\n\t    }, h.prototype.writeInt16LE = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 2, 32767, -32768), h.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : N(this, e, t, !0), t + 2;\n\t    }, h.prototype.writeInt16BE = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 2, 32767, -32768), h.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : N(this, e, t, !1), t + 2;\n\t    }, h.prototype.writeInt32LE = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 4, 2147483647, -2147483648), h.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24) : F(this, e, t, !0), t + 4;\n\t    }, h.prototype.writeInt32BE = function (e, t, r) {\n\t      return e = +e, t |= 0, r || L(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), h.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : F(this, e, t, !1), t + 4;\n\t    }, h.prototype.writeFloatLE = function (e, t, r) {\n\t      return O(this, e, t, !0, r);\n\t    }, h.prototype.writeFloatBE = function (e, t, r) {\n\t      return O(this, e, t, !1, r);\n\t    }, h.prototype.writeDoubleLE = function (e, t, r) {\n\t      return P(this, e, t, !0, r);\n\t    }, h.prototype.writeDoubleBE = function (e, t, r) {\n\t      return P(this, e, t, !1, r);\n\t    }, h.prototype.copy = function (e, t, r, n) {\n\t      if (r || (r = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < r && (n = r), n === r) return 0;\n\t      if (0 === e.length || 0 === this.length) return 0;\n\t      if (t < 0) throw new RangeError(\"targetStart out of bounds\");\n\t      if (r < 0 || r >= this.length) throw new RangeError(\"sourceStart out of bounds\");\n\t      if (n < 0) throw new RangeError(\"sourceEnd out of bounds\");\n\t      n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r);\n\t      var i,\n\t          o = n - r;\n\t      if (this === e && r < t && t < n) for (i = o - 1; i >= 0; --i) {\n\t        e[i + t] = this[i + r];\n\t      } else if (o < 1e3 || !h.TYPED_ARRAY_SUPPORT) for (i = 0; i < o; ++i) {\n\t        e[i + t] = this[i + r];\n\t      } else Uint8Array.prototype.set.call(e, this.subarray(r, r + o), t);\n\t      return o;\n\t    }, h.prototype.fill = function (e, t, r, n) {\n\t      if (\"string\" == typeof e) {\n\t        if (\"string\" == typeof t ? (n = t, t = 0, r = this.length) : \"string\" == typeof r && (n = r, r = this.length), 1 === e.length) {\n\t          var i = e.charCodeAt(0);\n\t          i < 256 && (e = i);\n\t        }\n\n\t        if (void 0 !== n && \"string\" != typeof n) throw new TypeError(\"encoding must be a string\");\n\t        if (\"string\" == typeof n && !h.isEncoding(n)) throw new TypeError(\"Unknown encoding: \" + n);\n\t      } else \"number\" == typeof e && (e &= 255);\n\n\t      if (t < 0 || this.length < t || this.length < r) throw new RangeError(\"Out of range index\");\n\t      if (r <= t) return this;\n\t      var o;\n\t      if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, e || (e = 0), \"number\" == typeof e) for (o = t; o < r; ++o) {\n\t        this[o] = e;\n\t      } else {\n\t        var s = h.isBuffer(e) ? e : D(new h(e, n).toString()),\n\t            a = s.length;\n\n\t        for (o = 0; o < r - t; ++o) {\n\t          this[o + t] = s[o % a];\n\t        }\n\t      }\n\t      return this;\n\t    };\n\t    var U = /[^+\\/0-9A-Za-z-_]/g;\n\n\t    function z(e) {\n\t      return e < 16 ? \"0\" + e.toString(16) : e.toString(16);\n\t    }\n\n\t    function D(e, t) {\n\t      var r;\n\t      t = t || 1 / 0;\n\n\t      for (var n = e.length, i = null, o = [], s = 0; s < n; ++s) {\n\t        if ((r = e.charCodeAt(s)) > 55295 && r < 57344) {\n\t          if (!i) {\n\t            if (r > 56319) {\n\t              (t -= 3) > -1 && o.push(239, 191, 189);\n\t              continue;\n\t            }\n\n\t            if (s + 1 === n) {\n\t              (t -= 3) > -1 && o.push(239, 191, 189);\n\t              continue;\n\t            }\n\n\t            i = r;\n\t            continue;\n\t          }\n\n\t          if (r < 56320) {\n\t            (t -= 3) > -1 && o.push(239, 191, 189), i = r;\n\t            continue;\n\t          }\n\n\t          r = 65536 + (i - 55296 << 10 | r - 56320);\n\t        } else i && (t -= 3) > -1 && o.push(239, 191, 189);\n\n\t        if (i = null, r < 128) {\n\t          if ((t -= 1) < 0) break;\n\t          o.push(r);\n\t        } else if (r < 2048) {\n\t          if ((t -= 2) < 0) break;\n\t          o.push(r >> 6 | 192, 63 & r | 128);\n\t        } else if (r < 65536) {\n\t          if ((t -= 3) < 0) break;\n\t          o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);\n\t        } else {\n\t          if (!(r < 1114112)) throw new Error(\"Invalid code point\");\n\t          if ((t -= 4) < 0) break;\n\t          o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);\n\t        }\n\t      }\n\n\t      return o;\n\t    }\n\n\t    function j(e) {\n\t      return n.toByteArray(function (e) {\n\t        if ((e = function (e) {\n\t          return e.trim ? e.trim() : e.replace(/^\\s+|\\s+$/g, \"\");\n\t        }(e).replace(U, \"\")).length < 2) return \"\";\n\n\t        for (; e.length % 4 != 0;) {\n\t          e += \"=\";\n\t        }\n\n\t        return e;\n\t      }(e));\n\t    }\n\n\t    function q(e, t, r, n) {\n\t      for (var i = 0; i < n && !(i + r >= t.length || i >= e.length); ++i) {\n\t        t[i + r] = e[i];\n\t      }\n\n\t      return i;\n\t    }\n\t  }).call(this, r(2));\n\t}, function (e, t) {\n\t  var r;\n\n\t  r = function () {\n\t    return this;\n\t  }();\n\n\t  try {\n\t    r = r || new Function(\"return this\")();\n\t  } catch (e) {\n\t    \"object\" == (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) && (r = window);\n\t  }\n\n\t  e.exports = r;\n\t}, function (e, t) {\n\t  var r,\n\t      n,\n\t      i = e.exports = {};\n\n\t  function o() {\n\t    throw new Error(\"setTimeout has not been defined\");\n\t  }\n\n\t  function s() {\n\t    throw new Error(\"clearTimeout has not been defined\");\n\t  }\n\n\t  function a(e) {\n\t    if (r === setTimeout) return setTimeout(e, 0);\n\t    if ((r === o || !r) && setTimeout) return r = setTimeout, setTimeout(e, 0);\n\n\t    try {\n\t      return r(e, 0);\n\t    } catch (t) {\n\t      try {\n\t        return r.call(null, e, 0);\n\t      } catch (t) {\n\t        return r.call(this, e, 0);\n\t      }\n\t    }\n\t  }\n\n\t  !function () {\n\t    try {\n\t      r = \"function\" == typeof setTimeout ? setTimeout : o;\n\t    } catch (e) {\n\t      r = o;\n\t    }\n\n\t    try {\n\t      n = \"function\" == typeof clearTimeout ? clearTimeout : s;\n\t    } catch (e) {\n\t      n = s;\n\t    }\n\t  }();\n\t  var h,\n\t      f = [],\n\t      u = !1,\n\t      c = -1;\n\n\t  function l() {\n\t    u && h && (u = !1, h.length ? f = h.concat(f) : c = -1, f.length && d());\n\t  }\n\n\t  function d() {\n\t    if (!u) {\n\t      var e = a(l);\n\t      u = !0;\n\n\t      for (var t = f.length; t;) {\n\t        for (h = f, f = []; ++c < t;) {\n\t          h && h[c].run();\n\t        }\n\n\t        c = -1, t = f.length;\n\t      }\n\n\t      h = null, u = !1, function (e) {\n\t        if (n === clearTimeout) return clearTimeout(e);\n\t        if ((n === s || !n) && clearTimeout) return n = clearTimeout, clearTimeout(e);\n\n\t        try {\n\t          n(e);\n\t        } catch (t) {\n\t          try {\n\t            return n.call(null, e);\n\t          } catch (t) {\n\t            return n.call(this, e);\n\t          }\n\t        }\n\t      }(e);\n\t    }\n\t  }\n\n\t  function p(e, t) {\n\t    this.fun = e, this.array = t;\n\t  }\n\n\t  function g() {}\n\n\t  i.nextTick = function (e) {\n\t    var t = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) {\n\t      t[r - 1] = arguments[r];\n\t    }\n\t    f.push(new p(e, t)), 1 !== f.length || u || a(d);\n\t  }, p.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t  }, i.title = \"browser\", i.browser = !0, i.env = {}, i.argv = [], i.version = \"\", i.versions = {}, i.on = g, i.addListener = g, i.once = g, i.off = g, i.removeListener = g, i.removeAllListeners = g, i.emit = g, i.prependListener = g, i.prependOnceListener = g, i.listeners = function (e) {\n\t    return [];\n\t  }, i.binding = function (e) {\n\t    throw new Error(\"process.binding is not supported\");\n\t  }, i.cwd = function () {\n\t    return \"/\";\n\t  }, i.chdir = function (e) {\n\t    throw new Error(\"process.chdir is not supported\");\n\t  }, i.umask = function () {\n\t    return 0;\n\t  };\n\t}, function (e, t) {\n\t  \"function\" == typeof Object.create ? e.exports = function (e, t) {\n\t    e.super_ = t, e.prototype = Object.create(t.prototype, {\n\t      constructor: {\n\t        value: e,\n\t        enumerable: !1,\n\t        writable: !0,\n\t        configurable: !0\n\t      }\n\t    });\n\t  } : e.exports = function (e, t) {\n\t    e.super_ = t;\n\n\t    var r = function r() {};\n\n\t    r.prototype = t.prototype, e.prototype = new r(), e.prototype.constructor = e;\n\t  };\n\t}, function (e, t, r) {\n\n\t  var n = r(9),\n\t      i = Object.keys || function (e) {\n\t    var t = [];\n\n\t    for (var r in e) {\n\t      t.push(r);\n\t    }\n\n\t    return t;\n\t  };\n\n\t  e.exports = c;\n\t  var o = r(7);\n\t  o.inherits = r(4);\n\t  var s = r(21),\n\t      a = r(16);\n\t  o.inherits(c, s);\n\n\t  for (var h = i(a.prototype), f = 0; f < h.length; f++) {\n\t    var u = h[f];\n\t    c.prototype[u] || (c.prototype[u] = a.prototype[u]);\n\t  }\n\n\t  function c(e) {\n\t    if (!(this instanceof c)) return new c(e);\n\t    s.call(this, e), a.call(this, e), e && !1 === e.readable && (this.readable = !1), e && !1 === e.writable && (this.writable = !1), this.allowHalfOpen = !0, e && !1 === e.allowHalfOpen && (this.allowHalfOpen = !1), this.once(\"end\", l);\n\t  }\n\n\t  function l() {\n\t    this.allowHalfOpen || this._writableState.ended || n.nextTick(d, this);\n\t  }\n\n\t  function d(e) {\n\t    e.end();\n\t  }\n\n\t  Object.defineProperty(c.prototype, \"writableHighWaterMark\", {\n\t    enumerable: !1,\n\t    get: function get() {\n\t      return this._writableState.highWaterMark;\n\t    }\n\t  }), Object.defineProperty(c.prototype, \"destroyed\", {\n\t    get: function get() {\n\t      return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;\n\t    },\n\t    set: function set(e) {\n\t      void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e, this._writableState.destroyed = e);\n\t    }\n\t  }), c.prototype._destroy = function (e, t) {\n\t    this.push(null), this.end(), n.nextTick(t, e);\n\t  };\n\t}, function (e, t, r) {\n\t  var _r4 = r(0),\n\t      n = _r4.CramBufferOverrunError,\n\t      i = {\n\t    int: !0,\n\t    byte: !0,\n\t    long: !0,\n\t    byteArray: !0,\n\t    byteArrayBlock: !0\n\t  };\n\n\t  e.exports = /*#__PURE__*/function () {\n\t    function _class() {\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var t = arguments.length > 1 ? arguments[1] : undefined;\n\n\t      _classCallCheck(this, _class);\n\n\t      if (this.parameters = e, this.dataType = t, !t) throw new TypeError(\"must provide a data type to codec constructor\");\n\t      if (!i[t]) throw new TypeError(\"invalid data type \".concat(t));\n\t    }\n\n\t    _createClass(_class, [{\n\t      key: \"_getBits\",\n\t      value: function _getBits(e, t, r) {\n\t        var i = 0;\n\t        if (t.bytePosition + (7 - t.bitPosition + r) / 8 > e.length) throw new n(\"read error during decoding. the file seems to be truncated.\");\n\n\t        for (var _n2 = r; _n2; _n2 -= 1) {\n\t          i <<= 1, i |= e[t.bytePosition] >> t.bitPosition & 1, t.bitPosition -= 1, t.bitPosition < 0 && (t.bytePosition += 1), t.bitPosition &= 7;\n\t        }\n\n\t        return i;\n\t      }\n\t    }]);\n\n\t    return _class;\n\t  }();\n\t}, function (e, t, r) {\n\t  (function (e) {\n\t    function r(e) {\n\t      return Object.prototype.toString.call(e);\n\t    }\n\n\t    t.isArray = function (e) {\n\t      return Array.isArray ? Array.isArray(e) : \"[object Array]\" === r(e);\n\t    }, t.isBoolean = function (e) {\n\t      return \"boolean\" == typeof e;\n\t    }, t.isNull = function (e) {\n\t      return null === e;\n\t    }, t.isNullOrUndefined = function (e) {\n\t      return null == e;\n\t    }, t.isNumber = function (e) {\n\t      return \"number\" == typeof e;\n\t    }, t.isString = function (e) {\n\t      return \"string\" == typeof e;\n\t    }, t.isSymbol = function (e) {\n\t      return \"symbol\" == _typeof(e);\n\t    }, t.isUndefined = function (e) {\n\t      return void 0 === e;\n\t    }, t.isRegExp = function (e) {\n\t      return \"[object RegExp]\" === r(e);\n\t    }, t.isObject = function (e) {\n\t      return \"object\" == _typeof(e) && null !== e;\n\t    }, t.isDate = function (e) {\n\t      return \"[object Date]\" === r(e);\n\t    }, t.isError = function (e) {\n\t      return \"[object Error]\" === r(e) || e instanceof Error;\n\t    }, t.isFunction = function (e) {\n\t      return \"function\" == typeof e;\n\t    }, t.isPrimitive = function (e) {\n\t      return null === e || \"boolean\" == typeof e || \"number\" == typeof e || \"string\" == typeof e || \"symbol\" == _typeof(e) || void 0 === e;\n\t    }, t.isBuffer = e.isBuffer;\n\t  }).call(this, r(1).Buffer);\n\t}, function (e, t, r) {\n\t  var n = r(72),\n\t      _r5 = r(0),\n\t      i = _r5.CramBufferOverrunError;\n\n\t  e.exports = {\n\t    itf8Size: function itf8Size(e) {\n\t      return -128 & e ? -16384 & e ? -2097152 & e ? -268435456 & e ? 5 : 4 : 3 : 2 : 1;\n\t    },\n\t    parseItf8: function parseItf8(e, t) {\n\t      var r = t;\n\t      var n = e[r];\n\t      var o;\n\t      if (n < 128 ? (o = n, r += 1) : n < 192 ? (o = 16383 & (n << 8 | e[r + 1]), r += 2) : n < 224 ? (o = 2097151 & (n << 16 | e[r + 1] << 8 | e[r + 2]), r += 3) : n < 240 ? (o = 268435455 & (n << 24 | e[r + 1] << 16 | e[r + 2] << 8 | e[r + 3]), r += 4) : (o = (15 & n) << 28 | e[r + 1] << 20 | e[r + 2] << 12 | e[r + 3] << 4 | 15 & e[r + 4], r += 5), r > e.length) throw new i(\"Attempted to read beyond end of buffer; this file seems truncated.\");\n\t      return [o, r - t];\n\t    },\n\t    parseItem: function parseItem(e, t) {\n\t      var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t      var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n\t      var _t$parse = t.parse(e),\n\t          i = _t$parse.offset,\n\t          o = _t$parse.result;\n\n\t      return o._endPosition = i + n, o._size = i - r, o;\n\t    },\n\t    tinyMemoize: function tinyMemoize(e, t) {\n\t      var r = e.prototype[t],\n\t          n = \"_memo_\".concat(t);\n\n\t      e.prototype[t] = function () {\n\t        return n in this || (this[n] = r.call(this)), this[n];\n\t      };\n\t    },\n\t    sequenceMD5: function sequenceMD5(e) {\n\t      return n(e.toUpperCase().replace(/[^\\x21-\\x7e]/g, \"\"));\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\n\t  (function (t) {\n\t    !t.version || 0 === t.version.indexOf(\"v0.\") || 0 === t.version.indexOf(\"v1.\") && 0 !== t.version.indexOf(\"v1.8.\") ? e.exports = {\n\t      nextTick: function nextTick(e, r, n, i) {\n\t        if (\"function\" != typeof e) throw new TypeError('\"callback\" argument must be a function');\n\t        var o,\n\t            s,\n\t            a = arguments.length;\n\n\t        switch (a) {\n\t          case 0:\n\t          case 1:\n\t            return t.nextTick(e);\n\n\t          case 2:\n\t            return t.nextTick(function () {\n\t              e.call(null, r);\n\t            });\n\n\t          case 3:\n\t            return t.nextTick(function () {\n\t              e.call(null, r, n);\n\t            });\n\n\t          case 4:\n\t            return t.nextTick(function () {\n\t              e.call(null, r, n, i);\n\t            });\n\n\t          default:\n\t            for (o = new Array(a - 1), s = 0; s < o.length;) {\n\t              o[s++] = arguments[s];\n\t            }\n\n\t            return t.nextTick(function () {\n\t              e.apply(null, o);\n\t            });\n\t        }\n\t      }\n\t    } : e.exports = t;\n\t  }).call(this, r(3));\n\t}, function (e, t, r) {\n\t  var n = r(1),\n\t      i = n.Buffer;\n\n\t  function o(e, t) {\n\t    for (var r in e) {\n\t      t[r] = e[r];\n\t    }\n\t  }\n\n\t  function s(e, t, r) {\n\t    return i(e, t, r);\n\t  }\n\n\t  i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (o(n, t), t.Buffer = s), o(i, s), s.from = function (e, t, r) {\n\t    if (\"number\" == typeof e) throw new TypeError(\"Argument must not be a number\");\n\t    return i(e, t, r);\n\t  }, s.alloc = function (e, t, r) {\n\t    if (\"number\" != typeof e) throw new TypeError(\"Argument must be a number\");\n\t    var n = i(e);\n\t    return void 0 !== t ? \"string\" == typeof r ? n.fill(t, r) : n.fill(t) : n.fill(0), n;\n\t  }, s.allocUnsafe = function (e) {\n\t    if (\"number\" != typeof e) throw new TypeError(\"Argument must be a number\");\n\t    return i(e);\n\t  }, s.allocUnsafeSlow = function (e) {\n\t    if (\"number\" != typeof e) throw new TypeError(\"Argument must be a number\");\n\t    return n.SlowBuffer(e);\n\t  };\n\t}, function (e, t, r) {\n\n\t  var n = \"undefined\" != typeof Uint8Array && \"undefined\" != typeof Uint16Array && \"undefined\" != typeof Int32Array;\n\n\t  function i(e, t) {\n\t    return Object.prototype.hasOwnProperty.call(e, t);\n\t  }\n\n\t  t.assign = function (e) {\n\t    for (var t = Array.prototype.slice.call(arguments, 1); t.length;) {\n\t      var r = t.shift();\n\n\t      if (r) {\n\t        if (\"object\" != _typeof(r)) throw new TypeError(r + \"must be non-object\");\n\n\t        for (var n in r) {\n\t          i(r, n) && (e[n] = r[n]);\n\t        }\n\t      }\n\t    }\n\n\t    return e;\n\t  }, t.shrinkBuf = function (e, t) {\n\t    return e.length === t ? e : e.subarray ? e.subarray(0, t) : (e.length = t, e);\n\t  };\n\t  var o = {\n\t    arraySet: function arraySet(e, t, r, n, i) {\n\t      if (t.subarray && e.subarray) e.set(t.subarray(r, r + n), i);else for (var o = 0; o < n; o++) {\n\t        e[i + o] = t[r + o];\n\t      }\n\t    },\n\t    flattenChunks: function flattenChunks(e) {\n\t      var t, r, n, i, o, s;\n\n\t      for (n = 0, t = 0, r = e.length; t < r; t++) {\n\t        n += e[t].length;\n\t      }\n\n\t      for (s = new Uint8Array(n), i = 0, t = 0, r = e.length; t < r; t++) {\n\t        o = e[t], s.set(o, i), i += o.length;\n\t      }\n\n\t      return s;\n\t    }\n\t  },\n\t      s = {\n\t    arraySet: function arraySet(e, t, r, n, i) {\n\t      for (var o = 0; o < n; o++) {\n\t        e[i + o] = t[r + o];\n\t      }\n\t    },\n\t    flattenChunks: function flattenChunks(e) {\n\t      return [].concat.apply([], e);\n\t    }\n\t  };\n\t  t.setTyped = function (e) {\n\t    e ? (t.Buf8 = Uint8Array, t.Buf16 = Uint16Array, t.Buf32 = Int32Array, t.assign(t, o)) : (t.Buf8 = Array, t.Buf16 = Array, t.Buf32 = Array, t.assign(t, s));\n\t  }, t.setTyped(n);\n\t}, function (e, t, r) {\n\t  var _r6 = r(0),\n\t      n = _r6.CramMalformedError,\n\t      i = r(13);\n\n\t  var o = function o() {\n\t    _classCallCheck(this, o);\n\n\t    this.F = void 0, this.C = void 0;\n\t  };\n\n\t  function s(e, t, r, n) {\n\t    return r * (e >> n) + (e & (1 << n) - 1) - t;\n\t  }\n\n\t  var a = {\n\t    FC: o,\n\t    AriDecoder: function AriDecoder() {\n\t      _classCallCheck(this, AriDecoder);\n\n\t      this.fc = new Array(256);\n\n\t      for (var _e2 = 0; _e2 < this.fc.length; _e2 += 1) {\n\t        this.fc[_e2] = new o();\n\t      }\n\n\t      this.R = null;\n\t    },\n\t    Symbol: function _Symbol() {\n\t      _classCallCheck(this, _Symbol);\n\n\t      this.start = void 0, this.freq = void 0;\n\t    },\n\t    symbolInit: function symbolInit(e, t, r) {\n\t      if (!(t <= 65536)) throw new n(\"assertion failed: start <= 1<<16\");\n\t      if (!(r <= 65536 - t)) throw new n(\"assertion failed: freq <= 1<<16\");\n\t      e.start = t, e.freq = r;\n\t    },\n\t    advanceStep: s,\n\t    advanceSymbolStep: function advanceSymbolStep(e, t, r) {\n\t      return s(e, t.start, t.freq, r);\n\t    },\n\t    get: function get(e, t) {\n\t      return e & (1 << t) - 1;\n\t    },\n\t    advanceSymbol: function advanceSymbol(e, t, r, n) {\n\t      return function (e, t, r, n, o) {\n\t        if ((e = n * (e >> o) + (e & (1 << o) - 1) - r) < i.RANS_BYTE_L) do {\n\t          e = e << 8 | 255 & t.get();\n\t        } while (e < i.RANS_BYTE_L);\n\t        return e;\n\t      }(e, t, r.start, r.freq, n);\n\t    },\n\t    renormalize: function renormalize(e, t) {\n\t      if (e < i.RANS_BYTE_L) do {\n\t        e = e << 8 | 255 & t.get();\n\t      } while (e < i.RANS_BYTE_L);\n\t      return e;\n\t    }\n\t  };\n\t  e.exports = a;\n\t}, function (e, t) {\n\t  e.exports = {\n\t    TF_SHIFT: 12,\n\t    TOTFREQ: 4096,\n\t    RANS_BYTE_L: 1 << 23\n\t  };\n\t}, function (e, t) {\n\t  function r() {\n\t    this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0;\n\t  }\n\n\t  function n(e) {\n\t    return \"function\" == typeof e;\n\t  }\n\n\t  function i(e) {\n\t    return \"object\" == _typeof(e) && null !== e;\n\t  }\n\n\t  function o(e) {\n\t    return void 0 === e;\n\t  }\n\n\t  e.exports = r, r.EventEmitter = r, r.prototype._events = void 0, r.prototype._maxListeners = void 0, r.defaultMaxListeners = 10, r.prototype.setMaxListeners = function (e) {\n\t    if (\"number\" != typeof e || e < 0 || isNaN(e)) throw TypeError(\"n must be a positive number\");\n\t    return this._maxListeners = e, this;\n\t  }, r.prototype.emit = function (e) {\n\t    var t, r, s, a, h, f;\n\n\t    if (this._events || (this._events = {}), \"error\" === e && (!this._events.error || i(this._events.error) && !this._events.error.length)) {\n\t      if ((t = arguments[1]) instanceof Error) throw t;\n\t      var u = new Error('Uncaught, unspecified \"error\" event. (' + t + \")\");\n\t      throw u.context = t, u;\n\t    }\n\n\t    if (o(r = this._events[e])) return !1;\n\t    if (n(r)) switch (arguments.length) {\n\t      case 1:\n\t        r.call(this);\n\t        break;\n\n\t      case 2:\n\t        r.call(this, arguments[1]);\n\t        break;\n\n\t      case 3:\n\t        r.call(this, arguments[1], arguments[2]);\n\t        break;\n\n\t      default:\n\t        a = Array.prototype.slice.call(arguments, 1), r.apply(this, a);\n\t    } else if (i(r)) for (a = Array.prototype.slice.call(arguments, 1), s = (f = r.slice()).length, h = 0; h < s; h++) {\n\t      f[h].apply(this, a);\n\t    }\n\t    return !0;\n\t  }, r.prototype.addListener = function (e, t) {\n\t    var s;\n\t    if (!n(t)) throw TypeError(\"listener must be a function\");\n\t    return this._events || (this._events = {}), this._events.newListener && this.emit(\"newListener\", e, n(t.listener) ? t.listener : t), this._events[e] ? i(this._events[e]) ? this._events[e].push(t) : this._events[e] = [this._events[e], t] : this._events[e] = t, i(this._events[e]) && !this._events[e].warned && (s = o(this._maxListeners) ? r.defaultMaxListeners : this._maxListeners) && s > 0 && this._events[e].length > s && (this._events[e].warned = !0, console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\", this._events[e].length), \"function\" == typeof console.trace && console.trace()), this;\n\t  }, r.prototype.on = r.prototype.addListener, r.prototype.once = function (e, t) {\n\t    if (!n(t)) throw TypeError(\"listener must be a function\");\n\t    var r = !1;\n\n\t    function i() {\n\t      this.removeListener(e, i), r || (r = !0, t.apply(this, arguments));\n\t    }\n\n\t    return i.listener = t, this.on(e, i), this;\n\t  }, r.prototype.removeListener = function (e, t) {\n\t    var r, o, s, a;\n\t    if (!n(t)) throw TypeError(\"listener must be a function\");\n\t    if (!this._events || !this._events[e]) return this;\n\t    if (s = (r = this._events[e]).length, o = -1, r === t || n(r.listener) && r.listener === t) delete this._events[e], this._events.removeListener && this.emit(\"removeListener\", e, t);else if (i(r)) {\n\t      for (a = s; a-- > 0;) {\n\t        if (r[a] === t || r[a].listener && r[a].listener === t) {\n\t          o = a;\n\t          break;\n\t        }\n\t      }\n\n\t      if (o < 0) return this;\n\t      1 === r.length ? (r.length = 0, delete this._events[e]) : r.splice(o, 1), this._events.removeListener && this.emit(\"removeListener\", e, t);\n\t    }\n\t    return this;\n\t  }, r.prototype.removeAllListeners = function (e) {\n\t    var t, r;\n\t    if (!this._events) return this;\n\t    if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e], this;\n\n\t    if (0 === arguments.length) {\n\t      for (t in this._events) {\n\t        \"removeListener\" !== t && this.removeAllListeners(t);\n\t      }\n\n\t      return this.removeAllListeners(\"removeListener\"), this._events = {}, this;\n\t    }\n\n\t    if (n(r = this._events[e])) this.removeListener(e, r);else if (r) for (; r.length;) {\n\t      this.removeListener(e, r[r.length - 1]);\n\t    }\n\t    return delete this._events[e], this;\n\t  }, r.prototype.listeners = function (e) {\n\t    return this._events && this._events[e] ? n(this._events[e]) ? [this._events[e]] : this._events[e].slice() : [];\n\t  }, r.prototype.listenerCount = function (e) {\n\t    if (this._events) {\n\t      var t = this._events[e];\n\t      if (n(t)) return 1;\n\t      if (t) return t.length;\n\t    }\n\n\t    return 0;\n\t  }, r.listenerCount = function (e, t) {\n\t    return e.listenerCount(t);\n\t  };\n\t}, function (e, t, r) {\n\t  (t = e.exports = r(21)).Stream = t, t.Readable = t, t.Writable = r(16), t.Duplex = r(5), t.Transform = r(25), t.PassThrough = r(46);\n\t}, function (e, t, r) {\n\n\t  (function (t, n, i) {\n\t    var o = r(9);\n\n\t    function s(e) {\n\t      var t = this;\n\t      this.next = null, this.entry = null, this.finish = function () {\n\t        !function (e, t, r) {\n\t          var n = e.entry;\n\t          e.entry = null;\n\n\t          for (; n;) {\n\t            var i = n.callback;\n\t            t.pendingcb--, i(r), n = n.next;\n\t          }\n\n\t          t.corkedRequestsFree ? t.corkedRequestsFree.next = e : t.corkedRequestsFree = e;\n\t        }(t, e);\n\t      };\n\t    }\n\n\t    e.exports = y;\n\t    var a,\n\t        h = !t.browser && [\"v0.10\", \"v0.9.\"].indexOf(t.version.slice(0, 5)) > -1 ? n : o.nextTick;\n\t    y.WritableState = _;\n\t    var f = r(7);\n\t    f.inherits = r(4);\n\n\t    var u = {\n\t      deprecate: r(45)\n\t    },\n\t        c = r(22),\n\t        l = r(10).Buffer,\n\t        d = i.Uint8Array || function () {};\n\n\t    var p,\n\t        g = r(23);\n\n\t    function m() {}\n\n\t    function _(e, t) {\n\t      a = a || r(5), e = e || {};\n\t      var n = t instanceof a;\n\t      this.objectMode = !!e.objectMode, n && (this.objectMode = this.objectMode || !!e.writableObjectMode);\n\t      var i = e.highWaterMark,\n\t          f = e.writableHighWaterMark,\n\t          u = this.objectMode ? 16 : 16384;\n\t      this.highWaterMark = i || 0 === i ? i : n && (f || 0 === f) ? f : u, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;\n\t      var c = !1 === e.decodeStrings;\n\t      this.decodeStrings = !c, this.defaultEncoding = e.defaultEncoding || \"utf8\", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (e) {\n\t        !function (e, t) {\n\t          var r = e._writableState,\n\t              n = r.sync,\n\t              i = r.writecb;\n\t          if (function (e) {\n\t            e.writing = !1, e.writecb = null, e.length -= e.writelen, e.writelen = 0;\n\t          }(r), t) !function (e, t, r, n, i) {\n\t            --t.pendingcb, r ? (o.nextTick(i, n), o.nextTick(A, e, t), e._writableState.errorEmitted = !0, e.emit(\"error\", n)) : (i(n), e._writableState.errorEmitted = !0, e.emit(\"error\", n), A(e, t));\n\t          }(e, r, n, t, i);else {\n\t            var s = E(r);\n\t            s || r.corked || r.bufferProcessing || !r.bufferedRequest || v(e, r), n ? h(w, e, r, s, i) : w(e, r, s, i);\n\t          }\n\t        }(t, e);\n\t      }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new s(this);\n\t    }\n\n\t    function y(e) {\n\t      if (a = a || r(5), !(p.call(y, this) || this instanceof a)) return new y(e);\n\t      this._writableState = new _(e, this), this.writable = !0, e && (\"function\" == typeof e.write && (this._write = e.write), \"function\" == typeof e.writev && (this._writev = e.writev), \"function\" == typeof e.destroy && (this._destroy = e.destroy), \"function\" == typeof e.final && (this._final = e.final)), c.call(this);\n\t    }\n\n\t    function b(e, t, r, n, i, o, s) {\n\t      t.writelen = n, t.writecb = s, t.writing = !0, t.sync = !0, r ? e._writev(i, t.onwrite) : e._write(i, o, t.onwrite), t.sync = !1;\n\t    }\n\n\t    function w(e, t, r, n) {\n\t      r || function (e, t) {\n\t        0 === t.length && t.needDrain && (t.needDrain = !1, e.emit(\"drain\"));\n\t      }(e, t), t.pendingcb--, n(), A(e, t);\n\t    }\n\n\t    function v(e, t) {\n\t      t.bufferProcessing = !0;\n\t      var r = t.bufferedRequest;\n\n\t      if (e._writev && r && r.next) {\n\t        var n = t.bufferedRequestCount,\n\t            i = new Array(n),\n\t            o = t.corkedRequestsFree;\n\t        o.entry = r;\n\n\t        for (var a = 0, h = !0; r;) {\n\t          i[a] = r, r.isBuf || (h = !1), r = r.next, a += 1;\n\t        }\n\n\t        i.allBuffers = h, b(e, t, !0, t.length, i, \"\", o.finish), t.pendingcb++, t.lastBufferedRequest = null, o.next ? (t.corkedRequestsFree = o.next, o.next = null) : t.corkedRequestsFree = new s(t), t.bufferedRequestCount = 0;\n\t      } else {\n\t        for (; r;) {\n\t          var f = r.chunk,\n\t              u = r.encoding,\n\t              c = r.callback;\n\t          if (b(e, t, !1, t.objectMode ? 1 : f.length, f, u, c), r = r.next, t.bufferedRequestCount--, t.writing) break;\n\t        }\n\n\t        null === r && (t.lastBufferedRequest = null);\n\t      }\n\n\t      t.bufferedRequest = r, t.bufferProcessing = !1;\n\t    }\n\n\t    function E(e) {\n\t      return e.ending && 0 === e.length && null === e.bufferedRequest && !e.finished && !e.writing;\n\t    }\n\n\t    function S(e, t) {\n\t      e._final(function (r) {\n\t        t.pendingcb--, r && e.emit(\"error\", r), t.prefinished = !0, e.emit(\"prefinish\"), A(e, t);\n\t      });\n\t    }\n\n\t    function A(e, t) {\n\t      var r = E(t);\n\t      return r && (!function (e, t) {\n\t        t.prefinished || t.finalCalled || (\"function\" == typeof e._final ? (t.pendingcb++, t.finalCalled = !0, o.nextTick(S, e, t)) : (t.prefinished = !0, e.emit(\"prefinish\")));\n\t      }(e, t), 0 === t.pendingcb && (t.finished = !0, e.emit(\"finish\"))), r;\n\t    }\n\n\t    f.inherits(y, c), _.prototype.getBuffer = function () {\n\t      for (var e = this.bufferedRequest, t = []; e;) {\n\t        t.push(e), e = e.next;\n\t      }\n\n\t      return t;\n\t    }, function () {\n\t      try {\n\t        Object.defineProperty(_.prototype, \"buffer\", {\n\t          get: u.deprecate(function () {\n\t            return this.getBuffer();\n\t          }, \"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\", \"DEP0003\")\n\t        });\n\t      } catch (e) {}\n\t    }(), \"function\" == typeof Symbol && Symbol.hasInstance && \"function\" == typeof Function.prototype[Symbol.hasInstance] ? (p = Function.prototype[Symbol.hasInstance], Object.defineProperty(y, Symbol.hasInstance, {\n\t      value: function value(e) {\n\t        return !!p.call(this, e) || this === y && e && e._writableState instanceof _;\n\t      }\n\t    })) : p = function p(e) {\n\t      return e instanceof this;\n\t    }, y.prototype.pipe = function () {\n\t      this.emit(\"error\", new Error(\"Cannot pipe, not readable\"));\n\t    }, y.prototype.write = function (e, t, r) {\n\t      var n,\n\t          i = this._writableState,\n\t          s = !1,\n\t          a = !i.objectMode && (n = e, l.isBuffer(n) || n instanceof d);\n\t      return a && !l.isBuffer(e) && (e = function (e) {\n\t        return l.from(e);\n\t      }(e)), \"function\" == typeof t && (r = t, t = null), a ? t = \"buffer\" : t || (t = i.defaultEncoding), \"function\" != typeof r && (r = m), i.ended ? function (e, t) {\n\t        var r = new Error(\"write after end\");\n\t        e.emit(\"error\", r), o.nextTick(t, r);\n\t      }(this, r) : (a || function (e, t, r, n) {\n\t        var i = !0,\n\t            s = !1;\n\t        return null === r ? s = new TypeError(\"May not write null values to stream\") : \"string\" == typeof r || void 0 === r || t.objectMode || (s = new TypeError(\"Invalid non-string/buffer chunk\")), s && (e.emit(\"error\", s), o.nextTick(n, s), i = !1), i;\n\t      }(this, i, e, r)) && (i.pendingcb++, s = function (e, t, r, n, i, o) {\n\t        if (!r) {\n\t          var s = function (e, t, r) {\n\t            e.objectMode || !1 === e.decodeStrings || \"string\" != typeof t || (t = l.from(t, r));\n\t            return t;\n\t          }(t, n, i);\n\n\t          n !== s && (r = !0, i = \"buffer\", n = s);\n\t        }\n\n\t        var a = t.objectMode ? 1 : n.length;\n\t        t.length += a;\n\t        var h = t.length < t.highWaterMark;\n\t        h || (t.needDrain = !0);\n\n\t        if (t.writing || t.corked) {\n\t          var f = t.lastBufferedRequest;\n\t          t.lastBufferedRequest = {\n\t            chunk: n,\n\t            encoding: i,\n\t            isBuf: r,\n\t            callback: o,\n\t            next: null\n\t          }, f ? f.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest, t.bufferedRequestCount += 1;\n\t        } else b(e, t, !1, a, n, i, o);\n\n\t        return h;\n\t      }(this, i, a, e, t, r)), s;\n\t    }, y.prototype.cork = function () {\n\t      this._writableState.corked++;\n\t    }, y.prototype.uncork = function () {\n\t      var e = this._writableState;\n\t      e.corked && (e.corked--, e.writing || e.corked || e.finished || e.bufferProcessing || !e.bufferedRequest || v(this, e));\n\t    }, y.prototype.setDefaultEncoding = function (e) {\n\t      if (\"string\" == typeof e && (e = e.toLowerCase()), !([\"hex\", \"utf8\", \"utf-8\", \"ascii\", \"binary\", \"base64\", \"ucs2\", \"ucs-2\", \"utf16le\", \"utf-16le\", \"raw\"].indexOf((e + \"\").toLowerCase()) > -1)) throw new TypeError(\"Unknown encoding: \" + e);\n\t      return this._writableState.defaultEncoding = e, this;\n\t    }, Object.defineProperty(y.prototype, \"writableHighWaterMark\", {\n\t      enumerable: !1,\n\t      get: function get() {\n\t        return this._writableState.highWaterMark;\n\t      }\n\t    }), y.prototype._write = function (e, t, r) {\n\t      r(new Error(\"_write() is not implemented\"));\n\t    }, y.prototype._writev = null, y.prototype.end = function (e, t, r) {\n\t      var n = this._writableState;\n\t      \"function\" == typeof e ? (r = e, e = null, t = null) : \"function\" == typeof t && (r = t, t = null), null != e && this.write(e, t), n.corked && (n.corked = 1, this.uncork()), n.ending || n.finished || function (e, t, r) {\n\t        t.ending = !0, A(e, t), r && (t.finished ? o.nextTick(r) : e.once(\"finish\", r));\n\t        t.ended = !0, e.writable = !1;\n\t      }(this, n, r);\n\t    }, Object.defineProperty(y.prototype, \"destroyed\", {\n\t      get: function get() {\n\t        return void 0 !== this._writableState && this._writableState.destroyed;\n\t      },\n\t      set: function set(e) {\n\t        this._writableState && (this._writableState.destroyed = e);\n\t      }\n\t    }), y.prototype.destroy = g.destroy, y.prototype._undestroy = g.undestroy, y.prototype._destroy = function (e, t) {\n\t      this.end(), t(e);\n\t    };\n\t  }).call(this, r(3), r(43).setImmediate, r(2));\n\t}, function (e, t) {\n\t  e.exports = {\n\t    CRAM_FLAG_PRESERVE_QUAL_SCORES: 1,\n\t    CRAM_FLAG_DETACHED: 2,\n\t    CRAM_FLAG_MATE_DOWNSTREAM: 4,\n\t    CRAM_FLAG_NO_SEQ: 8,\n\t    CRAM_FLAG_MASK: 15,\n\t    CRAM_M_REVERSE: 1,\n\t    CRAM_M_UNMAP: 2,\n\t    BAM_FPAIRED: 1,\n\t    BAM_FPROPER_PAIR: 2,\n\t    BAM_FUNMAP: 4,\n\t    BAM_FMUNMAP: 8,\n\t    BAM_FREVERSE: 16,\n\t    BAM_FMREVERSE: 32,\n\t    BAM_FREAD1: 64,\n\t    BAM_FREAD2: 128,\n\t    BAM_FSECONDARY: 256,\n\t    BAM_FQCFAIL: 512,\n\t    BAM_FDUP: 1024,\n\t    BAM_FSUPPLEMENTARY: 2048,\n\t    BAM_CMATCH: 0,\n\t    BAM_CINS: 1,\n\t    BAM_CDEL: 2,\n\t    BAM_CREF_SKIP: 3,\n\t    BAM_CSOFT_CLIP: 4,\n\t    BAM_CHARD_CLIP: 5,\n\t    BAM_CPAD: 6,\n\t    BAM_CEQUAL: 7,\n\t    BAM_CDIFF: 8,\n\t    BAM_CBACK: 9,\n\t    BAM_CIGAR_STR: \"MIDNSHP:XB\",\n\t    BAM_CIGAR_SHIFT: 4,\n\t    BAM_CIGAR_MASK: 15,\n\t    BAM_CIGAR_TYPE: 246183\n\t  };\n\t}, function (e, t, r) {\n\t  var n = r(36);\n\t  e.exports = n;\n\t}, function (e, t) {\n\t  var r = {}.toString;\n\n\t  e.exports = Array.isArray || function (e) {\n\t    return \"[object Array]\" == r.call(e);\n\t  };\n\t}, function (e, t, r) {\n\n\t  (function (e) {\n\t    var n = r(1).Buffer,\n\t        i = r(39).Transform,\n\t        o = r(51),\n\t        s = r(27),\n\t        a = r(26).ok,\n\t        h = r(1).kMaxLength,\n\t        f = \"Cannot create final Buffer. It would be larger than 0x\" + h.toString(16) + \" bytes\";\n\t    o.Z_MIN_WINDOWBITS = 8, o.Z_MAX_WINDOWBITS = 15, o.Z_DEFAULT_WINDOWBITS = 15, o.Z_MIN_CHUNK = 64, o.Z_MAX_CHUNK = 1 / 0, o.Z_DEFAULT_CHUNK = 16384, o.Z_MIN_MEMLEVEL = 1, o.Z_MAX_MEMLEVEL = 9, o.Z_DEFAULT_MEMLEVEL = 8, o.Z_MIN_LEVEL = -1, o.Z_MAX_LEVEL = 9, o.Z_DEFAULT_LEVEL = o.Z_DEFAULT_COMPRESSION;\n\n\t    for (var u = Object.keys(o), c = 0; c < u.length; c++) {\n\t      var l = u[c];\n\t      l.match(/^Z/) && Object.defineProperty(t, l, {\n\t        enumerable: !0,\n\t        value: o[l],\n\t        writable: !1\n\t      });\n\t    }\n\n\t    for (var d = {\n\t      Z_OK: o.Z_OK,\n\t      Z_STREAM_END: o.Z_STREAM_END,\n\t      Z_NEED_DICT: o.Z_NEED_DICT,\n\t      Z_ERRNO: o.Z_ERRNO,\n\t      Z_STREAM_ERROR: o.Z_STREAM_ERROR,\n\t      Z_DATA_ERROR: o.Z_DATA_ERROR,\n\t      Z_MEM_ERROR: o.Z_MEM_ERROR,\n\t      Z_BUF_ERROR: o.Z_BUF_ERROR,\n\t      Z_VERSION_ERROR: o.Z_VERSION_ERROR\n\t    }, p = Object.keys(d), g = 0; g < p.length; g++) {\n\t      var m = p[g];\n\t      d[d[m]] = m;\n\t    }\n\n\t    function _(e, t, r) {\n\t      var i = [],\n\t          o = 0;\n\n\t      function s() {\n\t        for (var t; null !== (t = e.read());) {\n\t          i.push(t), o += t.length;\n\t        }\n\n\t        e.once(\"readable\", s);\n\t      }\n\n\t      function a() {\n\t        var t,\n\t            s = null;\n\t        o >= h ? s = new RangeError(f) : t = n.concat(i, o), i = [], e.close(), r(s, t);\n\t      }\n\n\t      e.on(\"error\", function (t) {\n\t        e.removeListener(\"end\", a), e.removeListener(\"readable\", s), r(t);\n\t      }), e.on(\"end\", a), e.end(t), s();\n\t    }\n\n\t    function y(e, t) {\n\t      if (\"string\" == typeof t && (t = n.from(t)), !n.isBuffer(t)) throw new TypeError(\"Not a string or buffer\");\n\t      var r = e._finishFlushFlag;\n\t      return e._processChunk(t, r);\n\t    }\n\n\t    function b(e) {\n\t      if (!(this instanceof b)) return new b(e);\n\t      C.call(this, e, o.DEFLATE);\n\t    }\n\n\t    function w(e) {\n\t      if (!(this instanceof w)) return new w(e);\n\t      C.call(this, e, o.INFLATE);\n\t    }\n\n\t    function v(e) {\n\t      if (!(this instanceof v)) return new v(e);\n\t      C.call(this, e, o.GZIP);\n\t    }\n\n\t    function E(e) {\n\t      if (!(this instanceof E)) return new E(e);\n\t      C.call(this, e, o.GUNZIP);\n\t    }\n\n\t    function S(e) {\n\t      if (!(this instanceof S)) return new S(e);\n\t      C.call(this, e, o.DEFLATERAW);\n\t    }\n\n\t    function A(e) {\n\t      if (!(this instanceof A)) return new A(e);\n\t      C.call(this, e, o.INFLATERAW);\n\t    }\n\n\t    function k(e) {\n\t      if (!(this instanceof k)) return new k(e);\n\t      C.call(this, e, o.UNZIP);\n\t    }\n\n\t    function x(e) {\n\t      return e === o.Z_NO_FLUSH || e === o.Z_PARTIAL_FLUSH || e === o.Z_SYNC_FLUSH || e === o.Z_FULL_FLUSH || e === o.Z_FINISH || e === o.Z_BLOCK;\n\t    }\n\n\t    function C(e, r) {\n\t      var s = this;\n\t      if (this._opts = e = e || {}, this._chunkSize = e.chunkSize || t.Z_DEFAULT_CHUNK, i.call(this, e), e.flush && !x(e.flush)) throw new Error(\"Invalid flush flag: \" + e.flush);\n\t      if (e.finishFlush && !x(e.finishFlush)) throw new Error(\"Invalid flush flag: \" + e.finishFlush);\n\t      if (this._flushFlag = e.flush || o.Z_NO_FLUSH, this._finishFlushFlag = void 0 !== e.finishFlush ? e.finishFlush : o.Z_FINISH, e.chunkSize && (e.chunkSize < t.Z_MIN_CHUNK || e.chunkSize > t.Z_MAX_CHUNK)) throw new Error(\"Invalid chunk size: \" + e.chunkSize);\n\t      if (e.windowBits && (e.windowBits < t.Z_MIN_WINDOWBITS || e.windowBits > t.Z_MAX_WINDOWBITS)) throw new Error(\"Invalid windowBits: \" + e.windowBits);\n\t      if (e.level && (e.level < t.Z_MIN_LEVEL || e.level > t.Z_MAX_LEVEL)) throw new Error(\"Invalid compression level: \" + e.level);\n\t      if (e.memLevel && (e.memLevel < t.Z_MIN_MEMLEVEL || e.memLevel > t.Z_MAX_MEMLEVEL)) throw new Error(\"Invalid memLevel: \" + e.memLevel);\n\t      if (e.strategy && e.strategy != t.Z_FILTERED && e.strategy != t.Z_HUFFMAN_ONLY && e.strategy != t.Z_RLE && e.strategy != t.Z_FIXED && e.strategy != t.Z_DEFAULT_STRATEGY) throw new Error(\"Invalid strategy: \" + e.strategy);\n\t      if (e.dictionary && !n.isBuffer(e.dictionary)) throw new Error(\"Invalid dictionary: it should be a Buffer instance\");\n\t      this._handle = new o.Zlib(r);\n\t      var a = this;\n\t      this._hadError = !1, this._handle.onerror = function (e, r) {\n\t        R(a), a._hadError = !0;\n\t        var n = new Error(e);\n\t        n.errno = r, n.code = t.codes[r], a.emit(\"error\", n);\n\t      };\n\t      var h = t.Z_DEFAULT_COMPRESSION;\n\t      \"number\" == typeof e.level && (h = e.level);\n\t      var f = t.Z_DEFAULT_STRATEGY;\n\t      \"number\" == typeof e.strategy && (f = e.strategy), this._handle.init(e.windowBits || t.Z_DEFAULT_WINDOWBITS, h, e.memLevel || t.Z_DEFAULT_MEMLEVEL, f, e.dictionary), this._buffer = n.allocUnsafe(this._chunkSize), this._offset = 0, this._level = h, this._strategy = f, this.once(\"end\", this.close), Object.defineProperty(this, \"_closed\", {\n\t        get: function get() {\n\t          return !s._handle;\n\t        },\n\t        configurable: !0,\n\t        enumerable: !0\n\t      });\n\t    }\n\n\t    function R(t, r) {\n\t      r && e.nextTick(r), t._handle && (t._handle.close(), t._handle = null);\n\t    }\n\n\t    function T(e) {\n\t      e.emit(\"close\");\n\t    }\n\n\t    Object.defineProperty(t, \"codes\", {\n\t      enumerable: !0,\n\t      value: Object.freeze(d),\n\t      writable: !1\n\t    }), t.Deflate = b, t.Inflate = w, t.Gzip = v, t.Gunzip = E, t.DeflateRaw = S, t.InflateRaw = A, t.Unzip = k, t.createDeflate = function (e) {\n\t      return new b(e);\n\t    }, t.createInflate = function (e) {\n\t      return new w(e);\n\t    }, t.createDeflateRaw = function (e) {\n\t      return new S(e);\n\t    }, t.createInflateRaw = function (e) {\n\t      return new A(e);\n\t    }, t.createGzip = function (e) {\n\t      return new v(e);\n\t    }, t.createGunzip = function (e) {\n\t      return new E(e);\n\t    }, t.createUnzip = function (e) {\n\t      return new k(e);\n\t    }, t.deflate = function (e, t, r) {\n\t      return \"function\" == typeof t && (r = t, t = {}), _(new b(t), e, r);\n\t    }, t.deflateSync = function (e, t) {\n\t      return y(new b(t), e);\n\t    }, t.gzip = function (e, t, r) {\n\t      return \"function\" == typeof t && (r = t, t = {}), _(new v(t), e, r);\n\t    }, t.gzipSync = function (e, t) {\n\t      return y(new v(t), e);\n\t    }, t.deflateRaw = function (e, t, r) {\n\t      return \"function\" == typeof t && (r = t, t = {}), _(new S(t), e, r);\n\t    }, t.deflateRawSync = function (e, t) {\n\t      return y(new S(t), e);\n\t    }, t.unzip = function (e, t, r) {\n\t      return \"function\" == typeof t && (r = t, t = {}), _(new k(t), e, r);\n\t    }, t.unzipSync = function (e, t) {\n\t      return y(new k(t), e);\n\t    }, t.inflate = function (e, t, r) {\n\t      return \"function\" == typeof t && (r = t, t = {}), _(new w(t), e, r);\n\t    }, t.inflateSync = function (e, t) {\n\t      return y(new w(t), e);\n\t    }, t.gunzip = function (e, t, r) {\n\t      return \"function\" == typeof t && (r = t, t = {}), _(new E(t), e, r);\n\t    }, t.gunzipSync = function (e, t) {\n\t      return y(new E(t), e);\n\t    }, t.inflateRaw = function (e, t, r) {\n\t      return \"function\" == typeof t && (r = t, t = {}), _(new A(t), e, r);\n\t    }, t.inflateRawSync = function (e, t) {\n\t      return y(new A(t), e);\n\t    }, s.inherits(C, i), C.prototype.params = function (r, n, i) {\n\t      if (r < t.Z_MIN_LEVEL || r > t.Z_MAX_LEVEL) throw new RangeError(\"Invalid compression level: \" + r);\n\t      if (n != t.Z_FILTERED && n != t.Z_HUFFMAN_ONLY && n != t.Z_RLE && n != t.Z_FIXED && n != t.Z_DEFAULT_STRATEGY) throw new TypeError(\"Invalid strategy: \" + n);\n\n\t      if (this._level !== r || this._strategy !== n) {\n\t        var s = this;\n\t        this.flush(o.Z_SYNC_FLUSH, function () {\n\t          a(s._handle, \"zlib binding closed\"), s._handle.params(r, n), s._hadError || (s._level = r, s._strategy = n, i && i());\n\t        });\n\t      } else e.nextTick(i);\n\t    }, C.prototype.reset = function () {\n\t      return a(this._handle, \"zlib binding closed\"), this._handle.reset();\n\t    }, C.prototype._flush = function (e) {\n\t      this._transform(n.alloc(0), \"\", e);\n\t    }, C.prototype.flush = function (t, r) {\n\t      var i = this,\n\t          s = this._writableState;\n\t      (\"function\" == typeof t || void 0 === t && !r) && (r = t, t = o.Z_FULL_FLUSH), s.ended ? r && e.nextTick(r) : s.ending ? r && this.once(\"end\", r) : s.needDrain ? r && this.once(\"drain\", function () {\n\t        return i.flush(t, r);\n\t      }) : (this._flushFlag = t, this.write(n.alloc(0), \"\", r));\n\t    }, C.prototype.close = function (t) {\n\t      R(this, t), e.nextTick(T, this);\n\t    }, C.prototype._transform = function (e, t, r) {\n\t      var i,\n\t          s = this._writableState,\n\t          a = (s.ending || s.ended) && (!e || s.length === e.length);\n\t      return null === e || n.isBuffer(e) ? this._handle ? (a ? i = this._finishFlushFlag : (i = this._flushFlag, e.length >= s.length && (this._flushFlag = this._opts.flush || o.Z_NO_FLUSH)), void this._processChunk(e, i, r)) : r(new Error(\"zlib binding closed\")) : r(new Error(\"invalid input\"));\n\t    }, C.prototype._processChunk = function (e, t, r) {\n\t      var i = e && e.length,\n\t          o = this._chunkSize - this._offset,\n\t          s = 0,\n\t          u = this,\n\t          c = \"function\" == typeof r;\n\n\t      if (!c) {\n\t        var l,\n\t            d = [],\n\t            p = 0;\n\t        this.on(\"error\", function (e) {\n\t          l = e;\n\t        }), a(this._handle, \"zlib binding closed\");\n\n\t        do {\n\t          var g = this._handle.writeSync(t, e, s, i, this._buffer, this._offset, o);\n\t        } while (!this._hadError && y(g[0], g[1]));\n\n\t        if (this._hadError) throw l;\n\t        if (p >= h) throw R(this), new RangeError(f);\n\t        var m = n.concat(d, p);\n\t        return R(this), m;\n\t      }\n\n\t      a(this._handle, \"zlib binding closed\");\n\n\t      var _ = this._handle.write(t, e, s, i, this._buffer, this._offset, o);\n\n\t      function y(h, f) {\n\t        if (this && (this.buffer = null, this.callback = null), !u._hadError) {\n\t          var l = o - f;\n\n\t          if (a(l >= 0, \"have should not go down\"), l > 0) {\n\t            var g = u._buffer.slice(u._offset, u._offset + l);\n\n\t            u._offset += l, c ? u.push(g) : (d.push(g), p += g.length);\n\t          }\n\n\t          if ((0 === f || u._offset >= u._chunkSize) && (o = u._chunkSize, u._offset = 0, u._buffer = n.allocUnsafe(u._chunkSize)), 0 === f) {\n\t            if (s += i - h, i = h, !c) return !0;\n\n\t            var m = u._handle.write(t, e, s, i, u._buffer, u._offset, u._chunkSize);\n\n\t            return m.callback = y, void (m.buffer = e);\n\t          }\n\n\t          if (!c) return !1;\n\t          r();\n\t        }\n\t      }\n\n\t      _.buffer = e, _.callback = y;\n\t    }, s.inherits(b, C), s.inherits(w, C), s.inherits(v, C), s.inherits(E, C), s.inherits(S, C), s.inherits(A, C), s.inherits(k, C);\n\t  }).call(this, r(3));\n\t}, function (e, t, r) {\n\n\t  (function (t, n) {\n\t    var i = r(9);\n\t    e.exports = b;\n\t    var o,\n\t        s = r(19);\n\t    b.ReadableState = y;\n\t    r(14).EventEmitter;\n\n\t    var a = function a(e, t) {\n\t      return e.listeners(t).length;\n\t    },\n\t        h = r(22),\n\t        f = r(10).Buffer,\n\t        u = t.Uint8Array || function () {};\n\n\t    var c = r(7);\n\t    c.inherits = r(4);\n\t    var l = r(40),\n\t        d = void 0;\n\t    d = l && l.debuglog ? l.debuglog(\"stream\") : function () {};\n\t    var p,\n\t        g = r(41),\n\t        m = r(23);\n\t    c.inherits(b, h);\n\t    var _ = [\"error\", \"close\", \"destroy\", \"pause\", \"resume\"];\n\n\t    function y(e, t) {\n\t      e = e || {};\n\t      var n = t instanceof (o = o || r(5));\n\t      this.objectMode = !!e.objectMode, n && (this.objectMode = this.objectMode || !!e.readableObjectMode);\n\t      var i = e.highWaterMark,\n\t          s = e.readableHighWaterMark,\n\t          a = this.objectMode ? 16 : 16384;\n\t      this.highWaterMark = i || 0 === i ? i : n && (s || 0 === s) ? s : a, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new g(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = e.defaultEncoding || \"utf8\", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, e.encoding && (p || (p = r(24).StringDecoder), this.decoder = new p(e.encoding), this.encoding = e.encoding);\n\t    }\n\n\t    function b(e) {\n\t      if (o = o || r(5), !(this instanceof b)) return new b(e);\n\t      this._readableState = new y(e, this), this.readable = !0, e && (\"function\" == typeof e.read && (this._read = e.read), \"function\" == typeof e.destroy && (this._destroy = e.destroy)), h.call(this);\n\t    }\n\n\t    function w(e, t, r, n, i) {\n\t      var o,\n\t          s = e._readableState;\n\t      null === t ? (s.reading = !1, function (e, t) {\n\t        if (t.ended) return;\n\n\t        if (t.decoder) {\n\t          var r = t.decoder.end();\n\t          r && r.length && (t.buffer.push(r), t.length += t.objectMode ? 1 : r.length);\n\t        }\n\n\t        t.ended = !0, A(e);\n\t      }(e, s)) : (i || (o = function (e, t) {\n\t        var r;\n\t        n = t, f.isBuffer(n) || n instanceof u || \"string\" == typeof t || void 0 === t || e.objectMode || (r = new TypeError(\"Invalid non-string/buffer chunk\"));\n\t        var n;\n\t        return r;\n\t      }(s, t)), o ? e.emit(\"error\", o) : s.objectMode || t && t.length > 0 ? (\"string\" == typeof t || s.objectMode || Object.getPrototypeOf(t) === f.prototype || (t = function (e) {\n\t        return f.from(e);\n\t      }(t)), n ? s.endEmitted ? e.emit(\"error\", new Error(\"stream.unshift() after end event\")) : v(e, s, t, !0) : s.ended ? e.emit(\"error\", new Error(\"stream.push() after EOF\")) : (s.reading = !1, s.decoder && !r ? (t = s.decoder.write(t), s.objectMode || 0 !== t.length ? v(e, s, t, !1) : x(e, s)) : v(e, s, t, !1))) : n || (s.reading = !1));\n\t      return function (e) {\n\t        return !e.ended && (e.needReadable || e.length < e.highWaterMark || 0 === e.length);\n\t      }(s);\n\t    }\n\n\t    function v(e, t, r, n) {\n\t      t.flowing && 0 === t.length && !t.sync ? (e.emit(\"data\", r), e.read(0)) : (t.length += t.objectMode ? 1 : r.length, n ? t.buffer.unshift(r) : t.buffer.push(r), t.needReadable && A(e)), x(e, t);\n\t    }\n\n\t    Object.defineProperty(b.prototype, \"destroyed\", {\n\t      get: function get() {\n\t        return void 0 !== this._readableState && this._readableState.destroyed;\n\t      },\n\t      set: function set(e) {\n\t        this._readableState && (this._readableState.destroyed = e);\n\t      }\n\t    }), b.prototype.destroy = m.destroy, b.prototype._undestroy = m.undestroy, b.prototype._destroy = function (e, t) {\n\t      this.push(null), t(e);\n\t    }, b.prototype.push = function (e, t) {\n\t      var r,\n\t          n = this._readableState;\n\t      return n.objectMode ? r = !0 : \"string\" == typeof e && ((t = t || n.defaultEncoding) !== n.encoding && (e = f.from(e, t), t = \"\"), r = !0), w(this, e, t, !1, r);\n\t    }, b.prototype.unshift = function (e) {\n\t      return w(this, e, null, !0, !1);\n\t    }, b.prototype.isPaused = function () {\n\t      return !1 === this._readableState.flowing;\n\t    }, b.prototype.setEncoding = function (e) {\n\t      return p || (p = r(24).StringDecoder), this._readableState.decoder = new p(e), this._readableState.encoding = e, this;\n\t    };\n\t    var E = 8388608;\n\n\t    function S(e, t) {\n\t      return e <= 0 || 0 === t.length && t.ended ? 0 : t.objectMode ? 1 : e != e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = function (e) {\n\t        return e >= E ? e = E : (e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++), e;\n\t      }(e)), e <= t.length ? e : t.ended ? t.length : (t.needReadable = !0, 0));\n\t    }\n\n\t    function A(e) {\n\t      var t = e._readableState;\n\t      t.needReadable = !1, t.emittedReadable || (d(\"emitReadable\", t.flowing), t.emittedReadable = !0, t.sync ? i.nextTick(k, e) : k(e));\n\t    }\n\n\t    function k(e) {\n\t      d(\"emit readable\"), e.emit(\"readable\"), I(e);\n\t    }\n\n\t    function x(e, t) {\n\t      t.readingMore || (t.readingMore = !0, i.nextTick(C, e, t));\n\t    }\n\n\t    function C(e, t) {\n\t      for (var r = t.length; !t.reading && !t.flowing && !t.ended && t.length < t.highWaterMark && (d(\"maybeReadMore read 0\"), e.read(0), r !== t.length);) {\n\t        r = t.length;\n\t      }\n\n\t      t.readingMore = !1;\n\t    }\n\n\t    function R(e) {\n\t      d(\"readable nexttick read 0\"), e.read(0);\n\t    }\n\n\t    function T(e, t) {\n\t      t.reading || (d(\"resume read 0\"), e.read(0)), t.resumeScheduled = !1, t.awaitDrain = 0, e.emit(\"resume\"), I(e), t.flowing && !t.reading && e.read(0);\n\t    }\n\n\t    function I(e) {\n\t      var t = e._readableState;\n\n\t      for (d(\"flow\", t.flowing); t.flowing && null !== e.read();) {\n\t      }\n\t    }\n\n\t    function B(e, t) {\n\t      return 0 === t.length ? null : (t.objectMode ? r = t.buffer.shift() : !e || e >= t.length ? (r = t.decoder ? t.buffer.join(\"\") : 1 === t.buffer.length ? t.buffer.head.data : t.buffer.concat(t.length), t.buffer.clear()) : r = function (e, t, r) {\n\t        var n;\n\t        e < t.head.data.length ? (n = t.head.data.slice(0, e), t.head.data = t.head.data.slice(e)) : n = e === t.head.data.length ? t.shift() : r ? function (e, t) {\n\t          var r = t.head,\n\t              n = 1,\n\t              i = r.data;\n\t          e -= i.length;\n\n\t          for (; r = r.next;) {\n\t            var o = r.data,\n\t                s = e > o.length ? o.length : e;\n\n\t            if (s === o.length ? i += o : i += o.slice(0, e), 0 === (e -= s)) {\n\t              s === o.length ? (++n, r.next ? t.head = r.next : t.head = t.tail = null) : (t.head = r, r.data = o.slice(s));\n\t              break;\n\t            }\n\n\t            ++n;\n\t          }\n\n\t          return t.length -= n, i;\n\t        }(e, t) : function (e, t) {\n\t          var r = f.allocUnsafe(e),\n\t              n = t.head,\n\t              i = 1;\n\t          n.data.copy(r), e -= n.data.length;\n\n\t          for (; n = n.next;) {\n\t            var o = n.data,\n\t                s = e > o.length ? o.length : e;\n\n\t            if (o.copy(r, r.length - e, 0, s), 0 === (e -= s)) {\n\t              s === o.length ? (++i, n.next ? t.head = n.next : t.head = t.tail = null) : (t.head = n, n.data = o.slice(s));\n\t              break;\n\t            }\n\n\t            ++i;\n\t          }\n\n\t          return t.length -= i, r;\n\t        }(e, t);\n\t        return n;\n\t      }(e, t.buffer, t.decoder), r);\n\t      var r;\n\t    }\n\n\t    function L(e) {\n\t      var t = e._readableState;\n\t      if (t.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\t      t.endEmitted || (t.ended = !0, i.nextTick(N, t, e));\n\t    }\n\n\t    function N(e, t) {\n\t      e.endEmitted || 0 !== e.length || (e.endEmitted = !0, t.readable = !1, t.emit(\"end\"));\n\t    }\n\n\t    function F(e, t) {\n\t      for (var r = 0, n = e.length; r < n; r++) {\n\t        if (e[r] === t) return r;\n\t      }\n\n\t      return -1;\n\t    }\n\n\t    b.prototype.read = function (e) {\n\t      d(\"read\", e), e = parseInt(e, 10);\n\t      var t = this._readableState,\n\t          r = e;\n\t      if (0 !== e && (t.emittedReadable = !1), 0 === e && t.needReadable && (t.length >= t.highWaterMark || t.ended)) return d(\"read: emitReadable\", t.length, t.ended), 0 === t.length && t.ended ? L(this) : A(this), null;\n\t      if (0 === (e = S(e, t)) && t.ended) return 0 === t.length && L(this), null;\n\t      var n,\n\t          i = t.needReadable;\n\t      return d(\"need readable\", i), (0 === t.length || t.length - e < t.highWaterMark) && d(\"length less than watermark\", i = !0), t.ended || t.reading ? d(\"reading or ended\", i = !1) : i && (d(\"do read\"), t.reading = !0, t.sync = !0, 0 === t.length && (t.needReadable = !0), this._read(t.highWaterMark), t.sync = !1, t.reading || (e = S(r, t))), null === (n = e > 0 ? B(e, t) : null) ? (t.needReadable = !0, e = 0) : t.length -= e, 0 === t.length && (t.ended || (t.needReadable = !0), r !== e && t.ended && L(this)), null !== n && this.emit(\"data\", n), n;\n\t    }, b.prototype._read = function (e) {\n\t      this.emit(\"error\", new Error(\"_read() is not implemented\"));\n\t    }, b.prototype.pipe = function (e, t) {\n\t      var r = this,\n\t          o = this._readableState;\n\n\t      switch (o.pipesCount) {\n\t        case 0:\n\t          o.pipes = e;\n\t          break;\n\n\t        case 1:\n\t          o.pipes = [o.pipes, e];\n\t          break;\n\n\t        default:\n\t          o.pipes.push(e);\n\t      }\n\n\t      o.pipesCount += 1, d(\"pipe count=%d opts=%j\", o.pipesCount, t);\n\t      var h = (!t || !1 !== t.end) && e !== n.stdout && e !== n.stderr ? u : b;\n\n\t      function f(t, n) {\n\t        d(\"onunpipe\"), t === r && n && !1 === n.hasUnpiped && (n.hasUnpiped = !0, d(\"cleanup\"), e.removeListener(\"close\", _), e.removeListener(\"finish\", y), e.removeListener(\"drain\", c), e.removeListener(\"error\", m), e.removeListener(\"unpipe\", f), r.removeListener(\"end\", u), r.removeListener(\"end\", b), r.removeListener(\"data\", g), l = !0, !o.awaitDrain || e._writableState && !e._writableState.needDrain || c());\n\t      }\n\n\t      function u() {\n\t        d(\"onend\"), e.end();\n\t      }\n\n\t      o.endEmitted ? i.nextTick(h) : r.once(\"end\", h), e.on(\"unpipe\", f);\n\n\t      var c = function (e) {\n\t        return function () {\n\t          var t = e._readableState;\n\t          d(\"pipeOnDrain\", t.awaitDrain), t.awaitDrain && t.awaitDrain--, 0 === t.awaitDrain && a(e, \"data\") && (t.flowing = !0, I(e));\n\t        };\n\t      }(r);\n\n\t      e.on(\"drain\", c);\n\t      var l = !1;\n\t      var p = !1;\n\n\t      function g(t) {\n\t        d(\"ondata\"), p = !1, !1 !== e.write(t) || p || ((1 === o.pipesCount && o.pipes === e || o.pipesCount > 1 && -1 !== F(o.pipes, e)) && !l && (d(\"false write response, pause\", r._readableState.awaitDrain), r._readableState.awaitDrain++, p = !0), r.pause());\n\t      }\n\n\t      function m(t) {\n\t        d(\"onerror\", t), b(), e.removeListener(\"error\", m), 0 === a(e, \"error\") && e.emit(\"error\", t);\n\t      }\n\n\t      function _() {\n\t        e.removeListener(\"finish\", y), b();\n\t      }\n\n\t      function y() {\n\t        d(\"onfinish\"), e.removeListener(\"close\", _), b();\n\t      }\n\n\t      function b() {\n\t        d(\"unpipe\"), r.unpipe(e);\n\t      }\n\n\t      return r.on(\"data\", g), function (e, t, r) {\n\t        if (\"function\" == typeof e.prependListener) return e.prependListener(t, r);\n\t        e._events && e._events[t] ? s(e._events[t]) ? e._events[t].unshift(r) : e._events[t] = [r, e._events[t]] : e.on(t, r);\n\t      }(e, \"error\", m), e.once(\"close\", _), e.once(\"finish\", y), e.emit(\"pipe\", r), o.flowing || (d(\"pipe resume\"), r.resume()), e;\n\t    }, b.prototype.unpipe = function (e) {\n\t      var t = this._readableState,\n\t          r = {\n\t        hasUnpiped: !1\n\t      };\n\t      if (0 === t.pipesCount) return this;\n\t      if (1 === t.pipesCount) return e && e !== t.pipes ? this : (e || (e = t.pipes), t.pipes = null, t.pipesCount = 0, t.flowing = !1, e && e.emit(\"unpipe\", this, r), this);\n\n\t      if (!e) {\n\t        var n = t.pipes,\n\t            i = t.pipesCount;\n\t        t.pipes = null, t.pipesCount = 0, t.flowing = !1;\n\n\t        for (var o = 0; o < i; o++) {\n\t          n[o].emit(\"unpipe\", this, r);\n\t        }\n\n\t        return this;\n\t      }\n\n\t      var s = F(t.pipes, e);\n\t      return -1 === s ? this : (t.pipes.splice(s, 1), t.pipesCount -= 1, 1 === t.pipesCount && (t.pipes = t.pipes[0]), e.emit(\"unpipe\", this, r), this);\n\t    }, b.prototype.on = function (e, t) {\n\t      var r = h.prototype.on.call(this, e, t);\n\t      if (\"data\" === e) !1 !== this._readableState.flowing && this.resume();else if (\"readable\" === e) {\n\t        var n = this._readableState;\n\t        n.endEmitted || n.readableListening || (n.readableListening = n.needReadable = !0, n.emittedReadable = !1, n.reading ? n.length && A(this) : i.nextTick(R, this));\n\t      }\n\t      return r;\n\t    }, b.prototype.addListener = b.prototype.on, b.prototype.resume = function () {\n\t      var e = this._readableState;\n\t      return e.flowing || (d(\"resume\"), e.flowing = !0, function (e, t) {\n\t        t.resumeScheduled || (t.resumeScheduled = !0, i.nextTick(T, e, t));\n\t      }(this, e)), this;\n\t    }, b.prototype.pause = function () {\n\t      return d(\"call pause flowing=%j\", this._readableState.flowing), !1 !== this._readableState.flowing && (d(\"pause\"), this._readableState.flowing = !1, this.emit(\"pause\")), this;\n\t    }, b.prototype.wrap = function (e) {\n\t      var t = this,\n\t          r = this._readableState,\n\t          n = !1;\n\n\t      for (var i in e.on(\"end\", function () {\n\t        if (d(\"wrapped end\"), r.decoder && !r.ended) {\n\t          var e = r.decoder.end();\n\t          e && e.length && t.push(e);\n\t        }\n\n\t        t.push(null);\n\t      }), e.on(\"data\", function (i) {\n\t        (d(\"wrapped data\"), r.decoder && (i = r.decoder.write(i)), r.objectMode && null == i) || (r.objectMode || i && i.length) && (t.push(i) || (n = !0, e.pause()));\n\t      }), e) {\n\t        void 0 === this[i] && \"function\" == typeof e[i] && (this[i] = function (t) {\n\t          return function () {\n\t            return e[t].apply(e, arguments);\n\t          };\n\t        }(i));\n\t      }\n\n\t      for (var o = 0; o < _.length; o++) {\n\t        e.on(_[o], this.emit.bind(this, _[o]));\n\t      }\n\n\t      return this._read = function (t) {\n\t        d(\"wrapped _read\", t), n && (n = !1, e.resume());\n\t      }, this;\n\t    }, Object.defineProperty(b.prototype, \"readableHighWaterMark\", {\n\t      enumerable: !1,\n\t      get: function get() {\n\t        return this._readableState.highWaterMark;\n\t      }\n\t    }), b._fromList = B;\n\t  }).call(this, r(2), r(3));\n\t}, function (e, t, r) {\n\t  e.exports = r(14).EventEmitter;\n\t}, function (e, t, r) {\n\n\t  var n = r(9);\n\n\t  function i(e, t) {\n\t    e.emit(\"error\", t);\n\t  }\n\n\t  e.exports = {\n\t    destroy: function destroy(e, t) {\n\t      var r = this,\n\t          o = this._readableState && this._readableState.destroyed,\n\t          s = this._writableState && this._writableState.destroyed;\n\t      return o || s ? (t ? t(e) : !e || this._writableState && this._writableState.errorEmitted || n.nextTick(i, this, e), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, function (e) {\n\t        !t && e ? (n.nextTick(i, r, e), r._writableState && (r._writableState.errorEmitted = !0)) : t && t(e);\n\t      }), this);\n\t    },\n\t    undestroy: function undestroy() {\n\t      this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\n\t  var n = r(10).Buffer,\n\t      i = n.isEncoding || function (e) {\n\t    switch ((e = \"\" + e) && e.toLowerCase()) {\n\t      case \"hex\":\n\t      case \"utf8\":\n\t      case \"utf-8\":\n\t      case \"ascii\":\n\t      case \"binary\":\n\t      case \"base64\":\n\t      case \"ucs2\":\n\t      case \"ucs-2\":\n\t      case \"utf16le\":\n\t      case \"utf-16le\":\n\t      case \"raw\":\n\t        return !0;\n\n\t      default:\n\t        return !1;\n\t    }\n\t  };\n\n\t  function o(e) {\n\t    var t;\n\n\t    switch (this.encoding = function (e) {\n\t      var t = function (e) {\n\t        if (!e) return \"utf8\";\n\n\t        for (var t;;) {\n\t          switch (e) {\n\t            case \"utf8\":\n\t            case \"utf-8\":\n\t              return \"utf8\";\n\n\t            case \"ucs2\":\n\t            case \"ucs-2\":\n\t            case \"utf16le\":\n\t            case \"utf-16le\":\n\t              return \"utf16le\";\n\n\t            case \"latin1\":\n\t            case \"binary\":\n\t              return \"latin1\";\n\n\t            case \"base64\":\n\t            case \"ascii\":\n\t            case \"hex\":\n\t              return e;\n\n\t            default:\n\t              if (t) return;\n\t              e = (\"\" + e).toLowerCase(), t = !0;\n\t          }\n\t        }\n\t      }(e);\n\n\t      if (\"string\" != typeof t && (n.isEncoding === i || !i(e))) throw new Error(\"Unknown encoding: \" + e);\n\t      return t || e;\n\t    }(e), this.encoding) {\n\t      case \"utf16le\":\n\t        this.text = h, this.end = f, t = 4;\n\t        break;\n\n\t      case \"utf8\":\n\t        this.fillLast = a, t = 4;\n\t        break;\n\n\t      case \"base64\":\n\t        this.text = u, this.end = c, t = 3;\n\t        break;\n\n\t      default:\n\t        return this.write = l, void (this.end = d);\n\t    }\n\n\t    this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(t);\n\t  }\n\n\t  function s(e) {\n\t    return e <= 127 ? 0 : e >> 5 == 6 ? 2 : e >> 4 == 14 ? 3 : e >> 3 == 30 ? 4 : e >> 6 == 2 ? -1 : -2;\n\t  }\n\n\t  function a(e) {\n\t    var t = this.lastTotal - this.lastNeed,\n\t        r = function (e, t, r) {\n\t      if (128 != (192 & t[0])) return e.lastNeed = 0, \"�\";\n\n\t      if (e.lastNeed > 1 && t.length > 1) {\n\t        if (128 != (192 & t[1])) return e.lastNeed = 1, \"�\";\n\t        if (e.lastNeed > 2 && t.length > 2 && 128 != (192 & t[2])) return e.lastNeed = 2, \"�\";\n\t      }\n\t    }(this, e);\n\n\t    return void 0 !== r ? r : this.lastNeed <= e.length ? (e.copy(this.lastChar, t, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e.copy(this.lastChar, t, 0, e.length), void (this.lastNeed -= e.length));\n\t  }\n\n\t  function h(e, t) {\n\t    if ((e.length - t) % 2 == 0) {\n\t      var r = e.toString(\"utf16le\", t);\n\n\t      if (r) {\n\t        var n = r.charCodeAt(r.length - 1);\n\t        if (n >= 55296 && n <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], r.slice(0, -1);\n\t      }\n\n\t      return r;\n\t    }\n\n\t    return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString(\"utf16le\", t, e.length - 1);\n\t  }\n\n\t  function f(e) {\n\t    var t = e && e.length ? this.write(e) : \"\";\n\n\t    if (this.lastNeed) {\n\t      var r = this.lastTotal - this.lastNeed;\n\t      return t + this.lastChar.toString(\"utf16le\", 0, r);\n\t    }\n\n\t    return t;\n\t  }\n\n\t  function u(e, t) {\n\t    var r = (e.length - t) % 3;\n\t    return 0 === r ? e.toString(\"base64\", t) : (this.lastNeed = 3 - r, this.lastTotal = 3, 1 === r ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString(\"base64\", t, e.length - r));\n\t  }\n\n\t  function c(e) {\n\t    var t = e && e.length ? this.write(e) : \"\";\n\t    return this.lastNeed ? t + this.lastChar.toString(\"base64\", 0, 3 - this.lastNeed) : t;\n\t  }\n\n\t  function l(e) {\n\t    return e.toString(this.encoding);\n\t  }\n\n\t  function d(e) {\n\t    return e && e.length ? this.write(e) : \"\";\n\t  }\n\n\t  t.StringDecoder = o, o.prototype.write = function (e) {\n\t    if (0 === e.length) return \"\";\n\t    var t, r;\n\n\t    if (this.lastNeed) {\n\t      if (void 0 === (t = this.fillLast(e))) return \"\";\n\t      r = this.lastNeed, this.lastNeed = 0;\n\t    } else r = 0;\n\n\t    return r < e.length ? t ? t + this.text(e, r) : this.text(e, r) : t || \"\";\n\t  }, o.prototype.end = function (e) {\n\t    var t = e && e.length ? this.write(e) : \"\";\n\t    return this.lastNeed ? t + \"�\" : t;\n\t  }, o.prototype.text = function (e, t) {\n\t    var r = function (e, t, r) {\n\t      var n = t.length - 1;\n\t      if (n < r) return 0;\n\t      var i = s(t[n]);\n\t      if (i >= 0) return i > 0 && (e.lastNeed = i - 1), i;\n\t      if (--n < r || -2 === i) return 0;\n\t      if ((i = s(t[n])) >= 0) return i > 0 && (e.lastNeed = i - 2), i;\n\t      if (--n < r || -2 === i) return 0;\n\t      if ((i = s(t[n])) >= 0) return i > 0 && (2 === i ? i = 0 : e.lastNeed = i - 3), i;\n\t      return 0;\n\t    }(this, e, t);\n\n\t    if (!this.lastNeed) return e.toString(\"utf8\", t);\n\t    this.lastTotal = r;\n\t    var n = e.length - (r - this.lastNeed);\n\t    return e.copy(this.lastChar, 0, n), e.toString(\"utf8\", t, n);\n\t  }, o.prototype.fillLast = function (e) {\n\t    if (this.lastNeed <= e.length) return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);\n\t    e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), this.lastNeed -= e.length;\n\t  };\n\t}, function (e, t, r) {\n\n\t  e.exports = s;\n\t  var n = r(5),\n\t      i = r(7);\n\n\t  function o(e, t) {\n\t    var r = this._transformState;\n\t    r.transforming = !1;\n\t    var n = r.writecb;\n\t    if (!n) return this.emit(\"error\", new Error(\"write callback called multiple times\"));\n\t    r.writechunk = null, r.writecb = null, null != t && this.push(t), n(e);\n\t    var i = this._readableState;\n\t    i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);\n\t  }\n\n\t  function s(e) {\n\t    if (!(this instanceof s)) return new s(e);\n\t    n.call(this, e), this._transformState = {\n\t      afterTransform: o.bind(this),\n\t      needTransform: !1,\n\t      transforming: !1,\n\t      writecb: null,\n\t      writechunk: null,\n\t      writeencoding: null\n\t    }, this._readableState.needReadable = !0, this._readableState.sync = !1, e && (\"function\" == typeof e.transform && (this._transform = e.transform), \"function\" == typeof e.flush && (this._flush = e.flush)), this.on(\"prefinish\", a);\n\t  }\n\n\t  function a() {\n\t    var e = this;\n\t    \"function\" == typeof this._flush ? this._flush(function (t, r) {\n\t      h(e, t, r);\n\t    }) : h(this, null, null);\n\t  }\n\n\t  function h(e, t, r) {\n\t    if (t) return e.emit(\"error\", t);\n\t    if (null != r && e.push(r), e._writableState.length) throw new Error(\"Calling transform done when ws.length != 0\");\n\t    if (e._transformState.transforming) throw new Error(\"Calling transform done when still transforming\");\n\t    return e.push(null);\n\t  }\n\n\t  i.inherits = r(4), i.inherits(s, n), s.prototype.push = function (e, t) {\n\t    return this._transformState.needTransform = !1, n.prototype.push.call(this, e, t);\n\t  }, s.prototype._transform = function (e, t, r) {\n\t    throw new Error(\"_transform() is not implemented\");\n\t  }, s.prototype._write = function (e, t, r) {\n\t    var n = this._transformState;\n\n\t    if (n.writecb = r, n.writechunk = e, n.writeencoding = t, !n.transforming) {\n\t      var i = this._readableState;\n\t      (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);\n\t    }\n\t  }, s.prototype._read = function (e) {\n\t    var t = this._transformState;\n\t    null !== t.writechunk && t.writecb && !t.transforming ? (t.transforming = !0, this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = !0;\n\t  }, s.prototype._destroy = function (e, t) {\n\t    var r = this;\n\n\t    n.prototype._destroy.call(this, e, function (e) {\n\t      t(e), r.emit(\"close\");\n\t    });\n\t  };\n\t}, function (e, t, r) {\n\n\t  (function (t) {\n\t    /*!\n\t     * The buffer module from node.js, for the browser.\n\t     *\n\t     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t     * @license  MIT\n\t     */\n\t    function n(e, t) {\n\t      if (e === t) return 0;\n\n\t      for (var r = e.length, n = t.length, i = 0, o = Math.min(r, n); i < o; ++i) {\n\t        if (e[i] !== t[i]) {\n\t          r = e[i], n = t[i];\n\t          break;\n\t        }\n\t      }\n\n\t      return r < n ? -1 : n < r ? 1 : 0;\n\t    }\n\n\t    function i(e) {\n\t      return t.Buffer && \"function\" == typeof t.Buffer.isBuffer ? t.Buffer.isBuffer(e) : !(null == e || !e._isBuffer);\n\t    }\n\n\t    var o = r(27),\n\t        s = Object.prototype.hasOwnProperty,\n\t        a = Array.prototype.slice,\n\t        h = \"foo\" === function () {}.name;\n\n\t    function f(e) {\n\t      return Object.prototype.toString.call(e);\n\t    }\n\n\t    function u(e) {\n\t      return !i(e) && \"function\" == typeof t.ArrayBuffer && (\"function\" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(e) : !!e && (e instanceof DataView || !!(e.buffer && e.buffer instanceof ArrayBuffer)));\n\t    }\n\n\t    var c = e.exports = _,\n\t        l = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n\n\t    function d(e) {\n\t      if (o.isFunction(e)) {\n\t        if (h) return e.name;\n\t        var t = e.toString().match(l);\n\t        return t && t[1];\n\t      }\n\t    }\n\n\t    function p(e, t) {\n\t      return \"string\" == typeof e ? e.length < t ? e : e.slice(0, t) : e;\n\t    }\n\n\t    function g(e) {\n\t      if (h || !o.isFunction(e)) return o.inspect(e);\n\t      var t = d(e);\n\t      return \"[Function\" + (t ? \": \" + t : \"\") + \"]\";\n\t    }\n\n\t    function m(e, t, r, n, i) {\n\t      throw new c.AssertionError({\n\t        message: r,\n\t        actual: e,\n\t        expected: t,\n\t        operator: n,\n\t        stackStartFunction: i\n\t      });\n\t    }\n\n\t    function _(e, t) {\n\t      e || m(e, !0, t, \"==\", c.ok);\n\t    }\n\n\t    function y(e, t, r, s) {\n\t      if (e === t) return !0;\n\t      if (i(e) && i(t)) return 0 === n(e, t);\n\t      if (o.isDate(e) && o.isDate(t)) return e.getTime() === t.getTime();\n\t      if (o.isRegExp(e) && o.isRegExp(t)) return e.source === t.source && e.global === t.global && e.multiline === t.multiline && e.lastIndex === t.lastIndex && e.ignoreCase === t.ignoreCase;\n\n\t      if (null !== e && \"object\" == _typeof(e) || null !== t && \"object\" == _typeof(t)) {\n\t        if (u(e) && u(t) && f(e) === f(t) && !(e instanceof Float32Array || e instanceof Float64Array)) return 0 === n(new Uint8Array(e.buffer), new Uint8Array(t.buffer));\n\t        if (i(e) !== i(t)) return !1;\n\t        var h = (s = s || {\n\t          actual: [],\n\t          expected: []\n\t        }).actual.indexOf(e);\n\t        return -1 !== h && h === s.expected.indexOf(t) || (s.actual.push(e), s.expected.push(t), function (e, t, r, n) {\n\t          if (null == e || null == t) return !1;\n\t          if (o.isPrimitive(e) || o.isPrimitive(t)) return e === t;\n\t          if (r && Object.getPrototypeOf(e) !== Object.getPrototypeOf(t)) return !1;\n\t          var i = b(e),\n\t              s = b(t);\n\t          if (i && !s || !i && s) return !1;\n\t          if (i) return e = a.call(e), t = a.call(t), y(e, t, r);\n\t          var h,\n\t              f,\n\t              u = E(e),\n\t              c = E(t);\n\t          if (u.length !== c.length) return !1;\n\n\t          for (u.sort(), c.sort(), f = u.length - 1; f >= 0; f--) {\n\t            if (u[f] !== c[f]) return !1;\n\t          }\n\n\t          for (f = u.length - 1; f >= 0; f--) {\n\t            if (h = u[f], !y(e[h], t[h], r, n)) return !1;\n\t          }\n\n\t          return !0;\n\t        }(e, t, r, s));\n\t      }\n\n\t      return r ? e === t : e == t;\n\t    }\n\n\t    function b(e) {\n\t      return \"[object Arguments]\" == Object.prototype.toString.call(e);\n\t    }\n\n\t    function w(e, t) {\n\t      if (!e || !t) return !1;\n\t      if (\"[object RegExp]\" == Object.prototype.toString.call(t)) return t.test(e);\n\n\t      try {\n\t        if (e instanceof t) return !0;\n\t      } catch (e) {}\n\n\t      return !Error.isPrototypeOf(t) && !0 === t.call({}, e);\n\t    }\n\n\t    function v(e, t, r, n) {\n\t      var i;\n\t      if (\"function\" != typeof t) throw new TypeError('\"block\" argument must be a function');\n\t      \"string\" == typeof r && (n = r, r = null), i = function (e) {\n\t        var t;\n\n\t        try {\n\t          e();\n\t        } catch (e) {\n\t          t = e;\n\t        }\n\n\t        return t;\n\t      }(t), n = (r && r.name ? \" (\" + r.name + \").\" : \".\") + (n ? \" \" + n : \".\"), e && !i && m(i, r, \"Missing expected exception\" + n);\n\t      var s = \"string\" == typeof n,\n\t          a = !e && i && !r;\n\t      if ((!e && o.isError(i) && s && w(i, r) || a) && m(i, r, \"Got unwanted exception\" + n), e && i && r && !w(i, r) || !e && i) throw i;\n\t    }\n\n\t    c.AssertionError = function (e) {\n\t      var t;\n\t      this.name = \"AssertionError\", this.actual = e.actual, this.expected = e.expected, this.operator = e.operator, e.message ? (this.message = e.message, this.generatedMessage = !1) : (this.message = p(g((t = this).actual), 128) + \" \" + t.operator + \" \" + p(g(t.expected), 128), this.generatedMessage = !0);\n\t      var r = e.stackStartFunction || m;\n\t      if (Error.captureStackTrace) Error.captureStackTrace(this, r);else {\n\t        var n = new Error();\n\n\t        if (n.stack) {\n\t          var i = n.stack,\n\t              o = d(r),\n\t              s = i.indexOf(\"\\n\" + o);\n\n\t          if (s >= 0) {\n\t            var a = i.indexOf(\"\\n\", s + 1);\n\t            i = i.substring(a + 1);\n\t          }\n\n\t          this.stack = i;\n\t        }\n\t      }\n\t    }, o.inherits(c.AssertionError, Error), c.fail = m, c.ok = _, c.equal = function (e, t, r) {\n\t      e != t && m(e, t, r, \"==\", c.equal);\n\t    }, c.notEqual = function (e, t, r) {\n\t      e == t && m(e, t, r, \"!=\", c.notEqual);\n\t    }, c.deepEqual = function (e, t, r) {\n\t      y(e, t, !1) || m(e, t, r, \"deepEqual\", c.deepEqual);\n\t    }, c.deepStrictEqual = function (e, t, r) {\n\t      y(e, t, !0) || m(e, t, r, \"deepStrictEqual\", c.deepStrictEqual);\n\t    }, c.notDeepEqual = function (e, t, r) {\n\t      y(e, t, !1) && m(e, t, r, \"notDeepEqual\", c.notDeepEqual);\n\t    }, c.notDeepStrictEqual = function e(t, r, n) {\n\t      y(t, r, !0) && m(t, r, n, \"notDeepStrictEqual\", e);\n\t    }, c.strictEqual = function (e, t, r) {\n\t      e !== t && m(e, t, r, \"===\", c.strictEqual);\n\t    }, c.notStrictEqual = function (e, t, r) {\n\t      e === t && m(e, t, r, \"!==\", c.notStrictEqual);\n\t    }, c.throws = function (e, t, r) {\n\t      v(!0, e, t, r);\n\t    }, c.doesNotThrow = function (e, t, r) {\n\t      v(!1, e, t, r);\n\t    }, c.ifError = function (e) {\n\t      if (e) throw e;\n\t    };\n\n\t    var E = Object.keys || function (e) {\n\t      var t = [];\n\n\t      for (var r in e) {\n\t        s.call(e, r) && t.push(r);\n\t      }\n\n\t      return t;\n\t    };\n\t  }).call(this, r(2));\n\t}, function (e, t, r) {\n\t  (function (e, n) {\n\t    var i = /%[sdj%]/g;\n\t    t.format = function (e) {\n\t      if (!_(e)) {\n\t        for (var t = [], r = 0; r < arguments.length; r++) {\n\t          t.push(a(arguments[r]));\n\t        }\n\n\t        return t.join(\" \");\n\t      }\n\n\t      r = 1;\n\n\t      for (var n = arguments, o = n.length, s = String(e).replace(i, function (e) {\n\t        if (\"%%\" === e) return \"%\";\n\t        if (r >= o) return e;\n\n\t        switch (e) {\n\t          case \"%s\":\n\t            return String(n[r++]);\n\n\t          case \"%d\":\n\t            return Number(n[r++]);\n\n\t          case \"%j\":\n\t            try {\n\t              return JSON.stringify(n[r++]);\n\t            } catch (e) {\n\t              return \"[Circular]\";\n\t            }\n\n\t          default:\n\t            return e;\n\t        }\n\t      }), h = n[r]; r < o; h = n[++r]) {\n\t        g(h) || !w(h) ? s += \" \" + h : s += \" \" + a(h);\n\t      }\n\n\t      return s;\n\t    }, t.deprecate = function (r, i) {\n\t      if (y(e.process)) return function () {\n\t        return t.deprecate(r, i).apply(this, arguments);\n\t      };\n\t      if (!0 === n.noDeprecation) return r;\n\t      var o = !1;\n\t      return function () {\n\t        if (!o) {\n\t          if (n.throwDeprecation) throw new Error(i);\n\t          n.traceDeprecation ? console.trace(i) : console.error(i), o = !0;\n\t        }\n\n\t        return r.apply(this, arguments);\n\t      };\n\t    };\n\t    var o,\n\t        s = {};\n\n\t    function a(e, r) {\n\t      var n = {\n\t        seen: [],\n\t        stylize: f\n\t      };\n\t      return arguments.length >= 3 && (n.depth = arguments[2]), arguments.length >= 4 && (n.colors = arguments[3]), p(r) ? n.showHidden = r : r && t._extend(n, r), y(n.showHidden) && (n.showHidden = !1), y(n.depth) && (n.depth = 2), y(n.colors) && (n.colors = !1), y(n.customInspect) && (n.customInspect = !0), n.colors && (n.stylize = h), u(n, e, n.depth);\n\t    }\n\n\t    function h(e, t) {\n\t      var r = a.styles[t];\n\t      return r ? \"\u001b[\" + a.colors[r][0] + \"m\" + e + \"\u001b[\" + a.colors[r][1] + \"m\" : e;\n\t    }\n\n\t    function f(e, t) {\n\t      return e;\n\t    }\n\n\t    function u(e, r, n) {\n\t      if (e.customInspect && r && S(r.inspect) && r.inspect !== t.inspect && (!r.constructor || r.constructor.prototype !== r)) {\n\t        var i = r.inspect(n, e);\n\t        return _(i) || (i = u(e, i, n)), i;\n\t      }\n\n\t      var o = function (e, t) {\n\t        if (y(t)) return e.stylize(\"undefined\", \"undefined\");\n\n\t        if (_(t)) {\n\t          var r = \"'\" + JSON.stringify(t).replace(/^\"|\"$/g, \"\").replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + \"'\";\n\t          return e.stylize(r, \"string\");\n\t        }\n\n\t        if (m(t)) return e.stylize(\"\" + t, \"number\");\n\t        if (p(t)) return e.stylize(\"\" + t, \"boolean\");\n\t        if (g(t)) return e.stylize(\"null\", \"null\");\n\t      }(e, r);\n\n\t      if (o) return o;\n\n\t      var s = Object.keys(r),\n\t          a = function (e) {\n\t        var t = {};\n\t        return e.forEach(function (e, r) {\n\t          t[e] = !0;\n\t        }), t;\n\t      }(s);\n\n\t      if (e.showHidden && (s = Object.getOwnPropertyNames(r)), E(r) && (s.indexOf(\"message\") >= 0 || s.indexOf(\"description\") >= 0)) return c(r);\n\n\t      if (0 === s.length) {\n\t        if (S(r)) {\n\t          var h = r.name ? \": \" + r.name : \"\";\n\t          return e.stylize(\"[Function\" + h + \"]\", \"special\");\n\t        }\n\n\t        if (b(r)) return e.stylize(RegExp.prototype.toString.call(r), \"regexp\");\n\t        if (v(r)) return e.stylize(Date.prototype.toString.call(r), \"date\");\n\t        if (E(r)) return c(r);\n\t      }\n\n\t      var f,\n\t          w = \"\",\n\t          A = !1,\n\t          k = [\"{\", \"}\"];\n\t      (d(r) && (A = !0, k = [\"[\", \"]\"]), S(r)) && (w = \" [Function\" + (r.name ? \": \" + r.name : \"\") + \"]\");\n\t      return b(r) && (w = \" \" + RegExp.prototype.toString.call(r)), v(r) && (w = \" \" + Date.prototype.toUTCString.call(r)), E(r) && (w = \" \" + c(r)), 0 !== s.length || A && 0 != r.length ? n < 0 ? b(r) ? e.stylize(RegExp.prototype.toString.call(r), \"regexp\") : e.stylize(\"[Object]\", \"special\") : (e.seen.push(r), f = A ? function (e, t, r, n, i) {\n\t        for (var o = [], s = 0, a = t.length; s < a; ++s) {\n\t          C(t, String(s)) ? o.push(l(e, t, r, n, String(s), !0)) : o.push(\"\");\n\t        }\n\n\t        return i.forEach(function (i) {\n\t          i.match(/^\\d+$/) || o.push(l(e, t, r, n, i, !0));\n\t        }), o;\n\t      }(e, r, n, a, s) : s.map(function (t) {\n\t        return l(e, r, n, a, t, A);\n\t      }), e.seen.pop(), function (e, t, r) {\n\t        if (e.reduce(function (e, t) {\n\t          return t.indexOf(\"\\n\") >= 0 && 0, e + t.replace(/\\u001b\\[\\d\\d?m/g, \"\").length + 1;\n\t        }, 0) > 60) return r[0] + (\"\" === t ? \"\" : t + \"\\n \") + \" \" + e.join(\",\\n  \") + \" \" + r[1];\n\t        return r[0] + t + \" \" + e.join(\", \") + \" \" + r[1];\n\t      }(f, w, k)) : k[0] + w + k[1];\n\t    }\n\n\t    function c(e) {\n\t      return \"[\" + Error.prototype.toString.call(e) + \"]\";\n\t    }\n\n\t    function l(e, t, r, n, i, o) {\n\t      var s, a, h;\n\n\t      if ((h = Object.getOwnPropertyDescriptor(t, i) || {\n\t        value: t[i]\n\t      }).get ? a = h.set ? e.stylize(\"[Getter/Setter]\", \"special\") : e.stylize(\"[Getter]\", \"special\") : h.set && (a = e.stylize(\"[Setter]\", \"special\")), C(n, i) || (s = \"[\" + i + \"]\"), a || (e.seen.indexOf(h.value) < 0 ? (a = g(r) ? u(e, h.value, null) : u(e, h.value, r - 1)).indexOf(\"\\n\") > -1 && (a = o ? a.split(\"\\n\").map(function (e) {\n\t        return \"  \" + e;\n\t      }).join(\"\\n\").substr(2) : \"\\n\" + a.split(\"\\n\").map(function (e) {\n\t        return \"   \" + e;\n\t      }).join(\"\\n\")) : a = e.stylize(\"[Circular]\", \"special\")), y(s)) {\n\t        if (o && i.match(/^\\d+$/)) return a;\n\t        (s = JSON.stringify(\"\" + i)).match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/) ? (s = s.substr(1, s.length - 2), s = e.stylize(s, \"name\")) : (s = s.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\"), s = e.stylize(s, \"string\"));\n\t      }\n\n\t      return s + \": \" + a;\n\t    }\n\n\t    function d(e) {\n\t      return Array.isArray(e);\n\t    }\n\n\t    function p(e) {\n\t      return \"boolean\" == typeof e;\n\t    }\n\n\t    function g(e) {\n\t      return null === e;\n\t    }\n\n\t    function m(e) {\n\t      return \"number\" == typeof e;\n\t    }\n\n\t    function _(e) {\n\t      return \"string\" == typeof e;\n\t    }\n\n\t    function y(e) {\n\t      return void 0 === e;\n\t    }\n\n\t    function b(e) {\n\t      return w(e) && \"[object RegExp]\" === A(e);\n\t    }\n\n\t    function w(e) {\n\t      return \"object\" == _typeof(e) && null !== e;\n\t    }\n\n\t    function v(e) {\n\t      return w(e) && \"[object Date]\" === A(e);\n\t    }\n\n\t    function E(e) {\n\t      return w(e) && (\"[object Error]\" === A(e) || e instanceof Error);\n\t    }\n\n\t    function S(e) {\n\t      return \"function\" == typeof e;\n\t    }\n\n\t    function A(e) {\n\t      return Object.prototype.toString.call(e);\n\t    }\n\n\t    t.debuglog = function (e) {\n\t      if (y(o) && (o = n.env.NODE_DEBUG || \"\"), e = e.toUpperCase(), !s[e]) if (new RegExp(\"\\\\b\" + e + \"\\\\b\", \"i\").test(o)) {\n\t        var r = n.pid;\n\n\t        s[e] = function () {\n\t          var n = t.format.apply(t, arguments);\n\t          console.error(\"%s %d: %s\", e, r, n);\n\t        };\n\t      } else s[e] = function () {};\n\t      return s[e];\n\t    }, t.inspect = a, a.colors = {\n\t      bold: [1, 22],\n\t      italic: [3, 23],\n\t      underline: [4, 24],\n\t      inverse: [7, 27],\n\t      white: [37, 39],\n\t      grey: [90, 39],\n\t      black: [30, 39],\n\t      blue: [34, 39],\n\t      cyan: [36, 39],\n\t      green: [32, 39],\n\t      magenta: [35, 39],\n\t      red: [31, 39],\n\t      yellow: [33, 39]\n\t    }, a.styles = {\n\t      special: \"cyan\",\n\t      number: \"yellow\",\n\t      boolean: \"yellow\",\n\t      undefined: \"grey\",\n\t      null: \"bold\",\n\t      string: \"green\",\n\t      date: \"magenta\",\n\t      regexp: \"red\"\n\t    }, t.isArray = d, t.isBoolean = p, t.isNull = g, t.isNullOrUndefined = function (e) {\n\t      return null == e;\n\t    }, t.isNumber = m, t.isString = _, t.isSymbol = function (e) {\n\t      return \"symbol\" == _typeof(e);\n\t    }, t.isUndefined = y, t.isRegExp = b, t.isObject = w, t.isDate = v, t.isError = E, t.isFunction = S, t.isPrimitive = function (e) {\n\t      return null === e || \"boolean\" == typeof e || \"number\" == typeof e || \"string\" == typeof e || \"symbol\" == _typeof(e) || void 0 === e;\n\t    }, t.isBuffer = r(52);\n\n\t    function C(e, t) {\n\t      return Object.prototype.hasOwnProperty.call(e, t);\n\t    }\n\n\t    t.log = function () {\n\t    }, t.inherits = r(4), t._extend = function (e, t) {\n\t      if (!t || !w(t)) return e;\n\n\t      for (var r = Object.keys(t), n = r.length; n--;) {\n\t        e[r[n]] = t[r[n]];\n\t      }\n\n\t      return e;\n\t    };\n\t  }).call(this, r(2), r(3));\n\t}, function (e, t, r) {\n\n\t  e.exports = function (e, t, r, n) {\n\t    for (var i = 65535 & e | 0, o = e >>> 16 & 65535 | 0, s = 0; 0 !== r;) {\n\t      r -= s = r > 2e3 ? 2e3 : r;\n\n\t      do {\n\t        o = o + (i = i + t[n++] | 0) | 0;\n\t      } while (--s);\n\n\t      i %= 65521, o %= 65521;\n\t    }\n\n\t    return i | o << 16 | 0;\n\t  };\n\t}, function (e, t, r) {\n\n\t  var n = function () {\n\t    for (var e, t = [], r = 0; r < 256; r++) {\n\t      e = r;\n\n\t      for (var n = 0; n < 8; n++) {\n\t        e = 1 & e ? 3988292384 ^ e >>> 1 : e >>> 1;\n\t      }\n\n\t      t[r] = e;\n\t    }\n\n\t    return t;\n\t  }();\n\n\t  e.exports = function (e, t, r, i) {\n\t    var o = n,\n\t        s = i + r;\n\t    e ^= -1;\n\n\t    for (var a = i; a < s; a++) {\n\t      e = e >>> 8 ^ o[255 & (e ^ t[a])];\n\t    }\n\n\t    return -1 ^ e;\n\t  };\n\t}, function (e, t, r) {\n\n\t  e.exports = /*#__PURE__*/function () {\n\t    function _class2() {\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t      _classCallCheck(this, _class2);\n\n\t      if (!(e.maxSize && e.maxSize > 0)) throw new TypeError(\"`maxSize` must be a number greater than 0\");\n\t      this.maxSize = e.maxSize, this.cache = new Map(), this.oldCache = new Map(), this._size = 0;\n\t    }\n\n\t    _createClass(_class2, [{\n\t      key: \"_set\",\n\t      value: function _set(e, t) {\n\t        this.cache.set(e, t), this._size++, this._size >= this.maxSize && (this._size = 0, this.oldCache = this.cache, this.cache = new Map());\n\t      }\n\t    }, {\n\t      key: \"get\",\n\t      value: function get(e) {\n\t        if (this.cache.has(e)) return this.cache.get(e);\n\n\t        if (this.oldCache.has(e)) {\n\t          var _t = this.oldCache.get(e);\n\n\t          return this._set(e, _t), _t;\n\t        }\n\t      }\n\t    }, {\n\t      key: \"set\",\n\t      value: function set(e, t) {\n\t        return this.cache.has(e) ? this.cache.set(e, t) : this._set(e, t), this;\n\t      }\n\t    }, {\n\t      key: \"has\",\n\t      value: function has(e) {\n\t        return this.cache.has(e) || this.oldCache.has(e);\n\t      }\n\t    }, {\n\t      key: \"peek\",\n\t      value: function peek(e) {\n\t        return this.cache.has(e) ? this.cache.get(e) : this.oldCache.has(e) ? this.oldCache.get(e) : void 0;\n\t      }\n\t    }, {\n\t      key: \"delete\",\n\t      value: function _delete(e) {\n\t        var t = this.cache.delete(e);\n\t        return t && this._size--, this.oldCache.delete(e) || t;\n\t      }\n\t    }, {\n\t      key: \"clear\",\n\t      value: function clear() {\n\t        this.cache.clear(), this.oldCache.clear(), this._size = 0;\n\t      }\n\t    }, {\n\t      key: \"keys\",\n\t      value: /*#__PURE__*/regeneratorRuntime.mark(function keys() {\n\t        var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, _e3;\n\n\t        return regeneratorRuntime.wrap(function keys$(_context) {\n\t          while (1) {\n\t            switch (_context.prev = _context.next) {\n\t              case 0:\n\t                _iteratorNormalCompletion = true;\n\t                _didIteratorError = false;\n\t                _iteratorError = undefined;\n\t                _context.prev = 3;\n\t                _iterator = this[Symbol.iterator]();\n\n\t              case 5:\n\t                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t                  _context.next = 12;\n\t                  break;\n\t                }\n\n\t                _step$value = _slicedToArray(_step.value, 1), _e3 = _step$value[0];\n\t                _context.next = 9;\n\t                return _e3;\n\n\t              case 9:\n\t                _iteratorNormalCompletion = true;\n\t                _context.next = 5;\n\t                break;\n\n\t              case 12:\n\t                _context.next = 18;\n\t                break;\n\n\t              case 14:\n\t                _context.prev = 14;\n\t                _context.t0 = _context[\"catch\"](3);\n\t                _didIteratorError = true;\n\t                _iteratorError = _context.t0;\n\n\t              case 18:\n\t                _context.prev = 18;\n\t                _context.prev = 19;\n\n\t                if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t                  _iterator.return();\n\t                }\n\n\t              case 21:\n\t                _context.prev = 21;\n\n\t                if (!_didIteratorError) {\n\t                  _context.next = 24;\n\t                  break;\n\t                }\n\n\t                throw _iteratorError;\n\n\t              case 24:\n\t                return _context.finish(21);\n\n\t              case 25:\n\t                return _context.finish(18);\n\n\t              case 26:\n\t              case \"end\":\n\t                return _context.stop();\n\t            }\n\t          }\n\t        }, keys, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n\t      })\n\t    }, {\n\t      key: \"values\",\n\t      value: /*#__PURE__*/regeneratorRuntime.mark(function values() {\n\t        var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _step2$value, _e4;\n\n\t        return regeneratorRuntime.wrap(function values$(_context2) {\n\t          while (1) {\n\t            switch (_context2.prev = _context2.next) {\n\t              case 0:\n\t                _iteratorNormalCompletion2 = true;\n\t                _didIteratorError2 = false;\n\t                _iteratorError2 = undefined;\n\t                _context2.prev = 3;\n\t                _iterator2 = this[Symbol.iterator]();\n\n\t              case 5:\n\t                if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n\t                  _context2.next = 12;\n\t                  break;\n\t                }\n\n\t                _step2$value = _slicedToArray(_step2.value, 2), _e4 = _step2$value[1];\n\t                _context2.next = 9;\n\t                return _e4;\n\n\t              case 9:\n\t                _iteratorNormalCompletion2 = true;\n\t                _context2.next = 5;\n\t                break;\n\n\t              case 12:\n\t                _context2.next = 18;\n\t                break;\n\n\t              case 14:\n\t                _context2.prev = 14;\n\t                _context2.t0 = _context2[\"catch\"](3);\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = _context2.t0;\n\n\t              case 18:\n\t                _context2.prev = 18;\n\t                _context2.prev = 19;\n\n\t                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t                  _iterator2.return();\n\t                }\n\n\t              case 21:\n\t                _context2.prev = 21;\n\n\t                if (!_didIteratorError2) {\n\t                  _context2.next = 24;\n\t                  break;\n\t                }\n\n\t                throw _iteratorError2;\n\n\t              case 24:\n\t                return _context2.finish(21);\n\n\t              case 25:\n\t                return _context2.finish(18);\n\n\t              case 26:\n\t              case \"end\":\n\t                return _context2.stop();\n\t            }\n\t          }\n\t        }, values, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n\t      })\n\t    }, {\n\t      key: Symbol.iterator,\n\t      value: /*#__PURE__*/regeneratorRuntime.mark(function value() {\n\t        var _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _e5, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _e6, _e7, _t2;\n\n\t        return regeneratorRuntime.wrap(function value$(_context3) {\n\t          while (1) {\n\t            switch (_context3.prev = _context3.next) {\n\t              case 0:\n\t                _iteratorNormalCompletion3 = true;\n\t                _didIteratorError3 = false;\n\t                _iteratorError3 = undefined;\n\t                _context3.prev = 3;\n\t                _iterator3 = this.cache[Symbol.iterator]();\n\n\t              case 5:\n\t                if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n\t                  _context3.next = 12;\n\t                  break;\n\t                }\n\n\t                _e5 = _step3.value;\n\t                _context3.next = 9;\n\t                return _e5;\n\n\t              case 9:\n\t                _iteratorNormalCompletion3 = true;\n\t                _context3.next = 5;\n\t                break;\n\n\t              case 12:\n\t                _context3.next = 18;\n\t                break;\n\n\t              case 14:\n\t                _context3.prev = 14;\n\t                _context3.t0 = _context3[\"catch\"](3);\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = _context3.t0;\n\n\t              case 18:\n\t                _context3.prev = 18;\n\t                _context3.prev = 19;\n\n\t                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t                  _iterator3.return();\n\t                }\n\n\t              case 21:\n\t                _context3.prev = 21;\n\n\t                if (!_didIteratorError3) {\n\t                  _context3.next = 24;\n\t                  break;\n\t                }\n\n\t                throw _iteratorError3;\n\n\t              case 24:\n\t                return _context3.finish(21);\n\n\t              case 25:\n\t                return _context3.finish(18);\n\n\t              case 26:\n\t                _iteratorNormalCompletion4 = true;\n\t                _didIteratorError4 = false;\n\t                _iteratorError4 = undefined;\n\t                _context3.prev = 29;\n\t                _iterator4 = this.oldCache[Symbol.iterator]();\n\n\t              case 31:\n\t                if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n\t                  _context3.next = 41;\n\t                  break;\n\t                }\n\n\t                _e6 = _step4.value;\n\t                _e7 = _slicedToArray(_e6, 1), _t2 = _e7[0];\n\t                _context3.t1 = this.cache.has(_t2);\n\n\t                if (_context3.t1) {\n\t                  _context3.next = 38;\n\t                  break;\n\t                }\n\n\t                _context3.next = 38;\n\t                return _e6;\n\n\t              case 38:\n\t                _iteratorNormalCompletion4 = true;\n\t                _context3.next = 31;\n\t                break;\n\n\t              case 41:\n\t                _context3.next = 47;\n\t                break;\n\n\t              case 43:\n\t                _context3.prev = 43;\n\t                _context3.t2 = _context3[\"catch\"](29);\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = _context3.t2;\n\n\t              case 47:\n\t                _context3.prev = 47;\n\t                _context3.prev = 48;\n\n\t                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t                  _iterator4.return();\n\t                }\n\n\t              case 50:\n\t                _context3.prev = 50;\n\n\t                if (!_didIteratorError4) {\n\t                  _context3.next = 53;\n\t                  break;\n\t                }\n\n\t                throw _iteratorError4;\n\n\t              case 53:\n\t                return _context3.finish(50);\n\n\t              case 54:\n\t                return _context3.finish(47);\n\n\t              case 55:\n\t              case \"end\":\n\t                return _context3.stop();\n\t            }\n\t          }\n\t        }, value, this, [[3, 14, 18, 26], [19,, 21, 25], [29, 43, 47, 55], [48,, 50, 54]]);\n\t      })\n\t    }, {\n\t      key: \"size\",\n\t      get: function get() {\n\t        var e = 0;\n\t        var _iteratorNormalCompletion5 = true;\n\t        var _didIteratorError5 = false;\n\t        var _iteratorError5 = undefined;\n\n\t        try {\n\t          for (var _iterator5 = this.oldCache.keys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t            var _t3 = _step5.value;\n\t            this.cache.has(_t3) || e++;\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError5 = true;\n\t          _iteratorError5 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t              _iterator5.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError5) {\n\t              throw _iteratorError5;\n\t            }\n\t          }\n\t        }\n\n\t        return this._size + e;\n\t      }\n\t    }]);\n\n\t    return _class2;\n\t  }();\n\t}, function (e, t) {\n\t  e.exports = n;\n\t  var r = null;\n\n\t  try {\n\t    r = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n\t  } catch (e) {}\n\n\t  function n(e, t, r) {\n\t    this.low = 0 | e, this.high = 0 | t, this.unsigned = !!r;\n\t  }\n\n\t  function i(e) {\n\t    return !0 === (e && e.__isLong__);\n\t  }\n\n\t  n.prototype.__isLong__, Object.defineProperty(n.prototype, \"__isLong__\", {\n\t    value: !0\n\t  }), n.isLong = i;\n\t  var o = {},\n\t      s = {};\n\n\t  function a(e, t) {\n\t    var r, n, i;\n\t    return t ? (i = 0 <= (e >>>= 0) && e < 256) && (n = s[e]) ? n : (r = f(e, (0 | e) < 0 ? -1 : 0, !0), i && (s[e] = r), r) : (i = -128 <= (e |= 0) && e < 128) && (n = o[e]) ? n : (r = f(e, e < 0 ? -1 : 0, !1), i && (o[e] = r), r);\n\t  }\n\n\t  function h(e, t) {\n\t    if (isNaN(e)) return t ? y : _;\n\n\t    if (t) {\n\t      if (e < 0) return y;\n\t      if (e >= p) return S;\n\t    } else {\n\t      if (e <= -g) return A;\n\t      if (e + 1 >= g) return E;\n\t    }\n\n\t    return e < 0 ? h(-e, t).neg() : f(e % d | 0, e / d | 0, t);\n\t  }\n\n\t  function f(e, t, r) {\n\t    return new n(e, t, r);\n\t  }\n\n\t  n.fromInt = a, n.fromNumber = h, n.fromBits = f;\n\t  var u = Math.pow;\n\n\t  function c(e, t, r) {\n\t    if (0 === e.length) throw Error(\"empty string\");\n\t    if (\"NaN\" === e || \"Infinity\" === e || \"+Infinity\" === e || \"-Infinity\" === e) return _;\n\t    if (\"number\" == typeof t ? (r = t, t = !1) : t = !!t, (r = r || 10) < 2 || 36 < r) throw RangeError(\"radix\");\n\t    var n;\n\t    if ((n = e.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");\n\t    if (0 === n) return c(e.substring(1), t, r).neg();\n\n\t    for (var i = h(u(r, 8)), o = _, s = 0; s < e.length; s += 8) {\n\t      var a = Math.min(8, e.length - s),\n\t          f = parseInt(e.substring(s, s + a), r);\n\n\t      if (a < 8) {\n\t        var l = h(u(r, a));\n\t        o = o.mul(l).add(h(f));\n\t      } else o = (o = o.mul(i)).add(h(f));\n\t    }\n\n\t    return o.unsigned = t, o;\n\t  }\n\n\t  function l(e, t) {\n\t    return \"number\" == typeof e ? h(e, t) : \"string\" == typeof e ? c(e, t) : f(e.low, e.high, \"boolean\" == typeof t ? t : e.unsigned);\n\t  }\n\n\t  n.fromString = c, n.fromValue = l;\n\n\t  var d = 4294967296,\n\t      p = d * d,\n\t      g = p / 2,\n\t      m = a(1 << 24),\n\t      _ = a(0);\n\n\t  n.ZERO = _;\n\t  var y = a(0, !0);\n\t  n.UZERO = y;\n\t  var b = a(1);\n\t  n.ONE = b;\n\t  var w = a(1, !0);\n\t  n.UONE = w;\n\t  var v = a(-1);\n\t  n.NEG_ONE = v;\n\t  var E = f(-1, 2147483647, !1);\n\t  n.MAX_VALUE = E;\n\t  var S = f(-1, -1, !0);\n\t  n.MAX_UNSIGNED_VALUE = S;\n\t  var A = f(0, -2147483648, !1);\n\t  n.MIN_VALUE = A;\n\t  var k = n.prototype;\n\t  k.toInt = function () {\n\t    return this.unsigned ? this.low >>> 0 : this.low;\n\t  }, k.toNumber = function () {\n\t    return this.unsigned ? (this.high >>> 0) * d + (this.low >>> 0) : this.high * d + (this.low >>> 0);\n\t  }, k.toString = function (e) {\n\t    if ((e = e || 10) < 2 || 36 < e) throw RangeError(\"radix\");\n\t    if (this.isZero()) return \"0\";\n\n\t    if (this.isNegative()) {\n\t      if (this.eq(A)) {\n\t        var t = h(e),\n\t            r = this.div(t),\n\t            n = r.mul(t).sub(this);\n\t        return r.toString(e) + n.toInt().toString(e);\n\t      }\n\n\t      return \"-\" + this.neg().toString(e);\n\t    }\n\n\t    for (var i = h(u(e, 6), this.unsigned), o = this, s = \"\";;) {\n\t      var a = o.div(i),\n\t          f = (o.sub(a.mul(i)).toInt() >>> 0).toString(e);\n\t      if ((o = a).isZero()) return f + s;\n\n\t      for (; f.length < 6;) {\n\t        f = \"0\" + f;\n\t      }\n\n\t      s = \"\" + f + s;\n\t    }\n\t  }, k.getHighBits = function () {\n\t    return this.high;\n\t  }, k.getHighBitsUnsigned = function () {\n\t    return this.high >>> 0;\n\t  }, k.getLowBits = function () {\n\t    return this.low;\n\t  }, k.getLowBitsUnsigned = function () {\n\t    return this.low >>> 0;\n\t  }, k.getNumBitsAbs = function () {\n\t    if (this.isNegative()) return this.eq(A) ? 64 : this.neg().getNumBitsAbs();\n\n\t    for (var e = 0 != this.high ? this.high : this.low, t = 31; t > 0 && 0 == (e & 1 << t); t--) {\n\t    }\n\n\t    return 0 != this.high ? t + 33 : t + 1;\n\t  }, k.isZero = function () {\n\t    return 0 === this.high && 0 === this.low;\n\t  }, k.eqz = k.isZero, k.isNegative = function () {\n\t    return !this.unsigned && this.high < 0;\n\t  }, k.isPositive = function () {\n\t    return this.unsigned || this.high >= 0;\n\t  }, k.isOdd = function () {\n\t    return 1 == (1 & this.low);\n\t  }, k.isEven = function () {\n\t    return 0 == (1 & this.low);\n\t  }, k.equals = function (e) {\n\t    return i(e) || (e = l(e)), (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;\n\t  }, k.eq = k.equals, k.notEquals = function (e) {\n\t    return !this.eq(e);\n\t  }, k.neq = k.notEquals, k.ne = k.notEquals, k.lessThan = function (e) {\n\t    return this.comp(e) < 0;\n\t  }, k.lt = k.lessThan, k.lessThanOrEqual = function (e) {\n\t    return this.comp(e) <= 0;\n\t  }, k.lte = k.lessThanOrEqual, k.le = k.lessThanOrEqual, k.greaterThan = function (e) {\n\t    return this.comp(e) > 0;\n\t  }, k.gt = k.greaterThan, k.greaterThanOrEqual = function (e) {\n\t    return this.comp(e) >= 0;\n\t  }, k.gte = k.greaterThanOrEqual, k.ge = k.greaterThanOrEqual, k.compare = function (e) {\n\t    if (i(e) || (e = l(e)), this.eq(e)) return 0;\n\t    var t = this.isNegative(),\n\t        r = e.isNegative();\n\t    return t && !r ? -1 : !t && r ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1;\n\t  }, k.comp = k.compare, k.negate = function () {\n\t    return !this.unsigned && this.eq(A) ? A : this.not().add(b);\n\t  }, k.neg = k.negate, k.add = function (e) {\n\t    i(e) || (e = l(e));\n\t    var t = this.high >>> 16,\n\t        r = 65535 & this.high,\n\t        n = this.low >>> 16,\n\t        o = 65535 & this.low,\n\t        s = e.high >>> 16,\n\t        a = 65535 & e.high,\n\t        h = e.low >>> 16,\n\t        u = 0,\n\t        c = 0,\n\t        d = 0,\n\t        p = 0;\n\t    return d += (p += o + (65535 & e.low)) >>> 16, c += (d += n + h) >>> 16, u += (c += r + a) >>> 16, u += t + s, f((d &= 65535) << 16 | (p &= 65535), (u &= 65535) << 16 | (c &= 65535), this.unsigned);\n\t  }, k.subtract = function (e) {\n\t    return i(e) || (e = l(e)), this.add(e.neg());\n\t  }, k.sub = k.subtract, k.multiply = function (e) {\n\t    if (this.isZero()) return _;\n\t    if (i(e) || (e = l(e)), r) return f(r.mul(this.low, this.high, e.low, e.high), r.get_high(), this.unsigned);\n\t    if (e.isZero()) return _;\n\t    if (this.eq(A)) return e.isOdd() ? A : _;\n\t    if (e.eq(A)) return this.isOdd() ? A : _;\n\t    if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();\n\t    if (e.isNegative()) return this.mul(e.neg()).neg();\n\t    if (this.lt(m) && e.lt(m)) return h(this.toNumber() * e.toNumber(), this.unsigned);\n\t    var t = this.high >>> 16,\n\t        n = 65535 & this.high,\n\t        o = this.low >>> 16,\n\t        s = 65535 & this.low,\n\t        a = e.high >>> 16,\n\t        u = 65535 & e.high,\n\t        c = e.low >>> 16,\n\t        d = 65535 & e.low,\n\t        p = 0,\n\t        g = 0,\n\t        y = 0,\n\t        b = 0;\n\t    return y += (b += s * d) >>> 16, g += (y += o * d) >>> 16, y &= 65535, g += (y += s * c) >>> 16, p += (g += n * d) >>> 16, g &= 65535, p += (g += o * c) >>> 16, g &= 65535, p += (g += s * u) >>> 16, p += t * d + n * c + o * u + s * a, f((y &= 65535) << 16 | (b &= 65535), (p &= 65535) << 16 | (g &= 65535), this.unsigned);\n\t  }, k.mul = k.multiply, k.divide = function (e) {\n\t    if (i(e) || (e = l(e)), e.isZero()) throw Error(\"division by zero\");\n\t    var t, n, o;\n\t    if (r) return this.unsigned || -2147483648 !== this.high || -1 !== e.low || -1 !== e.high ? f((this.unsigned ? r.div_u : r.div_s)(this.low, this.high, e.low, e.high), r.get_high(), this.unsigned) : this;\n\t    if (this.isZero()) return this.unsigned ? y : _;\n\n\t    if (this.unsigned) {\n\t      if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return y;\n\t      if (e.gt(this.shru(1))) return w;\n\t      o = y;\n\t    } else {\n\t      if (this.eq(A)) return e.eq(b) || e.eq(v) ? A : e.eq(A) ? b : (t = this.shr(1).div(e).shl(1)).eq(_) ? e.isNegative() ? b : v : (n = this.sub(e.mul(t)), o = t.add(n.div(e)));\n\t      if (e.eq(A)) return this.unsigned ? y : _;\n\t      if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();\n\t      if (e.isNegative()) return this.div(e.neg()).neg();\n\t      o = _;\n\t    }\n\n\t    for (n = this; n.gte(e);) {\n\t      t = Math.max(1, Math.floor(n.toNumber() / e.toNumber()));\n\n\t      for (var s = Math.ceil(Math.log(t) / Math.LN2), a = s <= 48 ? 1 : u(2, s - 48), c = h(t), d = c.mul(e); d.isNegative() || d.gt(n);) {\n\t        d = (c = h(t -= a, this.unsigned)).mul(e);\n\t      }\n\n\t      c.isZero() && (c = b), o = o.add(c), n = n.sub(d);\n\t    }\n\n\t    return o;\n\t  }, k.div = k.divide, k.modulo = function (e) {\n\t    return i(e) || (e = l(e)), r ? f((this.unsigned ? r.rem_u : r.rem_s)(this.low, this.high, e.low, e.high), r.get_high(), this.unsigned) : this.sub(this.div(e).mul(e));\n\t  }, k.mod = k.modulo, k.rem = k.modulo, k.not = function () {\n\t    return f(~this.low, ~this.high, this.unsigned);\n\t  }, k.and = function (e) {\n\t    return i(e) || (e = l(e)), f(this.low & e.low, this.high & e.high, this.unsigned);\n\t  }, k.or = function (e) {\n\t    return i(e) || (e = l(e)), f(this.low | e.low, this.high | e.high, this.unsigned);\n\t  }, k.xor = function (e) {\n\t    return i(e) || (e = l(e)), f(this.low ^ e.low, this.high ^ e.high, this.unsigned);\n\t  }, k.shiftLeft = function (e) {\n\t    return i(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? f(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : f(0, this.low << e - 32, this.unsigned);\n\t  }, k.shl = k.shiftLeft, k.shiftRight = function (e) {\n\t    return i(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? f(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : f(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n\t  }, k.shr = k.shiftRight, k.shiftRightUnsigned = function (e) {\n\t    if (i(e) && (e = e.toInt()), 0 === (e &= 63)) return this;\n\t    var t = this.high;\n\t    return e < 32 ? f(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : f(32 === e ? t : t >>> e - 32, 0, this.unsigned);\n\t  }, k.shru = k.shiftRightUnsigned, k.shr_u = k.shiftRightUnsigned, k.toSigned = function () {\n\t    return this.unsigned ? f(this.low, this.high, !1) : this;\n\t  }, k.toUnsigned = function () {\n\t    return this.unsigned ? this : f(this.low, this.high, !0);\n\t  }, k.toBytes = function (e) {\n\t    return e ? this.toBytesLE() : this.toBytesBE();\n\t  }, k.toBytesLE = function () {\n\t    var e = this.high,\n\t        t = this.low;\n\t    return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24];\n\t  }, k.toBytesBE = function () {\n\t    var e = this.high,\n\t        t = this.low;\n\t    return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t];\n\t  }, n.fromBytes = function (e, t, r) {\n\t    return r ? n.fromBytesLE(e, t) : n.fromBytesBE(e, t);\n\t  }, n.fromBytesLE = function (e, t) {\n\t    return new n(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, t);\n\t  }, n.fromBytesBE = function (e, t) {\n\t    return new n(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], t);\n\t  };\n\t}, function (e, t) {\n\t  var r = {\n\t    utf8: {\n\t      stringToBytes: function stringToBytes(e) {\n\t        return r.bin.stringToBytes(unescape(encodeURIComponent(e)));\n\t      },\n\t      bytesToString: function bytesToString(e) {\n\t        return decodeURIComponent(escape(r.bin.bytesToString(e)));\n\t      }\n\t    },\n\t    bin: {\n\t      stringToBytes: function stringToBytes(e) {\n\t        for (var t = [], r = 0; r < e.length; r++) {\n\t          t.push(255 & e.charCodeAt(r));\n\t        }\n\n\t        return t;\n\t      },\n\t      bytesToString: function bytesToString(e) {\n\t        for (var t = [], r = 0; r < e.length; r++) {\n\t          t.push(String.fromCharCode(e[r]));\n\t        }\n\n\t        return t.join(\"\");\n\t      }\n\t    }\n\t  };\n\t  e.exports = r;\n\t}, function (e, t, r) {\n\t  var n = r(87),\n\t      i = r(94),\n\t      o = r(97);\n\n\t  function s(e) {\n\t    var _n$parse = n.parse(e),\n\t        t = _n$parse.protocol,\n\t        r = _n$parse.pathname;\n\n\t    return \"file:\" === t ? new o(unescape(r)) : new i(e);\n\t  }\n\n\t  e.exports = {\n\t    LocalFile: o,\n\t    RemoteFile: i,\n\t    fromUrl: s,\n\t    open: function open(e, t, r) {\n\t      if (r) return r;\n\t      if (e) return s(e);\n\t      if (t) return new o(t);\n\t      throw new Error(\"no url, path, or filehandle provided, cannot open\");\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\n\t  Object.defineProperty(t, \"__esModule\", {\n\t    value: !0\n\t  });\n\t  var n = \"__ES6-PROMISIFY--CUSTOM-ARGUMENTS__\";\n\n\t  function i(e) {\n\t    if (\"function\" != typeof e) throw new TypeError(\"Argument to promisify must be a function\");\n\t    var t = e[n],\n\t        r = i.Promise || Promise;\n\t    if (\"function\" != typeof r) throw new Error(\"No Promise implementation found; do you need a polyfill?\");\n\t    return function () {\n\t      for (var n = this, i = arguments.length, o = Array(i), s = 0; s < i; s++) {\n\t        o[s] = arguments[s];\n\t      }\n\n\t      return new r(function (r, i) {\n\t        o.push(function (e) {\n\t          if (e) return i(e);\n\n\t          for (var n = arguments.length, o = Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++) {\n\t            o[s - 1] = arguments[s];\n\t          }\n\n\t          if (1 === o.length || !t) return r(o[0]);\n\t          var a = {};\n\t          o.forEach(function (e, r) {\n\t            var n = t[r];\n\t            n && (a[n] = e);\n\t          }), r(a);\n\t        }), e.call.apply(e, [n].concat(o));\n\t      });\n\t    };\n\t  }\n\n\t  i.argumentNames = n, i.Promise = void 0, t.promisify = i;\n\t}, function (e, t, r) {\n\t  var n = r(18),\n\t      i = r(99),\n\t      o = r(100);\n\t  e.exports = {\n\t    CramFile: n,\n\t    IndexedCramFile: i,\n\t    CraiIndex: o\n\t  };\n\t}, function (e, t, r) {\n\t  (function (t) {\n\t    var n = r(20),\n\t        i = r(61),\n\t        o = r(30),\n\t        _r7 = r(0),\n\t        s = _r7.CramUnimplementedError,\n\t        a = _r7.CramMalformedError,\n\t        h = r(62),\n\t        _r8 = r(66),\n\t        f = _r8.cramFileDefinition,\n\t        u = _r8.getSectionParsers,\n\t        c = r(71),\n\t        _r9 = r(33),\n\t        l = _r9.open,\n\t        _r10 = r(8),\n\t        d = _r10.parseItem,\n\t        p = _r10.tinyMemoize,\n\t        _r11 = r(98),\n\t        g = _r11.parseHeaderText;\n\n\t    var m = /*#__PURE__*/function () {\n\t      function m(e) {\n\t        _classCallCheck(this, m);\n\n\t        this.file = l(e.url, e.path, e.filehandle), this.validateChecksums = !0, this.fetchReferenceSequenceCallback = e.seqFetch, this.options = {\n\t          checkSequenceMD5: !1 !== e.checkSequenceMD5,\n\t          cacheSize: void 0 !== e.cacheSize ? e.cacheSize : 2e4\n\t        }, this.featureCache = new o({\n\t          maxSize: this.options.cacheSize\n\t        });\n\t      }\n\n\t      _createClass(m, [{\n\t        key: \"toString\",\n\t        value: function toString() {\n\t          return this.file.filename ? this.file.filename : this.file.url ? this.file.url : \"(cram file)\";\n\t        }\n\t      }, {\n\t        key: \"read\",\n\t        value: function read(e, t, r, n) {\n\t          return this.file.read(e, t, r, n);\n\t        }\n\t      }, {\n\t        key: \"stat\",\n\t        value: function stat() {\n\t          return this.file.stat();\n\t        }\n\t      }, {\n\t        key: \"getDefinition\",\n\t        value: function () {\n\t          var _getDefinition = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t            var e, r;\n\t            return regeneratorRuntime.wrap(function _callee$(_context4) {\n\t              while (1) {\n\t                switch (_context4.prev = _context4.next) {\n\t                  case 0:\n\t                    e = t.allocUnsafe(f.maxLength);\n\t                    _context4.next = 3;\n\t                    return this.file.read(e, 0, f.maxLength, 0);\n\n\t                  case 3:\n\t                    r = f.parser.parse(e).result;\n\n\t                    if (!(2 !== r.majorVersion && 3 !== r.majorVersion)) {\n\t                      _context4.next = 6;\n\t                      break;\n\t                    }\n\n\t                    throw new s(\"CRAM version \".concat(r.majorVersion, \" not supported\"));\n\n\t                  case 6:\n\t                    return _context4.abrupt(\"return\", r);\n\n\t                  case 7:\n\t                  case \"end\":\n\t                    return _context4.stop();\n\t                }\n\t              }\n\t            }, _callee, this);\n\t          }));\n\n\t          function getDefinition() {\n\t            return _getDefinition.apply(this, arguments);\n\t          }\n\n\t          return getDefinition;\n\t        }()\n\t      }, {\n\t        key: \"getSamHeader\",\n\t        value: function () {\n\t          var _getSamHeader = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n\t            var e, _ref, t, r, n;\n\n\t            return regeneratorRuntime.wrap(function _callee2$(_context5) {\n\t              while (1) {\n\t                switch (_context5.prev = _context5.next) {\n\t                  case 0:\n\t                    _context5.next = 2;\n\t                    return this.getContainerById(0);\n\n\t                  case 2:\n\t                    e = _context5.sent;\n\n\t                    if (e) {\n\t                      _context5.next = 5;\n\t                      break;\n\t                    }\n\n\t                    throw new a(\"file contains no containers\");\n\n\t                  case 5:\n\t                    _context5.next = 7;\n\t                    return e.getFirstBlock();\n\n\t                  case 7:\n\t                    _ref = _context5.sent;\n\t                    t = _ref.content;\n\t                    r = t.readInt32LE(0);\n\t                    n = t.toString(\"utf8\", 4, 4 + r);\n\t                    return _context5.abrupt(\"return\", g(n));\n\n\t                  case 12:\n\t                  case \"end\":\n\t                    return _context5.stop();\n\t                }\n\t              }\n\t            }, _callee2, this);\n\t          }));\n\n\t          function getSamHeader() {\n\t            return _getSamHeader.apply(this, arguments);\n\t          }\n\n\t          return getSamHeader;\n\t        }()\n\t      }, {\n\t        key: \"getSectionParsers\",\n\t        value: function () {\n\t          var _getSectionParsers = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n\t            var _ref2, e;\n\n\t            return regeneratorRuntime.wrap(function _callee3$(_context6) {\n\t              while (1) {\n\t                switch (_context6.prev = _context6.next) {\n\t                  case 0:\n\t                    _context6.next = 2;\n\t                    return this.getDefinition();\n\n\t                  case 2:\n\t                    _ref2 = _context6.sent;\n\t                    e = _ref2.majorVersion;\n\t                    return _context6.abrupt(\"return\", u(e));\n\n\t                  case 5:\n\t                  case \"end\":\n\t                    return _context6.stop();\n\t                }\n\t              }\n\t            }, _callee3, this);\n\t          }));\n\n\t          function getSectionParsers() {\n\t            return _getSectionParsers.apply(this, arguments);\n\t          }\n\n\t          return getSectionParsers;\n\t        }()\n\t      }, {\n\t        key: \"getContainerById\",\n\t        value: function () {\n\t          var _getContainerById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(e) {\n\t            var t, r, _ref3, n, i, o, _t4, _s, _e8;\n\n\t            return regeneratorRuntime.wrap(function _callee4$(_context7) {\n\t              while (1) {\n\t                switch (_context7.prev = _context7.next) {\n\t                  case 0:\n\t                    _context7.next = 2;\n\t                    return this.getSectionParsers();\n\n\t                  case 2:\n\t                    t = _context7.sent;\n\t                    r = t.cramFileDefinition.maxLength;\n\t                    _context7.next = 6;\n\t                    return this.file.stat();\n\n\t                  case 6:\n\t                    _ref3 = _context7.sent;\n\t                    n = _ref3.size;\n\t                    i = t.cramContainerHeader1;\n\t                    _t4 = 0;\n\n\t                  case 10:\n\t                    if (!(_t4 <= e)) {\n\t                      _context7.next = 35;\n\t                      break;\n\t                    }\n\n\t                    if (!(r + i.maxLength + 8 >= n)) {\n\t                      _context7.next = 13;\n\t                      break;\n\t                    }\n\n\t                    return _context7.abrupt(\"return\");\n\n\t                  case 13:\n\t                    o = this.getContainerAtPosition(r);\n\t                    _context7.next = 16;\n\t                    return o.getHeader();\n\n\t                  case 16:\n\t                    _s = _context7.sent;\n\n\t                    if (_s) {\n\t                      _context7.next = 19;\n\t                      break;\n\t                    }\n\n\t                    throw new a(\"container \".concat(e, \" not found in file\"));\n\n\t                  case 19:\n\t                    if (!(0 === _t4)) {\n\t                      _context7.next = 31;\n\t                      break;\n\t                    }\n\n\t                    r = _s._endPosition;\n\t                    _e8 = 0;\n\n\t                  case 22:\n\t                    if (!(_e8 < _s.numBlocks)) {\n\t                      _context7.next = 29;\n\t                      break;\n\t                    }\n\n\t                    _context7.next = 25;\n\t                    return this.readBlock(r);\n\n\t                  case 25:\n\t                    r = _context7.sent._endPosition;\n\n\t                  case 26:\n\t                    _e8 += 1;\n\t                    _context7.next = 22;\n\t                    break;\n\n\t                  case 29:\n\t                    _context7.next = 32;\n\t                    break;\n\n\t                  case 31:\n\t                    r += _s._size + _s.length;\n\n\t                  case 32:\n\t                    _t4 += 1;\n\t                    _context7.next = 10;\n\t                    break;\n\n\t                  case 35:\n\t                    return _context7.abrupt(\"return\", o);\n\n\t                  case 36:\n\t                  case \"end\":\n\t                    return _context7.stop();\n\t                }\n\t              }\n\t            }, _callee4, this);\n\t          }));\n\n\t          function getContainerById(_x) {\n\t            return _getContainerById.apply(this, arguments);\n\t          }\n\n\t          return getContainerById;\n\t        }()\n\t      }, {\n\t        key: \"checkCrc32\",\n\t        value: function () {\n\t          var _checkCrc = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(e, r, n, o) {\n\t            var s, h;\n\t            return regeneratorRuntime.wrap(function _callee5$(_context8) {\n\t              while (1) {\n\t                switch (_context8.prev = _context8.next) {\n\t                  case 0:\n\t                    s = t.allocUnsafe(r);\n\t                    _context8.next = 3;\n\t                    return this.file.read(s, 0, r, e);\n\n\t                  case 3:\n\t                    h = i.unsigned(s);\n\n\t                    if (!(h !== n)) {\n\t                      _context8.next = 6;\n\t                      break;\n\t                    }\n\n\t                    throw new a(\"crc mismatch in \".concat(o, \": recorded CRC32 = \").concat(n, \", but calculated CRC32 = \").concat(h));\n\n\t                  case 6:\n\t                  case \"end\":\n\t                    return _context8.stop();\n\t                }\n\t              }\n\t            }, _callee5, this);\n\t          }));\n\n\t          function checkCrc32(_x2, _x3, _x4, _x5) {\n\t            return _checkCrc.apply(this, arguments);\n\t          }\n\n\t          return checkCrc32;\n\t        }()\n\t      }, {\n\t        key: \"containerCount\",\n\t        value: function () {\n\t          var _containerCount = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n\t            var e, _ref4, t, r, n, i, _e9, _t5;\n\n\t            return regeneratorRuntime.wrap(function _callee6$(_context9) {\n\t              while (1) {\n\t                switch (_context9.prev = _context9.next) {\n\t                  case 0:\n\t                    _context9.next = 2;\n\t                    return this.getSectionParsers();\n\n\t                  case 2:\n\t                    e = _context9.sent;\n\t                    _context9.next = 5;\n\t                    return this.file.stat();\n\n\t                  case 5:\n\t                    _ref4 = _context9.sent;\n\t                    t = _ref4.size;\n\t                    r = e.cramContainerHeader1;\n\t                    n = 0, i = e.cramFileDefinition.maxLength;\n\n\t                  case 9:\n\t                    if (!(i + r.maxLength + 8 < t)) {\n\t                      _context9.next = 31;\n\t                      break;\n\t                    }\n\n\t                    _context9.next = 12;\n\t                    return this.getContainerAtPosition(i).getHeader();\n\n\t                  case 12:\n\t                    _e9 = _context9.sent;\n\n\t                    if (_e9) {\n\t                      _context9.next = 15;\n\t                      break;\n\t                    }\n\n\t                    return _context9.abrupt(\"break\", 31);\n\n\t                  case 15:\n\t                    if (!(0 === n)) {\n\t                      _context9.next = 27;\n\t                      break;\n\t                    }\n\n\t                    i = _e9._endPosition;\n\t                    _t5 = 0;\n\n\t                  case 18:\n\t                    if (!(_t5 < _e9.numBlocks)) {\n\t                      _context9.next = 25;\n\t                      break;\n\t                    }\n\n\t                    _context9.next = 21;\n\t                    return this.readBlock(i);\n\n\t                  case 21:\n\t                    i = _context9.sent._endPosition;\n\n\t                  case 22:\n\t                    _t5 += 1;\n\t                    _context9.next = 18;\n\t                    break;\n\n\t                  case 25:\n\t                    _context9.next = 28;\n\t                    break;\n\n\t                  case 27:\n\t                    i += _e9._size + _e9.length;\n\n\t                  case 28:\n\t                    n += 1;\n\n\t                  case 29:\n\t                    _context9.next = 9;\n\t                    break;\n\n\t                  case 31:\n\t                    return _context9.abrupt(\"return\", n);\n\n\t                  case 32:\n\t                  case \"end\":\n\t                    return _context9.stop();\n\t                }\n\t              }\n\t            }, _callee6, this);\n\t          }));\n\n\t          function containerCount() {\n\t            return _containerCount.apply(this, arguments);\n\t          }\n\n\t          return containerCount;\n\t        }()\n\t      }, {\n\t        key: \"getContainerAtPosition\",\n\t        value: function getContainerAtPosition(e) {\n\t          return new c(this, e);\n\t        }\n\t      }, {\n\t        key: \"readBlockHeader\",\n\t        value: function () {\n\t          var _readBlockHeader = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(e) {\n\t            var r, n, _ref5, i, o;\n\n\t            return regeneratorRuntime.wrap(function _callee7$(_context10) {\n\t              while (1) {\n\t                switch (_context10.prev = _context10.next) {\n\t                  case 0:\n\t                    _context10.next = 2;\n\t                    return this.getSectionParsers();\n\n\t                  case 2:\n\t                    r = _context10.sent;\n\t                    n = r.cramBlockHeader;\n\t                    _context10.next = 6;\n\t                    return this.file.stat();\n\n\t                  case 6:\n\t                    _ref5 = _context10.sent;\n\t                    i = _ref5.size;\n\n\t                    if (!(e + n.maxLength >= i)) {\n\t                      _context10.next = 10;\n\t                      break;\n\t                    }\n\n\t                    return _context10.abrupt(\"return\");\n\n\t                  case 10:\n\t                    o = t.allocUnsafe(n.maxLength);\n\t                    _context10.next = 13;\n\t                    return this.file.read(o, 0, n.maxLength, e);\n\n\t                  case 13:\n\t                    return _context10.abrupt(\"return\", d(o, n.parser, 0, e));\n\n\t                  case 14:\n\t                  case \"end\":\n\t                    return _context10.stop();\n\t                }\n\t              }\n\t            }, _callee7, this);\n\t          }));\n\n\t          function readBlockHeader(_x6) {\n\t            return _readBlockHeader.apply(this, arguments);\n\t          }\n\n\t          return readBlockHeader;\n\t        }()\n\t      }, {\n\t        key: \"_parseSection\",\n\t        value: function () {\n\t          var _parseSection2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(e, r) {\n\t            var n,\n\t                i,\n\t                o,\n\t                _ref6,\n\t                _e10,\n\t                s,\n\t                _args11 = arguments;\n\n\t            return regeneratorRuntime.wrap(function _callee8$(_context11) {\n\t              while (1) {\n\t                switch (_context11.prev = _context11.next) {\n\t                  case 0:\n\t                    n = _args11.length > 2 && _args11[2] !== undefined ? _args11[2] : e.maxLength;\n\t                    i = _args11.length > 3 ? _args11[3] : undefined;\n\n\t                    if (!i) {\n\t                      _context11.next = 6;\n\t                      break;\n\t                    }\n\n\t                    o = i;\n\t                    _context11.next = 15;\n\t                    break;\n\n\t                  case 6:\n\t                    _context11.next = 8;\n\t                    return this.file.stat();\n\n\t                  case 8:\n\t                    _ref6 = _context11.sent;\n\t                    _e10 = _ref6.size;\n\n\t                    if (!(r + n >= _e10)) {\n\t                      _context11.next = 12;\n\t                      break;\n\t                    }\n\n\t                    return _context11.abrupt(\"return\");\n\n\t                  case 12:\n\t                    o = t.allocUnsafe(n);\n\t                    _context11.next = 15;\n\t                    return this.file.read(o, 0, n, r);\n\n\t                  case 15:\n\t                    s = d(o, e.parser, 0, r);\n\n\t                    if (!(s._size !== n)) {\n\t                      _context11.next = 18;\n\t                      break;\n\t                    }\n\n\t                    throw new a(\"section read error: requested size \".concat(n, \" does not equal parsed size \").concat(s._size));\n\n\t                  case 18:\n\t                    return _context11.abrupt(\"return\", s);\n\n\t                  case 19:\n\t                  case \"end\":\n\t                    return _context11.stop();\n\t                }\n\t              }\n\t            }, _callee8, this);\n\t          }));\n\n\t          function _parseSection(_x7, _x8) {\n\t            return _parseSection2.apply(this, arguments);\n\t          }\n\n\t          return _parseSection;\n\t        }()\n\t      }, {\n\t        key: \"_uncompress\",\n\t        value: function _uncompress(e, t, r) {\n\t          if (\"gzip\" === e) {\n\t            n.gunzipSync(t).copy(r);\n\t          } else {\n\t            if (\"rans\" !== e) throw new s(\"\".concat(e, \" decompression not yet implemented\"));\n\t            h.uncompress(t, r);\n\t          }\n\t        }\n\t      }, {\n\t        key: \"readBlock\",\n\t        value: function () {\n\t          var _readBlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(e) {\n\t            var _ref7, r, n, i, o, s, _e11, _t6;\n\n\t            return regeneratorRuntime.wrap(function _callee9$(_context12) {\n\t              while (1) {\n\t                switch (_context12.prev = _context12.next) {\n\t                  case 0:\n\t                    _context12.next = 2;\n\t                    return this.getDefinition();\n\n\t                  case 2:\n\t                    _ref7 = _context12.sent;\n\t                    r = _ref7.majorVersion;\n\t                    _context12.next = 6;\n\t                    return this.getSectionParsers();\n\n\t                  case 6:\n\t                    n = _context12.sent;\n\t                    _context12.next = 9;\n\t                    return this.readBlockHeader(e);\n\n\t                  case 9:\n\t                    i = _context12.sent;\n\t                    o = i._endPosition;\n\t                    i.contentPosition = i._endPosition;\n\t                    s = t.allocUnsafe(i.uncompressedSize);\n\n\t                    if (!(\"raw\" !== i.compressionMethod)) {\n\t                      _context12.next = 20;\n\t                      break;\n\t                    }\n\n\t                    _e11 = t.allocUnsafe(i.compressedSize);\n\t                    _context12.next = 17;\n\t                    return this.read(_e11, 0, i.compressedSize, o);\n\n\t                  case 17:\n\t                    this._uncompress(i.compressionMethod, _e11, s);\n\n\t                    _context12.next = 22;\n\t                    break;\n\n\t                  case 20:\n\t                    _context12.next = 22;\n\t                    return this.read(s, 0, i.uncompressedSize, o);\n\n\t                  case 22:\n\t                    if (!(i.content = s, r >= 3)) {\n\t                      _context12.next = 35;\n\t                      break;\n\t                    }\n\n\t                    _context12.next = 25;\n\t                    return this._parseSection(n.cramBlockCrc32, o + i.compressedSize);\n\n\t                  case 25:\n\t                    _t6 = _context12.sent;\n\t                    i.crc32 = _t6.crc32;\n\t                    _context12.t0 = this.validateChecksums;\n\n\t                    if (!_context12.t0) {\n\t                      _context12.next = 31;\n\t                      break;\n\t                    }\n\n\t                    _context12.next = 31;\n\t                    return this.checkCrc32(e, i._size + i.compressedSize, i.crc32, \"block data\");\n\n\t                  case 31:\n\t                    i._endPosition = _t6._endPosition;\n\t                    i._size = i.compressedSize + n.cramBlockCrc32.maxLength;\n\t                    _context12.next = 36;\n\t                    break;\n\n\t                  case 35:\n\t                    i._endPosition = o + i.compressedSize, i._size = i.compressedSize;\n\n\t                  case 36:\n\t                    return _context12.abrupt(\"return\", i);\n\n\t                  case 37:\n\t                  case \"end\":\n\t                    return _context12.stop();\n\t                }\n\t              }\n\t            }, _callee9, this);\n\t          }));\n\n\t          function readBlock(_x9) {\n\t            return _readBlock.apply(this, arguments);\n\t          }\n\n\t          return readBlock;\n\t        }()\n\t      }]);\n\n\t      return m;\n\t    }();\n\n\t    \"getDefinition getSectionParsers getSamHeader\".split(\" \").forEach(function (e) {\n\t      return p(m, e);\n\t    }), e.exports = m;\n\t  }).call(this, r(1).Buffer);\n\t}, function (e, t, r) {\n\n\t  t.byteLength = function (e) {\n\t    var t = f(e),\n\t        r = t[0],\n\t        n = t[1];\n\t    return 3 * (r + n) / 4 - n;\n\t  }, t.toByteArray = function (e) {\n\t    for (var t, r = f(e), n = r[0], s = r[1], a = new o(function (e, t, r) {\n\t      return 3 * (t + r) / 4 - r;\n\t    }(0, n, s)), h = 0, u = s > 0 ? n - 4 : n, c = 0; c < u; c += 4) {\n\t      t = i[e.charCodeAt(c)] << 18 | i[e.charCodeAt(c + 1)] << 12 | i[e.charCodeAt(c + 2)] << 6 | i[e.charCodeAt(c + 3)], a[h++] = t >> 16 & 255, a[h++] = t >> 8 & 255, a[h++] = 255 & t;\n\t    }\n\n\t    2 === s && (t = i[e.charCodeAt(c)] << 2 | i[e.charCodeAt(c + 1)] >> 4, a[h++] = 255 & t);\n\t    1 === s && (t = i[e.charCodeAt(c)] << 10 | i[e.charCodeAt(c + 1)] << 4 | i[e.charCodeAt(c + 2)] >> 2, a[h++] = t >> 8 & 255, a[h++] = 255 & t);\n\t    return a;\n\t  }, t.fromByteArray = function (e) {\n\t    for (var t, r = e.length, i = r % 3, o = [], s = 0, a = r - i; s < a; s += 16383) {\n\t      o.push(u(e, s, s + 16383 > a ? a : s + 16383));\n\t    }\n\n\t    1 === i ? (t = e[r - 1], o.push(n[t >> 2] + n[t << 4 & 63] + \"==\")) : 2 === i && (t = (e[r - 2] << 8) + e[r - 1], o.push(n[t >> 10] + n[t >> 4 & 63] + n[t << 2 & 63] + \"=\"));\n\t    return o.join(\"\");\n\t  };\n\n\t  for (var n = [], i = [], o = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", a = 0, h = s.length; a < h; ++a) {\n\t    n[a] = s[a], i[s.charCodeAt(a)] = a;\n\t  }\n\n\t  function f(e) {\n\t    var t = e.length;\n\t    if (t % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n\t    var r = e.indexOf(\"=\");\n\t    return -1 === r && (r = t), [r, r === t ? 0 : 4 - r % 4];\n\t  }\n\n\t  function u(e, t, r) {\n\t    for (var i, o, s = [], a = t; a < r; a += 3) {\n\t      i = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2]), s.push(n[(o = i) >> 18 & 63] + n[o >> 12 & 63] + n[o >> 6 & 63] + n[63 & o]);\n\t    }\n\n\t    return s.join(\"\");\n\t  }\n\n\t  i[\"-\".charCodeAt(0)] = 62, i[\"_\".charCodeAt(0)] = 63;\n\t}, function (e, t) {\n\t  t.read = function (e, t, r, n, i) {\n\t    var o,\n\t        s,\n\t        a = 8 * i - n - 1,\n\t        h = (1 << a) - 1,\n\t        f = h >> 1,\n\t        u = -7,\n\t        c = r ? i - 1 : 0,\n\t        l = r ? -1 : 1,\n\t        d = e[t + c];\n\n\t    for (c += l, o = d & (1 << -u) - 1, d >>= -u, u += a; u > 0; o = 256 * o + e[t + c], c += l, u -= 8) {\n\t    }\n\n\t    for (s = o & (1 << -u) - 1, o >>= -u, u += n; u > 0; s = 256 * s + e[t + c], c += l, u -= 8) {\n\t    }\n\n\t    if (0 === o) o = 1 - f;else {\n\t      if (o === h) return s ? NaN : 1 / 0 * (d ? -1 : 1);\n\t      s += Math.pow(2, n), o -= f;\n\t    }\n\t    return (d ? -1 : 1) * s * Math.pow(2, o - n);\n\t  }, t.write = function (e, t, r, n, i, o) {\n\t    var s,\n\t        a,\n\t        h,\n\t        f = 8 * o - i - 1,\n\t        u = (1 << f) - 1,\n\t        c = u >> 1,\n\t        l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,\n\t        d = n ? 0 : o - 1,\n\t        p = n ? 1 : -1,\n\t        g = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;\n\n\t    for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0, s = u) : (s = Math.floor(Math.log(t) / Math.LN2), t * (h = Math.pow(2, -s)) < 1 && (s--, h *= 2), (t += s + c >= 1 ? l / h : l * Math.pow(2, 1 - c)) * h >= 2 && (s++, h /= 2), s + c >= u ? (a = 0, s = u) : s + c >= 1 ? (a = (t * h - 1) * Math.pow(2, i), s += c) : (a = t * Math.pow(2, c - 1) * Math.pow(2, i), s = 0)); i >= 8; e[r + d] = 255 & a, d += p, a /= 256, i -= 8) {\n\t    }\n\n\t    for (s = s << i | a, f += i; f > 0; e[r + d] = 255 & s, d += p, s /= 256, f -= 8) {\n\t    }\n\n\t    e[r + d - p] |= 128 * g;\n\t  };\n\t}, function (e, t, r) {\n\t  e.exports = i;\n\t  var n = r(14).EventEmitter;\n\n\t  function i() {\n\t    n.call(this);\n\t  }\n\n\t  r(4)(i, n), i.Readable = r(15), i.Writable = r(47), i.Duplex = r(48), i.Transform = r(49), i.PassThrough = r(50), i.Stream = i, i.prototype.pipe = function (e, t) {\n\t    var r = this;\n\n\t    function i(t) {\n\t      e.writable && !1 === e.write(t) && r.pause && r.pause();\n\t    }\n\n\t    function o() {\n\t      r.readable && r.resume && r.resume();\n\t    }\n\n\t    r.on(\"data\", i), e.on(\"drain\", o), e._isStdio || t && !1 === t.end || (r.on(\"end\", a), r.on(\"close\", h));\n\t    var s = !1;\n\n\t    function a() {\n\t      s || (s = !0, e.end());\n\t    }\n\n\t    function h() {\n\t      s || (s = !0, \"function\" == typeof e.destroy && e.destroy());\n\t    }\n\n\t    function f(e) {\n\t      if (u(), 0 === n.listenerCount(this, \"error\")) throw e;\n\t    }\n\n\t    function u() {\n\t      r.removeListener(\"data\", i), e.removeListener(\"drain\", o), r.removeListener(\"end\", a), r.removeListener(\"close\", h), r.removeListener(\"error\", f), e.removeListener(\"error\", f), r.removeListener(\"end\", u), r.removeListener(\"close\", u), e.removeListener(\"close\", u);\n\t    }\n\n\t    return r.on(\"error\", f), e.on(\"error\", f), r.on(\"end\", u), r.on(\"close\", u), e.on(\"close\", u), e.emit(\"pipe\", r), e;\n\t  };\n\t}, function (e, t) {}, function (e, t, r) {\n\n\t  var n = r(10).Buffer,\n\t      i = r(42);\n\t  e.exports = function () {\n\t    function e() {\n\t      !function (e, t) {\n\t        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n\t      }(this, e), this.head = null, this.tail = null, this.length = 0;\n\t    }\n\n\t    return e.prototype.push = function (e) {\n\t      var t = {\n\t        data: e,\n\t        next: null\n\t      };\n\t      this.length > 0 ? this.tail.next = t : this.head = t, this.tail = t, ++this.length;\n\t    }, e.prototype.unshift = function (e) {\n\t      var t = {\n\t        data: e,\n\t        next: this.head\n\t      };\n\t      0 === this.length && (this.tail = t), this.head = t, ++this.length;\n\t    }, e.prototype.shift = function () {\n\t      if (0 !== this.length) {\n\t        var e = this.head.data;\n\t        return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e;\n\t      }\n\t    }, e.prototype.clear = function () {\n\t      this.head = this.tail = null, this.length = 0;\n\t    }, e.prototype.join = function (e) {\n\t      if (0 === this.length) return \"\";\n\n\t      for (var t = this.head, r = \"\" + t.data; t = t.next;) {\n\t        r += e + t.data;\n\t      }\n\n\t      return r;\n\t    }, e.prototype.concat = function (e) {\n\t      if (0 === this.length) return n.alloc(0);\n\t      if (1 === this.length) return this.head.data;\n\n\t      for (var t, r, i, o = n.allocUnsafe(e >>> 0), s = this.head, a = 0; s;) {\n\t        t = s.data, r = o, i = a, t.copy(r, i), a += s.data.length, s = s.next;\n\t      }\n\n\t      return o;\n\t    }, e;\n\t  }(), i && i.inspect && i.inspect.custom && (e.exports.prototype[i.inspect.custom] = function () {\n\t    var e = i.inspect({\n\t      length: this.length\n\t    });\n\t    return this.constructor.name + \" \" + e;\n\t  });\n\t}, function (e, t) {}, function (e, t, r) {\n\t  (function (e) {\n\t    var n = void 0 !== e && e || \"undefined\" != typeof self && self || window,\n\t        i = Function.prototype.apply;\n\n\t    function o(e, t) {\n\t      this._id = e, this._clearFn = t;\n\t    }\n\n\t    t.setTimeout = function () {\n\t      return new o(i.call(setTimeout, n, arguments), clearTimeout);\n\t    }, t.setInterval = function () {\n\t      return new o(i.call(setInterval, n, arguments), clearInterval);\n\t    }, t.clearTimeout = t.clearInterval = function (e) {\n\t      e && e.close();\n\t    }, o.prototype.unref = o.prototype.ref = function () {}, o.prototype.close = function () {\n\t      this._clearFn.call(n, this._id);\n\t    }, t.enroll = function (e, t) {\n\t      clearTimeout(e._idleTimeoutId), e._idleTimeout = t;\n\t    }, t.unenroll = function (e) {\n\t      clearTimeout(e._idleTimeoutId), e._idleTimeout = -1;\n\t    }, t._unrefActive = t.active = function (e) {\n\t      clearTimeout(e._idleTimeoutId);\n\t      var t = e._idleTimeout;\n\t      t >= 0 && (e._idleTimeoutId = setTimeout(function () {\n\t        e._onTimeout && e._onTimeout();\n\t      }, t));\n\t    }, r(44), t.setImmediate = \"undefined\" != typeof self && self.setImmediate || void 0 !== e && e.setImmediate || this && this.setImmediate, t.clearImmediate = \"undefined\" != typeof self && self.clearImmediate || void 0 !== e && e.clearImmediate || this && this.clearImmediate;\n\t  }).call(this, r(2));\n\t}, function (e, t, r) {\n\t  (function (e, t) {\n\t    !function (e, r) {\n\n\t      if (!e.setImmediate) {\n\t        var n,\n\t            i,\n\t            o,\n\t            s,\n\t            a,\n\t            h = 1,\n\t            f = {},\n\t            u = !1,\n\t            c = e.document,\n\t            l = Object.getPrototypeOf && Object.getPrototypeOf(e);\n\t        l = l && l.setTimeout ? l : e, \"[object process]\" === {}.toString.call(e.process) ? n = function n(e) {\n\t          t.nextTick(function () {\n\t            p(e);\n\t          });\n\t        } : !function () {\n\t          if (e.postMessage && !e.importScripts) {\n\t            var t = !0,\n\t                r = e.onmessage;\n\t            return e.onmessage = function () {\n\t              t = !1;\n\t            }, e.postMessage(\"\", \"*\"), e.onmessage = r, t;\n\t          }\n\t        }() ? e.MessageChannel ? ((o = new MessageChannel()).port1.onmessage = function (e) {\n\t          p(e.data);\n\t        }, n = function n(e) {\n\t          o.port2.postMessage(e);\n\t        }) : c && \"onreadystatechange\" in c.createElement(\"script\") ? (i = c.documentElement, n = function n(e) {\n\t          var t = c.createElement(\"script\");\n\t          t.onreadystatechange = function () {\n\t            p(e), t.onreadystatechange = null, i.removeChild(t), t = null;\n\t          }, i.appendChild(t);\n\t        }) : n = function n(e) {\n\t          setTimeout(p, 0, e);\n\t        } : (s = \"setImmediate$\" + Math.random() + \"$\", a = function a(t) {\n\t          t.source === e && \"string\" == typeof t.data && 0 === t.data.indexOf(s) && p(+t.data.slice(s.length));\n\t        }, e.addEventListener ? e.addEventListener(\"message\", a, !1) : e.attachEvent(\"onmessage\", a), n = function n(t) {\n\t          e.postMessage(s + t, \"*\");\n\t        }), l.setImmediate = function (e) {\n\t          \"function\" != typeof e && (e = new Function(\"\" + e));\n\n\t          for (var t = new Array(arguments.length - 1), r = 0; r < t.length; r++) {\n\t            t[r] = arguments[r + 1];\n\t          }\n\n\t          var i = {\n\t            callback: e,\n\t            args: t\n\t          };\n\t          return f[h] = i, n(h), h++;\n\t        }, l.clearImmediate = d;\n\t      }\n\n\t      function d(e) {\n\t        delete f[e];\n\t      }\n\n\t      function p(e) {\n\t        if (u) setTimeout(p, 0, e);else {\n\t          var t = f[e];\n\n\t          if (t) {\n\t            u = !0;\n\n\t            try {\n\t              !function (e) {\n\t                var t = e.callback,\n\t                    n = e.args;\n\n\t                switch (n.length) {\n\t                  case 0:\n\t                    t();\n\t                    break;\n\n\t                  case 1:\n\t                    t(n[0]);\n\t                    break;\n\n\t                  case 2:\n\t                    t(n[0], n[1]);\n\t                    break;\n\n\t                  case 3:\n\t                    t(n[0], n[1], n[2]);\n\t                    break;\n\n\t                  default:\n\t                    t.apply(r, n);\n\t                }\n\t              }(t);\n\t            } finally {\n\t              d(e), u = !1;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }(\"undefined\" == typeof self ? void 0 === e ? this : e : self);\n\t  }).call(this, r(2), r(3));\n\t}, function (e, t, r) {\n\t  (function (t) {\n\t    function r(e) {\n\t      try {\n\t        if (!t.localStorage) return !1;\n\t      } catch (e) {\n\t        return !1;\n\t      }\n\n\t      var r = t.localStorage[e];\n\t      return null != r && \"true\" === String(r).toLowerCase();\n\t    }\n\n\t    e.exports = function (e, t) {\n\t      if (r(\"noDeprecation\")) return e;\n\t      var n = !1;\n\t      return function () {\n\t        if (!n) {\n\t          if (r(\"throwDeprecation\")) throw new Error(t);\n\t          r(\"traceDeprecation\") ? console.trace(t) : console.warn(t), n = !0;\n\t        }\n\n\t        return e.apply(this, arguments);\n\t      };\n\t    };\n\t  }).call(this, r(2));\n\t}, function (e, t, r) {\n\n\t  e.exports = o;\n\t  var n = r(25),\n\t      i = r(7);\n\n\t  function o(e) {\n\t    if (!(this instanceof o)) return new o(e);\n\t    n.call(this, e);\n\t  }\n\n\t  i.inherits = r(4), i.inherits(o, n), o.prototype._transform = function (e, t, r) {\n\t    r(null, e);\n\t  };\n\t}, function (e, t, r) {\n\t  e.exports = r(16);\n\t}, function (e, t, r) {\n\t  e.exports = r(5);\n\t}, function (e, t, r) {\n\t  e.exports = r(15).Transform;\n\t}, function (e, t, r) {\n\t  e.exports = r(15).PassThrough;\n\t}, function (e, t, r) {\n\n\t  (function (e, n) {\n\t    var i = r(26),\n\t        o = r(53),\n\t        s = r(54),\n\t        a = r(57),\n\t        h = r(60);\n\n\t    for (var f in h) {\n\t      t[f] = h[f];\n\t    }\n\n\t    t.NONE = 0, t.DEFLATE = 1, t.INFLATE = 2, t.GZIP = 3, t.GUNZIP = 4, t.DEFLATERAW = 5, t.INFLATERAW = 6, t.UNZIP = 7;\n\n\t    function u(e) {\n\t      if (\"number\" != typeof e || e < t.DEFLATE || e > t.UNZIP) throw new TypeError(\"Bad argument\");\n\t      this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = !1, this.level = 0, this.memLevel = 0, this.mode = e, this.strategy = 0, this.windowBits = 0, this.write_in_progress = !1, this.pending_close = !1, this.gzip_id_bytes_read = 0;\n\t    }\n\n\t    u.prototype.close = function () {\n\t      this.write_in_progress ? this.pending_close = !0 : (this.pending_close = !1, i(this.init_done, \"close before init\"), i(this.mode <= t.UNZIP), this.mode === t.DEFLATE || this.mode === t.GZIP || this.mode === t.DEFLATERAW ? s.deflateEnd(this.strm) : this.mode !== t.INFLATE && this.mode !== t.GUNZIP && this.mode !== t.INFLATERAW && this.mode !== t.UNZIP || a.inflateEnd(this.strm), this.mode = t.NONE, this.dictionary = null);\n\t    }, u.prototype.write = function (e, t, r, n, i, o, s) {\n\t      return this._write(!0, e, t, r, n, i, o, s);\n\t    }, u.prototype.writeSync = function (e, t, r, n, i, o, s) {\n\t      return this._write(!1, e, t, r, n, i, o, s);\n\t    }, u.prototype._write = function (r, o, s, a, h, f, u, c) {\n\t      if (i.equal(arguments.length, 8), i(this.init_done, \"write before init\"), i(this.mode !== t.NONE, \"already finalized\"), i.equal(!1, this.write_in_progress, \"write already in progress\"), i.equal(!1, this.pending_close, \"close is pending\"), this.write_in_progress = !0, i.equal(!1, void 0 === o, \"must provide flush value\"), this.write_in_progress = !0, o !== t.Z_NO_FLUSH && o !== t.Z_PARTIAL_FLUSH && o !== t.Z_SYNC_FLUSH && o !== t.Z_FULL_FLUSH && o !== t.Z_FINISH && o !== t.Z_BLOCK) throw new Error(\"Invalid flush value\");\n\t      if (null == s && (s = e.alloc(0), h = 0, a = 0), this.strm.avail_in = h, this.strm.input = s, this.strm.next_in = a, this.strm.avail_out = c, this.strm.output = f, this.strm.next_out = u, this.flush = o, !r) return this._process(), this._checkError() ? this._afterSync() : void 0;\n\t      var l = this;\n\t      return n.nextTick(function () {\n\t        l._process(), l._after();\n\t      }), this;\n\t    }, u.prototype._afterSync = function () {\n\t      var e = this.strm.avail_out,\n\t          t = this.strm.avail_in;\n\t      return this.write_in_progress = !1, [t, e];\n\t    }, u.prototype._process = function () {\n\t      var e = null;\n\n\t      switch (this.mode) {\n\t        case t.DEFLATE:\n\t        case t.GZIP:\n\t        case t.DEFLATERAW:\n\t          this.err = s.deflate(this.strm, this.flush);\n\t          break;\n\n\t        case t.UNZIP:\n\t          switch (this.strm.avail_in > 0 && (e = this.strm.next_in), this.gzip_id_bytes_read) {\n\t            case 0:\n\t              if (null === e) break;\n\n\t              if (31 !== this.strm.input[e]) {\n\t                this.mode = t.INFLATE;\n\t                break;\n\t              }\n\n\t              if (this.gzip_id_bytes_read = 1, e++, 1 === this.strm.avail_in) break;\n\n\t            case 1:\n\t              if (null === e) break;\n\t              139 === this.strm.input[e] ? (this.gzip_id_bytes_read = 2, this.mode = t.GUNZIP) : this.mode = t.INFLATE;\n\t              break;\n\n\t            default:\n\t              throw new Error(\"invalid number of gzip magic number bytes read\");\n\t          }\n\n\t        case t.INFLATE:\n\t        case t.GUNZIP:\n\t        case t.INFLATERAW:\n\t          for (this.err = a.inflate(this.strm, this.flush), this.err === t.Z_NEED_DICT && this.dictionary && (this.err = a.inflateSetDictionary(this.strm, this.dictionary), this.err === t.Z_OK ? this.err = a.inflate(this.strm, this.flush) : this.err === t.Z_DATA_ERROR && (this.err = t.Z_NEED_DICT)); this.strm.avail_in > 0 && this.mode === t.GUNZIP && this.err === t.Z_STREAM_END && 0 !== this.strm.next_in[0];) {\n\t            this.reset(), this.err = a.inflate(this.strm, this.flush);\n\t          }\n\n\t          break;\n\n\t        default:\n\t          throw new Error(\"Unknown mode \" + this.mode);\n\t      }\n\t    }, u.prototype._checkError = function () {\n\t      switch (this.err) {\n\t        case t.Z_OK:\n\t        case t.Z_BUF_ERROR:\n\t          if (0 !== this.strm.avail_out && this.flush === t.Z_FINISH) return this._error(\"unexpected end of file\"), !1;\n\t          break;\n\n\t        case t.Z_STREAM_END:\n\t          break;\n\n\t        case t.Z_NEED_DICT:\n\t          return null == this.dictionary ? this._error(\"Missing dictionary\") : this._error(\"Bad dictionary\"), !1;\n\n\t        default:\n\t          return this._error(\"Zlib error\"), !1;\n\t      }\n\n\t      return !0;\n\t    }, u.prototype._after = function () {\n\t      if (this._checkError()) {\n\t        var e = this.strm.avail_out,\n\t            t = this.strm.avail_in;\n\t        this.write_in_progress = !1, this.callback(t, e), this.pending_close && this.close();\n\t      }\n\t    }, u.prototype._error = function (e) {\n\t      this.strm.msg && (e = this.strm.msg), this.onerror(e, this.err), this.write_in_progress = !1, this.pending_close && this.close();\n\t    }, u.prototype.init = function (e, r, n, o, s) {\n\t      i(4 === arguments.length || 5 === arguments.length, \"init(windowBits, level, memLevel, strategy, [dictionary])\"), i(e >= 8 && e <= 15, \"invalid windowBits\"), i(r >= -1 && r <= 9, \"invalid compression level\"), i(n >= 1 && n <= 9, \"invalid memlevel\"), i(o === t.Z_FILTERED || o === t.Z_HUFFMAN_ONLY || o === t.Z_RLE || o === t.Z_FIXED || o === t.Z_DEFAULT_STRATEGY, \"invalid strategy\"), this._init(r, e, n, o, s), this._setDictionary();\n\t    }, u.prototype.params = function () {\n\t      throw new Error(\"deflateParams Not supported\");\n\t    }, u.prototype.reset = function () {\n\t      this._reset(), this._setDictionary();\n\t    }, u.prototype._init = function (e, r, n, i, h) {\n\t      switch (this.level = e, this.windowBits = r, this.memLevel = n, this.strategy = i, this.flush = t.Z_NO_FLUSH, this.err = t.Z_OK, this.mode !== t.GZIP && this.mode !== t.GUNZIP || (this.windowBits += 16), this.mode === t.UNZIP && (this.windowBits += 32), this.mode !== t.DEFLATERAW && this.mode !== t.INFLATERAW || (this.windowBits = -1 * this.windowBits), this.strm = new o(), this.mode) {\n\t        case t.DEFLATE:\n\t        case t.GZIP:\n\t        case t.DEFLATERAW:\n\t          this.err = s.deflateInit2(this.strm, this.level, t.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n\t          break;\n\n\t        case t.INFLATE:\n\t        case t.GUNZIP:\n\t        case t.INFLATERAW:\n\t        case t.UNZIP:\n\t          this.err = a.inflateInit2(this.strm, this.windowBits);\n\t          break;\n\n\t        default:\n\t          throw new Error(\"Unknown mode \" + this.mode);\n\t      }\n\n\t      this.err !== t.Z_OK && this._error(\"Init error\"), this.dictionary = h, this.write_in_progress = !1, this.init_done = !0;\n\t    }, u.prototype._setDictionary = function () {\n\t      if (null != this.dictionary) {\n\t        switch (this.err = t.Z_OK, this.mode) {\n\t          case t.DEFLATE:\n\t          case t.DEFLATERAW:\n\t            this.err = s.deflateSetDictionary(this.strm, this.dictionary);\n\t        }\n\n\t        this.err !== t.Z_OK && this._error(\"Failed to set dictionary\");\n\t      }\n\t    }, u.prototype._reset = function () {\n\t      switch (this.err = t.Z_OK, this.mode) {\n\t        case t.DEFLATE:\n\t        case t.DEFLATERAW:\n\t        case t.GZIP:\n\t          this.err = s.deflateReset(this.strm);\n\t          break;\n\n\t        case t.INFLATE:\n\t        case t.INFLATERAW:\n\t        case t.GUNZIP:\n\t          this.err = a.inflateReset(this.strm);\n\t      }\n\n\t      this.err !== t.Z_OK && this._error(\"Failed to reset stream\");\n\t    }, t.Zlib = u;\n\t  }).call(this, r(1).Buffer, r(3));\n\t}, function (e, t) {\n\t  e.exports = function (e) {\n\t    return e && \"object\" == _typeof(e) && \"function\" == typeof e.copy && \"function\" == typeof e.fill && \"function\" == typeof e.readUInt8;\n\t  };\n\t}, function (e, t, r) {\n\n\t  e.exports = function () {\n\t    this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = \"\", this.state = null, this.data_type = 2, this.adler = 0;\n\t  };\n\t}, function (e, t, r) {\n\n\t  var n,\n\t      i = r(11),\n\t      o = r(55),\n\t      s = r(28),\n\t      a = r(29),\n\t      h = r(56),\n\t      f = 0,\n\t      u = 1,\n\t      c = 3,\n\t      l = 4,\n\t      d = 5,\n\t      p = 0,\n\t      g = 1,\n\t      m = -2,\n\t      _ = -3,\n\t      y = -5,\n\t      b = -1,\n\t      w = 1,\n\t      v = 2,\n\t      E = 3,\n\t      S = 4,\n\t      A = 0,\n\t      k = 2,\n\t      x = 8,\n\t      C = 9,\n\t      R = 15,\n\t      T = 8,\n\t      I = 286,\n\t      B = 30,\n\t      L = 19,\n\t      N = 2 * I + 1,\n\t      F = 15,\n\t      M = 3,\n\t      O = 258,\n\t      P = O + M + 1,\n\t      U = 32,\n\t      z = 42,\n\t      D = 69,\n\t      j = 73,\n\t      q = 91,\n\t      Z = 103,\n\t      H = 113,\n\t      $ = 666,\n\t      V = 1,\n\t      Y = 2,\n\t      G = 3,\n\t      W = 4,\n\t      K = 3;\n\n\t  function X(e, t) {\n\t    return e.msg = h[t], t;\n\t  }\n\n\t  function Q(e) {\n\t    return (e << 1) - (e > 4 ? 9 : 0);\n\t  }\n\n\t  function J(e) {\n\t    for (var t = e.length; --t >= 0;) {\n\t      e[t] = 0;\n\t    }\n\t  }\n\n\t  function ee(e) {\n\t    var t = e.state,\n\t        r = t.pending;\n\t    r > e.avail_out && (r = e.avail_out), 0 !== r && (i.arraySet(e.output, t.pending_buf, t.pending_out, r, e.next_out), e.next_out += r, t.pending_out += r, e.total_out += r, e.avail_out -= r, t.pending -= r, 0 === t.pending && (t.pending_out = 0));\n\t  }\n\n\t  function te(e, t) {\n\t    o._tr_flush_block(e, e.block_start >= 0 ? e.block_start : -1, e.strstart - e.block_start, t), e.block_start = e.strstart, ee(e.strm);\n\t  }\n\n\t  function re(e, t) {\n\t    e.pending_buf[e.pending++] = t;\n\t  }\n\n\t  function ne(e, t) {\n\t    e.pending_buf[e.pending++] = t >>> 8 & 255, e.pending_buf[e.pending++] = 255 & t;\n\t  }\n\n\t  function ie(e, t) {\n\t    var r,\n\t        n,\n\t        i = e.max_chain_length,\n\t        o = e.strstart,\n\t        s = e.prev_length,\n\t        a = e.nice_match,\n\t        h = e.strstart > e.w_size - P ? e.strstart - (e.w_size - P) : 0,\n\t        f = e.window,\n\t        u = e.w_mask,\n\t        c = e.prev,\n\t        l = e.strstart + O,\n\t        d = f[o + s - 1],\n\t        p = f[o + s];\n\t    e.prev_length >= e.good_match && (i >>= 2), a > e.lookahead && (a = e.lookahead);\n\n\t    do {\n\t      if (f[(r = t) + s] === p && f[r + s - 1] === d && f[r] === f[o] && f[++r] === f[o + 1]) {\n\t        o += 2, r++;\n\n\t        do {} while (f[++o] === f[++r] && f[++o] === f[++r] && f[++o] === f[++r] && f[++o] === f[++r] && f[++o] === f[++r] && f[++o] === f[++r] && f[++o] === f[++r] && f[++o] === f[++r] && o < l);\n\n\t        if (n = O - (l - o), o = l - O, n > s) {\n\t          if (e.match_start = t, s = n, n >= a) break;\n\t          d = f[o + s - 1], p = f[o + s];\n\t        }\n\t      }\n\t    } while ((t = c[t & u]) > h && 0 != --i);\n\n\t    return s <= e.lookahead ? s : e.lookahead;\n\t  }\n\n\t  function oe(e) {\n\t    var t,\n\t        r,\n\t        n,\n\t        o,\n\t        h,\n\t        f,\n\t        u,\n\t        c,\n\t        l,\n\t        d,\n\t        p = e.w_size;\n\n\t    do {\n\t      if (o = e.window_size - e.lookahead - e.strstart, e.strstart >= p + (p - P)) {\n\t        i.arraySet(e.window, e.window, p, p, 0), e.match_start -= p, e.strstart -= p, e.block_start -= p, t = r = e.hash_size;\n\n\t        do {\n\t          n = e.head[--t], e.head[t] = n >= p ? n - p : 0;\n\t        } while (--r);\n\n\t        t = r = p;\n\n\t        do {\n\t          n = e.prev[--t], e.prev[t] = n >= p ? n - p : 0;\n\t        } while (--r);\n\n\t        o += p;\n\t      }\n\n\t      if (0 === e.strm.avail_in) break;\n\t      if (f = e.strm, u = e.window, c = e.strstart + e.lookahead, l = o, d = void 0, (d = f.avail_in) > l && (d = l), r = 0 === d ? 0 : (f.avail_in -= d, i.arraySet(u, f.input, f.next_in, d, c), 1 === f.state.wrap ? f.adler = s(f.adler, u, d, c) : 2 === f.state.wrap && (f.adler = a(f.adler, u, d, c)), f.next_in += d, f.total_in += d, d), e.lookahead += r, e.lookahead + e.insert >= M) for (h = e.strstart - e.insert, e.ins_h = e.window[h], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[h + 1]) & e.hash_mask; e.insert && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[h + M - 1]) & e.hash_mask, e.prev[h & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = h, h++, e.insert--, !(e.lookahead + e.insert < M));) {\n\t      }\n\t    } while (e.lookahead < P && 0 !== e.strm.avail_in);\n\t  }\n\n\t  function se(e, t) {\n\t    for (var r, n;;) {\n\t      if (e.lookahead < P) {\n\t        if (oe(e), e.lookahead < P && t === f) return V;\n\t        if (0 === e.lookahead) break;\n\t      }\n\n\t      if (r = 0, e.lookahead >= M && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + M - 1]) & e.hash_mask, r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), 0 !== r && e.strstart - r <= e.w_size - P && (e.match_length = ie(e, r)), e.match_length >= M) {\n\t        if (n = o._tr_tally(e, e.strstart - e.match_start, e.match_length - M), e.lookahead -= e.match_length, e.match_length <= e.max_lazy_match && e.lookahead >= M) {\n\t          e.match_length--;\n\n\t          do {\n\t            e.strstart++, e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + M - 1]) & e.hash_mask, r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart;\n\t          } while (0 != --e.match_length);\n\n\t          e.strstart++;\n\t        } else e.strstart += e.match_length, e.match_length = 0, e.ins_h = e.window[e.strstart], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 1]) & e.hash_mask;\n\t      } else n = o._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++;\n\t      if (n && (te(e, !1), 0 === e.strm.avail_out)) return V;\n\t    }\n\n\t    return e.insert = e.strstart < M - 1 ? e.strstart : M - 1, t === l ? (te(e, !0), 0 === e.strm.avail_out ? G : W) : e.last_lit && (te(e, !1), 0 === e.strm.avail_out) ? V : Y;\n\t  }\n\n\t  function ae(e, t) {\n\t    for (var r, n, i;;) {\n\t      if (e.lookahead < P) {\n\t        if (oe(e), e.lookahead < P && t === f) return V;\n\t        if (0 === e.lookahead) break;\n\t      }\n\n\t      if (r = 0, e.lookahead >= M && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + M - 1]) & e.hash_mask, r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), e.prev_length = e.match_length, e.prev_match = e.match_start, e.match_length = M - 1, 0 !== r && e.prev_length < e.max_lazy_match && e.strstart - r <= e.w_size - P && (e.match_length = ie(e, r), e.match_length <= 5 && (e.strategy === w || e.match_length === M && e.strstart - e.match_start > 4096) && (e.match_length = M - 1)), e.prev_length >= M && e.match_length <= e.prev_length) {\n\t        i = e.strstart + e.lookahead - M, n = o._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - M), e.lookahead -= e.prev_length - 1, e.prev_length -= 2;\n\n\t        do {\n\t          ++e.strstart <= i && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + M - 1]) & e.hash_mask, r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart);\n\t        } while (0 != --e.prev_length);\n\n\t        if (e.match_available = 0, e.match_length = M - 1, e.strstart++, n && (te(e, !1), 0 === e.strm.avail_out)) return V;\n\t      } else if (e.match_available) {\n\t        if ((n = o._tr_tally(e, 0, e.window[e.strstart - 1])) && te(e, !1), e.strstart++, e.lookahead--, 0 === e.strm.avail_out) return V;\n\t      } else e.match_available = 1, e.strstart++, e.lookahead--;\n\t    }\n\n\t    return e.match_available && (n = o._tr_tally(e, 0, e.window[e.strstart - 1]), e.match_available = 0), e.insert = e.strstart < M - 1 ? e.strstart : M - 1, t === l ? (te(e, !0), 0 === e.strm.avail_out ? G : W) : e.last_lit && (te(e, !1), 0 === e.strm.avail_out) ? V : Y;\n\t  }\n\n\t  function he(e, t, r, n, i) {\n\t    this.good_length = e, this.max_lazy = t, this.nice_length = r, this.max_chain = n, this.func = i;\n\t  }\n\n\t  function fe() {\n\t    this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = x, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new i.Buf16(2 * N), this.dyn_dtree = new i.Buf16(2 * (2 * B + 1)), this.bl_tree = new i.Buf16(2 * (2 * L + 1)), J(this.dyn_ltree), J(this.dyn_dtree), J(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new i.Buf16(F + 1), this.heap = new i.Buf16(2 * I + 1), J(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new i.Buf16(2 * I + 1), J(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;\n\t  }\n\n\t  function ue(e) {\n\t    var t;\n\t    return e && e.state ? (e.total_in = e.total_out = 0, e.data_type = k, (t = e.state).pending = 0, t.pending_out = 0, t.wrap < 0 && (t.wrap = -t.wrap), t.status = t.wrap ? z : H, e.adler = 2 === t.wrap ? 0 : 1, t.last_flush = f, o._tr_init(t), p) : X(e, m);\n\t  }\n\n\t  function ce(e) {\n\t    var t,\n\t        r = ue(e);\n\t    return r === p && ((t = e.state).window_size = 2 * t.w_size, J(t.head), t.max_lazy_match = n[t.level].max_lazy, t.good_match = n[t.level].good_length, t.nice_match = n[t.level].nice_length, t.max_chain_length = n[t.level].max_chain, t.strstart = 0, t.block_start = 0, t.lookahead = 0, t.insert = 0, t.match_length = t.prev_length = M - 1, t.match_available = 0, t.ins_h = 0), r;\n\t  }\n\n\t  function le(e, t, r, n, o, s) {\n\t    if (!e) return m;\n\t    var a = 1;\n\t    if (t === b && (t = 6), n < 0 ? (a = 0, n = -n) : n > 15 && (a = 2, n -= 16), o < 1 || o > C || r !== x || n < 8 || n > 15 || t < 0 || t > 9 || s < 0 || s > S) return X(e, m);\n\t    8 === n && (n = 9);\n\t    var h = new fe();\n\t    return e.state = h, h.strm = e, h.wrap = a, h.gzhead = null, h.w_bits = n, h.w_size = 1 << h.w_bits, h.w_mask = h.w_size - 1, h.hash_bits = o + 7, h.hash_size = 1 << h.hash_bits, h.hash_mask = h.hash_size - 1, h.hash_shift = ~~((h.hash_bits + M - 1) / M), h.window = new i.Buf8(2 * h.w_size), h.head = new i.Buf16(h.hash_size), h.prev = new i.Buf16(h.w_size), h.lit_bufsize = 1 << o + 6, h.pending_buf_size = 4 * h.lit_bufsize, h.pending_buf = new i.Buf8(h.pending_buf_size), h.d_buf = 1 * h.lit_bufsize, h.l_buf = 3 * h.lit_bufsize, h.level = t, h.strategy = s, h.method = r, ce(e);\n\t  }\n\n\t  n = [new he(0, 0, 0, 0, function (e, t) {\n\t    var r = 65535;\n\n\t    for (r > e.pending_buf_size - 5 && (r = e.pending_buf_size - 5);;) {\n\t      if (e.lookahead <= 1) {\n\t        if (oe(e), 0 === e.lookahead && t === f) return V;\n\t        if (0 === e.lookahead) break;\n\t      }\n\n\t      e.strstart += e.lookahead, e.lookahead = 0;\n\t      var n = e.block_start + r;\n\t      if ((0 === e.strstart || e.strstart >= n) && (e.lookahead = e.strstart - n, e.strstart = n, te(e, !1), 0 === e.strm.avail_out)) return V;\n\t      if (e.strstart - e.block_start >= e.w_size - P && (te(e, !1), 0 === e.strm.avail_out)) return V;\n\t    }\n\n\t    return e.insert = 0, t === l ? (te(e, !0), 0 === e.strm.avail_out ? G : W) : (e.strstart > e.block_start && (te(e, !1), e.strm.avail_out), V);\n\t  }), new he(4, 4, 8, 4, se), new he(4, 5, 16, 8, se), new he(4, 6, 32, 32, se), new he(4, 4, 16, 16, ae), new he(8, 16, 32, 32, ae), new he(8, 16, 128, 128, ae), new he(8, 32, 128, 256, ae), new he(32, 128, 258, 1024, ae), new he(32, 258, 258, 4096, ae)], t.deflateInit = function (e, t) {\n\t    return le(e, t, x, R, T, A);\n\t  }, t.deflateInit2 = le, t.deflateReset = ce, t.deflateResetKeep = ue, t.deflateSetHeader = function (e, t) {\n\t    return e && e.state ? 2 !== e.state.wrap ? m : (e.state.gzhead = t, p) : m;\n\t  }, t.deflate = function (e, t) {\n\t    var r, i, s, h;\n\t    if (!e || !e.state || t > d || t < 0) return e ? X(e, m) : m;\n\t    if (i = e.state, !e.output || !e.input && 0 !== e.avail_in || i.status === $ && t !== l) return X(e, 0 === e.avail_out ? y : m);\n\t    if (i.strm = e, r = i.last_flush, i.last_flush = t, i.status === z) if (2 === i.wrap) e.adler = 0, re(i, 31), re(i, 139), re(i, 8), i.gzhead ? (re(i, (i.gzhead.text ? 1 : 0) + (i.gzhead.hcrc ? 2 : 0) + (i.gzhead.extra ? 4 : 0) + (i.gzhead.name ? 8 : 0) + (i.gzhead.comment ? 16 : 0)), re(i, 255 & i.gzhead.time), re(i, i.gzhead.time >> 8 & 255), re(i, i.gzhead.time >> 16 & 255), re(i, i.gzhead.time >> 24 & 255), re(i, 9 === i.level ? 2 : i.strategy >= v || i.level < 2 ? 4 : 0), re(i, 255 & i.gzhead.os), i.gzhead.extra && i.gzhead.extra.length && (re(i, 255 & i.gzhead.extra.length), re(i, i.gzhead.extra.length >> 8 & 255)), i.gzhead.hcrc && (e.adler = a(e.adler, i.pending_buf, i.pending, 0)), i.gzindex = 0, i.status = D) : (re(i, 0), re(i, 0), re(i, 0), re(i, 0), re(i, 0), re(i, 9 === i.level ? 2 : i.strategy >= v || i.level < 2 ? 4 : 0), re(i, K), i.status = H);else {\n\t      var _ = x + (i.w_bits - 8 << 4) << 8;\n\n\t      _ |= (i.strategy >= v || i.level < 2 ? 0 : i.level < 6 ? 1 : 6 === i.level ? 2 : 3) << 6, 0 !== i.strstart && (_ |= U), _ += 31 - _ % 31, i.status = H, ne(i, _), 0 !== i.strstart && (ne(i, e.adler >>> 16), ne(i, 65535 & e.adler)), e.adler = 1;\n\t    }\n\t    if (i.status === D) if (i.gzhead.extra) {\n\t      for (s = i.pending; i.gzindex < (65535 & i.gzhead.extra.length) && (i.pending !== i.pending_buf_size || (i.gzhead.hcrc && i.pending > s && (e.adler = a(e.adler, i.pending_buf, i.pending - s, s)), ee(e), s = i.pending, i.pending !== i.pending_buf_size));) {\n\t        re(i, 255 & i.gzhead.extra[i.gzindex]), i.gzindex++;\n\t      }\n\n\t      i.gzhead.hcrc && i.pending > s && (e.adler = a(e.adler, i.pending_buf, i.pending - s, s)), i.gzindex === i.gzhead.extra.length && (i.gzindex = 0, i.status = j);\n\t    } else i.status = j;\n\t    if (i.status === j) if (i.gzhead.name) {\n\t      s = i.pending;\n\n\t      do {\n\t        if (i.pending === i.pending_buf_size && (i.gzhead.hcrc && i.pending > s && (e.adler = a(e.adler, i.pending_buf, i.pending - s, s)), ee(e), s = i.pending, i.pending === i.pending_buf_size)) {\n\t          h = 1;\n\t          break;\n\t        }\n\n\t        h = i.gzindex < i.gzhead.name.length ? 255 & i.gzhead.name.charCodeAt(i.gzindex++) : 0, re(i, h);\n\t      } while (0 !== h);\n\n\t      i.gzhead.hcrc && i.pending > s && (e.adler = a(e.adler, i.pending_buf, i.pending - s, s)), 0 === h && (i.gzindex = 0, i.status = q);\n\t    } else i.status = q;\n\t    if (i.status === q) if (i.gzhead.comment) {\n\t      s = i.pending;\n\n\t      do {\n\t        if (i.pending === i.pending_buf_size && (i.gzhead.hcrc && i.pending > s && (e.adler = a(e.adler, i.pending_buf, i.pending - s, s)), ee(e), s = i.pending, i.pending === i.pending_buf_size)) {\n\t          h = 1;\n\t          break;\n\t        }\n\n\t        h = i.gzindex < i.gzhead.comment.length ? 255 & i.gzhead.comment.charCodeAt(i.gzindex++) : 0, re(i, h);\n\t      } while (0 !== h);\n\n\t      i.gzhead.hcrc && i.pending > s && (e.adler = a(e.adler, i.pending_buf, i.pending - s, s)), 0 === h && (i.status = Z);\n\t    } else i.status = Z;\n\n\t    if (i.status === Z && (i.gzhead.hcrc ? (i.pending + 2 > i.pending_buf_size && ee(e), i.pending + 2 <= i.pending_buf_size && (re(i, 255 & e.adler), re(i, e.adler >> 8 & 255), e.adler = 0, i.status = H)) : i.status = H), 0 !== i.pending) {\n\t      if (ee(e), 0 === e.avail_out) return i.last_flush = -1, p;\n\t    } else if (0 === e.avail_in && Q(t) <= Q(r) && t !== l) return X(e, y);\n\n\t    if (i.status === $ && 0 !== e.avail_in) return X(e, y);\n\n\t    if (0 !== e.avail_in || 0 !== i.lookahead || t !== f && i.status !== $) {\n\t      var b = i.strategy === v ? function (e, t) {\n\t        for (var r;;) {\n\t          if (0 === e.lookahead && (oe(e), 0 === e.lookahead)) {\n\t            if (t === f) return V;\n\t            break;\n\t          }\n\n\t          if (e.match_length = 0, r = o._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++, r && (te(e, !1), 0 === e.strm.avail_out)) return V;\n\t        }\n\n\t        return e.insert = 0, t === l ? (te(e, !0), 0 === e.strm.avail_out ? G : W) : e.last_lit && (te(e, !1), 0 === e.strm.avail_out) ? V : Y;\n\t      }(i, t) : i.strategy === E ? function (e, t) {\n\t        for (var r, n, i, s, a = e.window;;) {\n\t          if (e.lookahead <= O) {\n\t            if (oe(e), e.lookahead <= O && t === f) return V;\n\t            if (0 === e.lookahead) break;\n\t          }\n\n\t          if (e.match_length = 0, e.lookahead >= M && e.strstart > 0 && (n = a[i = e.strstart - 1]) === a[++i] && n === a[++i] && n === a[++i]) {\n\t            s = e.strstart + O;\n\n\t            do {} while (n === a[++i] && n === a[++i] && n === a[++i] && n === a[++i] && n === a[++i] && n === a[++i] && n === a[++i] && n === a[++i] && i < s);\n\n\t            e.match_length = O - (s - i), e.match_length > e.lookahead && (e.match_length = e.lookahead);\n\t          }\n\n\t          if (e.match_length >= M ? (r = o._tr_tally(e, 1, e.match_length - M), e.lookahead -= e.match_length, e.strstart += e.match_length, e.match_length = 0) : (r = o._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++), r && (te(e, !1), 0 === e.strm.avail_out)) return V;\n\t        }\n\n\t        return e.insert = 0, t === l ? (te(e, !0), 0 === e.strm.avail_out ? G : W) : e.last_lit && (te(e, !1), 0 === e.strm.avail_out) ? V : Y;\n\t      }(i, t) : n[i.level].func(i, t);\n\t      if (b !== G && b !== W || (i.status = $), b === V || b === G) return 0 === e.avail_out && (i.last_flush = -1), p;\n\t      if (b === Y && (t === u ? o._tr_align(i) : t !== d && (o._tr_stored_block(i, 0, 0, !1), t === c && (J(i.head), 0 === i.lookahead && (i.strstart = 0, i.block_start = 0, i.insert = 0))), ee(e), 0 === e.avail_out)) return i.last_flush = -1, p;\n\t    }\n\n\t    return t !== l ? p : i.wrap <= 0 ? g : (2 === i.wrap ? (re(i, 255 & e.adler), re(i, e.adler >> 8 & 255), re(i, e.adler >> 16 & 255), re(i, e.adler >> 24 & 255), re(i, 255 & e.total_in), re(i, e.total_in >> 8 & 255), re(i, e.total_in >> 16 & 255), re(i, e.total_in >> 24 & 255)) : (ne(i, e.adler >>> 16), ne(i, 65535 & e.adler)), ee(e), i.wrap > 0 && (i.wrap = -i.wrap), 0 !== i.pending ? p : g);\n\t  }, t.deflateEnd = function (e) {\n\t    var t;\n\t    return e && e.state ? (t = e.state.status) !== z && t !== D && t !== j && t !== q && t !== Z && t !== H && t !== $ ? X(e, m) : (e.state = null, t === H ? X(e, _) : p) : m;\n\t  }, t.deflateSetDictionary = function (e, t) {\n\t    var r,\n\t        n,\n\t        o,\n\t        a,\n\t        h,\n\t        f,\n\t        u,\n\t        c,\n\t        l = t.length;\n\t    if (!e || !e.state) return m;\n\t    if (2 === (a = (r = e.state).wrap) || 1 === a && r.status !== z || r.lookahead) return m;\n\n\t    for (1 === a && (e.adler = s(e.adler, t, l, 0)), r.wrap = 0, l >= r.w_size && (0 === a && (J(r.head), r.strstart = 0, r.block_start = 0, r.insert = 0), c = new i.Buf8(r.w_size), i.arraySet(c, t, l - r.w_size, r.w_size, 0), t = c, l = r.w_size), h = e.avail_in, f = e.next_in, u = e.input, e.avail_in = l, e.next_in = 0, e.input = t, oe(r); r.lookahead >= M;) {\n\t      n = r.strstart, o = r.lookahead - (M - 1);\n\n\t      do {\n\t        r.ins_h = (r.ins_h << r.hash_shift ^ r.window[n + M - 1]) & r.hash_mask, r.prev[n & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = n, n++;\n\t      } while (--o);\n\n\t      r.strstart = n, r.lookahead = M - 1, oe(r);\n\t    }\n\n\t    return r.strstart += r.lookahead, r.block_start = r.strstart, r.insert = r.lookahead, r.lookahead = 0, r.match_length = r.prev_length = M - 1, r.match_available = 0, e.next_in = f, e.input = u, e.avail_in = h, r.wrap = a, p;\n\t  }, t.deflateInfo = \"pako deflate (from Nodeca project)\";\n\t}, function (e, t, r) {\n\n\t  var n = r(11),\n\t      i = 4,\n\t      o = 0,\n\t      s = 1,\n\t      a = 2;\n\n\t  function h(e) {\n\t    for (var t = e.length; --t >= 0;) {\n\t      e[t] = 0;\n\t    }\n\t  }\n\n\t  var f = 0,\n\t      u = 1,\n\t      c = 2,\n\t      l = 29,\n\t      d = 256,\n\t      p = d + 1 + l,\n\t      g = 30,\n\t      m = 19,\n\t      _ = 2 * p + 1,\n\t      y = 15,\n\t      b = 16,\n\t      w = 7,\n\t      v = 256,\n\t      E = 16,\n\t      S = 17,\n\t      A = 18,\n\t      k = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],\n\t      x = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],\n\t      C = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],\n\t      R = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n\t      T = new Array(2 * (p + 2));\n\n\t  h(T);\n\t  var I = new Array(2 * g);\n\t  h(I);\n\t  var B = new Array(512);\n\t  h(B);\n\t  var L = new Array(256);\n\t  h(L);\n\t  var N = new Array(l);\n\t  h(N);\n\t  var F,\n\t      M,\n\t      O,\n\t      P = new Array(g);\n\n\t  function U(e, t, r, n, i) {\n\t    this.static_tree = e, this.extra_bits = t, this.extra_base = r, this.elems = n, this.max_length = i, this.has_stree = e && e.length;\n\t  }\n\n\t  function z(e, t) {\n\t    this.dyn_tree = e, this.max_code = 0, this.stat_desc = t;\n\t  }\n\n\t  function D(e) {\n\t    return e < 256 ? B[e] : B[256 + (e >>> 7)];\n\t  }\n\n\t  function j(e, t) {\n\t    e.pending_buf[e.pending++] = 255 & t, e.pending_buf[e.pending++] = t >>> 8 & 255;\n\t  }\n\n\t  function q(e, t, r) {\n\t    e.bi_valid > b - r ? (e.bi_buf |= t << e.bi_valid & 65535, j(e, e.bi_buf), e.bi_buf = t >> b - e.bi_valid, e.bi_valid += r - b) : (e.bi_buf |= t << e.bi_valid & 65535, e.bi_valid += r);\n\t  }\n\n\t  function Z(e, t, r) {\n\t    q(e, r[2 * t], r[2 * t + 1]);\n\t  }\n\n\t  function H(e, t) {\n\t    var r = 0;\n\n\t    do {\n\t      r |= 1 & e, e >>>= 1, r <<= 1;\n\t    } while (--t > 0);\n\n\t    return r >>> 1;\n\t  }\n\n\t  function $(e, t, r) {\n\t    var n,\n\t        i,\n\t        o = new Array(y + 1),\n\t        s = 0;\n\n\t    for (n = 1; n <= y; n++) {\n\t      o[n] = s = s + r[n - 1] << 1;\n\t    }\n\n\t    for (i = 0; i <= t; i++) {\n\t      var a = e[2 * i + 1];\n\t      0 !== a && (e[2 * i] = H(o[a]++, a));\n\t    }\n\t  }\n\n\t  function V(e) {\n\t    var t;\n\n\t    for (t = 0; t < p; t++) {\n\t      e.dyn_ltree[2 * t] = 0;\n\t    }\n\n\t    for (t = 0; t < g; t++) {\n\t      e.dyn_dtree[2 * t] = 0;\n\t    }\n\n\t    for (t = 0; t < m; t++) {\n\t      e.bl_tree[2 * t] = 0;\n\t    }\n\n\t    e.dyn_ltree[2 * v] = 1, e.opt_len = e.static_len = 0, e.last_lit = e.matches = 0;\n\t  }\n\n\t  function Y(e) {\n\t    e.bi_valid > 8 ? j(e, e.bi_buf) : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf), e.bi_buf = 0, e.bi_valid = 0;\n\t  }\n\n\t  function G(e, t, r, n) {\n\t    var i = 2 * t,\n\t        o = 2 * r;\n\t    return e[i] < e[o] || e[i] === e[o] && n[t] <= n[r];\n\t  }\n\n\t  function W(e, t, r) {\n\t    for (var n = e.heap[r], i = r << 1; i <= e.heap_len && (i < e.heap_len && G(t, e.heap[i + 1], e.heap[i], e.depth) && i++, !G(t, n, e.heap[i], e.depth));) {\n\t      e.heap[r] = e.heap[i], r = i, i <<= 1;\n\t    }\n\n\t    e.heap[r] = n;\n\t  }\n\n\t  function K(e, t, r) {\n\t    var n,\n\t        i,\n\t        o,\n\t        s,\n\t        a = 0;\n\t    if (0 !== e.last_lit) do {\n\t      n = e.pending_buf[e.d_buf + 2 * a] << 8 | e.pending_buf[e.d_buf + 2 * a + 1], i = e.pending_buf[e.l_buf + a], a++, 0 === n ? Z(e, i, t) : (Z(e, (o = L[i]) + d + 1, t), 0 !== (s = k[o]) && q(e, i -= N[o], s), Z(e, o = D(--n), r), 0 !== (s = x[o]) && q(e, n -= P[o], s));\n\t    } while (a < e.last_lit);\n\t    Z(e, v, t);\n\t  }\n\n\t  function X(e, t) {\n\t    var r,\n\t        n,\n\t        i,\n\t        o = t.dyn_tree,\n\t        s = t.stat_desc.static_tree,\n\t        a = t.stat_desc.has_stree,\n\t        h = t.stat_desc.elems,\n\t        f = -1;\n\n\t    for (e.heap_len = 0, e.heap_max = _, r = 0; r < h; r++) {\n\t      0 !== o[2 * r] ? (e.heap[++e.heap_len] = f = r, e.depth[r] = 0) : o[2 * r + 1] = 0;\n\t    }\n\n\t    for (; e.heap_len < 2;) {\n\t      o[2 * (i = e.heap[++e.heap_len] = f < 2 ? ++f : 0)] = 1, e.depth[i] = 0, e.opt_len--, a && (e.static_len -= s[2 * i + 1]);\n\t    }\n\n\t    for (t.max_code = f, r = e.heap_len >> 1; r >= 1; r--) {\n\t      W(e, o, r);\n\t    }\n\n\t    i = h;\n\n\t    do {\n\t      r = e.heap[1], e.heap[1] = e.heap[e.heap_len--], W(e, o, 1), n = e.heap[1], e.heap[--e.heap_max] = r, e.heap[--e.heap_max] = n, o[2 * i] = o[2 * r] + o[2 * n], e.depth[i] = (e.depth[r] >= e.depth[n] ? e.depth[r] : e.depth[n]) + 1, o[2 * r + 1] = o[2 * n + 1] = i, e.heap[1] = i++, W(e, o, 1);\n\t    } while (e.heap_len >= 2);\n\n\t    e.heap[--e.heap_max] = e.heap[1], function (e, t) {\n\t      var r,\n\t          n,\n\t          i,\n\t          o,\n\t          s,\n\t          a,\n\t          h = t.dyn_tree,\n\t          f = t.max_code,\n\t          u = t.stat_desc.static_tree,\n\t          c = t.stat_desc.has_stree,\n\t          l = t.stat_desc.extra_bits,\n\t          d = t.stat_desc.extra_base,\n\t          p = t.stat_desc.max_length,\n\t          g = 0;\n\n\t      for (o = 0; o <= y; o++) {\n\t        e.bl_count[o] = 0;\n\t      }\n\n\t      for (h[2 * e.heap[e.heap_max] + 1] = 0, r = e.heap_max + 1; r < _; r++) {\n\t        (o = h[2 * h[2 * (n = e.heap[r]) + 1] + 1] + 1) > p && (o = p, g++), h[2 * n + 1] = o, n > f || (e.bl_count[o]++, s = 0, n >= d && (s = l[n - d]), a = h[2 * n], e.opt_len += a * (o + s), c && (e.static_len += a * (u[2 * n + 1] + s)));\n\t      }\n\n\t      if (0 !== g) {\n\t        do {\n\t          for (o = p - 1; 0 === e.bl_count[o];) {\n\t            o--;\n\t          }\n\n\t          e.bl_count[o]--, e.bl_count[o + 1] += 2, e.bl_count[p]--, g -= 2;\n\t        } while (g > 0);\n\n\t        for (o = p; 0 !== o; o--) {\n\t          for (n = e.bl_count[o]; 0 !== n;) {\n\t            (i = e.heap[--r]) > f || (h[2 * i + 1] !== o && (e.opt_len += (o - h[2 * i + 1]) * h[2 * i], h[2 * i + 1] = o), n--);\n\t          }\n\t        }\n\t      }\n\t    }(e, t), $(o, f, e.bl_count);\n\t  }\n\n\t  function Q(e, t, r) {\n\t    var n,\n\t        i,\n\t        o = -1,\n\t        s = t[1],\n\t        a = 0,\n\t        h = 7,\n\t        f = 4;\n\n\t    for (0 === s && (h = 138, f = 3), t[2 * (r + 1) + 1] = 65535, n = 0; n <= r; n++) {\n\t      i = s, s = t[2 * (n + 1) + 1], ++a < h && i === s || (a < f ? e.bl_tree[2 * i] += a : 0 !== i ? (i !== o && e.bl_tree[2 * i]++, e.bl_tree[2 * E]++) : a <= 10 ? e.bl_tree[2 * S]++ : e.bl_tree[2 * A]++, a = 0, o = i, 0 === s ? (h = 138, f = 3) : i === s ? (h = 6, f = 3) : (h = 7, f = 4));\n\t    }\n\t  }\n\n\t  function J(e, t, r) {\n\t    var n,\n\t        i,\n\t        o = -1,\n\t        s = t[1],\n\t        a = 0,\n\t        h = 7,\n\t        f = 4;\n\n\t    for (0 === s && (h = 138, f = 3), n = 0; n <= r; n++) {\n\t      if (i = s, s = t[2 * (n + 1) + 1], !(++a < h && i === s)) {\n\t        if (a < f) do {\n\t          Z(e, i, e.bl_tree);\n\t        } while (0 != --a);else 0 !== i ? (i !== o && (Z(e, i, e.bl_tree), a--), Z(e, E, e.bl_tree), q(e, a - 3, 2)) : a <= 10 ? (Z(e, S, e.bl_tree), q(e, a - 3, 3)) : (Z(e, A, e.bl_tree), q(e, a - 11, 7));\n\t        a = 0, o = i, 0 === s ? (h = 138, f = 3) : i === s ? (h = 6, f = 3) : (h = 7, f = 4);\n\t      }\n\t    }\n\t  }\n\n\t  h(P);\n\t  var ee = !1;\n\n\t  function te(e, t, r, i) {\n\t    q(e, (f << 1) + (i ? 1 : 0), 3), function (e, t, r, i) {\n\t      Y(e), i && (j(e, r), j(e, ~r)), n.arraySet(e.pending_buf, e.window, t, r, e.pending), e.pending += r;\n\t    }(e, t, r, !0);\n\t  }\n\n\t  t._tr_init = function (e) {\n\t    ee || (function () {\n\t      var e,\n\t          t,\n\t          r,\n\t          n,\n\t          i,\n\t          o = new Array(y + 1);\n\n\t      for (r = 0, n = 0; n < l - 1; n++) {\n\t        for (N[n] = r, e = 0; e < 1 << k[n]; e++) {\n\t          L[r++] = n;\n\t        }\n\t      }\n\n\t      for (L[r - 1] = n, i = 0, n = 0; n < 16; n++) {\n\t        for (P[n] = i, e = 0; e < 1 << x[n]; e++) {\n\t          B[i++] = n;\n\t        }\n\t      }\n\n\t      for (i >>= 7; n < g; n++) {\n\t        for (P[n] = i << 7, e = 0; e < 1 << x[n] - 7; e++) {\n\t          B[256 + i++] = n;\n\t        }\n\t      }\n\n\t      for (t = 0; t <= y; t++) {\n\t        o[t] = 0;\n\t      }\n\n\t      for (e = 0; e <= 143;) {\n\t        T[2 * e + 1] = 8, e++, o[8]++;\n\t      }\n\n\t      for (; e <= 255;) {\n\t        T[2 * e + 1] = 9, e++, o[9]++;\n\t      }\n\n\t      for (; e <= 279;) {\n\t        T[2 * e + 1] = 7, e++, o[7]++;\n\t      }\n\n\t      for (; e <= 287;) {\n\t        T[2 * e + 1] = 8, e++, o[8]++;\n\t      }\n\n\t      for ($(T, p + 1, o), e = 0; e < g; e++) {\n\t        I[2 * e + 1] = 5, I[2 * e] = H(e, 5);\n\t      }\n\n\t      F = new U(T, k, d + 1, p, y), M = new U(I, x, 0, g, y), O = new U(new Array(0), C, 0, m, w);\n\t    }(), ee = !0), e.l_desc = new z(e.dyn_ltree, F), e.d_desc = new z(e.dyn_dtree, M), e.bl_desc = new z(e.bl_tree, O), e.bi_buf = 0, e.bi_valid = 0, V(e);\n\t  }, t._tr_stored_block = te, t._tr_flush_block = function (e, t, r, n) {\n\t    var h,\n\t        f,\n\t        l = 0;\n\t    e.level > 0 ? (e.strm.data_type === a && (e.strm.data_type = function (e) {\n\t      var t,\n\t          r = 4093624447;\n\n\t      for (t = 0; t <= 31; t++, r >>>= 1) {\n\t        if (1 & r && 0 !== e.dyn_ltree[2 * t]) return o;\n\t      }\n\n\t      if (0 !== e.dyn_ltree[18] || 0 !== e.dyn_ltree[20] || 0 !== e.dyn_ltree[26]) return s;\n\n\t      for (t = 32; t < d; t++) {\n\t        if (0 !== e.dyn_ltree[2 * t]) return s;\n\t      }\n\n\t      return o;\n\t    }(e)), X(e, e.l_desc), X(e, e.d_desc), l = function (e) {\n\t      var t;\n\n\t      for (Q(e, e.dyn_ltree, e.l_desc.max_code), Q(e, e.dyn_dtree, e.d_desc.max_code), X(e, e.bl_desc), t = m - 1; t >= 3 && 0 === e.bl_tree[2 * R[t] + 1]; t--) {\n\t      }\n\n\t      return e.opt_len += 3 * (t + 1) + 5 + 5 + 4, t;\n\t    }(e), h = e.opt_len + 3 + 7 >>> 3, (f = e.static_len + 3 + 7 >>> 3) <= h && (h = f)) : h = f = r + 5, r + 4 <= h && -1 !== t ? te(e, t, r, n) : e.strategy === i || f === h ? (q(e, (u << 1) + (n ? 1 : 0), 3), K(e, T, I)) : (q(e, (c << 1) + (n ? 1 : 0), 3), function (e, t, r, n) {\n\t      var i;\n\n\t      for (q(e, t - 257, 5), q(e, r - 1, 5), q(e, n - 4, 4), i = 0; i < n; i++) {\n\t        q(e, e.bl_tree[2 * R[i] + 1], 3);\n\t      }\n\n\t      J(e, e.dyn_ltree, t - 1), J(e, e.dyn_dtree, r - 1);\n\t    }(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, l + 1), K(e, e.dyn_ltree, e.dyn_dtree)), V(e), n && Y(e);\n\t  }, t._tr_tally = function (e, t, r) {\n\t    return e.pending_buf[e.d_buf + 2 * e.last_lit] = t >>> 8 & 255, e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t, e.pending_buf[e.l_buf + e.last_lit] = 255 & r, e.last_lit++, 0 === t ? e.dyn_ltree[2 * r]++ : (e.matches++, t--, e.dyn_ltree[2 * (L[r] + d + 1)]++, e.dyn_dtree[2 * D(t)]++), e.last_lit === e.lit_bufsize - 1;\n\t  }, t._tr_align = function (e) {\n\t    q(e, u << 1, 3), Z(e, v, T), function (e) {\n\t      16 === e.bi_valid ? (j(e, e.bi_buf), e.bi_buf = 0, e.bi_valid = 0) : e.bi_valid >= 8 && (e.pending_buf[e.pending++] = 255 & e.bi_buf, e.bi_buf >>= 8, e.bi_valid -= 8);\n\t    }(e);\n\t  };\n\t}, function (e, t, r) {\n\n\t  e.exports = {\n\t    2: \"need dictionary\",\n\t    1: \"stream end\",\n\t    0: \"\",\n\t    \"-1\": \"file error\",\n\t    \"-2\": \"stream error\",\n\t    \"-3\": \"data error\",\n\t    \"-4\": \"insufficient memory\",\n\t    \"-5\": \"buffer error\",\n\t    \"-6\": \"incompatible version\"\n\t  };\n\t}, function (e, t, r) {\n\n\t  var n = r(11),\n\t      i = r(28),\n\t      o = r(29),\n\t      s = r(58),\n\t      a = r(59),\n\t      h = 0,\n\t      f = 1,\n\t      u = 2,\n\t      c = 4,\n\t      l = 5,\n\t      d = 6,\n\t      p = 0,\n\t      g = 1,\n\t      m = 2,\n\t      _ = -2,\n\t      y = -3,\n\t      b = -4,\n\t      w = -5,\n\t      v = 8,\n\t      E = 1,\n\t      S = 2,\n\t      A = 3,\n\t      k = 4,\n\t      x = 5,\n\t      C = 6,\n\t      R = 7,\n\t      T = 8,\n\t      I = 9,\n\t      B = 10,\n\t      L = 11,\n\t      N = 12,\n\t      F = 13,\n\t      M = 14,\n\t      O = 15,\n\t      P = 16,\n\t      U = 17,\n\t      z = 18,\n\t      D = 19,\n\t      j = 20,\n\t      q = 21,\n\t      Z = 22,\n\t      H = 23,\n\t      $ = 24,\n\t      V = 25,\n\t      Y = 26,\n\t      G = 27,\n\t      W = 28,\n\t      K = 29,\n\t      X = 30,\n\t      Q = 31,\n\t      J = 32,\n\t      ee = 852,\n\t      te = 592,\n\t      re = 15;\n\n\t  function ne(e) {\n\t    return (e >>> 24 & 255) + (e >>> 8 & 65280) + ((65280 & e) << 8) + ((255 & e) << 24);\n\t  }\n\n\t  function ie() {\n\t    this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new n.Buf16(320), this.work = new n.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;\n\t  }\n\n\t  function oe(e) {\n\t    var t;\n\t    return e && e.state ? (t = e.state, e.total_in = e.total_out = t.total = 0, e.msg = \"\", t.wrap && (e.adler = 1 & t.wrap), t.mode = E, t.last = 0, t.havedict = 0, t.dmax = 32768, t.head = null, t.hold = 0, t.bits = 0, t.lencode = t.lendyn = new n.Buf32(ee), t.distcode = t.distdyn = new n.Buf32(te), t.sane = 1, t.back = -1, p) : _;\n\t  }\n\n\t  function se(e) {\n\t    var t;\n\t    return e && e.state ? ((t = e.state).wsize = 0, t.whave = 0, t.wnext = 0, oe(e)) : _;\n\t  }\n\n\t  function ae(e, t) {\n\t    var r, n;\n\t    return e && e.state ? (n = e.state, t < 0 ? (r = 0, t = -t) : (r = 1 + (t >> 4), t < 48 && (t &= 15)), t && (t < 8 || t > 15) ? _ : (null !== n.window && n.wbits !== t && (n.window = null), n.wrap = r, n.wbits = t, se(e))) : _;\n\t  }\n\n\t  function he(e, t) {\n\t    var r, n;\n\t    return e ? (n = new ie(), e.state = n, n.window = null, (r = ae(e, t)) !== p && (e.state = null), r) : _;\n\t  }\n\n\t  var fe,\n\t      ue,\n\t      ce = !0;\n\n\t  function le(e) {\n\t    if (ce) {\n\t      var t;\n\n\t      for (fe = new n.Buf32(512), ue = new n.Buf32(32), t = 0; t < 144;) {\n\t        e.lens[t++] = 8;\n\t      }\n\n\t      for (; t < 256;) {\n\t        e.lens[t++] = 9;\n\t      }\n\n\t      for (; t < 280;) {\n\t        e.lens[t++] = 7;\n\t      }\n\n\t      for (; t < 288;) {\n\t        e.lens[t++] = 8;\n\t      }\n\n\t      for (a(f, e.lens, 0, 288, fe, 0, e.work, {\n\t        bits: 9\n\t      }), t = 0; t < 32;) {\n\t        e.lens[t++] = 5;\n\t      }\n\n\t      a(u, e.lens, 0, 32, ue, 0, e.work, {\n\t        bits: 5\n\t      }), ce = !1;\n\t    }\n\n\t    e.lencode = fe, e.lenbits = 9, e.distcode = ue, e.distbits = 5;\n\t  }\n\n\t  function de(e, t, r, i) {\n\t    var o,\n\t        s = e.state;\n\t    return null === s.window && (s.wsize = 1 << s.wbits, s.wnext = 0, s.whave = 0, s.window = new n.Buf8(s.wsize)), i >= s.wsize ? (n.arraySet(s.window, t, r - s.wsize, s.wsize, 0), s.wnext = 0, s.whave = s.wsize) : ((o = s.wsize - s.wnext) > i && (o = i), n.arraySet(s.window, t, r - i, o, s.wnext), (i -= o) ? (n.arraySet(s.window, t, r - i, i, 0), s.wnext = i, s.whave = s.wsize) : (s.wnext += o, s.wnext === s.wsize && (s.wnext = 0), s.whave < s.wsize && (s.whave += o))), 0;\n\t  }\n\n\t  t.inflateReset = se, t.inflateReset2 = ae, t.inflateResetKeep = oe, t.inflateInit = function (e) {\n\t    return he(e, re);\n\t  }, t.inflateInit2 = he, t.inflate = function (e, t) {\n\t    var r,\n\t        ee,\n\t        te,\n\t        re,\n\t        ie,\n\t        oe,\n\t        se,\n\t        ae,\n\t        he,\n\t        fe,\n\t        ue,\n\t        ce,\n\t        pe,\n\t        ge,\n\t        me,\n\t        _e,\n\t        ye,\n\t        be,\n\t        we,\n\t        ve,\n\t        Ee,\n\t        Se,\n\t        Ae,\n\t        ke,\n\t        xe = 0,\n\t        Ce = new n.Buf8(4),\n\t        Re = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n\t    if (!e || !e.state || !e.output || !e.input && 0 !== e.avail_in) return _;\n\t    (r = e.state).mode === N && (r.mode = F), ie = e.next_out, te = e.output, se = e.avail_out, re = e.next_in, ee = e.input, oe = e.avail_in, ae = r.hold, he = r.bits, fe = oe, ue = se, Se = p;\n\n\t    e: for (;;) {\n\t      switch (r.mode) {\n\t        case E:\n\t          if (0 === r.wrap) {\n\t            r.mode = F;\n\t            break;\n\t          }\n\n\t          for (; he < 16;) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          if (2 & r.wrap && 35615 === ae) {\n\t            r.check = 0, Ce[0] = 255 & ae, Ce[1] = ae >>> 8 & 255, r.check = o(r.check, Ce, 2, 0), ae = 0, he = 0, r.mode = S;\n\t            break;\n\t          }\n\n\t          if (r.flags = 0, r.head && (r.head.done = !1), !(1 & r.wrap) || (((255 & ae) << 8) + (ae >> 8)) % 31) {\n\t            e.msg = \"incorrect header check\", r.mode = X;\n\t            break;\n\t          }\n\n\t          if ((15 & ae) !== v) {\n\t            e.msg = \"unknown compression method\", r.mode = X;\n\t            break;\n\t          }\n\n\t          if (he -= 4, Ee = 8 + (15 & (ae >>>= 4)), 0 === r.wbits) r.wbits = Ee;else if (Ee > r.wbits) {\n\t            e.msg = \"invalid window size\", r.mode = X;\n\t            break;\n\t          }\n\t          r.dmax = 1 << Ee, e.adler = r.check = 1, r.mode = 512 & ae ? B : N, ae = 0, he = 0;\n\t          break;\n\n\t        case S:\n\t          for (; he < 16;) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          if (r.flags = ae, (255 & r.flags) !== v) {\n\t            e.msg = \"unknown compression method\", r.mode = X;\n\t            break;\n\t          }\n\n\t          if (57344 & r.flags) {\n\t            e.msg = \"unknown header flags set\", r.mode = X;\n\t            break;\n\t          }\n\n\t          r.head && (r.head.text = ae >> 8 & 1), 512 & r.flags && (Ce[0] = 255 & ae, Ce[1] = ae >>> 8 & 255, r.check = o(r.check, Ce, 2, 0)), ae = 0, he = 0, r.mode = A;\n\n\t        case A:\n\t          for (; he < 32;) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          r.head && (r.head.time = ae), 512 & r.flags && (Ce[0] = 255 & ae, Ce[1] = ae >>> 8 & 255, Ce[2] = ae >>> 16 & 255, Ce[3] = ae >>> 24 & 255, r.check = o(r.check, Ce, 4, 0)), ae = 0, he = 0, r.mode = k;\n\n\t        case k:\n\t          for (; he < 16;) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          r.head && (r.head.xflags = 255 & ae, r.head.os = ae >> 8), 512 & r.flags && (Ce[0] = 255 & ae, Ce[1] = ae >>> 8 & 255, r.check = o(r.check, Ce, 2, 0)), ae = 0, he = 0, r.mode = x;\n\n\t        case x:\n\t          if (1024 & r.flags) {\n\t            for (; he < 16;) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            r.length = ae, r.head && (r.head.extra_len = ae), 512 & r.flags && (Ce[0] = 255 & ae, Ce[1] = ae >>> 8 & 255, r.check = o(r.check, Ce, 2, 0)), ae = 0, he = 0;\n\t          } else r.head && (r.head.extra = null);\n\n\t          r.mode = C;\n\n\t        case C:\n\t          if (1024 & r.flags && ((ce = r.length) > oe && (ce = oe), ce && (r.head && (Ee = r.head.extra_len - r.length, r.head.extra || (r.head.extra = new Array(r.head.extra_len)), n.arraySet(r.head.extra, ee, re, ce, Ee)), 512 & r.flags && (r.check = o(r.check, ee, ce, re)), oe -= ce, re += ce, r.length -= ce), r.length)) break e;\n\t          r.length = 0, r.mode = R;\n\n\t        case R:\n\t          if (2048 & r.flags) {\n\t            if (0 === oe) break e;\n\t            ce = 0;\n\n\t            do {\n\t              Ee = ee[re + ce++], r.head && Ee && r.length < 65536 && (r.head.name += String.fromCharCode(Ee));\n\t            } while (Ee && ce < oe);\n\n\t            if (512 & r.flags && (r.check = o(r.check, ee, ce, re)), oe -= ce, re += ce, Ee) break e;\n\t          } else r.head && (r.head.name = null);\n\n\t          r.length = 0, r.mode = T;\n\n\t        case T:\n\t          if (4096 & r.flags) {\n\t            if (0 === oe) break e;\n\t            ce = 0;\n\n\t            do {\n\t              Ee = ee[re + ce++], r.head && Ee && r.length < 65536 && (r.head.comment += String.fromCharCode(Ee));\n\t            } while (Ee && ce < oe);\n\n\t            if (512 & r.flags && (r.check = o(r.check, ee, ce, re)), oe -= ce, re += ce, Ee) break e;\n\t          } else r.head && (r.head.comment = null);\n\n\t          r.mode = I;\n\n\t        case I:\n\t          if (512 & r.flags) {\n\t            for (; he < 16;) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            if (ae !== (65535 & r.check)) {\n\t              e.msg = \"header crc mismatch\", r.mode = X;\n\t              break;\n\t            }\n\n\t            ae = 0, he = 0;\n\t          }\n\n\t          r.head && (r.head.hcrc = r.flags >> 9 & 1, r.head.done = !0), e.adler = r.check = 0, r.mode = N;\n\t          break;\n\n\t        case B:\n\t          for (; he < 32;) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          e.adler = r.check = ne(ae), ae = 0, he = 0, r.mode = L;\n\n\t        case L:\n\t          if (0 === r.havedict) return e.next_out = ie, e.avail_out = se, e.next_in = re, e.avail_in = oe, r.hold = ae, r.bits = he, m;\n\t          e.adler = r.check = 1, r.mode = N;\n\n\t        case N:\n\t          if (t === l || t === d) break e;\n\n\t        case F:\n\t          if (r.last) {\n\t            ae >>>= 7 & he, he -= 7 & he, r.mode = G;\n\t            break;\n\t          }\n\n\t          for (; he < 3;) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          switch (r.last = 1 & ae, he -= 1, 3 & (ae >>>= 1)) {\n\t            case 0:\n\t              r.mode = M;\n\t              break;\n\n\t            case 1:\n\t              if (le(r), r.mode = j, t === d) {\n\t                ae >>>= 2, he -= 2;\n\t                break e;\n\t              }\n\n\t              break;\n\n\t            case 2:\n\t              r.mode = U;\n\t              break;\n\n\t            case 3:\n\t              e.msg = \"invalid block type\", r.mode = X;\n\t          }\n\n\t          ae >>>= 2, he -= 2;\n\t          break;\n\n\t        case M:\n\t          for (ae >>>= 7 & he, he -= 7 & he; he < 32;) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          if ((65535 & ae) != (ae >>> 16 ^ 65535)) {\n\t            e.msg = \"invalid stored block lengths\", r.mode = X;\n\t            break;\n\t          }\n\n\t          if (r.length = 65535 & ae, ae = 0, he = 0, r.mode = O, t === d) break e;\n\n\t        case O:\n\t          r.mode = P;\n\n\t        case P:\n\t          if (ce = r.length) {\n\t            if (ce > oe && (ce = oe), ce > se && (ce = se), 0 === ce) break e;\n\t            n.arraySet(te, ee, re, ce, ie), oe -= ce, re += ce, se -= ce, ie += ce, r.length -= ce;\n\t            break;\n\t          }\n\n\t          r.mode = N;\n\t          break;\n\n\t        case U:\n\t          for (; he < 14;) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          if (r.nlen = 257 + (31 & ae), ae >>>= 5, he -= 5, r.ndist = 1 + (31 & ae), ae >>>= 5, he -= 5, r.ncode = 4 + (15 & ae), ae >>>= 4, he -= 4, r.nlen > 286 || r.ndist > 30) {\n\t            e.msg = \"too many length or distance symbols\", r.mode = X;\n\t            break;\n\t          }\n\n\t          r.have = 0, r.mode = z;\n\n\t        case z:\n\t          for (; r.have < r.ncode;) {\n\t            for (; he < 3;) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            r.lens[Re[r.have++]] = 7 & ae, ae >>>= 3, he -= 3;\n\t          }\n\n\t          for (; r.have < 19;) {\n\t            r.lens[Re[r.have++]] = 0;\n\t          }\n\n\t          if (r.lencode = r.lendyn, r.lenbits = 7, Ae = {\n\t            bits: r.lenbits\n\t          }, Se = a(h, r.lens, 0, 19, r.lencode, 0, r.work, Ae), r.lenbits = Ae.bits, Se) {\n\t            e.msg = \"invalid code lengths set\", r.mode = X;\n\t            break;\n\t          }\n\n\t          r.have = 0, r.mode = D;\n\n\t        case D:\n\t          for (; r.have < r.nlen + r.ndist;) {\n\t            for (; _e = (xe = r.lencode[ae & (1 << r.lenbits) - 1]) >>> 16 & 255, ye = 65535 & xe, !((me = xe >>> 24) <= he);) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            if (ye < 16) ae >>>= me, he -= me, r.lens[r.have++] = ye;else {\n\t              if (16 === ye) {\n\t                for (ke = me + 2; he < ke;) {\n\t                  if (0 === oe) break e;\n\t                  oe--, ae += ee[re++] << he, he += 8;\n\t                }\n\n\t                if (ae >>>= me, he -= me, 0 === r.have) {\n\t                  e.msg = \"invalid bit length repeat\", r.mode = X;\n\t                  break;\n\t                }\n\n\t                Ee = r.lens[r.have - 1], ce = 3 + (3 & ae), ae >>>= 2, he -= 2;\n\t              } else if (17 === ye) {\n\t                for (ke = me + 3; he < ke;) {\n\t                  if (0 === oe) break e;\n\t                  oe--, ae += ee[re++] << he, he += 8;\n\t                }\n\n\t                he -= me, Ee = 0, ce = 3 + (7 & (ae >>>= me)), ae >>>= 3, he -= 3;\n\t              } else {\n\t                for (ke = me + 7; he < ke;) {\n\t                  if (0 === oe) break e;\n\t                  oe--, ae += ee[re++] << he, he += 8;\n\t                }\n\n\t                he -= me, Ee = 0, ce = 11 + (127 & (ae >>>= me)), ae >>>= 7, he -= 7;\n\t              }\n\n\t              if (r.have + ce > r.nlen + r.ndist) {\n\t                e.msg = \"invalid bit length repeat\", r.mode = X;\n\t                break;\n\t              }\n\n\t              for (; ce--;) {\n\t                r.lens[r.have++] = Ee;\n\t              }\n\t            }\n\t          }\n\n\t          if (r.mode === X) break;\n\n\t          if (0 === r.lens[256]) {\n\t            e.msg = \"invalid code -- missing end-of-block\", r.mode = X;\n\t            break;\n\t          }\n\n\t          if (r.lenbits = 9, Ae = {\n\t            bits: r.lenbits\n\t          }, Se = a(f, r.lens, 0, r.nlen, r.lencode, 0, r.work, Ae), r.lenbits = Ae.bits, Se) {\n\t            e.msg = \"invalid literal/lengths set\", r.mode = X;\n\t            break;\n\t          }\n\n\t          if (r.distbits = 6, r.distcode = r.distdyn, Ae = {\n\t            bits: r.distbits\n\t          }, Se = a(u, r.lens, r.nlen, r.ndist, r.distcode, 0, r.work, Ae), r.distbits = Ae.bits, Se) {\n\t            e.msg = \"invalid distances set\", r.mode = X;\n\t            break;\n\t          }\n\n\t          if (r.mode = j, t === d) break e;\n\n\t        case j:\n\t          r.mode = q;\n\n\t        case q:\n\t          if (oe >= 6 && se >= 258) {\n\t            e.next_out = ie, e.avail_out = se, e.next_in = re, e.avail_in = oe, r.hold = ae, r.bits = he, s(e, ue), ie = e.next_out, te = e.output, se = e.avail_out, re = e.next_in, ee = e.input, oe = e.avail_in, ae = r.hold, he = r.bits, r.mode === N && (r.back = -1);\n\t            break;\n\t          }\n\n\t          for (r.back = 0; _e = (xe = r.lencode[ae & (1 << r.lenbits) - 1]) >>> 16 & 255, ye = 65535 & xe, !((me = xe >>> 24) <= he);) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          if (_e && 0 == (240 & _e)) {\n\t            for (be = me, we = _e, ve = ye; _e = (xe = r.lencode[ve + ((ae & (1 << be + we) - 1) >> be)]) >>> 16 & 255, ye = 65535 & xe, !(be + (me = xe >>> 24) <= he);) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            ae >>>= be, he -= be, r.back += be;\n\t          }\n\n\t          if (ae >>>= me, he -= me, r.back += me, r.length = ye, 0 === _e) {\n\t            r.mode = Y;\n\t            break;\n\t          }\n\n\t          if (32 & _e) {\n\t            r.back = -1, r.mode = N;\n\t            break;\n\t          }\n\n\t          if (64 & _e) {\n\t            e.msg = \"invalid literal/length code\", r.mode = X;\n\t            break;\n\t          }\n\n\t          r.extra = 15 & _e, r.mode = Z;\n\n\t        case Z:\n\t          if (r.extra) {\n\t            for (ke = r.extra; he < ke;) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            r.length += ae & (1 << r.extra) - 1, ae >>>= r.extra, he -= r.extra, r.back += r.extra;\n\t          }\n\n\t          r.was = r.length, r.mode = H;\n\n\t        case H:\n\t          for (; _e = (xe = r.distcode[ae & (1 << r.distbits) - 1]) >>> 16 & 255, ye = 65535 & xe, !((me = xe >>> 24) <= he);) {\n\t            if (0 === oe) break e;\n\t            oe--, ae += ee[re++] << he, he += 8;\n\t          }\n\n\t          if (0 == (240 & _e)) {\n\t            for (be = me, we = _e, ve = ye; _e = (xe = r.distcode[ve + ((ae & (1 << be + we) - 1) >> be)]) >>> 16 & 255, ye = 65535 & xe, !(be + (me = xe >>> 24) <= he);) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            ae >>>= be, he -= be, r.back += be;\n\t          }\n\n\t          if (ae >>>= me, he -= me, r.back += me, 64 & _e) {\n\t            e.msg = \"invalid distance code\", r.mode = X;\n\t            break;\n\t          }\n\n\t          r.offset = ye, r.extra = 15 & _e, r.mode = $;\n\n\t        case $:\n\t          if (r.extra) {\n\t            for (ke = r.extra; he < ke;) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            r.offset += ae & (1 << r.extra) - 1, ae >>>= r.extra, he -= r.extra, r.back += r.extra;\n\t          }\n\n\t          if (r.offset > r.dmax) {\n\t            e.msg = \"invalid distance too far back\", r.mode = X;\n\t            break;\n\t          }\n\n\t          r.mode = V;\n\n\t        case V:\n\t          if (0 === se) break e;\n\n\t          if (ce = ue - se, r.offset > ce) {\n\t            if ((ce = r.offset - ce) > r.whave && r.sane) {\n\t              e.msg = \"invalid distance too far back\", r.mode = X;\n\t              break;\n\t            }\n\n\t            ce > r.wnext ? (ce -= r.wnext, pe = r.wsize - ce) : pe = r.wnext - ce, ce > r.length && (ce = r.length), ge = r.window;\n\t          } else ge = te, pe = ie - r.offset, ce = r.length;\n\n\t          ce > se && (ce = se), se -= ce, r.length -= ce;\n\n\t          do {\n\t            te[ie++] = ge[pe++];\n\t          } while (--ce);\n\n\t          0 === r.length && (r.mode = q);\n\t          break;\n\n\t        case Y:\n\t          if (0 === se) break e;\n\t          te[ie++] = r.length, se--, r.mode = q;\n\t          break;\n\n\t        case G:\n\t          if (r.wrap) {\n\t            for (; he < 32;) {\n\t              if (0 === oe) break e;\n\t              oe--, ae |= ee[re++] << he, he += 8;\n\t            }\n\n\t            if (ue -= se, e.total_out += ue, r.total += ue, ue && (e.adler = r.check = r.flags ? o(r.check, te, ue, ie - ue) : i(r.check, te, ue, ie - ue)), ue = se, (r.flags ? ae : ne(ae)) !== r.check) {\n\t              e.msg = \"incorrect data check\", r.mode = X;\n\t              break;\n\t            }\n\n\t            ae = 0, he = 0;\n\t          }\n\n\t          r.mode = W;\n\n\t        case W:\n\t          if (r.wrap && r.flags) {\n\t            for (; he < 32;) {\n\t              if (0 === oe) break e;\n\t              oe--, ae += ee[re++] << he, he += 8;\n\t            }\n\n\t            if (ae !== (4294967295 & r.total)) {\n\t              e.msg = \"incorrect length check\", r.mode = X;\n\t              break;\n\t            }\n\n\t            ae = 0, he = 0;\n\t          }\n\n\t          r.mode = K;\n\n\t        case K:\n\t          Se = g;\n\t          break e;\n\n\t        case X:\n\t          Se = y;\n\t          break e;\n\n\t        case Q:\n\t          return b;\n\n\t        case J:\n\t        default:\n\t          return _;\n\t      }\n\t    }\n\n\t    return e.next_out = ie, e.avail_out = se, e.next_in = re, e.avail_in = oe, r.hold = ae, r.bits = he, (r.wsize || ue !== e.avail_out && r.mode < X && (r.mode < G || t !== c)) && de(e, e.output, e.next_out, ue - e.avail_out) ? (r.mode = Q, b) : (fe -= e.avail_in, ue -= e.avail_out, e.total_in += fe, e.total_out += ue, r.total += ue, r.wrap && ue && (e.adler = r.check = r.flags ? o(r.check, te, ue, e.next_out - ue) : i(r.check, te, ue, e.next_out - ue)), e.data_type = r.bits + (r.last ? 64 : 0) + (r.mode === N ? 128 : 0) + (r.mode === j || r.mode === O ? 256 : 0), (0 === fe && 0 === ue || t === c) && Se === p && (Se = w), Se);\n\t  }, t.inflateEnd = function (e) {\n\t    if (!e || !e.state) return _;\n\t    var t = e.state;\n\t    return t.window && (t.window = null), e.state = null, p;\n\t  }, t.inflateGetHeader = function (e, t) {\n\t    var r;\n\t    return e && e.state ? 0 == (2 & (r = e.state).wrap) ? _ : (r.head = t, t.done = !1, p) : _;\n\t  }, t.inflateSetDictionary = function (e, t) {\n\t    var r,\n\t        n = t.length;\n\t    return e && e.state ? 0 !== (r = e.state).wrap && r.mode !== L ? _ : r.mode === L && i(1, t, n, 0) !== r.check ? y : de(e, t, n, n) ? (r.mode = Q, b) : (r.havedict = 1, p) : _;\n\t  }, t.inflateInfo = \"pako inflate (from Nodeca project)\";\n\t}, function (e, t, r) {\n\n\t  e.exports = function (e, t) {\n\t    var r, n, i, o, s, a, h, f, u, c, l, d, p, g, m, _, y, b, w, v, E, S, A, k, x;\n\n\t    r = e.state, n = e.next_in, k = e.input, i = n + (e.avail_in - 5), o = e.next_out, x = e.output, s = o - (t - e.avail_out), a = o + (e.avail_out - 257), h = r.dmax, f = r.wsize, u = r.whave, c = r.wnext, l = r.window, d = r.hold, p = r.bits, g = r.lencode, m = r.distcode, _ = (1 << r.lenbits) - 1, y = (1 << r.distbits) - 1;\n\n\t    e: do {\n\t      p < 15 && (d += k[n++] << p, p += 8, d += k[n++] << p, p += 8), b = g[d & _];\n\n\t      t: for (;;) {\n\t        if (d >>>= w = b >>> 24, p -= w, 0 === (w = b >>> 16 & 255)) x[o++] = 65535 & b;else {\n\t          if (!(16 & w)) {\n\t            if (0 == (64 & w)) {\n\t              b = g[(65535 & b) + (d & (1 << w) - 1)];\n\t              continue t;\n\t            }\n\n\t            if (32 & w) {\n\t              r.mode = 12;\n\t              break e;\n\t            }\n\n\t            e.msg = \"invalid literal/length code\", r.mode = 30;\n\t            break e;\n\t          }\n\n\t          v = 65535 & b, (w &= 15) && (p < w && (d += k[n++] << p, p += 8), v += d & (1 << w) - 1, d >>>= w, p -= w), p < 15 && (d += k[n++] << p, p += 8, d += k[n++] << p, p += 8), b = m[d & y];\n\n\t          r: for (;;) {\n\t            if (d >>>= w = b >>> 24, p -= w, !(16 & (w = b >>> 16 & 255))) {\n\t              if (0 == (64 & w)) {\n\t                b = m[(65535 & b) + (d & (1 << w) - 1)];\n\t                continue r;\n\t              }\n\n\t              e.msg = \"invalid distance code\", r.mode = 30;\n\t              break e;\n\t            }\n\n\t            if (E = 65535 & b, p < (w &= 15) && (d += k[n++] << p, (p += 8) < w && (d += k[n++] << p, p += 8)), (E += d & (1 << w) - 1) > h) {\n\t              e.msg = \"invalid distance too far back\", r.mode = 30;\n\t              break e;\n\t            }\n\n\t            if (d >>>= w, p -= w, E > (w = o - s)) {\n\t              if ((w = E - w) > u && r.sane) {\n\t                e.msg = \"invalid distance too far back\", r.mode = 30;\n\t                break e;\n\t              }\n\n\t              if (S = 0, A = l, 0 === c) {\n\t                if (S += f - w, w < v) {\n\t                  v -= w;\n\n\t                  do {\n\t                    x[o++] = l[S++];\n\t                  } while (--w);\n\n\t                  S = o - E, A = x;\n\t                }\n\t              } else if (c < w) {\n\t                if (S += f + c - w, (w -= c) < v) {\n\t                  v -= w;\n\n\t                  do {\n\t                    x[o++] = l[S++];\n\t                  } while (--w);\n\n\t                  if (S = 0, c < v) {\n\t                    v -= w = c;\n\n\t                    do {\n\t                      x[o++] = l[S++];\n\t                    } while (--w);\n\n\t                    S = o - E, A = x;\n\t                  }\n\t                }\n\t              } else if (S += c - w, w < v) {\n\t                v -= w;\n\n\t                do {\n\t                  x[o++] = l[S++];\n\t                } while (--w);\n\n\t                S = o - E, A = x;\n\t              }\n\n\t              for (; v > 2;) {\n\t                x[o++] = A[S++], x[o++] = A[S++], x[o++] = A[S++], v -= 3;\n\t              }\n\n\t              v && (x[o++] = A[S++], v > 1 && (x[o++] = A[S++]));\n\t            } else {\n\t              S = o - E;\n\n\t              do {\n\t                x[o++] = x[S++], x[o++] = x[S++], x[o++] = x[S++], v -= 3;\n\t              } while (v > 2);\n\n\t              v && (x[o++] = x[S++], v > 1 && (x[o++] = x[S++]));\n\t            }\n\n\t            break;\n\t          }\n\t        }\n\t        break;\n\t      }\n\t    } while (n < i && o < a);\n\n\t    n -= v = p >> 3, d &= (1 << (p -= v << 3)) - 1, e.next_in = n, e.next_out = o, e.avail_in = n < i ? i - n + 5 : 5 - (n - i), e.avail_out = o < a ? a - o + 257 : 257 - (o - a), r.hold = d, r.bits = p;\n\t  };\n\t}, function (e, t, r) {\n\n\t  var n = r(11),\n\t      i = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],\n\t      o = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],\n\t      s = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],\n\t      a = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];\n\n\t  e.exports = function (e, t, r, h, f, u, c, l) {\n\t    var d,\n\t        p,\n\t        g,\n\t        m,\n\t        _,\n\t        y,\n\t        b,\n\t        w,\n\t        v,\n\t        E = l.bits,\n\t        S = 0,\n\t        A = 0,\n\t        k = 0,\n\t        x = 0,\n\t        C = 0,\n\t        R = 0,\n\t        T = 0,\n\t        I = 0,\n\t        B = 0,\n\t        L = 0,\n\t        N = null,\n\t        F = 0,\n\t        M = new n.Buf16(16),\n\t        O = new n.Buf16(16),\n\t        P = null,\n\t        U = 0;\n\n\t    for (S = 0; S <= 15; S++) {\n\t      M[S] = 0;\n\t    }\n\n\t    for (A = 0; A < h; A++) {\n\t      M[t[r + A]]++;\n\t    }\n\n\t    for (C = E, x = 15; x >= 1 && 0 === M[x]; x--) {\n\t    }\n\n\t    if (C > x && (C = x), 0 === x) return f[u++] = 20971520, f[u++] = 20971520, l.bits = 1, 0;\n\n\t    for (k = 1; k < x && 0 === M[k]; k++) {\n\t    }\n\n\t    for (C < k && (C = k), I = 1, S = 1; S <= 15; S++) {\n\t      if (I <<= 1, (I -= M[S]) < 0) return -1;\n\t    }\n\n\t    if (I > 0 && (0 === e || 1 !== x)) return -1;\n\n\t    for (O[1] = 0, S = 1; S < 15; S++) {\n\t      O[S + 1] = O[S] + M[S];\n\t    }\n\n\t    for (A = 0; A < h; A++) {\n\t      0 !== t[r + A] && (c[O[t[r + A]]++] = A);\n\t    }\n\n\t    if (0 === e ? (N = P = c, y = 19) : 1 === e ? (N = i, F -= 257, P = o, U -= 257, y = 256) : (N = s, P = a, y = -1), L = 0, A = 0, S = k, _ = u, R = C, T = 0, g = -1, m = (B = 1 << C) - 1, 1 === e && B > 852 || 2 === e && B > 592) return 1;\n\n\t    for (;;) {\n\t      b = S - T, c[A] < y ? (w = 0, v = c[A]) : c[A] > y ? (w = P[U + c[A]], v = N[F + c[A]]) : (w = 96, v = 0), d = 1 << S - T, k = p = 1 << R;\n\n\t      do {\n\t        f[_ + (L >> T) + (p -= d)] = b << 24 | w << 16 | v | 0;\n\t      } while (0 !== p);\n\n\t      for (d = 1 << S - 1; L & d;) {\n\t        d >>= 1;\n\t      }\n\n\t      if (0 !== d ? (L &= d - 1, L += d) : L = 0, A++, 0 == --M[S]) {\n\t        if (S === x) break;\n\t        S = t[r + c[A]];\n\t      }\n\n\t      if (S > C && (L & m) !== g) {\n\t        for (0 === T && (T = C), _ += k, I = 1 << (R = S - T); R + T < x && !((I -= M[R + T]) <= 0);) {\n\t          R++, I <<= 1;\n\t        }\n\n\t        if (B += 1 << R, 1 === e && B > 852 || 2 === e && B > 592) return 1;\n\t        f[g = L & m] = C << 24 | R << 16 | _ - u | 0;\n\t      }\n\t    }\n\n\t    return 0 !== L && (f[_ + L] = S - T << 24 | 64 << 16 | 0), l.bits = C, 0;\n\t  };\n\t}, function (e, t, r) {\n\n\t  e.exports = {\n\t    Z_NO_FLUSH: 0,\n\t    Z_PARTIAL_FLUSH: 1,\n\t    Z_SYNC_FLUSH: 2,\n\t    Z_FULL_FLUSH: 3,\n\t    Z_FINISH: 4,\n\t    Z_BLOCK: 5,\n\t    Z_TREES: 6,\n\t    Z_OK: 0,\n\t    Z_STREAM_END: 1,\n\t    Z_NEED_DICT: 2,\n\t    Z_ERRNO: -1,\n\t    Z_STREAM_ERROR: -2,\n\t    Z_DATA_ERROR: -3,\n\t    Z_BUF_ERROR: -5,\n\t    Z_NO_COMPRESSION: 0,\n\t    Z_BEST_SPEED: 1,\n\t    Z_BEST_COMPRESSION: 9,\n\t    Z_DEFAULT_COMPRESSION: -1,\n\t    Z_FILTERED: 1,\n\t    Z_HUFFMAN_ONLY: 2,\n\t    Z_RLE: 3,\n\t    Z_FIXED: 4,\n\t    Z_DEFAULT_STRATEGY: 0,\n\t    Z_BINARY: 0,\n\t    Z_TEXT: 1,\n\t    Z_UNKNOWN: 2,\n\t    Z_DEFLATED: 8\n\t  };\n\t}, function (e, t, r) {\n\t  var n = r(1).Buffer,\n\t      i = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117];\n\n\t  function o(e) {\n\t    if (n.isBuffer(e)) return e;\n\t    var t = \"function\" == typeof n.alloc && \"function\" == typeof n.from;\n\t    if (\"number\" == typeof e) return t ? n.alloc(e) : new n(e);\n\t    if (\"string\" == typeof e) return t ? n.from(e) : new n(e);\n\t    throw new Error(\"input must be buffer, number, or string, received \" + _typeof(e));\n\t  }\n\n\t  function s(e, t) {\n\t    e = o(e), n.isBuffer(t) && (t = t.readUInt32BE(0));\n\n\t    for (var r = -1 ^ ~~t, s = 0; s < e.length; s++) {\n\t      r = i[255 & (r ^ e[s])] ^ r >>> 8;\n\t    }\n\n\t    return -1 ^ r;\n\t  }\n\n\t  function a() {\n\t    return e = s.apply(null, arguments), (t = o(4)).writeInt32BE(e, 0), t;\n\t    var e, t;\n\t  }\n\n\t  \"undefined\" != typeof Int32Array && (i = new Int32Array(i)), a.signed = function () {\n\t    return s.apply(null, arguments);\n\t  }, a.unsigned = function () {\n\t    return s.apply(null, arguments) >>> 0;\n\t  }, e.exports = a;\n\t}, function (e, t, r) {\n\t  (function (t) {\n\t    var _r12 = r(0),\n\t        n = _r12.CramMalformedError,\n\t        i = r(12),\n\t        o = r(63),\n\t        s = r(64),\n\t        a = r(65),\n\t        h = 4;\n\n\t    var f = /*#__PURE__*/function () {\n\t      function f(e) {\n\t        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t        _classCallCheck(this, f);\n\n\t        this._buffer = e, this._position = t, this.length = e.length;\n\t      }\n\n\t      _createClass(f, [{\n\t        key: \"get\",\n\t        value: function get() {\n\t          var e = this._buffer[this._position];\n\t          return this._position += 1, e;\n\t        }\n\t      }, {\n\t        key: \"getByte\",\n\t        value: function getByte() {\n\t          return this.get();\n\t        }\n\t      }, {\n\t        key: \"getByteAt\",\n\t        value: function getByteAt(e) {\n\t          return this._buffer[e];\n\t        }\n\t      }, {\n\t        key: \"position\",\n\t        value: function position() {\n\t          return this._position;\n\t        }\n\t      }, {\n\t        key: \"put\",\n\t        value: function put(e) {\n\t          return this._buffer[this._position] = e, this._position += 1, e;\n\t        }\n\t      }, {\n\t        key: \"putAt\",\n\t        value: function putAt(e, t) {\n\t          return this._buffer[e] = t, t;\n\t        }\n\t      }, {\n\t        key: \"setPosition\",\n\t        value: function setPosition(e) {\n\t          return this._position = e, e;\n\t        }\n\t      }, {\n\t        key: \"getInt\",\n\t        value: function getInt() {\n\t          var e = this._buffer.readInt32LE(this._position);\n\n\t          return this._position += 4, e;\n\t        }\n\t      }, {\n\t        key: \"remaining\",\n\t        value: function remaining() {\n\t          return this._buffer.length - this._position;\n\t        }\n\t      }]);\n\n\t      return f;\n\t    }();\n\n\t    e.exports = {\n\t      uncompress: function uncompress(e, r) {\n\t        var u = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t        if (0 === e.length) return r.fill(0), r;\n\t        var c = new f(e, u),\n\t            l = c.get();\n\t        if (0 !== l && 1 !== l) throw new n(\"Invalid rANS order \".concat(l));\n\t        if (c.getInt() !== c.remaining() - h) throw new n(\"Incorrect input length.\");\n\t        var d = c.getInt(),\n\t            p = new f(r || t.allocUnsafe(d));\n\t        if (p.length < d) throw new n(\"Output buffer too small to fit \".concat(d, \" bytes.\"));\n\n\t        switch (l) {\n\t          case 0:\n\t            return function (e, t) {\n\t              var r = new i.AriDecoder(),\n\t                  n = new Array(256);\n\n\t              for (var _e12 = 0; _e12 < n.length; _e12 += 1) {\n\t                n[_e12] = new i.Symbol();\n\t              }\n\n\t              return o.readStatsO0(e, r, n), s.uncompress(e, r, n, t), t;\n\t            }(c, p);\n\n\t          case 1:\n\t            return function (e, t) {\n\t              var r = new Array(256);\n\n\t              for (var _e13 = 0; _e13 < r.length; _e13 += 1) {\n\t                r[_e13] = new i.AriDecoder();\n\t              }\n\n\t              var n = new Array(256);\n\n\t              for (var _e14 = 0; _e14 < n.length; _e14 += 1) {\n\t                n[_e14] = new Array(256);\n\n\t                for (var _t7 = 0; _t7 < n[_e14].length; _t7 += 1) {\n\t                  n[_e14][_t7] = new i.Symbol();\n\t                }\n\t              }\n\n\t              return o.readStatsO1(e, r, n), a.uncompress(e, t, r, n), t;\n\t            }(c, p);\n\n\t          default:\n\t            throw new n(\"Invalid rANS order: \".concat(l));\n\t        }\n\t      }\n\t    };\n\t  }).call(this, r(1).Buffer);\n\t}, function (e, t, r) {\n\t  var _r13 = r(0),\n\t      n = _r13.CramMalformedError,\n\t      i = r(13),\n\t      o = r(12);\n\n\t  function s(e) {\n\t    if (!e) throw new n(\"assertion failed\");\n\t  }\n\n\t  e.exports = {\n\t    readStatsO0: function readStatsO0(e, t, r) {\n\t      var n = 0,\n\t          a = 0,\n\t          h = 255 & e.get();\n\n\t      do {\n\t        null == t.fc[h] && (t.fc[h] = new o.FC()), t.fc[h].F = 255 & e.get(), t.fc[h].F >= 128 && (t.fc[h].F &= -129, t.fc[h].F = (127 & t.fc[h].F) << 8 | 255 & e.get()), t.fc[h].C = a, o.symbolInit(r[h], t.fc[h].C, t.fc[h].F), t.R || (t.R = new Array(i.TOTFREQ)), t.R.fill(h, a, a + t.fc[h].F), a += t.fc[h].F, 0 === n && h + 1 === (255 & e.getByteAt(e.position())) ? (h = 255 & e.get(), n = 255 & e.get()) : 0 !== n ? (n -= 1, h += 1) : h = 255 & e.get();\n\t      } while (0 !== h);\n\n\t      s(a < i.TOTFREQ);\n\t    },\n\t    readStatsO1: function readStatsO1(e, t, r) {\n\t      var n = 0,\n\t          a = 255 & e.get();\n\n\t      do {\n\t        var h = 0,\n\t            f = 0,\n\t            u = 255 & e.get();\n\t        null == t[a] && (t[a] = new o.AriDecoder());\n\n\t        do {\n\t          null == t[a].fc[u] && (t[a].fc[u] = new o.FC()), t[a].fc[u].F = 255 & e.get(), t[a].fc[u].F >= 128 && (t[a].fc[u].F &= -129, t[a].fc[u].F = (127 & t[a].fc[u].F) << 8 | 255 & e.get()), t[a].fc[u].C = f, 0 === t[a].fc[u].F && (t[a].fc[u].F = i.TOTFREQ), null == r[a][u] && (r[a][u] = new o.RansDecSymbol()), o.symbolInit(r[a][u], t[a].fc[u].C, t[a].fc[u].F), null == t[a].R && (t[a].R = new Array(i.TOTFREQ)), t[a].R.fill(u, f, f + t[a].fc[u].F), s((f += t[a].fc[u].F) <= i.TOTFREQ), 0 === h && u + 1 === (255 & e.getByteAt(e.position())) ? (u = 255 & e.get(), h = 255 & e.get()) : 0 !== h ? (h -= 1, u += 1) : u = 255 & e.get();\n\t        } while (0 !== u);\n\n\t        0 === n && a + 1 === (255 & e.getByteAt(e.position())) ? (a = 255 & e.get(), n = 255 & e.get()) : 0 !== n ? (n -= 1, a += 1) : a = 255 & e.get();\n\t      } while (0 !== a);\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\t  var _r14 = r(0),\n\t      n = _r14.CramMalformedError,\n\t      i = r(13),\n\t      o = r(12);\n\n\t  e.exports = {\n\t    uncompress: function uncompress(e, t, r, s) {\n\t      var a = e.getInt(),\n\t          h = e.getInt(),\n\t          f = e.getInt(),\n\t          u = e.getInt();\n\t      var c = s.remaining(),\n\t          l = -4 & c;\n\n\t      for (var _n3 = 0; _n3 < l; _n3 += 4) {\n\t        var _c = t.R[o.get(a, i.TF_SHIFT)],\n\t            _l = t.R[o.get(h, i.TF_SHIFT)],\n\t            _d = t.R[o.get(f, i.TF_SHIFT)],\n\t            p = t.R[o.get(u, i.TF_SHIFT)];\n\t        s.putAt(_n3, _c), s.putAt(_n3 + 1, _l), s.putAt(_n3 + 2, _d), s.putAt(_n3 + 3, p), a = o.advanceSymbolStep(a, r[255 & _c], i.TF_SHIFT), h = o.advanceSymbolStep(h, r[255 & _l], i.TF_SHIFT), f = o.advanceSymbolStep(f, r[255 & _d], i.TF_SHIFT), u = o.advanceSymbolStep(u, r[255 & p], i.TF_SHIFT), a = o.renormalize(a, e), h = o.renormalize(h, e), f = o.renormalize(f, e), u = o.renormalize(u, e);\n\t      }\n\n\t      var d;\n\n\t      switch (s.setPosition(l), 3 & c) {\n\t        case 0:\n\t          break;\n\n\t        case 1:\n\t          d = t.R[o.get(a, i.TF_SHIFT)], o.advanceSymbol(a, e, r[255 & d], i.TF_SHIFT), s.put(d);\n\t          break;\n\n\t        case 2:\n\t          d = t.R[o.get(a, i.TF_SHIFT)], o.advanceSymbol(a, e, r[255 & d], i.TF_SHIFT), s.put(d), d = t.R[o.get(h, i.TF_SHIFT)], o.advanceSymbol(h, e, r[255 & d], i.TF_SHIFT), s.put(d);\n\t          break;\n\n\t        case 3:\n\t          d = t.R[o.get(a, i.TF_SHIFT)], o.advanceSymbol(a, e, r[255 & d], i.TF_SHIFT), s.put(d), d = t.R[o.get(h, i.TF_SHIFT)], o.advanceSymbol(h, e, r[255 & d], i.TF_SHIFT), s.put(d), d = t.R[o.get(f, i.TF_SHIFT)], o.advanceSymbol(f, e, r[255 & d], i.TF_SHIFT), s.put(d);\n\t          break;\n\n\t        default:\n\t          throw new n(\"invalid output size encountered during rANS decoding\");\n\t      }\n\n\t      s.setPosition(0);\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\t  var n = r(13),\n\t      i = r(12);\n\t  e.exports = {\n\t    uncompress: function uncompress(e, t, r, o) {\n\t      var s = t.remaining();\n\t      var a = e.getInt(),\n\t          h = e.getInt(),\n\t          f = e.getInt(),\n\t          u = e.getInt();\n\t      var c = s >> 2;\n\t      var l = 0,\n\t          d = c,\n\t          p = 2 * c,\n\t          g = 3 * c,\n\t          m = 0,\n\t          _ = 0,\n\t          y = 0,\n\t          b = 0;\n\n\t      for (; l < c; l += 1, d += 1, p += 1, g += 1) {\n\t        var _s2 = 255 & r[m].R[i.get(a, n.TF_SHIFT)],\n\t            _c2 = 255 & r[_].R[i.get(h, n.TF_SHIFT)],\n\t            w = 255 & r[y].R[i.get(f, n.TF_SHIFT)],\n\t            v = 255 & r[b].R[i.get(u, n.TF_SHIFT)];\n\n\t        t.putAt(l, _s2), t.putAt(d, _c2), t.putAt(p, w), t.putAt(g, v), a = i.advanceSymbolStep(a, o[m][_s2], n.TF_SHIFT), h = i.advanceSymbolStep(h, o[_][_c2], n.TF_SHIFT), f = i.advanceSymbolStep(f, o[y][w], n.TF_SHIFT), u = i.advanceSymbolStep(u, o[b][v], n.TF_SHIFT), a = i.renormalize(a, e), h = i.renormalize(h, e), f = i.renormalize(f, e), u = i.renormalize(u, e), m = _s2, _ = _c2, y = w, b = v;\n\t      }\n\n\t      for (; g < s; g += 1) {\n\t        var _s3 = 255 & r[b].R[i.get(u, n.TF_SHIFT)];\n\n\t        t.putAt(g, _s3), u = i.advanceSymbol(u, e, o[b][_s3], n.TF_SHIFT), b = _s3;\n\t      }\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\t  var _r15 = r(67),\n\t      n = _r15.Parser,\n\t      i = new n().itf8(),\n\t      o = {\n\t    parser: new n().string(\"magic\", {\n\t      length: 4\n\t    }).uint8(\"majorVersion\").uint8(\"minorVersion\").string(\"fileId\", {\n\t      length: 20,\n\t      stripNull: !0\n\t    }),\n\t    maxLength: 26\n\t  },\n\t      s = {\n\t    parser: new n().uint8(\"compressionMethod\", {\n\t      formatter: function formatter(e) {\n\t        var t = [\"raw\", \"gzip\", \"bzip2\", \"lzma\", \"rans\"][e];\n\t        if (!t) throw new Error(\"compression method number \".concat(e, \" not implemented\"));\n\t        return t;\n\t      }\n\t    }).uint8(\"contentType\", {\n\t      formatter: function formatter(e) {\n\t        var t = [\"FILE_HEADER\", \"COMPRESSION_HEADER\", \"MAPPED_SLICE_HEADER\", \"UNMAPPED_SLICE_HEADER\", \"EXTERNAL_DATA\", \"CORE_DATA\"][e];\n\t        if (!t) throw new Error(\"invalid block content type id \".concat(e));\n\t        return t;\n\t      }\n\t    }).itf8(\"contentId\").itf8(\"compressedSize\").itf8(\"uncompressedSize\"),\n\t    maxLength: 17\n\t  },\n\t      a = {\n\t    parser: new n().uint32(\"crc32\"),\n\t    maxLength: 4\n\t  },\n\t      h = new n().itf8(\"size\").buffer(\"entries\", {\n\t    length: \"size\",\n\t    formatter: function formatter(e) {\n\t      function t(t, r) {\n\t        var n = e.toString(\"utf8\", t, r),\n\t            i = [];\n\n\t        for (var _e15 = 0; _e15 < n.length; _e15 += 3) {\n\t          i.push(n.substr(_e15, 3));\n\t        }\n\n\t        return i;\n\t      }\n\n\t      var r,\n\t          n = [],\n\t          i = 0;\n\n\t      for (r = 0; r < e.length; r += 1) {\n\t        e[r] || (n.push(t(i, r)), i = r + 1);\n\t      }\n\n\t      return r > i && n.push(t(i, r)), n;\n\t    }\n\t  }),\n\t      f = new n().uint8(null, {\n\t    formatter: function formatter(e) {\n\t      return !!e;\n\t    }\n\t  }),\n\t      u = new n().itf8(\"mapSize\").itf8(\"mapCount\").array(\"entries\", {\n\t    length: \"mapCount\",\n\t    type: new n().string(\"key\", {\n\t      length: 2,\n\t      stripNull: !1\n\t    }).choice(\"value\", {\n\t      tag: \"key\",\n\t      choices: {\n\t        MI: f,\n\t        UI: f,\n\t        PI: f,\n\t        RN: f,\n\t        AP: f,\n\t        RR: f,\n\t        SM: new n().array(null, {\n\t          type: \"uint8\",\n\t          length: 5\n\t        }),\n\t        TD: new n().nest(null, {\n\t          type: h,\n\t          formatter: function formatter(e) {\n\t            return e.entries;\n\t          }\n\t        })\n\t      }\n\t    })\n\t  });\n\n\t  function c(e) {\n\t    var t = {};\n\t    return e.entries.forEach(function (_ref8) {\n\t      var e = _ref8.key,\n\t          r = _ref8.value;\n\t      t[e] && console.warn(\"duplicate key \".concat(e, \" in map\")), t[e] = r;\n\t    }), t;\n\t  }\n\n\t  var l = {\n\t    cramFileDefinition: o,\n\t    cramBlockHeader: s,\n\t    cramBlockCrc32: a\n\t  },\n\t      d = {\n\t    cramUnmappedSliceHeader: function cramUnmappedSliceHeader(e) {\n\t      var t = 0,\n\t          r = new n().itf8(\"numRecords\");\n\t      t += 5, e >= 3 ? (r = r.ltf8(\"recordCounter\"), t += 9) : 2 === e && (r = r.itf8(\"recordCounter\"), t += 5), r = r.itf8(\"numBlocks\").itf8(\"numContentIds\").array(\"contentIds\", {\n\t        type: i,\n\t        length: \"numContentIds\"\n\t      }), t += 10, e >= 2 && (r = r.array(\"md5\", {\n\t        type: \"uint8\",\n\t        length: 16\n\t      }), t += 16);\n\t      return {\n\t        parser: r,\n\t        maxLength: function maxLength(e) {\n\t          return t + 5 * e;\n\t        }\n\t      };\n\t    },\n\t    cramMappedSliceHeader: function cramMappedSliceHeader(e) {\n\t      var t = new n().itf8(\"refSeqId\").itf8(\"refSeqStart\").itf8(\"refSeqSpan\").itf8(\"numRecords\"),\n\t          r = 20;\n\t      e >= 3 ? (t = t.ltf8(\"recordCounter\"), r += 9) : 2 === e && (t = t.itf8(\"recordCounter\"), r += 5), t = t.itf8(\"numBlocks\").itf8(\"numContentIds\").array(\"contentIds\", {\n\t        type: i,\n\t        length: \"numContentIds\"\n\t      }).itf8(\"refBaseBlockId\"), r += 15, e >= 2 && (t = t.array(\"md5\", {\n\t        type: \"uint8\",\n\t        length: 16\n\t      }), r += 16);\n\t      return {\n\t        parser: t,\n\t        maxLength: function maxLength(e) {\n\t          return r + 5 * e;\n\t        }\n\t      };\n\t    },\n\t    cramEncoding: function cramEncoding(e) {\n\t      return {\n\t        parser: new n().namely(\"cramEncoding\").itf8(\"codecId\").itf8(\"parametersBytes\").choice(\"parameters\", {\n\t          tag: \"codecId\",\n\t          choices: {\n\t            0: new n(),\n\t            1: new n().itf8(\"blockContentId\"),\n\t            2: new n().itf8(\"offset\").itf8(\"M\"),\n\t            3: n.start().itf8(\"numCodes\").array(\"symbols\", {\n\t              length: \"numCodes\",\n\t              type: i\n\t            }).itf8(\"numLengths\").array(\"bitLengths\", {\n\t              length: \"numLengths\",\n\t              type: i\n\t            }),\n\t            4: n.start().nest(\"lengthsEncoding\", {\n\t              type: \"cramEncoding\"\n\t            }).nest(\"valuesEncoding\", {\n\t              type: \"cramEncoding\"\n\t            }),\n\t            5: new n().uint8(\"stopByte\")[e > 1 ? \"itf8\" : \"int\"](\"blockContentId\"),\n\t            6: new n().itf8(\"offset\").itf8(\"length\"),\n\t            7: new n().itf8(\"offset\").itf8(\"K\"),\n\t            8: new n().itf8(\"offset\").itf8(\"log2m\"),\n\t            9: new n().itf8(\"offset\")\n\t          }\n\t        })\n\t      };\n\t    },\n\t    cramDataSeriesEncodingMap: function cramDataSeriesEncodingMap(e) {\n\t      return new n().itf8(\"mapSize\").itf8(\"mapCount\").array(\"entries\", {\n\t        length: \"mapCount\",\n\t        type: new n().string(\"key\", {\n\t          length: 2,\n\t          stripNull: !1\n\t        }).nest(\"value\", {\n\t          type: this.cramEncoding(e).parser\n\t        })\n\t      });\n\t    },\n\t    cramTagEncodingMap: function cramTagEncodingMap(e) {\n\t      return new n().itf8(\"mapSize\").itf8(\"mapCount\").array(\"entries\", {\n\t        length: \"mapCount\",\n\t        type: new n().itf8(\"key\", {\n\t          formatter: function formatter(e) {\n\t            return String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e);\n\t          }\n\t        }).nest(\"value\", {\n\t          type: this.cramEncoding(e).parser\n\t        })\n\t      });\n\t    },\n\t    cramCompressionHeader: function cramCompressionHeader(e) {\n\t      var t = new n();\n\t      return {\n\t        parser: t = t.nest(\"preservation\", {\n\t          type: u,\n\t          formatter: c\n\t        }).nest(\"dataSeriesEncoding\", {\n\t          type: this.cramDataSeriesEncodingMap(e),\n\t          formatter: c\n\t        }).nest(\"tagEncoding\", {\n\t          type: this.cramTagEncodingMap(e),\n\t          formatter: c\n\t        })\n\t      };\n\t    },\n\t    cramContainerHeader1: function cramContainerHeader1(e) {\n\t      var t = new n().int32(\"length\").itf8(\"refSeqId\").itf8(\"refSeqStart\").itf8(\"alignmentSpan\").itf8(\"numRecords\"),\n\t          r = 24;\n\t      return e >= 3 ? (t = t.ltf8(\"recordCounter\"), r += 9) : 2 === e && (t = t.itf8(\"recordCounter\"), r += 5), e > 1 && (t = t.ltf8(\"numBases\"), r += 9), {\n\t        parser: t = t.itf8(\"numBlocks\").itf8(\"numLandmarks\"),\n\t        maxLength: r += 10\n\t      };\n\t    },\n\t    cramContainerHeader2: function cramContainerHeader2(e) {\n\t      var t = new n().itf8(\"numLandmarks\").array(\"landmarks\", {\n\t        type: new n().itf8(),\n\t        length: \"numLandmarks\"\n\t      }),\n\t          r = 0;\n\t      return e >= 3 && (t = t.uint32(\"crc32\"), r = 4), {\n\t        parser: t,\n\t        maxLength: function maxLength(e) {\n\t          return 5 + 5 * e + r;\n\t        }\n\t      };\n\t    }\n\t  };\n\t  e.exports = {\n\t    cramFileDefinition: o,\n\t    getSectionParsers: function getSectionParsers(e) {\n\t      var t = Object.assign({}, l);\n\t      return Object.keys(d).forEach(function (r) {\n\t        t[r] = d[r](e);\n\t      }), t;\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\t  (function (e) {\n\t    var n = r(68),\n\t        i = r(70).Context,\n\t        o = r(31);\n\t    \"undefined\" != typeof window && (window.Buffer = e);\n\t    var s = {\n\t      UInt8: 1,\n\t      UInt16LE: 2,\n\t      UInt16BE: 2,\n\t      UInt32LE: 4,\n\t      UInt32BE: 4,\n\t      Int8: 1,\n\t      Int16LE: 2,\n\t      Int16BE: 2,\n\t      Int32LE: 4,\n\t      Int32BE: 4,\n\t      FloatLE: 4,\n\t      FloatBE: 4,\n\t      DoubleLE: 8,\n\t      DoubleBE: 8\n\t    },\n\t        a = {},\n\t        h = [];\n\t    !function () {\n\t      var e;\n\n\t      for (e = 1; e <= 32; e++) {\n\t        h.push(e);\n\t      }\n\t    }();\n\t    var f = {};\n\t    Object.keys(s).concat(Object.keys({\n\t      String: null,\n\t      Buffer: null,\n\t      Array: null,\n\t      Skip: null,\n\t      Choice: null,\n\t      Nest: null,\n\t      Bit: null,\n\t      Itf8: null,\n\t      Ltf8: null\n\t    })).forEach(function (e) {\n\t      f[e.toLowerCase()] = e;\n\t    });\n\n\t    var u = function u() {\n\t      this.varName = \"\", this.type = \"\", this.options = {}, this.next = null, this.head = null, this.compiled = null, this.endian = \"le\", this.constructorFn = null, this.alias = null;\n\t    };\n\n\t    u.start = function () {\n\t      return new u();\n\t    }, Object.keys(s).forEach(function (e) {\n\t      u.prototype[e.toLowerCase()] = function (t, r) {\n\t        return this.setNextParser(e.toLowerCase(), t, r);\n\t      };\n\n\t      var t = e.replace(/BE|LE/, \"\").toLowerCase();\n\t      t in u.prototype || (u.prototype[t] = function (e, r) {\n\t        return this[t + this.endian](e, r);\n\t      });\n\t    }), h.forEach(function (e) {\n\t      u.prototype[\"bit\" + e.toString()] = function (t, r) {\n\t        return r || (r = {}), r.length = e, this.setNextParser(\"bit\", t, r);\n\t      };\n\t    }), u.prototype.namely = function (e) {\n\t      return a[e] = this, this.alias = e, this;\n\t    }, u.prototype.skip = function (e, t) {\n\t      if (t && t.assert) throw new Error(\"assert option on skip is not allowed.\");\n\t      return this.setNextParser(\"skip\", \"\", {\n\t        length: e\n\t      });\n\t    }, u.prototype.string = function (e, t) {\n\t      if (!t.zeroTerminated && !t.length && !t.greedy) throw new Error(\"Neither length, zeroTerminated, nor greedy is defined for string.\");\n\t      if ((t.zeroTerminated || t.length) && t.greedy) throw new Error(\"greedy is mutually exclusive with length and zeroTerminated for string.\");\n\t      if (t.stripNull && !t.length && !t.greedy) throw new Error(\"Length or greedy must be defined if stripNull is defined.\");\n\t      return t.encoding = t.encoding || \"utf8\", this.setNextParser(\"string\", e, t);\n\t    }, u.prototype.buffer = function (e, t) {\n\t      if (!t.length && !t.readUntil) throw new Error(\"Length nor readUntil is defined in buffer parser\");\n\t      return this.setNextParser(\"buffer\", e, t);\n\t    }, u.prototype.array = function (e, t) {\n\t      if (!t.readUntil && !t.length && !t.lengthInBytes) throw new Error(\"Length option of array is not defined.\");\n\t      if (!t.type) throw new Error(\"Type option of array is not defined.\");\n\t      if (\"string\" == typeof t.type && !a[t.type] && Object.keys(s).indexOf(f[t.type]) < 0) throw new Error('Specified primitive type \"' + t.type + '\" is not supported.');\n\t      return this.setNextParser(\"array\", e, t);\n\t    }, u.prototype.choice = function (e, t) {\n\t      if (1 == arguments.length && \"object\" == _typeof(e) && (t = e, e = null), !t.tag) throw new Error(\"Tag option of array is not defined.\");\n\t      if (!t.choices) throw new Error(\"Choices option of array is not defined.\");\n\t      return Object.keys(t.choices).forEach(function (r) {\n\t        if (!t.choices[r]) throw new Error(\"Choice Case \" + r + \" of \" + e + \" is not valid.\");\n\t        if (\"string\" == typeof t.choices[r] && !a[t.choices[r]] && Object.keys(s).indexOf(f[t.choices[r]]) < 0) throw new Error('Specified primitive type \"' + t.choices[r] + '\" is not supported.');\n\t      }, this), this.setNextParser(\"choice\", e, t);\n\t    }, u.prototype.nest = function (e, t) {\n\t      if (1 == arguments.length && \"object\" == _typeof(e) && (t = e, e = null), !t.type) throw new Error(\"Type option of nest is not defined.\");\n\t      if (!(t.type instanceof u || a[t.type])) throw new Error(\"Type option of nest must be a Parser object.\");\n\t      if (!(t.type instanceof u || e)) throw new Error(\"options.type must be a object if variable name is omitted.\");\n\t      return this.setNextParser(\"nest\", e, t);\n\t    }, u.prototype.endianess = function (e) {\n\t      switch (e.toLowerCase()) {\n\t        case \"little\":\n\t          this.endian = \"le\";\n\t          break;\n\n\t        case \"big\":\n\t          this.endian = \"be\";\n\t          break;\n\n\t        default:\n\t          throw new Error(\"Invalid endianess: \" + e);\n\t      }\n\n\t      return this;\n\t    }, u.prototype.create = function (e) {\n\t      if (!(e instanceof Function)) throw new Error(\"Constructor must be a Function object.\");\n\t      return this.constructorFn = e, this;\n\t    }, u.prototype.getCode = function () {\n\t      var e = new i();\n\t      return e.pushCode(\"if (!Buffer.isBuffer(buffer)) {\"), e.generateError('\"argument buffer is not a Buffer object\"'), e.pushCode(\"}\"), this.alias ? this.addAliasedCode(e) : this.addRawCode(e), this.alias ? e.pushCode(\"return {0}(0)\", \"___parser_\" + this.alias) : e.pushCode(\"return { offset: offset, result: vars };\"), e.code;\n\t    }, u.prototype.addRawCode = function (e) {\n\t      e.pushCode(\"var offset = 0;\"), this.constructorFn ? e.pushCode(\"var vars = new constructorFn();\") : e.pushCode(\"var vars = {};\"), this.generate(e), this.resolveReferences(e), e.pushCode(\"return { offset: offset, result: vars };\");\n\t    }, u.prototype.addAliasedCode = function (e) {\n\t      return e.pushCode(\"function {0}(offset) {\", \"___parser_\" + this.alias), this.constructorFn ? e.pushCode(\"var vars = new constructorFn();\") : e.pushCode(\"var vars = {};\"), this.generate(e), e.markResolved(this.alias), this.resolveReferences(e), e.pushCode(\"return { offset: offset, result: vars };\"), e.pushCode(\"}\"), e;\n\t    }, u.prototype.resolveReferences = function (e) {\n\t      var t = e.getUnresolvedReferences();\n\t      e.markRequested(t), t.forEach(function (t) {\n\t        a[t].addAliasedCode(e);\n\t      });\n\t    }, u.prototype.compile = function () {\n\t      var e = \"(function(buffer, constructorFn, Long) { \" + this.getCode() + \" })\";\n\t      this.compiled = n.runInThisContext(e);\n\t    }, u.prototype.sizeOf = function () {\n\t      var e = NaN;\n\t      if (Object.keys(s).indexOf(this.type) >= 0) e = s[this.type];else if (\"String\" === this.type && \"number\" == typeof this.options.length) e = this.options.length;else if (\"Buffer\" === this.type && \"number\" == typeof this.options.length) e = this.options.length;else if (\"Array\" === this.type && \"number\" == typeof this.options.length) {\n\t        var t = NaN;\n\t        \"string\" == typeof this.options.type ? t = s[f[this.options.type]] : this.options.type instanceof u && (t = this.options.type.sizeOf()), e = this.options.length * t;\n\t      } else \"Skip\" === this.type ? e = this.options.length : \"Nest\" === this.type ? e = this.options.type.sizeOf() : this.type || (e = 0);\n\t      return this.next && (e += this.next.sizeOf()), e;\n\t    }, u.prototype.parse = function (e) {\n\t      return this.compiled || this.compile(), this.compiled(e, this.constructorFn, o);\n\t    }, u.prototype.setNextParser = function (e, t, r) {\n\t      var n = new u();\n\t      return n.type = f[e], n.varName = t, n.options = r || n.options, n.endian = this.endian, this.head ? this.head.next = n : this.next = n, this.head = n, this;\n\t    }, u.prototype.generate = function (e) {\n\t      this.type && (this[\"generate\" + this.type](e), this.generateAssert(e));\n\t      var t = e.generateVariable(this.varName);\n\t      return this.options.formatter && this.generateFormatter(e, t, this.options.formatter), this.generateNext(e);\n\t    }, u.prototype.generateAssert = function (e) {\n\t      if (this.options.assert) {\n\t        var t = e.generateVariable(this.varName);\n\n\t        switch (_typeof(this.options.assert)) {\n\t          case \"function\":\n\t            e.pushCode(\"if (!({0}).call(vars, {1})) {\", this.options.assert, t);\n\t            break;\n\n\t          case \"number\":\n\t            e.pushCode(\"if ({0} !== {1}) {\", this.options.assert, t);\n\t            break;\n\n\t          case \"string\":\n\t            e.pushCode('if (\"{0}\" !== {1}) {', this.options.assert, t);\n\t            break;\n\n\t          default:\n\t            throw new Error(\"Assert option supports only strings, numbers and assert functions.\");\n\t        }\n\n\t        e.generateError('\"Assert error: {0} is \" + {0}', t), e.pushCode(\"}\");\n\t      }\n\t    }, u.prototype.generateNext = function (e) {\n\t      return this.next && (e = this.next.generate(e)), e;\n\t    }, Object.keys(s).forEach(function (e) {\n\t      u.prototype[\"generate\" + e] = function (t) {\n\t        t.pushCode(\"{0} = buffer.read{1}(offset);\", t.generateVariable(this.varName), e), t.pushCode(\"offset += {0};\", s[e]);\n\t      };\n\t    }), u.prototype.generateBit = function (e) {\n\t      var t = JSON.parse(JSON.stringify(this));\n\n\t      if (t.varName = e.generateVariable(t.varName), e.bitFields.push(t), !this.next || this.next && [\"Bit\", \"Nest\"].indexOf(this.next.type) < 0) {\n\t        var r = 0;\n\t        e.bitFields.forEach(function (e) {\n\t          r += e.options.length;\n\t        });\n\t        var n = e.generateTmpVariable();\n\t        if (r <= 8) e.pushCode(\"var {0} = buffer.readUInt8(offset);\", n), r = 8;else if (r <= 16) e.pushCode(\"var {0} = buffer.readUInt16BE(offset);\", n), r = 16;else if (r <= 24) {\n\t          var i = e.generateTmpVariable(),\n\t              o = e.generateTmpVariable();\n\t          e.pushCode(\"var {0} = buffer.readUInt16BE(offset);\", i), e.pushCode(\"var {0} = buffer.readUInt8(offset + 2);\", o), e.pushCode(\"var {2} = ({0} << 8) | {1};\", i, o, n), r = 24;\n\t        } else {\n\t          if (!(r <= 32)) throw new Error(\"Currently, bit field sequence longer than 4-bytes is not supported.\");\n\t          e.pushCode(\"var {0} = buffer.readUInt32BE(offset);\", n), r = 32;\n\t        }\n\t        e.pushCode(\"offset += {0};\", r / 8);\n\t        var s = 0,\n\t            a = \"be\" === this.endian;\n\t        e.bitFields.forEach(function (t) {\n\t          e.pushCode(\"{0} = {1} >> {2} & {3};\", t.varName, n, a ? r - s - t.options.length : s, (1 << t.options.length) - 1), s += t.options.length;\n\t        }), e.bitFields = [];\n\t      }\n\t    }, u.prototype.generateSkip = function (e) {\n\t      var t = e.generateOption(this.options.length);\n\t      e.pushCode(\"offset += {0};\", t);\n\t    }, u.prototype.generateString = function (e) {\n\t      var t = e.generateVariable(this.varName),\n\t          r = e.generateTmpVariable();\n\t      this.options.length && this.options.zeroTerminated ? (e.pushCode(\"var {0} = offset;\", r), e.pushCode(\"while(buffer.readUInt8(offset++) !== 0 && offset - {0}  < {1});\", r, this.options.length), e.pushCode(\"{0} = buffer.toString('{1}', {2}, offset - {2} < {3} ? offset - 1 : offset);\", t, this.options.encoding, r, this.options.length)) : this.options.length ? (e.pushCode(\"{0} = buffer.toString('{1}', offset, offset + {2});\", t, this.options.encoding, e.generateOption(this.options.length)), e.pushCode(\"offset += {0};\", e.generateOption(this.options.length))) : this.options.zeroTerminated ? (e.pushCode(\"var {0} = offset;\", r), e.pushCode(\"while(buffer.readUInt8(offset++) !== 0);\"), e.pushCode(\"{0} = buffer.toString('{1}', {2}, offset - 1);\", t, this.options.encoding, r)) : this.options.greedy && (e.pushCode(\"var {0} = offset;\", r), e.pushCode(\"while(buffer.length > offset++);\"), e.pushCode(\"{0} = buffer.toString('{1}', {2}, offset);\", t, this.options.encoding, r)), this.options.stripNull && e.pushCode(\"{0} = {0}.replace(/\\\\x00+$/g, '')\", t);\n\t    }, u.prototype.generateBuffer = function (e) {\n\t      \"eof\" === this.options.readUntil ? e.pushCode(\"{0} = buffer.slice(offset);\", e.generateVariable(this.varName)) : (e.pushCode(\"{0} = buffer.slice(offset, offset + {1});\", e.generateVariable(this.varName), e.generateOption(this.options.length)), e.pushCode(\"offset += {0};\", e.generateOption(this.options.length))), this.options.clone && e.pushCode(\"{0} = Buffer.from({0});\", e.generateVariable(this.varName));\n\t    }, u.prototype.generateArray = function (e) {\n\t      var t = e.generateOption(this.options.length),\n\t          r = e.generateOption(this.options.lengthInBytes),\n\t          n = this.options.type,\n\t          i = e.generateTmpVariable(),\n\t          o = e.generateVariable(this.varName),\n\t          h = e.generateTmpVariable(),\n\t          c = this.options.key,\n\t          l = \"string\" == typeof c;\n\t      if (l ? e.pushCode(\"{0} = {};\", o) : e.pushCode(\"{0} = [];\", o), \"function\" == typeof this.options.readUntil ? e.pushCode(\"do {\") : \"eof\" === this.options.readUntil ? e.pushCode(\"for (var {0} = 0; offset < buffer.length; {0}++) {\", i) : void 0 !== r ? e.pushCode(\"for (var {0} = offset; offset - {0} < {1}; ) {\", i, r) : e.pushCode(\"for (var {0} = 0; {0} < {1}; {0}++) {\", i, t), \"string\" == typeof n) {\n\t        if (a[n]) {\n\t          var d = e.generateTmpVariable();\n\t          e.pushCode(\"var {0} = {1}(offset);\", d, \"___parser_\" + n), e.pushCode(\"var {0} = {1}.result; offset = {1}.offset;\", h, d), n !== this.alias && e.addReference(n);\n\t        } else e.pushCode(\"var {0} = buffer.read{1}(offset);\", h, f[n]), e.pushCode(\"offset += {0};\", s[f[n]]);\n\t      } else n instanceof u && (e.pushCode(\"var {0} = {};\", h), e.pushScope(h), n.generate(e), e.popScope());\n\t      l ? e.pushCode(\"{0}[{2}.{1}] = {2};\", o, c, h) : e.pushCode(\"{0}.push({1});\", o, h), e.pushCode(\"}\"), \"function\" == typeof this.options.readUntil && e.pushCode(\" while (!({0}).call(this, {1}, buffer.slice(offset)));\", this.options.readUntil, h);\n\t    }, u.prototype.generateChoiceCase = function (e, t, r) {\n\t      if (\"string\" == typeof r) {\n\t        if (a[r]) {\n\t          var n = e.generateTmpVariable();\n\t          e.pushCode(\"var {0} = {1}(offset);\", n, \"___parser_\" + r), e.pushCode(\"{0} = {1}.result; offset = {1}.offset;\", e.generateVariable(this.varName), n), r !== this.alias && e.addReference(r);\n\t        } else e.pushCode(\"{0} = buffer.read{1}(offset);\", e.generateVariable(this.varName), f[r]), e.pushCode(\"offset += {0};\", s[f[r]]);\n\t      } else r instanceof u && (e.pushPath(t), r.generate(e), e.popPath(t));\n\t    }, u.prototype.generateChoice = function (e) {\n\t      var t = e.generateOption(this.options.tag);\n\t      this.varName && e.pushCode(\"{0} = {};\", e.generateVariable(this.varName)), e.pushCode(\"switch({0}) {\", t), Object.keys(this.options.choices).forEach(function (t) {\n\t        var r = this.options.choices[t];\n\t        isNaN(parseInt(t, 10)) ? e.pushCode(\"case '{0}':\", t) : e.pushCode(\"case {0}:\", t), this.generateChoiceCase(e, this.varName, r), e.pushCode(\"break;\");\n\t      }, this), e.pushCode(\"default:\"), this.options.defaultChoice ? this.generateChoiceCase(e, this.varName, this.options.defaultChoice) : e.generateError('\"Met undefined tag value \" + {0} + \" at choice\"', t), e.pushCode(\"}\");\n\t    }, u.prototype.generateNest = function (e) {\n\t      var t = e.generateVariable(this.varName);\n\t      if (this.options.type instanceof u) this.varName && e.pushCode(\"{0} = {};\", t), e.pushPath(this.varName), this.options.type.generate(e), e.popPath(this.varName);else if (a[this.options.type]) {\n\t        var r = e.generateTmpVariable();\n\t        e.pushCode(\"var {0} = {1}(offset);\", r, \"___parser_\" + this.options.type), e.pushCode(\"{0} = {1}.result; offset = {1}.offset;\", t, r), this.options.type !== this.alias && e.addReference(this.options.type);\n\t      }\n\t    }, u.prototype.generateFormatter = function (e, t, r) {\n\t      \"function\" == typeof r && e.pushCode(\"{0} = ({1}).call(this, {0});\", t, r);\n\t    }, u.prototype.isInteger = function () {\n\t      return !!this.type.match(/U?Int[8|16|32][BE|LE]?|Bit\\d+/);\n\t    }, u.prototype.itf8 = function (e, t) {\n\t      return this.setNextParser(\"itf8\", e, t);\n\t    }, u.prototype.generateItf8 = function (e) {\n\t      var t = e.generateVariable(this.varName),\n\t          r = e.generateTmpVariable();\n\t      e.pushCode(\"\\n    var \".concat(r, \" = buffer[offset];\\n    if (\").concat(r, \" < 0x80) {\\n      \").concat(t, \" = \").concat(r, \";\\n      offset += 1;\\n    } else if (\").concat(r, \" < 0xc0) {\\n      \").concat(t, \" = ((\").concat(r, \"<<8) | buffer[offset+1]) & 0x3fff;\\n      offset += 2;\\n    } else if (\").concat(r, \" < 0xe0) {\\n      \").concat(t, \" = ((\").concat(r, \"<<16) | (buffer[offset+1]<< 8) |  buffer[offset+2]) & 0x1fffff;\\n      offset += 3;\\n    } else if (\").concat(r, \" < 0xf0) {\\n      \").concat(t, \" = ((\").concat(r, \"<<24) | (buffer[offset+1]<<16) | (buffer[offset+2]<<8) | buffer[offset+3]) & 0x0fffffff;\\n      offset += 4\\n    } else {\\n      \").concat(t, \" = ((\").concat(r, \" & 0x0f)<<28) | (buffer[offset+1]<<20) | (buffer[offset+2]<<12) | (buffer[offset+3]<<4) | (buffer[offset+4] & 0x0f);\\n      // x=((0xff & 0x0f)<<28) | (0xff<<20) | (0xff<<12) | (0xff<<4) | (0x0f & 0x0f);\\n      // TODO *val_p = uv < 0x80000000UL ? uv : -((int32_t) (0xffffffffUL - uv)) - 1;\\n      offset += 5\\n    }\\n  \"));\n\t    }, u.prototype.ltf8 = function (e, t) {\n\t      return this.setNextParser(\"ltf8\", e, t);\n\t    }, u.prototype.generateLtf8 = function (e) {\n\t      var t = e.generateVariable(this.varName),\n\t          r = e.generateTmpVariable();\n\t      e.pushCode(\"\\n  var \".concat(r, \" = buffer[offset];\\n  if (\").concat(r, \" < 0x80) {\\n    \").concat(t, \" = \").concat(r, \";\\n    offset += 1;\\n  } else if (\").concat(r, \" < 0xc0) {\\n    \").concat(t, \" = ((buffer[offset]<<8) | buffer[offset+1]) & 0x3fff;\\n    offset += 2;\\n  } else if (\").concat(r, \" < 0xe0) {\\n    \").concat(t, \" = ((buffer[offset]<<16) | (buffer[offset+1]<<8) | buffer[offset+2]) & 0x1fffff;\\n    \").concat(t, \" = (((\").concat(r, \" & 63) << 16) | buffer.readUInt16LE(offset + 1));\\n    offset += 3;\\n  } else if (\").concat(r, \" < 0xf0) {\\n    \").concat(t, \" = ((buffer[offset]<<24) | (buffer[offset+1]<<16) | (buffer[offset+2]<<8) | buffer[offset+3]) & 0x0fffffff;\\n    offset += 4;\\n  } else if (\").concat(r, \" < 0xf8) {\\n    \").concat(t, \" = (((buffer[offset] & 15) * Math.pow(2,32))) +\\n      (buffer[offset+1]<<24) | (buffer[offset+2]<<16 | buffer[offset+3]<<8 | buffer[offset+4])\\n    // TODO *val_p = uv < 0x80000000UL ? uv : -((int32_t) (0xffffffffUL - uv)) - 1;\\n    offset += 5;\\n  } else if (\").concat(r, \" < 0xfc) {\\n    \").concat(t, \" = ((((buffer[offset] & 7) << 8) | buffer[offset+1] )) * Math.pow(2,32) +\\n      (buffer[offset+2]<<24) | (buffer[offset+3]<<16 | buffer[offset+4]<<8 | buffer[offset+5])\\n    offset += 6;\\n  } else if (\").concat(r, \" < 0xfe) {\\n    \").concat(t, \" = ((((buffer[offset] & 3) << 16) | buffer[offset+1]<<8 | buffer[offset+2])) * Math.pow(2,32) +\\n      (buffer[offset+3]<<24) | (buffer[offset+4]<<16 | buffer[offset+5]<<8 | buffer[offset+6])\\n    offset += 7;\\n  } else if (\").concat(r, \" < 0xff) {\\n    \").concat(t, \" = Long.fromBytesBE(buffer.slice(offset+1,offset+8));\\n    if (\").concat(t, \".greaterThan(Number.MAX_SAFE_INTEGER) || \").concat(t, \".lessThan(Number.MIN_SAFE_INTEGER))\\n      throw new Error('integer overflow')\\n    \").concat(t, \" = \").concat(t, \".toNumber()\\n    offset += 8;\\n  } else {\\n    \").concat(t, \" = Long.fromBytesBE(buffer.slice(offset+1,offset+9));\\n    if (\").concat(t, \".greaterThan(Number.MAX_SAFE_INTEGER) || \").concat(t, \".lessThan(Number.MIN_SAFE_INTEGER))\\n      throw new Error('integer overflow')\\n    \").concat(t, \" = \").concat(t, \".toNumber()\\n    offset += 9;\\n  }\\n  \"));\n\t    }, t.Parser = u;\n\t  }).call(this, r(1).Buffer);\n\t}, function (module, exports, __webpack_require__) {\n\t  var indexOf = __webpack_require__(69),\n\t      Object_keys = function Object_keys(e) {\n\t    if (Object.keys) return Object.keys(e);\n\t    var t = [];\n\n\t    for (var r in e) {\n\t      t.push(r);\n\t    }\n\n\t    return t;\n\t  },\n\t      forEach = function forEach(e, t) {\n\t    if (e.forEach) return e.forEach(t);\n\n\t    for (var r = 0; r < e.length; r++) {\n\t      t(e[r], r, e);\n\t    }\n\t  },\n\t      defineProp = function () {\n\t    try {\n\t      return Object.defineProperty({}, \"_\", {}), function (e, t, r) {\n\t        Object.defineProperty(e, t, {\n\t          writable: !0,\n\t          enumerable: !1,\n\t          configurable: !0,\n\t          value: r\n\t        });\n\t      };\n\t    } catch (e) {\n\t      return function (e, t, r) {\n\t        e[t] = r;\n\t      };\n\t    }\n\t  }(),\n\t      globals = [\"Array\", \"Boolean\", \"Date\", \"Error\", \"EvalError\", \"Function\", \"Infinity\", \"JSON\", \"Math\", \"NaN\", \"Number\", \"Object\", \"RangeError\", \"ReferenceError\", \"RegExp\", \"String\", \"SyntaxError\", \"TypeError\", \"URIError\", \"decodeURI\", \"decodeURIComponent\", \"encodeURI\", \"encodeURIComponent\", \"escape\", \"eval2\", \"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"undefined\", \"unescape\"];\n\n\t  function Context() {}\n\n\t  Context.prototype = {};\n\n\t  var Script = exports.Script = function (e) {\n\t    if (!(this instanceof Script)) return new Script(e);\n\t    this.code = e;\n\t  };\n\n\t  Script.prototype.runInContext = function (e) {\n\t    if (!(e instanceof Context)) throw new TypeError(\"needs a 'context' argument.\");\n\t    var t = document.createElement(\"iframe\");\n\t    t.style || (t.style = {}), t.style.display = \"none\", document.body.appendChild(t);\n\t    var r = t.contentWindow,\n\t        n = r.eval2,\n\t        i = r.execScript;\n\t    !n && i && (i.call(r, \"null\"), n = r.eval2), forEach(Object_keys(e), function (t) {\n\t      r[t] = e[t];\n\t    }), forEach(globals, function (t) {\n\t      e[t] && (r[t] = e[t]);\n\t    });\n\t    var o = Object_keys(r),\n\t        s = n.call(r, this.code);\n\t    return forEach(Object_keys(r), function (t) {\n\t      (t in e || -1 === indexOf(o, t)) && (e[t] = r[t]);\n\t    }), forEach(globals, function (t) {\n\t      t in e || defineProp(e, t, r[t]);\n\t    }), document.body.removeChild(t), s;\n\t  }, Script.prototype.runInThisContext = function () {\n\t    return eval2(this.code);\n\t  }, Script.prototype.runInNewContext = function (e) {\n\t    var t = Script.createContext(e),\n\t        r = this.runInContext(t);\n\t    return forEach(Object_keys(t), function (r) {\n\t      e[r] = t[r];\n\t    }), r;\n\t  }, forEach(Object_keys(Script.prototype), function (e) {\n\t    exports[e] = Script[e] = function (t) {\n\t      var r = Script(t);\n\t      return r[e].apply(r, [].slice.call(arguments, 1));\n\t    };\n\t  }), exports.createScript = function (e) {\n\t    return exports.Script(e);\n\t  }, exports.createContext = Script.createContext = function (e) {\n\t    var t = new Context();\n\t    return \"object\" == _typeof(e) && forEach(Object_keys(e), function (r) {\n\t      t[r] = e[r];\n\t    }), t;\n\t  };\n\t}, function (e, t) {\n\t  var r = [].indexOf;\n\n\t  e.exports = function (e, t) {\n\t    if (r) return e.indexOf(t);\n\n\t    for (var n = 0; n < e.length; ++n) {\n\t      if (e[n] === t) return n;\n\t    }\n\n\t    return -1;\n\t  };\n\t}, function (e, t) {\n\t  var r = function r() {\n\t    this.code = \"\", this.scopes = [[\"vars\"]], this.isAsync = !1, this.bitFields = [], this.tmpVariableCount = 0, this.references = {};\n\t  };\n\n\t  r.prototype.generateVariable = function (e) {\n\t    var t = [];\n\n\t    for (Array.prototype.push.apply(t, this.scopes[this.scopes.length - 1]); /^\\$parent\\./.test(e);) {\n\t      t.pop(), e = e.replace(/^\\$parent\\./, \"\");\n\t    }\n\n\t    return e && t.push(e), t.join(\".\");\n\t  }, r.prototype.generateOption = function (e) {\n\t    switch (_typeof(e)) {\n\t      case \"number\":\n\t        return e.toString();\n\n\t      case \"string\":\n\t        return this.generateVariable(e);\n\n\t      case \"function\":\n\t        return \"(\" + e + \").call(\" + this.generateVariable() + \", vars)\";\n\t    }\n\t  }, r.prototype.generateError = function () {\n\t    var e = Array.prototype.slice.call(arguments),\n\t        t = r.interpolate.apply(this, e);\n\t    this.isAsync ? this.pushCode(\"return process.nextTick(function() { callback(new Error(\" + t + \"), vars); });\") : this.pushCode(\"throw new Error(\" + t + \");\");\n\t  }, r.prototype.generateTmpVariable = function () {\n\t    return \"$tmp\" + this.tmpVariableCount++;\n\t  }, r.prototype.pushCode = function () {\n\t    var e = Array.prototype.slice.call(arguments);\n\t    this.code += r.interpolate.apply(this, e) + \"\\n\";\n\t  }, r.prototype.pushPath = function (e) {\n\t    e && this.scopes[this.scopes.length - 1].push(e);\n\t  }, r.prototype.popPath = function (e) {\n\t    e && this.scopes[this.scopes.length - 1].pop();\n\t  }, r.prototype.pushScope = function (e) {\n\t    this.scopes.push([e]);\n\t  }, r.prototype.popScope = function () {\n\t    this.scopes.pop();\n\t  }, r.prototype.addReference = function (e) {\n\t    this.references[e] || (this.references[e] = {\n\t      resolved: !1,\n\t      requested: !1\n\t    });\n\t  }, r.prototype.markResolved = function (e) {\n\t    this.references[e].resolved = !0;\n\t  }, r.prototype.markRequested = function (e) {\n\t    e.forEach(function (e) {\n\t      this.references[e].requested = !0;\n\t    }.bind(this));\n\t  }, r.prototype.getUnresolvedReferences = function () {\n\t    var e = this.references;\n\t    return Object.keys(this.references).filter(function (t) {\n\t      return !e[t].resolved && !e[t].requested;\n\t    });\n\t  }, r.interpolate = function (e) {\n\t    var t = e.match(/{\\d+}/g),\n\t        r = Array.prototype.slice.call(arguments, 1);\n\t    return t && t.forEach(function (t) {\n\t      var n = parseInt(t.substr(1, t.length - 2), 10);\n\t      e = e.replace(t, r[n].toString());\n\t    }), e;\n\t  }, t.Context = r;\n\t}, function (e, t, r) {\n\t  (function (t) {\n\t    var _r16 = r(0),\n\t        n = _r16.CramMalformedError,\n\t        _r17 = r(8),\n\t        i = _r17.itf8Size,\n\t        o = _r17.parseItem,\n\t        s = _r17.tinyMemoize,\n\t        a = r(75),\n\t        h = r(78);\n\n\t    var f = /*#__PURE__*/function () {\n\t      function f(e, t) {\n\t        _classCallCheck(this, f);\n\n\t        this.file = e, this.filePosition = t;\n\t      }\n\n\t      _createClass(f, [{\n\t        key: \"getHeader\",\n\t        value: function getHeader() {\n\t          return this._readContainerHeader(this.filePosition);\n\t        }\n\t      }, {\n\t        key: \"getCompressionHeaderBlock\",\n\t        value: function () {\n\t          var _getCompressionHeaderBlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n\t            var e, t, r;\n\t            return regeneratorRuntime.wrap(function _callee10$(_context13) {\n\t              while (1) {\n\t                switch (_context13.prev = _context13.next) {\n\t                  case 0:\n\t                    _context13.next = 2;\n\t                    return this.getHeader();\n\n\t                  case 2:\n\t                    if (_context13.sent.numRecords) {\n\t                      _context13.next = 4;\n\t                      break;\n\t                    }\n\n\t                    return _context13.abrupt(\"return\", null);\n\n\t                  case 4:\n\t                    _context13.next = 6;\n\t                    return this.file.getSectionParsers();\n\n\t                  case 6:\n\t                    e = _context13.sent;\n\t                    _context13.next = 9;\n\t                    return this.getFirstBlock();\n\n\t                  case 9:\n\t                    t = _context13.sent;\n\n\t                    if (!(\"COMPRESSION_HEADER\" !== t.contentType)) {\n\t                      _context13.next = 12;\n\t                      break;\n\t                    }\n\n\t                    throw new n(\"invalid content type \".concat(t.contentType, \" in what is supposed to be the compression header block\"));\n\n\t                  case 12:\n\t                    r = o(t.content, e.cramCompressionHeader.parser, 0, t.contentPosition);\n\t                    return _context13.abrupt(\"return\", (t.content = r, t));\n\n\t                  case 14:\n\t                  case \"end\":\n\t                    return _context13.stop();\n\t                }\n\t              }\n\t            }, _callee10, this);\n\t          }));\n\n\t          function getCompressionHeaderBlock() {\n\t            return _getCompressionHeaderBlock.apply(this, arguments);\n\t          }\n\n\t          return getCompressionHeaderBlock;\n\t        }()\n\t      }, {\n\t        key: \"getFirstBlock\",\n\t        value: function () {\n\t          var _getFirstBlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n\t            var e;\n\t            return regeneratorRuntime.wrap(function _callee11$(_context14) {\n\t              while (1) {\n\t                switch (_context14.prev = _context14.next) {\n\t                  case 0:\n\t                    _context14.next = 2;\n\t                    return this.getHeader();\n\n\t                  case 2:\n\t                    e = _context14.sent;\n\t                    return _context14.abrupt(\"return\", this.file.readBlock(e._endPosition));\n\n\t                  case 4:\n\t                  case \"end\":\n\t                    return _context14.stop();\n\t                }\n\t              }\n\t            }, _callee11, this);\n\t          }));\n\n\t          function getFirstBlock() {\n\t            return _getFirstBlock.apply(this, arguments);\n\t          }\n\n\t          return getFirstBlock;\n\t        }()\n\t      }, {\n\t        key: \"getCompressionScheme\",\n\t        value: function () {\n\t          var _getCompressionScheme = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n\t            var e;\n\t            return regeneratorRuntime.wrap(function _callee12$(_context15) {\n\t              while (1) {\n\t                switch (_context15.prev = _context15.next) {\n\t                  case 0:\n\t                    _context15.next = 2;\n\t                    return this.getCompressionHeaderBlock();\n\n\t                  case 2:\n\t                    e = _context15.sent;\n\n\t                    if (!e) {\n\t                      _context15.next = 5;\n\t                      break;\n\t                    }\n\n\t                    return _context15.abrupt(\"return\", new h(e.content));\n\n\t                  case 5:\n\t                  case \"end\":\n\t                    return _context15.stop();\n\t                }\n\t              }\n\t            }, _callee12, this);\n\t          }));\n\n\t          function getCompressionScheme() {\n\t            return _getCompressionScheme.apply(this, arguments);\n\t          }\n\n\t          return getCompressionScheme;\n\t        }()\n\t      }, {\n\t        key: \"getSlice\",\n\t        value: function getSlice(e, t) {\n\t          return new a(this, e, t);\n\t        }\n\t      }, {\n\t        key: \"_readContainerHeader\",\n\t        value: function () {\n\t          var _readContainerHeader2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(e) {\n\t            var r, n, s, _ref9, a, h, f, u, c, l;\n\n\t            return regeneratorRuntime.wrap(function _callee13$(_context16) {\n\t              while (1) {\n\t                switch (_context16.prev = _context16.next) {\n\t                  case 0:\n\t                    _context16.next = 2;\n\t                    return this.file.getSectionParsers();\n\n\t                  case 2:\n\t                    r = _context16.sent;\n\t                    n = r.cramContainerHeader1;\n\t                    s = r.cramContainerHeader2;\n\t                    _context16.next = 7;\n\t                    return this.file.stat();\n\n\t                  case 7:\n\t                    _ref9 = _context16.sent;\n\t                    a = _ref9.size;\n\n\t                    if (!(e >= a)) {\n\t                      _context16.next = 11;\n\t                      break;\n\t                    }\n\n\t                    return _context16.abrupt(\"return\");\n\n\t                  case 11:\n\t                    h = t.allocUnsafe(n.maxLength);\n\t                    _context16.next = 14;\n\t                    return this.file.read(h, 0, n.maxLength, e);\n\n\t                  case 14:\n\t                    f = o(h, n.parser), u = i(f.numLandmarks);\n\n\t                    if (!(e + f.length >= a)) {\n\t                      _context16.next = 17;\n\t                      break;\n\t                    }\n\n\t                    return _context16.abrupt(\"return\", void console.warn(\"\".concat(this.file, \": container header at \").concat(e, \" indicates that the container has length \").concat(f.length, \", which extends beyond the length of the file. Skipping this container.\")));\n\n\t                  case 17:\n\t                    c = t.allocUnsafe(s.maxLength(f.numLandmarks));\n\t                    _context16.next = 20;\n\t                    return this.file.read(c, 0, s.maxLength(f.numLandmarks), e + f._size - u);\n\n\t                  case 20:\n\t                    l = o(c, s.parser);\n\t                    _context16.t0 = this.file.validateChecksums && void 0 !== l.crc32;\n\n\t                    if (!_context16.t0) {\n\t                      _context16.next = 25;\n\t                      break;\n\t                    }\n\n\t                    _context16.next = 25;\n\t                    return this.file.checkCrc32(e, f._size + l._size - u - 4, l.crc32, \"container header beginning at position \".concat(e));\n\n\t                  case 25:\n\t                    return _context16.abrupt(\"return\", Object.assign(f, l, {\n\t                      _size: f._size + l._size - u,\n\t                      _endPosition: f._size + l._size - u + e\n\t                    }));\n\n\t                  case 26:\n\t                  case \"end\":\n\t                    return _context16.stop();\n\t                }\n\t              }\n\t            }, _callee13, this);\n\t          }));\n\n\t          function _readContainerHeader(_x10) {\n\t            return _readContainerHeader2.apply(this, arguments);\n\t          }\n\n\t          return _readContainerHeader;\n\t        }()\n\t      }]);\n\n\t      return f;\n\t    }();\n\n\t    \"getHeader getCompressionHeaderBlock getCompressionScheme\".split(\" \").forEach(function (e) {\n\t      return s(f, e);\n\t    }), e.exports = f;\n\t  }).call(this, r(1).Buffer);\n\t}, function (e, t, r) {\n\t  var n, i, o, s, _a;\n\n\t  n = r(73), i = r(32).utf8, o = r(74), s = r(32).bin, (_a = function a(e, t) {\n\t    e.constructor == String ? e = t && \"binary\" === t.encoding ? s.stringToBytes(e) : i.stringToBytes(e) : o(e) ? e = Array.prototype.slice.call(e, 0) : Array.isArray(e) || (e = e.toString());\n\n\t    for (var r = n.bytesToWords(e), h = 8 * e.length, f = 1732584193, u = -271733879, c = -1732584194, l = 271733878, d = 0; d < r.length; d++) {\n\t      r[d] = 16711935 & (r[d] << 8 | r[d] >>> 24) | 4278255360 & (r[d] << 24 | r[d] >>> 8);\n\t    }\n\n\t    r[h >>> 5] |= 128 << h % 32, r[14 + (h + 64 >>> 9 << 4)] = h;\n\t    var p = _a._ff,\n\t        g = _a._gg,\n\t        m = _a._hh,\n\t        _ = _a._ii;\n\n\t    for (d = 0; d < r.length; d += 16) {\n\t      var y = f,\n\t          b = u,\n\t          w = c,\n\t          v = l;\n\t      f = p(f, u, c, l, r[d + 0], 7, -680876936), l = p(l, f, u, c, r[d + 1], 12, -389564586), c = p(c, l, f, u, r[d + 2], 17, 606105819), u = p(u, c, l, f, r[d + 3], 22, -1044525330), f = p(f, u, c, l, r[d + 4], 7, -176418897), l = p(l, f, u, c, r[d + 5], 12, 1200080426), c = p(c, l, f, u, r[d + 6], 17, -1473231341), u = p(u, c, l, f, r[d + 7], 22, -45705983), f = p(f, u, c, l, r[d + 8], 7, 1770035416), l = p(l, f, u, c, r[d + 9], 12, -1958414417), c = p(c, l, f, u, r[d + 10], 17, -42063), u = p(u, c, l, f, r[d + 11], 22, -1990404162), f = p(f, u, c, l, r[d + 12], 7, 1804603682), l = p(l, f, u, c, r[d + 13], 12, -40341101), c = p(c, l, f, u, r[d + 14], 17, -1502002290), f = g(f, u = p(u, c, l, f, r[d + 15], 22, 1236535329), c, l, r[d + 1], 5, -165796510), l = g(l, f, u, c, r[d + 6], 9, -1069501632), c = g(c, l, f, u, r[d + 11], 14, 643717713), u = g(u, c, l, f, r[d + 0], 20, -373897302), f = g(f, u, c, l, r[d + 5], 5, -701558691), l = g(l, f, u, c, r[d + 10], 9, 38016083), c = g(c, l, f, u, r[d + 15], 14, -660478335), u = g(u, c, l, f, r[d + 4], 20, -405537848), f = g(f, u, c, l, r[d + 9], 5, 568446438), l = g(l, f, u, c, r[d + 14], 9, -1019803690), c = g(c, l, f, u, r[d + 3], 14, -187363961), u = g(u, c, l, f, r[d + 8], 20, 1163531501), f = g(f, u, c, l, r[d + 13], 5, -1444681467), l = g(l, f, u, c, r[d + 2], 9, -51403784), c = g(c, l, f, u, r[d + 7], 14, 1735328473), f = m(f, u = g(u, c, l, f, r[d + 12], 20, -1926607734), c, l, r[d + 5], 4, -378558), l = m(l, f, u, c, r[d + 8], 11, -2022574463), c = m(c, l, f, u, r[d + 11], 16, 1839030562), u = m(u, c, l, f, r[d + 14], 23, -35309556), f = m(f, u, c, l, r[d + 1], 4, -1530992060), l = m(l, f, u, c, r[d + 4], 11, 1272893353), c = m(c, l, f, u, r[d + 7], 16, -155497632), u = m(u, c, l, f, r[d + 10], 23, -1094730640), f = m(f, u, c, l, r[d + 13], 4, 681279174), l = m(l, f, u, c, r[d + 0], 11, -358537222), c = m(c, l, f, u, r[d + 3], 16, -722521979), u = m(u, c, l, f, r[d + 6], 23, 76029189), f = m(f, u, c, l, r[d + 9], 4, -640364487), l = m(l, f, u, c, r[d + 12], 11, -421815835), c = m(c, l, f, u, r[d + 15], 16, 530742520), f = _(f, u = m(u, c, l, f, r[d + 2], 23, -995338651), c, l, r[d + 0], 6, -198630844), l = _(l, f, u, c, r[d + 7], 10, 1126891415), c = _(c, l, f, u, r[d + 14], 15, -1416354905), u = _(u, c, l, f, r[d + 5], 21, -57434055), f = _(f, u, c, l, r[d + 12], 6, 1700485571), l = _(l, f, u, c, r[d + 3], 10, -1894986606), c = _(c, l, f, u, r[d + 10], 15, -1051523), u = _(u, c, l, f, r[d + 1], 21, -2054922799), f = _(f, u, c, l, r[d + 8], 6, 1873313359), l = _(l, f, u, c, r[d + 15], 10, -30611744), c = _(c, l, f, u, r[d + 6], 15, -1560198380), u = _(u, c, l, f, r[d + 13], 21, 1309151649), f = _(f, u, c, l, r[d + 4], 6, -145523070), l = _(l, f, u, c, r[d + 11], 10, -1120210379), c = _(c, l, f, u, r[d + 2], 15, 718787259), u = _(u, c, l, f, r[d + 9], 21, -343485551), f = f + y >>> 0, u = u + b >>> 0, c = c + w >>> 0, l = l + v >>> 0;\n\t    }\n\n\t    return n.endian([f, u, c, l]);\n\t  })._ff = function (e, t, r, n, i, o, s) {\n\t    var a = e + (t & r | ~t & n) + (i >>> 0) + s;\n\t    return (a << o | a >>> 32 - o) + t;\n\t  }, _a._gg = function (e, t, r, n, i, o, s) {\n\t    var a = e + (t & n | r & ~n) + (i >>> 0) + s;\n\t    return (a << o | a >>> 32 - o) + t;\n\t  }, _a._hh = function (e, t, r, n, i, o, s) {\n\t    var a = e + (t ^ r ^ n) + (i >>> 0) + s;\n\t    return (a << o | a >>> 32 - o) + t;\n\t  }, _a._ii = function (e, t, r, n, i, o, s) {\n\t    var a = e + (r ^ (t | ~n)) + (i >>> 0) + s;\n\t    return (a << o | a >>> 32 - o) + t;\n\t  }, _a._blocksize = 16, _a._digestsize = 16, e.exports = function (e, t) {\n\t    if (null == e) throw new Error(\"Illegal argument \" + e);\n\t    var r = n.wordsToBytes(_a(e, t));\n\t    return t && t.asBytes ? r : t && t.asString ? s.bytesToString(r) : n.bytesToHex(r);\n\t  };\n\t}, function (e, t) {\n\t  var r, n;\n\t  r = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", n = {\n\t    rotl: function rotl(e, t) {\n\t      return e << t | e >>> 32 - t;\n\t    },\n\t    rotr: function rotr(e, t) {\n\t      return e << 32 - t | e >>> t;\n\t    },\n\t    endian: function endian(e) {\n\t      if (e.constructor == Number) return 16711935 & n.rotl(e, 8) | 4278255360 & n.rotl(e, 24);\n\n\t      for (var t = 0; t < e.length; t++) {\n\t        e[t] = n.endian(e[t]);\n\t      }\n\n\t      return e;\n\t    },\n\t    randomBytes: function randomBytes(e) {\n\t      for (var t = []; e > 0; e--) {\n\t        t.push(Math.floor(256 * Math.random()));\n\t      }\n\n\t      return t;\n\t    },\n\t    bytesToWords: function bytesToWords(e) {\n\t      for (var t = [], r = 0, n = 0; r < e.length; r++, n += 8) {\n\t        t[n >>> 5] |= e[r] << 24 - n % 32;\n\t      }\n\n\t      return t;\n\t    },\n\t    wordsToBytes: function wordsToBytes(e) {\n\t      for (var t = [], r = 0; r < 32 * e.length; r += 8) {\n\t        t.push(e[r >>> 5] >>> 24 - r % 32 & 255);\n\t      }\n\n\t      return t;\n\t    },\n\t    bytesToHex: function bytesToHex(e) {\n\t      for (var t = [], r = 0; r < e.length; r++) {\n\t        t.push((e[r] >>> 4).toString(16)), t.push((15 & e[r]).toString(16));\n\t      }\n\n\t      return t.join(\"\");\n\t    },\n\t    hexToBytes: function hexToBytes(e) {\n\t      for (var t = [], r = 0; r < e.length; r += 2) {\n\t        t.push(parseInt(e.substr(r, 2), 16));\n\t      }\n\n\t      return t;\n\t    },\n\t    bytesToBase64: function bytesToBase64(e) {\n\t      for (var t = [], n = 0; n < e.length; n += 3) {\n\t        for (var i = e[n] << 16 | e[n + 1] << 8 | e[n + 2], o = 0; o < 4; o++) {\n\t          8 * n + 6 * o <= 8 * e.length ? t.push(r.charAt(i >>> 6 * (3 - o) & 63)) : t.push(\"=\");\n\t        }\n\t      }\n\n\t      return t.join(\"\");\n\t    },\n\t    base64ToBytes: function base64ToBytes(e) {\n\t      e = e.replace(/[^A-Z0-9+\\/]/gi, \"\");\n\n\t      for (var t = [], n = 0, i = 0; n < e.length; i = ++n % 4) {\n\t        0 != i && t.push((r.indexOf(e.charAt(n - 1)) & Math.pow(2, -2 * i + 8) - 1) << 2 * i | r.indexOf(e.charAt(n)) >>> 6 - 2 * i);\n\t      }\n\n\t      return t;\n\t    }\n\t  }, e.exports = n;\n\t}, function (e, t) {\n\t  function r(e) {\n\t    return !!e.constructor && \"function\" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e);\n\t  }\n\t  /*!\n\t   * Determine if an object is a Buffer\n\t   *\n\t   * @author   Feross Aboukhadijeh <https://feross.org>\n\t   * @license  MIT\n\t   */\n\n\n\t  e.exports = function (e) {\n\t    return null != e && (r(e) || function (e) {\n\t      return \"function\" == typeof e.readFloatLE && \"function\" == typeof e.slice && r(e.slice(0, 0));\n\t    }(e) || !!e._isBuffer);\n\t  };\n\t}, function (e, t, r) {\n\t  var _r18 = r(0),\n\t      n = _r18.CramMalformedError,\n\t      i = _r18.CramBufferOverrunError,\n\t      o = _r18.CramArgumentError,\n\t      _r19 = r(8),\n\t      s = _r19.parseItem,\n\t      a = _r19.tinyMemoize,\n\t      h = _r19.sequenceMD5,\n\t      f = r(17),\n\t      u = r(76);\n\n\t  function c(e, t, r, i) {\n\t    if (!i) throw new n(\"could not resolve intra-slice mate pairs, file seems truncated or malformed\");\n\t    var o = !!(i.mate || void 0 !== i.mateRecordNumber && i.mateRecordNumber !== t);\n\t    r.readName || (r.readName = String(r.uniqueId), i.readName = r.readName), r.mate = {\n\t      sequenceId: i.sequenceId,\n\t      alignmentStart: i.alignmentStart,\n\t      uniqueId: i.uniqueId\n\t    }, i.readName && (r.mate.readName = i.readName), i.mate || void 0 !== i.mateRecordNumber || (i.mate = {\n\t      sequenceId: r.sequenceId,\n\t      alignmentStart: r.alignmentStart,\n\t      uniqueId: r.uniqueId\n\t    }, r.readName && (i.mate.readName = r.readName)), r.flags |= f.BAM_FPAIRED, i.flags & f.BAM_FUNMAP && (r.flags |= f.BAM_FMUNMAP), r.flags & f.BAM_FUNMAP && (i.flags |= f.BAM_FMUNMAP), i.flags & f.BAM_FREVERSE && (r.flags |= f.BAM_FMREVERSE), r.flags & f.BAM_FREVERSE && (i.flags |= f.BAM_FMREVERSE), void 0 === r.templateLength && (o ? function (e, t, r) {\n\t      var i = function t(r) {\n\t        var i = [r];\n\n\t        if (r.mateRecordNumber >= 0) {\n\t          var _o = e[r.mateRecordNumber];\n\t          if (!_o) throw new n(\"intra-slice mate record not found, this file seems malformed\");\n\t          i.push.apply(i, _toConsumableArray(t(_o)));\n\t        }\n\n\t        return i;\n\t      }(r),\n\t          o = i.map(function (e) {\n\t        return e.alignmentStart;\n\t      }),\n\t          s = i.map(function (e) {\n\t        return e.alignmentStart + e.readLength - 1;\n\t      }),\n\t          a = Math.max.apply(Math, _toConsumableArray(s)) - Math.min.apply(Math, _toConsumableArray(o)) + 1;\n\n\t      a >= 0 && i.forEach(function (e) {\n\t        if (void 0 !== e.templateLength) throw new n(\"mate pair group has some members that have template lengths already, this file seems malformed\");\n\t        e.templateLength = a;\n\t      });\n\t    }(e, 0, r) : function (e, t) {\n\t      var r = Math.min(e.alignmentStart, t.alignmentStart),\n\t          n = Math.max(e.alignmentStart + e.readLength - 1, t.alignmentStart + t.readLength - 1) - r + 1;\n\t      e.templateLength = n, t.templateLength = n;\n\t    }(r, i)), delete r.mateRecordNumber;\n\t  }\n\n\t  var l = /*#__PURE__*/function () {\n\t    function l(e, t) {\n\t      _classCallCheck(this, l);\n\n\t      this.container = e, this.file = e.file, this.containerPosition = t;\n\t    }\n\n\t    _createClass(l, [{\n\t      key: \"getHeader\",\n\t      value: function () {\n\t        var _getHeader = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n\t          var e, t, r;\n\t          return regeneratorRuntime.wrap(function _callee14$(_context17) {\n\t            while (1) {\n\t              switch (_context17.prev = _context17.next) {\n\t                case 0:\n\t                  _context17.next = 2;\n\t                  return this.file.getSectionParsers();\n\n\t                case 2:\n\t                  e = _context17.sent;\n\t                  _context17.next = 5;\n\t                  return this.container.getHeader();\n\n\t                case 5:\n\t                  t = _context17.sent;\n\t                  _context17.next = 8;\n\t                  return this.file.readBlock(t._endPosition + this.containerPosition);\n\n\t                case 8:\n\t                  r = _context17.sent;\n\n\t                  if (!(\"MAPPED_SLICE_HEADER\" === r.contentType)) {\n\t                    _context17.next = 13;\n\t                    break;\n\t                  }\n\n\t                  r.content = s(r.content, e.cramMappedSliceHeader.parser, 0, t._endPosition);\n\t                  _context17.next = 16;\n\t                  break;\n\n\t                case 13:\n\t                  if (!(\"UNMAPPED_SLICE_HEADER\" !== r.contentType)) {\n\t                    _context17.next = 15;\n\t                    break;\n\t                  }\n\n\t                  throw new n(\"error reading slice header block, invalid content type \".concat(r._contentType));\n\n\t                case 15:\n\t                  r.content = s(r.content, e.cramUnmappedSliceHeader.parser, 0, t._endPosition);\n\n\t                case 16:\n\t                  return _context17.abrupt(\"return\", r);\n\n\t                case 17:\n\t                case \"end\":\n\t                  return _context17.stop();\n\t              }\n\t            }\n\t          }, _callee14, this);\n\t        }));\n\n\t        function getHeader() {\n\t          return _getHeader.apply(this, arguments);\n\t        }\n\n\t        return getHeader;\n\t      }()\n\t    }, {\n\t      key: \"getBlocks\",\n\t      value: function () {\n\t        var _getBlocks = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n\t          var e, t, r, _e16;\n\n\t          return regeneratorRuntime.wrap(function _callee15$(_context18) {\n\t            while (1) {\n\t              switch (_context18.prev = _context18.next) {\n\t                case 0:\n\t                  _context18.next = 2;\n\t                  return this.getHeader();\n\n\t                case 2:\n\t                  e = _context18.sent;\n\t                  t = e._endPosition;\n\t                  r = new Array(e.content.numBlocks);\n\t                  _e16 = 0;\n\n\t                case 6:\n\t                  if (!(_e16 < r.length)) {\n\t                    _context18.next = 14;\n\t                    break;\n\t                  }\n\n\t                  _context18.next = 9;\n\t                  return this.file.readBlock(t);\n\n\t                case 9:\n\t                  r[_e16] = _context18.sent;\n\t                  t = r[_e16]._endPosition;\n\n\t                case 11:\n\t                  _e16 += 1;\n\t                  _context18.next = 6;\n\t                  break;\n\n\t                case 14:\n\t                  return _context18.abrupt(\"return\", r);\n\n\t                case 15:\n\t                case \"end\":\n\t                  return _context18.stop();\n\t              }\n\t            }\n\t          }, _callee15, this);\n\t        }));\n\n\t        function getBlocks() {\n\t          return _getBlocks.apply(this, arguments);\n\t        }\n\n\t        return getBlocks;\n\t      }()\n\t    }, {\n\t      key: \"getCoreDataBlock\",\n\t      value: function () {\n\t        var _getCoreDataBlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n\t          return regeneratorRuntime.wrap(function _callee16$(_context19) {\n\t            while (1) {\n\t              switch (_context19.prev = _context19.next) {\n\t                case 0:\n\t                  _context19.next = 2;\n\t                  return this.getBlocks();\n\n\t                case 2:\n\t                  return _context19.abrupt(\"return\", _context19.sent[0]);\n\n\t                case 3:\n\t                case \"end\":\n\t                  return _context19.stop();\n\t              }\n\t            }\n\t          }, _callee16, this);\n\t        }));\n\n\t        function getCoreDataBlock() {\n\t          return _getCoreDataBlock.apply(this, arguments);\n\t        }\n\n\t        return getCoreDataBlock;\n\t      }()\n\t    }, {\n\t      key: \"_getBlocksContentIdIndex\",\n\t      value: function () {\n\t        var _getBlocksContentIdIndex2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n\t          var e, t;\n\t          return regeneratorRuntime.wrap(function _callee17$(_context20) {\n\t            while (1) {\n\t              switch (_context20.prev = _context20.next) {\n\t                case 0:\n\t                  _context20.next = 2;\n\t                  return this.getBlocks();\n\n\t                case 2:\n\t                  e = _context20.sent;\n\t                  t = {};\n\t                  return _context20.abrupt(\"return\", (e.forEach(function (e) {\n\t                    \"EXTERNAL_DATA\" === e.contentType && (t[e.contentId] = e);\n\t                  }), t));\n\n\t                case 5:\n\t                case \"end\":\n\t                  return _context20.stop();\n\t              }\n\t            }\n\t          }, _callee17, this);\n\t        }));\n\n\t        function _getBlocksContentIdIndex() {\n\t          return _getBlocksContentIdIndex2.apply(this, arguments);\n\t        }\n\n\t        return _getBlocksContentIdIndex;\n\t      }()\n\t    }, {\n\t      key: \"getBlockByContentId\",\n\t      value: function () {\n\t        var _getBlockByContentId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(e) {\n\t          return regeneratorRuntime.wrap(function _callee18$(_context21) {\n\t            while (1) {\n\t              switch (_context21.prev = _context21.next) {\n\t                case 0:\n\t                  _context21.next = 2;\n\t                  return this._getBlocksContentIdIndex();\n\n\t                case 2:\n\t                  _context21.t0 = e;\n\t                  return _context21.abrupt(\"return\", _context21.sent[_context21.t0]);\n\n\t                case 4:\n\t                case \"end\":\n\t                  return _context21.stop();\n\t              }\n\t            }\n\t          }, _callee18, this);\n\t        }));\n\n\t        function getBlockByContentId(_x11) {\n\t          return _getBlockByContentId.apply(this, arguments);\n\t        }\n\n\t        return getBlockByContentId;\n\t      }()\n\t    }, {\n\t      key: \"getReferenceRegion\",\n\t      value: function () {\n\t        var _getReferenceRegion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n\t          var e, t, _t8, _t9;\n\n\t          return regeneratorRuntime.wrap(function _callee19$(_context22) {\n\t            while (1) {\n\t              switch (_context22.prev = _context22.next) {\n\t                case 0:\n\t                  _context22.next = 2;\n\t                  return this.getHeader();\n\n\t                case 2:\n\t                  e = _context22.sent.content;\n\n\t                  if (!(e.refSeqId < 0)) {\n\t                    _context22.next = 5;\n\t                    break;\n\t                  }\n\n\t                  return _context22.abrupt(\"return\");\n\n\t                case 5:\n\t                  _context22.next = 7;\n\t                  return this.container.getCompressionScheme();\n\n\t                case 7:\n\t                  t = _context22.sent;\n\n\t                  if (!(e.refBaseBlockId >= 0)) {\n\t                    _context22.next = 15;\n\t                    break;\n\t                  }\n\n\t                  _t8 = this.getBlockByContentId(e.refBaseBlockId);\n\n\t                  if (_t8) {\n\t                    _context22.next = 12;\n\t                    break;\n\t                  }\n\n\t                  throw new n(\"embedded reference specified, but reference block does not exist\");\n\n\t                case 12:\n\t                  if (!(e.span > _t8.uncompressedSize)) {\n\t                    _context22.next = 14;\n\t                    break;\n\t                  }\n\n\t                  throw new n(\"Embedded reference is too small\");\n\n\t                case 14:\n\t                  return _context22.abrupt(\"return\", {\n\t                    seq: _t8.data.toString(\"utf8\"),\n\t                    start: e.refSeqStart,\n\t                    end: e.refSeqStart + e.refSeqSpan - 1,\n\t                    span: e.refSeqSpan\n\t                  });\n\n\t                case 15:\n\t                  if (!(t.referenceRequired || this.file.fetchReferenceSequenceCallback)) {\n\t                    _context22.next = 24;\n\t                    break;\n\t                  }\n\n\t                  if (this.file.fetchReferenceSequenceCallback) {\n\t                    _context22.next = 18;\n\t                    break;\n\t                  }\n\n\t                  throw new Error(\"reference sequence not embedded, and seqFetch callback not provided, cannot fetch reference sequence\");\n\n\t                case 18:\n\t                  _context22.next = 20;\n\t                  return this.file.fetchReferenceSequenceCallback(e.refSeqId, e.refSeqStart, e.refSeqStart + e.refSeqSpan - 1);\n\n\t                case 20:\n\t                  _t9 = _context22.sent;\n\n\t                  if (!(_t9.length !== e.refSeqSpan)) {\n\t                    _context22.next = 23;\n\t                    break;\n\t                  }\n\n\t                  throw new o(\"seqFetch callback returned a reference sequence of the wrong length\");\n\n\t                case 23:\n\t                  return _context22.abrupt(\"return\", {\n\t                    seq: _t9,\n\t                    start: e.refSeqStart,\n\t                    end: e.refSeqStart + e.refSeqSpan - 1,\n\t                    span: e.refSeqSpan\n\t                  });\n\n\t                case 24:\n\t                case \"end\":\n\t                  return _context22.stop();\n\t              }\n\t            }\n\t          }, _callee19, this);\n\t        }));\n\n\t        function getReferenceRegion() {\n\t          return _getReferenceRegion.apply(this, arguments);\n\t        }\n\n\t        return getReferenceRegion;\n\t      }()\n\t    }, {\n\t      key: \"getAllRecords\",\n\t      value: function getAllRecords() {\n\t        return this.getRecords(function () {\n\t          return !0;\n\t        });\n\t      }\n\t    }, {\n\t      key: \"_fetchRecords\",\n\t      value: function () {\n\t        var _fetchRecords2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n\t          var _this = this;\n\n\t          var _ref10, e, t, r, o, _e17, _t10, _i, _o2, _s4, _a2, s, a, f, l, _n4, _e18, _t11;\n\n\t          return regeneratorRuntime.wrap(function _callee20$(_context23) {\n\t            while (1) {\n\t              switch (_context23.prev = _context23.next) {\n\t                case 0:\n\t                  _context23.next = 2;\n\t                  return this.file.getDefinition();\n\n\t                case 2:\n\t                  _ref10 = _context23.sent;\n\t                  e = _ref10.majorVersion;\n\t                  _context23.next = 6;\n\t                  return this.container.getCompressionScheme();\n\n\t                case 6:\n\t                  t = _context23.sent;\n\t                  _context23.next = 9;\n\t                  return this.getHeader();\n\n\t                case 9:\n\t                  r = _context23.sent;\n\t                  _context23.next = 12;\n\t                  return this._getBlocksContentIdIndex();\n\n\t                case 12:\n\t                  o = _context23.sent;\n\n\t                  if (!(e > 1 && this.file.options.checkSequenceMD5 && r.content.refSeqId >= 0 && \"0000000000000000\" !== r.content.md5.join(\"\"))) {\n\t                    _context23.next = 21;\n\t                    break;\n\t                  }\n\n\t                  _context23.next = 16;\n\t                  return this.getReferenceRegion();\n\n\t                case 16:\n\t                  _e17 = _context23.sent;\n\n\t                  if (!_e17) {\n\t                    _context23.next = 21;\n\t                    break;\n\t                  }\n\n\t                  _t10 = _e17.seq, _i = _e17.start, _o2 = _e17.end, _s4 = h(_t10), _a2 = r.content.md5.map(function (e) {\n\t                    return (e < 16 ? \"0\" : \"\") + e.toString(16);\n\t                  }).join(\"\");\n\n\t                  if (!(_s4 !== _a2)) {\n\t                    _context23.next = 21;\n\t                    break;\n\t                  }\n\n\t                  throw new n(\"MD5 checksum reference mismatch for ref \".concat(r.content.refSeqId, \" pos \").concat(_i, \"..\").concat(_o2, \". recorded MD5: \").concat(_a2, \", calculated MD5: \").concat(_s4));\n\n\t                case 21:\n\t                  _context23.next = 23;\n\t                  return this.getCoreDataBlock();\n\n\t                case 23:\n\t                  s = _context23.sent;\n\t                  a = {\n\t                    lastAlignmentStart: r.content.refSeqStart || 0,\n\t                    coreBlock: {\n\t                      bitPosition: 7,\n\t                      bytePosition: 0\n\t                    },\n\t                    externalBlocks: {\n\t                      getCursor: function getCursor(e) {\n\t                        return this[e] || (this[e] = {\n\t                          bitPosition: 7,\n\t                          bytePosition: 0\n\t                        }), this[e];\n\t                      }\n\t                    }\n\t                  };\n\n\t                  f = function f(e) {\n\t                    var r = t.getCodecForDataSeries(e);\n\t                    if (!r) throw new n(\"no codec defined for \".concat(e, \" data series\"));\n\t                    return r.decode(_this, s, o, a);\n\t                  };\n\n\t                  l = new Array(r.content.numRecords);\n\t                  _n4 = 0;\n\n\t                case 28:\n\t                  if (!(_n4 < l.length)) {\n\t                    _context23.next = 42;\n\t                    break;\n\t                  }\n\n\t                  _context23.prev = 29;\n\t                  l[_n4] = u(this, f, t, r, s, o, a, e, _n4), l[_n4].uniqueId = r.contentPosition + r.content.recordCounter + _n4 + 1;\n\t                  _context23.next = 39;\n\t                  break;\n\n\t                case 33:\n\t                  _context23.prev = 33;\n\t                  _context23.t0 = _context23[\"catch\"](29);\n\n\t                  if (!(_context23.t0 instanceof i)) {\n\t                    _context23.next = 38;\n\t                    break;\n\t                  }\n\n\t                  console.warn(\"read attempted beyond end of buffer, file seems truncated.\"), l = l.filter(function (e) {\n\t                    return !!e;\n\t                  });\n\t                  return _context23.abrupt(\"break\", 42);\n\n\t                case 38:\n\t                  throw _context23.t0;\n\n\t                case 39:\n\t                  _n4 += 1;\n\t                  _context23.next = 28;\n\t                  break;\n\n\t                case 42:\n\t                  for (_e18 = 0; _e18 < l.length; _e18 += 1) {\n\t                    _t11 = l[_e18].mateRecordNumber;\n\t                    _t11 >= 0 && c(l, _e18, l[_e18], l[_t11]);\n\t                  }\n\n\t                  return _context23.abrupt(\"return\", l);\n\n\t                case 44:\n\t                case \"end\":\n\t                  return _context23.stop();\n\t              }\n\t            }\n\t          }, _callee20, this, [[29, 33]]);\n\t        }));\n\n\t        function _fetchRecords() {\n\t          return _fetchRecords2.apply(this, arguments);\n\t        }\n\n\t        return _fetchRecords;\n\t      }()\n\t    }, {\n\t      key: \"getRecords\",\n\t      value: function () {\n\t        var _getRecords = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(e) {\n\t          var _this2 = this;\n\n\t          var t, r, n, _e19, _t12, _r20, _i2, _e20, _r21, _o3, _s5, _e21, _o4;\n\n\t          return regeneratorRuntime.wrap(function _callee22$(_context25) {\n\t            while (1) {\n\t              switch (_context25.prev = _context25.next) {\n\t                case 0:\n\t                  t = this.container.filePosition + this.containerPosition;\n\t                  r = this.file.featureCache.get(t);\n\t                  r || (r = this._fetchRecords(), this.file.featureCache.set(t, r));\n\t                  _context25.next = 5;\n\t                  return r;\n\n\t                case 5:\n\t                  _context25.t0 = e;\n\t                  n = _context25.sent.filter(_context25.t0);\n\n\t                  if (!(n.length && this.file.fetchReferenceSequenceCallback)) {\n\t                    _context25.next = 21;\n\t                    break;\n\t                  }\n\n\t                  _context25.next = 10;\n\t                  return this.getHeader();\n\n\t                case 10:\n\t                  _e19 = _context25.sent;\n\n\t                  if (!(_e19.content.refSeqId >= 0 || -2 === _e19.content.refSeqId)) {\n\t                    _context25.next = 21;\n\t                    break;\n\t                  }\n\n\t                  _t12 = _e19.content.refSeqId >= 0 ? _e19.content.refSeqId : void 0;\n\t                  _context25.next = 15;\n\t                  return this.container.getCompressionScheme();\n\n\t                case 15:\n\t                  _r20 = _context25.sent;\n\t                  _i2 = {};\n\n\t                  for (_e20 = 0; _e20 < n.length; _e20 += 1) {\n\t                    _r21 = void 0 !== _t12 ? _t12 : n[_e20].sequenceId;\n\t                    _o3 = _i2[_r21];\n\t                    _o3 || (_o3 = {\n\t                      id: _r21,\n\t                      start: n[_e20].alignmentStart,\n\t                      end: -1 / 0\n\t                    }, _i2[_r21] = _o3);\n\t                    _s5 = n[_e20].alignmentStart + (n[_e20].lengthOnRef || n[_e20].readLength) - 1;\n\t                    _s5 > _o3.end && (_o3.end = _s5), n[_e20].alignmentStart < _o3.start && (_o3.start = n[_e20].alignmentStart);\n\t                  }\n\n\t                  _context25.next = 20;\n\t                  return Promise.all(Object.values(_i2).map( /*#__PURE__*/function () {\n\t                    var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(e) {\n\t                      return regeneratorRuntime.wrap(function _callee21$(_context24) {\n\t                        while (1) {\n\t                          switch (_context24.prev = _context24.next) {\n\t                            case 0:\n\t                              _context24.t0 = -1 !== e.id && e.start <= e.end;\n\n\t                              if (!_context24.t0) {\n\t                                _context24.next = 5;\n\t                                break;\n\t                              }\n\n\t                              _context24.next = 4;\n\t                              return _this2.file.fetchReferenceSequenceCallback(e.id, e.start, e.end);\n\n\t                            case 4:\n\t                              e.seq = _context24.sent;\n\n\t                            case 5:\n\t                            case \"end\":\n\t                              return _context24.stop();\n\t                          }\n\t                        }\n\t                      }, _callee21);\n\t                    }));\n\n\t                    return function (_x13) {\n\t                      return _ref11.apply(this, arguments);\n\t                    };\n\t                  }()));\n\n\t                case 20:\n\t                  for (_e21 = 0; _e21 < n.length; _e21 += 1) {\n\t                    _o4 = _i2[void 0 !== _t12 ? _t12 : n[_e21].sequenceId];\n\t                    _o4 && _o4.seq && n[_e21].addReferenceSequence(_o4, _r20);\n\t                  }\n\n\t                case 21:\n\t                  return _context25.abrupt(\"return\", n);\n\n\t                case 22:\n\t                case \"end\":\n\t                  return _context25.stop();\n\t              }\n\t            }\n\t          }, _callee22, this);\n\t        }));\n\n\t        function getRecords(_x12) {\n\t          return _getRecords.apply(this, arguments);\n\t        }\n\n\t        return getRecords;\n\t      }()\n\t    }]);\n\n\t    return l;\n\t  }();\n\n\t  \"getHeader getBlocks _getBlocksContentIdIndex\".split(\" \").forEach(function (e) {\n\t    return a(l, e);\n\t  }), e.exports = l;\n\t}, function (e, t, r) {\n\t  (function (t) {\n\t    var _r22 = r(0),\n\t        n = _r22.CramMalformedError,\n\t        i = _r22.CramUnimplementedError,\n\t        o = r(31),\n\t        s = r(77),\n\t        a = r(17);\n\n\t    function h(e) {\n\t      var t = e.indexOf(0);\n\t      return -1 === t ? e.toString(\"utf8\") : e.toString(\"utf8\", 0, t);\n\t    }\n\n\t    function f(e, r) {\n\t      if (r.readInt32LE || (r = t.from(r)), \"Z\" === e) return h(r);\n\t      if (\"A\" === e) return String.fromCharCode(r[0]);\n\n\t      if (\"I\" === e) {\n\t        var _e22 = o.fromBytesLE(r);\n\n\t        if (_e22.greaterThan(Number.MAX_SAFE_INTEGER) || _e22.lessThan(Number.MIN_SAFE_INTEGER)) throw new i(\"integer overflow\");\n\t        return _e22.toNumber();\n\t      }\n\n\t      if (\"i\" === e) return r.readInt32LE(0);\n\t      if (\"s\" === e) return r.readInt16LE(0);\n\t      if (\"S\" === e) return r.readUInt16LE(0);\n\t      if (\"c\" === e) return r.readInt8(0);\n\t      if (\"C\" === e) return r.readUInt8(0);\n\t      if (\"f\" === e) return r.readFloatLE(0);\n\n\t      if (\"H\" === e) {\n\t        var _e23 = h(r);\n\n\t        return Number.parseInt(_e23.replace(/^0x/, \"\"), 16);\n\t      }\n\n\t      if (\"B\" === e) return function (e) {\n\t        var t = String.fromCharCode(e[0]),\n\t            r = e.readInt32LE(1),\n\t            i = {\n\t          c: [\"readInt8\", 1],\n\t          C: [\"readUInt8\", 1],\n\t          s: [\"readInt16LE\", 2],\n\t          S: [\"readUInt16LE\", 2],\n\t          i: [\"readInt32LE\", 4],\n\t          I: [\"readUInt32LE\", 4],\n\t          f: [\"readFloatLE\", 4]\n\t        }[t];\n\t        if (!i) throw new n(\"invalid tag value array type '\".concat(t, \"'\"));\n\n\t        var _i3 = _slicedToArray(i, 2),\n\t            o = _i3[0],\n\t            s = _i3[1],\n\t            a = new Array(r);\n\n\t        var h = 5;\n\n\t        for (var _t13 = 0; _t13 < r; _t13 += 1) {\n\t          a[_t13] = e[o](h), h += s;\n\t        }\n\n\t        return a;\n\t      }(r);\n\t      throw new n(\"Unrecognized tag type \".concat(e));\n\t    }\n\n\t    function u(e) {\n\t      if (e instanceof t) return h(e);\n\n\t      if (e.length && e.indexOf) {\n\t        if (!e[e.length - 1]) {\n\t          var _t14 = e.indexOf(0);\n\n\t          return String.fromCharCode.apply(String, _toConsumableArray(e.slice(0, _t14)));\n\t        }\n\n\t        return String.fromCharCode.apply(String, _toConsumableArray(e));\n\t      }\n\n\t      return String(e);\n\t    }\n\n\t    e.exports = function (e, t, r, i, o, h, c, l, d) {\n\t      var p = new s();\n\n\t      if (p.flags = t(\"BF\"), p.cramFlags = t(\"CF\"), l > 1 && -2 === i.content.refSeqId ? p.sequenceId = t(\"RI\") : p.sequenceId = i.content.refSeqId, p.readLength = t(\"RL\"), p.alignmentStart = t(\"AP\"), r.APdelta && (p.alignmentStart += c.lastAlignmentStart), c.lastAlignmentStart = p.alignmentStart, p.readGroupId = t(\"RG\"), r.readNamesIncluded && (p.readName = u(t(\"RN\"))), p.isDetached()) {\n\t        var _e24 = {};\n\t        _e24.flags = t(\"MF\"), r.readNamesIncluded || (_e24.readName = u(t(\"RN\")), p.readName = _e24.readName), _e24.sequenceId = t(\"NS\"), _e24.alignmentStart = t(\"NP\"), (_e24.flags || _e24.sequenceId > -1) && (p.mate = _e24), p.templateSize = t(\"TS\"), _e24.flags & a.CRAM_M_UNMAP && (p.flags |= a.BAM_FMUNMAP), _e24.flags & a.CRAM_M_REVERSE && (p.flags |= a.BAM_FMREVERSE);\n\t      } else p.hasMateDownStream() && (p.mateRecordNumber = t(\"NF\") + d + 1);\n\n\t      var g = t(\"TL\");\n\t      if (g < 0) throw new n(\"invalid TL index\");\n\t      var m = r.getTagNames(g),\n\t          _ = m.length;\n\n\t      for (var _t15 = 0; _t15 < _; _t15 += 1) {\n\t        var _i4 = m[_t15],\n\t            _s6 = _i4.substr(0, 2),\n\t            _a3 = _i4.substr(2, 1),\n\t            _u = r.getCodecForTag(_i4);\n\n\t        if (!_u) throw new n(\"no codec defined for auxiliary tag \".concat(_i4));\n\n\t        var _l2 = _u.decode(e, o, h, c);\n\n\t        p.tags[_s6] = f(_a3, _l2);\n\t      }\n\n\t      if (p.isSegmentUnmapped()) {\n\t        if (p.isUnknownBases()) p.readBases = null, p.qualityScores = null;else {\n\t          var _e25 = new Array(p.readLength);\n\n\t          for (var _r23 = 0; _r23 < _e25.length; _r23 += 1) {\n\t            _e25[_r23] = t(\"BA\");\n\t          }\n\n\t          if (p.readBases = String.fromCharCode.apply(String, _e25), p.isPreservingQualityScores()) {\n\t            for (var _r24 = 0; _r24 < _e25.length; _r24 += 1) {\n\t              _e25[_r24] = t(\"QS\");\n\t            }\n\n\t            p.qualityScores = _e25;\n\t          }\n\t        }\n\t      } else {\n\t        var _e26 = t(\"FN\");\n\n\t        _e26 && (p.readFeatures = function (e, t, r, i, o) {\n\t          var s = 0,\n\t              a = e.alignmentStart - 1;\n\t          var h = new Array(t);\n\n\t          function f(_ref12) {\n\t            var _ref13 = _slicedToArray(_ref12, 2),\n\t                e = _ref13[0],\n\t                t = _ref13[1];\n\n\t            var n = r(t);\n\t            return \"character\" === e ? String.fromCharCode(n) : \"string\" === e ? n.toString(\"utf8\") : \"numArray\" === e ? n.toArray() : n;\n\t          }\n\n\t          for (var _e27 = 0; _e27 < t; _e27 += 1) {\n\t            var _t16 = String.fromCharCode(r(\"FC\")),\n\t                _i5 = r(\"FP\"),\n\t                _u2 = {\n\t              code: _t16\n\t            },\n\t                _c3 = {\n\t              B: [\"character\", \"BA\"],\n\t              S: [\"string\", o > 1 ? \"SC\" : \"IN\"],\n\t              X: [\"number\", \"BS\"],\n\t              D: [\"number\", \"DL\"],\n\t              I: [\"string\", \"IN\"],\n\t              i: [\"character\", \"BA\"],\n\t              b: [\"string\", \"BB\"],\n\t              q: [\"numArray\", \"QQ\"],\n\t              Q: [\"number\", \"QS\"],\n\t              H: [\"number\", \"HC\"],\n\t              P: [\"number\", \"PD\"],\n\t              N: [\"number\", \"RS\"]\n\t            }[_t16];\n\n\t            if (!_c3) throw new n(\"invalid read feature code \\\"\".concat(_t16, \"\\\"\"));\n\t            _u2.data = f(_c3);\n\t            var _l3 = {\n\t              B: [\"number\", \"QS\"]\n\t            }[_t16];\n\t            _l3 && (_u2.data = [_u2.data, f(_l3)]), s += _i5, _u2.pos = s, a += _i5, _u2.refPos = a, \"D\" === _t16 || \"N\" === _t16 ? a += _u2.data : \"H\" === _t16 ? a -= _u2.data : \"I\" === _t16 || \"S\" === _t16 ? a -= _u2.data.length : \"i\" === _t16 && (a -= 1), h[_e27] = _u2;\n\t          }\n\n\t          return h;\n\t        }(p, _e26, t, 0, l));\n\t        var _r25 = p.readLength;\n\n\t        if (p.readFeatures && p.readFeatures.forEach(function (_ref14) {\n\t          var e = _ref14.code,\n\t              t = _ref14.data;\n\t          \"D\" === e || \"N\" === e ? _r25 += t : \"I\" === e || \"S\" === e ? _r25 -= t.length : \"i\" === e && (_r25 -= 1);\n\t        }), Number.isNaN(_r25) && (console.warn(\"\".concat(p.readName || \"\".concat(p.sequenceId, \":\").concat(p.alignmentStart), \" record has invalid read features\")), _r25 = p.readLength), p.lengthOnRef = _r25, p.mappingQuality = t(\"MQ\"), p.isPreservingQualityScores()) {\n\t          var _e28 = new Array(p.readLength);\n\n\t          for (var _r26 = 0; _r26 < _e28.length; _r26 += 1) {\n\t            _e28[_r26] = t(\"QS\");\n\t          }\n\n\t          p.qualityScores = _e28;\n\t        }\n\t      }\n\t      return p;\n\t    };\n\t  }).call(this, r(1).Buffer);\n\t}, function (e, t, r) {\n\t  var n = r(17);\n\t  var i = {\n\t    a: 0,\n\t    A: 0,\n\t    c: 1,\n\t    C: 1,\n\t    g: 2,\n\t    G: 2,\n\t    t: 3,\n\t    T: 3,\n\t    n: 4,\n\t    N: 4\n\t  };\n\n\t  e.exports = /*#__PURE__*/function () {\n\t    function _class3() {\n\t      _classCallCheck(this, _class3);\n\n\t      this.tags = {};\n\t    }\n\n\t    _createClass(_class3, [{\n\t      key: \"isPaired\",\n\t      value: function isPaired() {\n\t        return !!(this.flags & n.BAM_FPAIRED);\n\t      }\n\t    }, {\n\t      key: \"isProperlyPaired\",\n\t      value: function isProperlyPaired() {\n\t        return !!(this.flags & n.BAM_FPROPER_PAIR);\n\t      }\n\t    }, {\n\t      key: \"isSegmentUnmapped\",\n\t      value: function isSegmentUnmapped() {\n\t        return !!(this.flags & n.BAM_FUNMAP);\n\t      }\n\t    }, {\n\t      key: \"isMateUnmapped\",\n\t      value: function isMateUnmapped() {\n\t        return !!(this.flags & n.BAM_FMUNMAP);\n\t      }\n\t    }, {\n\t      key: \"isReverseComplemented\",\n\t      value: function isReverseComplemented() {\n\t        return !!(this.flags & n.BAM_FREVERSE);\n\t      }\n\t    }, {\n\t      key: \"isMateReverseComplemented\",\n\t      value: function isMateReverseComplemented() {\n\t        return !!(this.flags & n.BAM_FMREVERSE);\n\t      }\n\t    }, {\n\t      key: \"isRead1\",\n\t      value: function isRead1() {\n\t        return !!(this.flags & n.BAM_FREAD1);\n\t      }\n\t    }, {\n\t      key: \"isRead2\",\n\t      value: function isRead2() {\n\t        return !!(this.flags & n.BAM_FREAD2);\n\t      }\n\t    }, {\n\t      key: \"isSecondary\",\n\t      value: function isSecondary() {\n\t        return !!(this.flags & n.BAM_FSECONDARY);\n\t      }\n\t    }, {\n\t      key: \"isFailedQc\",\n\t      value: function isFailedQc() {\n\t        return !!(this.flags & n.BAM_FQCFAIL);\n\t      }\n\t    }, {\n\t      key: \"isDuplicate\",\n\t      value: function isDuplicate() {\n\t        return !!(this.flags & n.BAM_FDUP);\n\t      }\n\t    }, {\n\t      key: \"isSupplementary\",\n\t      value: function isSupplementary() {\n\t        return !!(this.flags & n.BAM_FSUPPLEMENTARY);\n\t      }\n\t    }, {\n\t      key: \"isDetached\",\n\t      value: function isDetached() {\n\t        return !!(this.cramFlags & n.CRAM_FLAG_DETACHED);\n\t      }\n\t    }, {\n\t      key: \"hasMateDownStream\",\n\t      value: function hasMateDownStream() {\n\t        return !!(this.cramFlags & n.CRAM_FLAG_MATE_DOWNSTREAM);\n\t      }\n\t    }, {\n\t      key: \"isPreservingQualityScores\",\n\t      value: function isPreservingQualityScores() {\n\t        return !!(this.cramFlags & n.CRAM_FLAG_PRESERVE_QUAL_SCORES);\n\t      }\n\t    }, {\n\t      key: \"isUnknownBases\",\n\t      value: function isUnknownBases() {\n\t        return !!(this.cramFlags & n.CRAM_FLAG_NO_SEQ);\n\t      }\n\t    }, {\n\t      key: \"getReadBases\",\n\t      value: function getReadBases() {\n\t        return !this.readBases && this._refRegion && (this.readBases = function (e, t) {\n\t          if (!e.lengthOnRef && !e.readLength) return;\n\t          if (e.isUnknownBases()) return;\n\t          var r = e.alignmentStart - t.start;\n\t          if (!e.readFeatures) return t.seq.substr(r, e.lengthOnRef).toUpperCase();\n\t          var n = \"\",\n\t              i = r,\n\t              o = 0;\n\n\t          for (; n.length < e.readLength;) {\n\t            if (o < e.readFeatures.length && e.readFeatures[o].pos === n.length + 1) {\n\t              var _t17 = e.readFeatures[o];\n\t              o += 1, \"b\" === _t17.code ? (n += _t17.data, i += 1) : \"B\" === _t17.code ? (n += _t17.data[0], i += 1) : \"X\" === _t17.code ? (n += _t17.sub, i += 1) : \"I\" === _t17.code ? n += _t17.data : \"D\" === _t17.code ? i += _t17.data : \"i\" === _t17.code ? n += _t17.data : \"N\" === _t17.code ? i += _t17.data : \"S\" === _t17.code ? n += _t17.data : \"P\" === _t17.code || _t17.code;\n\t            } else if (o < e.readFeatures.length) {\n\t              var _r27 = t.seq.substr(i, e.readFeatures[o].pos - n.length - 1);\n\n\t              n += _r27, i += _r27.length;\n\t            } else {\n\t              var _r28 = t.seq.substr(i, e.readLength - n.length);\n\n\t              n += _r28, i += _r28.length;\n\t            }\n\t          }\n\n\t          return n.toUpperCase();\n\t        }(this, this._refRegion)), this.readBases;\n\t      }\n\t    }, {\n\t      key: \"getPairOrientation\",\n\t      value: function getPairOrientation() {\n\t        if (!this.isSegmentUnmapped() && this.isPaired() && !this.isMateUnmapped() && this.sequenceId === this.mate.sequenceId) {\n\t          var _e29 = this.isReverseComplemented() ? \"R\" : \"F\",\n\t              _t18 = this.isMateReverseComplemented() ? \"R\" : \"F\";\n\n\t          var _r29 = \" \",\n\t              _n5 = \" \";\n\t          this.isRead1() ? (_r29 = \"1\", _n5 = \"2\") : this.isRead2() && (_r29 = \"2\", _n5 = \"1\");\n\t          var _i6 = [];\n\t          var o = this.templateLength || this.templateSize;\n\t          return this.alignmentStart > this.mate.alignmentStart && o > 0 && (o = -o), o > 0 ? (_i6[0] = _e29, _i6[1] = _r29, _i6[2] = _t18, _i6[3] = _n5) : (_i6[2] = _e29, _i6[3] = _r29, _i6[0] = _t18, _i6[1] = _n5), _i6.join(\"\");\n\t        }\n\n\t        return null;\n\t      }\n\t    }, {\n\t      key: \"addReferenceSequence\",\n\t      value: function addReferenceSequence(e, t) {\n\t        this.readFeatures && this.readFeatures.forEach(function (r) {\n\t          \"X\" === r.code && function (e, t, r, n) {\n\t            if (!t) return;\n\t            var o = n.refPos - t.start,\n\t                s = t.seq.charAt(o);\n\t            s && (n.ref = s);\n\t            var a = i[s];\n\t            void 0 === a && (a = 4);\n\t            var h = r.substitutionMatrix[a][n.data];\n\t            h && (n.sub = h);\n\t          }(0, e, t, r);\n\t        }), !this.readBases && e.start <= this.alignmentStart && e.end >= this.alignmentStart + (this.lengthOnRef || this.readLength) - 1 && (this._refRegion = e);\n\t      }\n\t    }, {\n\t      key: \"toJSON\",\n\t      value: function toJSON() {\n\t        var _this3 = this;\n\n\t        var e = {};\n\t        return Object.keys(this).forEach(function (t) {\n\t          \"_\" !== t.charAt(0) && (e[t] = _this3[t]);\n\t        }), e.readBases = this.getReadBases(), e;\n\t      }\n\t    }]);\n\n\t    return _class3;\n\t  }();\n\t}, function (e, t, r) {\n\t  var _r30 = r(0),\n\t      n = _r30.CramMalformedError,\n\t      _r31 = r(79),\n\t      i = _r31.instantiateCodec,\n\t      o = {\n\t    BF: \"int\",\n\t    CF: \"int\",\n\t    RI: \"int\",\n\t    RL: \"int\",\n\t    AP: \"int\",\n\t    RG: \"int\",\n\t    MF: \"int\",\n\t    NS: \"int\",\n\t    NP: \"int\",\n\t    TS: \"int\",\n\t    NF: \"int\",\n\t    TC: \"byte\",\n\t    TN: \"int\",\n\t    FN: \"int\",\n\t    FC: \"byte\",\n\t    FP: \"int\",\n\t    BS: \"byte\",\n\t    IN: \"byteArray\",\n\t    SC: \"byteArray\",\n\t    DL: \"int\",\n\t    BA: \"byte\",\n\t    BB: \"byteArray\",\n\t    RS: \"int\",\n\t    PD: \"int\",\n\t    HC: \"int\",\n\t    MQ: \"int\",\n\t    RN: \"byteArray\",\n\t    QS: \"byte\",\n\t    QQ: \"byteArray\",\n\t    TL: \"int\",\n\t    TM: \"ignore\",\n\t    TV: \"ignore\"\n\t  };\n\n\t  e.exports = /*#__PURE__*/function () {\n\t    function _class4(e) {\n\t      _classCallCheck(this, _class4);\n\n\t      Object.assign(this, e), this.readNamesIncluded = e.preservation.RN, this.APdelta = e.preservation.AP, this.referenceRequired = !!e.preservation.RR, this.tagIdsDictionary = e.preservation.TD, this.substitutionMatrix = function (e) {\n\t        var t = new Array(5);\n\n\t        for (var _e30 = 0; _e30 < 5; _e30 += 1) {\n\t          t[_e30] = new Array(4);\n\t        }\n\n\t        return t[0][e[0] >> 6 & 3] = \"C\", t[0][e[0] >> 4 & 3] = \"G\", t[0][e[0] >> 2 & 3] = \"T\", t[0][e[0] >> 0 & 3] = \"N\", t[1][e[1] >> 6 & 3] = \"A\", t[1][e[1] >> 4 & 3] = \"G\", t[1][e[1] >> 2 & 3] = \"T\", t[1][e[1] >> 0 & 3] = \"N\", t[2][e[2] >> 6 & 3] = \"A\", t[2][e[2] >> 4 & 3] = \"C\", t[2][e[2] >> 2 & 3] = \"T\", t[2][e[2] >> 0 & 3] = \"N\", t[3][e[3] >> 6 & 3] = \"A\", t[3][e[3] >> 4 & 3] = \"C\", t[3][e[3] >> 2 & 3] = \"G\", t[3][e[3] >> 0 & 3] = \"N\", t[4][e[4] >> 6 & 3] = \"A\", t[4][e[4] >> 4 & 3] = \"C\", t[4][e[4] >> 2 & 3] = \"G\", t[4][e[4] >> 0 & 3] = \"T\", t;\n\t      }(e.preservation.SM), this.dataSeriesCodecCache = {}, this.tagCodecCache = {};\n\t    }\n\n\t    _createClass(_class4, [{\n\t      key: \"getCodecForTag\",\n\t      value: function getCodecForTag(e) {\n\t        if (!this.tagCodecCache[e]) {\n\t          var _t19 = this.tagEncoding[e];\n\t          _t19 && (this.tagCodecCache[e] = i(_t19, \"byteArray\"));\n\t        }\n\n\t        return this.tagCodecCache[e];\n\t      }\n\t    }, {\n\t      key: \"getTagNames\",\n\t      value: function getTagNames(e) {\n\t        return this.tagIdsDictionary[e];\n\t      }\n\t    }, {\n\t      key: \"getCodecForDataSeries\",\n\t      value: function getCodecForDataSeries(e) {\n\t        if (!this.dataSeriesCodecCache[e]) {\n\t          var _t20 = this.dataSeriesEncoding[e];\n\n\t          if (_t20) {\n\t            var _r32 = o[e];\n\t            if (!_r32) throw new n(\"data series name \".concat(e, \" not defined in file compression header\"));\n\t            this.dataSeriesCodecCache[e] = i(_t20, _r32);\n\t          }\n\t        }\n\n\t        return this.dataSeriesCodecCache[e];\n\t      }\n\t    }, {\n\t      key: \"toJSON\",\n\t      value: function toJSON() {\n\t        var _this4 = this;\n\n\t        var e = {};\n\t        return Object.keys(this).forEach(function (t) {\n\t          /Cache$/.test(t) || (e[t] = _this4[t]);\n\t        }), e;\n\t      }\n\t    }]);\n\n\t    return _class4;\n\t  }();\n\t}, function (e, t, r) {\n\t  var _r33 = r(0),\n\t      n = _r33.CramUnimplementedError,\n\t      i = r(80),\n\t      o = r(81),\n\t      s = r(82),\n\t      a = r(83),\n\t      h = r(84),\n\t      f = r(85),\n\t      u = {\n\t    1: o,\n\t    3: i,\n\t    4: a,\n\t    5: s,\n\t    6: h,\n\t    7: r(86),\n\t    9: f\n\t  };\n\n\t  function c(e) {\n\t    return u[e];\n\t  }\n\n\t  e.exports = {\n\t    getCodecClassWithId: c,\n\t    instantiateCodec: function e(t, r) {\n\t      var i = c(\"ignore\" === r ? 0 : t.codecId);\n\t      if (!i) throw new n(\"no codec implemented for codec ID \".concat(t.codecId));\n\t      return new i(t.parameters, r, e);\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\t  var _r34 = r(0),\n\t      n = _r34.CramMalformedError,\n\t      i = r(6);\n\n\t  e.exports = /*#__PURE__*/function (_i7) {\n\t    _inherits(_class5, _i7);\n\n\t    function _class5() {\n\t      var _this5;\n\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var t = arguments.length > 1 ? arguments[1] : undefined;\n\n\t      _classCallCheck(this, _class5);\n\n\t      if (_this5 = _possibleConstructorReturn(this, _getPrototypeOf(_class5).call(this, e, t)), ![\"byte\", \"int\"].includes(_this5.dataType)) throw new TypeError(\"\".concat(_this5.dataType, \" decoding not yet implemented by HUFFMAN_INT codec\"));\n\t      _this5.buildCodeBook(), _this5.buildCodes(), _this5.buildCaches(), 0 === _this5.sortedCodes[0].bitLength && (_this5._decode = _this5._decodeZeroLengthCode);\n\t      return _possibleConstructorReturn(_this5);\n\t    }\n\n\t    _createClass(_class5, [{\n\t      key: \"buildCodeBook\",\n\t      value: function buildCodeBook() {\n\t        var _this6 = this;\n\n\t        var e = new Array(this.parameters.numCodes);\n\n\t        for (var _t21 = 0; _t21 < this.parameters.numCodes; _t21 += 1) {\n\t          e[_t21] = {\n\t            symbol: this.parameters.symbols[_t21],\n\t            bitLength: this.parameters.bitLengths[_t21]\n\t          };\n\t        }\n\n\t        e = e.sort(function (e, t) {\n\t          return e.bitLength - t.bitLength || e.symbol - t.symbol;\n\t        }), this.codeBook = {}, e.forEach(function (e) {\n\t          _this6.codeBook[e.bitLength] || (_this6.codeBook[e.bitLength] = []), _this6.codeBook[e.bitLength].push(e.symbol);\n\t        });\n\t      }\n\t    }, {\n\t      key: \"buildCodes\",\n\t      value: function buildCodes() {\n\t        var _this7 = this;\n\n\t        this.codes = {};\n\t        var e = 0,\n\t            t = -1;\n\t        Object.entries(this.codeBook).forEach(function (_ref15) {\n\t          var _ref16 = _slicedToArray(_ref15, 2),\n\t              r = _ref16[0],\n\t              i = _ref16[1];\n\n\t          r = parseInt(r, 10), i.forEach(function (i) {\n\t            var o = {\n\t              bitLength: r,\n\t              value: i\n\t            };\n\t            t += 1;\n\t            var s = r - e;\n\t            if (t <<= s, o.bitCode = t, e += s, function (e) {\n\t              var t = e - (e >> 1) & 1431655765;\n\t              return 16843009 * ((t = (858993459 & t) + (t >> 2 & 858993459)) + (t >> 4) & 252645135) >> 24;\n\t            }(t) > r) throw new n(\"Symbol out of range\");\n\t            _this7.codes[i] = o;\n\t          });\n\t        });\n\t      }\n\t    }, {\n\t      key: \"buildCaches\",\n\t      value: function buildCaches() {\n\t        this.sortedCodes = Object.values(this.codes).sort(function (e, t) {\n\t          return e.bitLength - t.bitLength || e.bitCode - t.bitCode;\n\t        }), this.sortedByValue = Object.values(this.codes).sort(function (e, t) {\n\t          return e.value - t.value;\n\t        }), this.sortedValuesByBitCode = this.sortedCodes.map(function (e) {\n\t          return e.value;\n\t        }), this.sortedBitCodes = this.sortedCodes.map(function (e) {\n\t          return e.bitCode;\n\t        }), this.sortedBitLengthsByBitCode = this.sortedCodes.map(function (e) {\n\t          return e.bitLength;\n\t        });\n\t        var e = Math.max.apply(Math, _toConsumableArray(this.sortedBitCodes));\n\t        this.bitCodeToValue = new Array(e + 1).fill(-1);\n\n\t        for (var _e31 = 0; _e31 < this.sortedBitCodes.length; _e31 += 1) {\n\t          this.bitCodeToValue[this.sortedCodes[_e31].bitCode] = _e31;\n\t        }\n\t      }\n\t    }, {\n\t      key: \"decode\",\n\t      value: function decode(e, t, r, n) {\n\t        return this._decode(e, t, n.coreBlock);\n\t      }\n\t    }, {\n\t      key: \"_decodeZeroLengthCode\",\n\t      value: function _decodeZeroLengthCode() {\n\t        return this.sortedCodes[0].value;\n\t      }\n\t    }, {\n\t      key: \"_decode\",\n\t      value: function _decode(e, t, r) {\n\t        var i = t.content;\n\t        var o = 0,\n\t            s = 0;\n\n\t        for (var _e32 = 0; _e32 < this.sortedCodes.length; _e32 += 1) {\n\t          var _t22 = this.sortedCodes[_e32].bitLength;\n\t          s <<= _t22 - o, s |= this._getBits(i, r, _t22 - o), o = _t22;\n\t          {\n\t            var _r35 = this.bitCodeToValue[s];\n\t            if (_r35 > -1 && this.sortedBitLengthsByBitCode[_r35] === _t22) return this.sortedValuesByBitCode[_r35];\n\n\t            for (var _r36 = _e32; this.sortedCodes[_r36 + 1].bitLength === _t22 && _r36 < this.sortedCodes.length; _r36 += 1) {\n\t              _e32 += 1;\n\t            }\n\t          }\n\t        }\n\n\t        throw new n(\"Huffman symbol not found.\");\n\t      }\n\t    }]);\n\n\t    return _class5;\n\t  }(i);\n\t}, function (e, t, r) {\n\t  var _r37 = r(0),\n\t      n = _r37.CramUnimplementedError,\n\t      i = _r37.CramMalformedError,\n\t      o = _r37.CramBufferOverrunError,\n\t      s = r(6),\n\t      _r38 = r(8),\n\t      a = _r38.parseItf8;\n\n\t  e.exports = /*#__PURE__*/function (_s7) {\n\t    _inherits(_class6, _s7);\n\n\t    function _class6() {\n\t      var _this8;\n\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var t = arguments.length > 1 ? arguments[1] : undefined;\n\n\t      _classCallCheck(this, _class6);\n\n\t      if (_this8 = _possibleConstructorReturn(this, _getPrototypeOf(_class6).call(this, e, t)), \"int\" === _this8.dataType) _this8._decodeData = _this8._decodeInt;else {\n\t        if (\"byte\" !== _this8.dataType) throw new n(\"\".concat(_this8.dataType, \" decoding not yet implemented by EXTERNAL codec\"));\n\t        _this8._decodeData = _this8._decodeByte;\n\t      }\n\t      return _possibleConstructorReturn(_this8);\n\t    }\n\n\t    _createClass(_class6, [{\n\t      key: \"decode\",\n\t      value: function decode(e, t, r, n) {\n\t        var o = this.parameters.blockContentId,\n\t            s = r[o];\n\t        if (!s) throw new i(\"no block found with content ID \".concat(o));\n\t        var a = n.externalBlocks.getCursor(o);\n\t        return this._decodeData(s, a);\n\t      }\n\t    }, {\n\t      key: \"_decodeInt\",\n\t      value: function _decodeInt(e, t) {\n\t        var _a4 = a(e.content, t.bytePosition),\n\t            _a5 = _slicedToArray(_a4, 2),\n\t            r = _a5[0],\n\t            n = _a5[1];\n\n\t        return t.bytePosition += n, r;\n\t      }\n\t    }, {\n\t      key: \"_decodeByte\",\n\t      value: function _decodeByte(e, t) {\n\t        if (t.bytePosition >= e.content.length) throw new o(\"attempted to read beyond end of block. this file seems truncated.\");\n\t        var r = e.content[t.bytePosition];\n\t        return t.bytePosition += 1, r;\n\t      }\n\t    }]);\n\n\t    return _class6;\n\t  }(s);\n\t}, function (e, t, r) {\n\t  var _r39 = r(0),\n\t      n = _r39.CramBufferOverrunError,\n\t      i = _r39.CramMalformedError,\n\t      o = r(6);\n\n\t  e.exports = /*#__PURE__*/function (_o5) {\n\t    _inherits(_class7, _o5);\n\n\t    function _class7() {\n\t      var _this9;\n\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var t = arguments.length > 1 ? arguments[1] : undefined;\n\n\t      _classCallCheck(this, _class7);\n\n\t      if (_this9 = _possibleConstructorReturn(this, _getPrototypeOf(_class7).call(this, e, t)), \"byteArray\" !== t) throw new TypeError(\"byteArrayStop codec does not support data type \".concat(t));\n\t      _this9._decode = _this9._decodeByteArray;\n\t      return _possibleConstructorReturn(_this9);\n\t    }\n\n\t    _createClass(_class7, [{\n\t      key: \"decode\",\n\t      value: function decode(e, t, r, n) {\n\t        var o = this.parameters.blockContentId,\n\t            s = r[o];\n\t        if (!s) throw new i(\"no block found with content ID \".concat(o));\n\t        var a = n.externalBlocks.getCursor(o);\n\t        return this._decode(s, a);\n\t      }\n\t    }, {\n\t      key: \"_decodeByteArray\",\n\t      value: function _decodeByteArray(e, t) {\n\t        var r = e.content,\n\t            i = this.parameters.stopByte,\n\t            o = t.bytePosition;\n\t        var s = t.bytePosition;\n\n\t        for (; r[s] !== i && s < r.length;) {\n\t          if (s === r.length) throw new n(\"byteArrayStop reading beyond length of data buffer?\");\n\t          s += 1;\n\t        }\n\n\t        return t.bytePosition = s + 1, r.slice(o, s);\n\t      }\n\t    }]);\n\n\t    return _class7;\n\t  }(o);\n\t}, function (e, t, r) {\n\t  var _r40 = r(8),\n\t      n = _r40.tinyMemoize,\n\t      i = r(6);\n\n\t  var o = /*#__PURE__*/function (_i8) {\n\t    _inherits(o, _i8);\n\n\t    function o() {\n\t      var _this10;\n\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var t = arguments.length > 1 ? arguments[1] : undefined;\n\t      var r = arguments.length > 2 ? arguments[2] : undefined;\n\n\t      _classCallCheck(this, o);\n\n\t      if (_this10 = _possibleConstructorReturn(this, _getPrototypeOf(o).call(this, e, t)), _this10.instantiateCodec = r, \"byteArray\" !== t) throw new TypeError(\"byteArrayLength does not support data type \".concat(t));\n\t      return _possibleConstructorReturn(_this10);\n\t    }\n\n\t    _createClass(o, [{\n\t      key: \"decode\",\n\t      value: function decode(e, t, r, n) {\n\t        var i = this._getLengthCodec().decode(e, t, r, n),\n\t            o = this._getDataCodec(),\n\t            s = new Array(i);\n\n\t        for (var a = 0; a < i; a += 1) {\n\t          s[a] = o.decode(e, t, r, n);\n\t        }\n\n\t        return s;\n\t      }\n\t    }, {\n\t      key: \"_getLengthCodec\",\n\t      value: function _getLengthCodec() {\n\t        var e = this.parameters.lengthsEncoding;\n\t        return this.instantiateCodec(e, \"int\");\n\t      }\n\t    }, {\n\t      key: \"_getDataCodec\",\n\t      value: function _getDataCodec() {\n\t        var e = this.parameters.valuesEncoding;\n\t        return this.instantiateCodec(e, \"byte\");\n\t      }\n\t    }]);\n\n\t    return o;\n\t  }(i);\n\n\t  \"_getLengthCodec _getDataCodec\".split(\" \").forEach(function (e) {\n\t    return n(o, e);\n\t  }), e.exports = o;\n\t}, function (e, t, r) {\n\t  var _r41 = r(0),\n\t      n = _r41.CramUnimplementedError,\n\t      i = r(6);\n\n\t  e.exports = /*#__PURE__*/function (_i9) {\n\t    _inherits(_class8, _i9);\n\n\t    function _class8() {\n\t      var _this11;\n\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var t = arguments.length > 1 ? arguments[1] : undefined;\n\n\t      _classCallCheck(this, _class8);\n\n\t      if (_this11 = _possibleConstructorReturn(this, _getPrototypeOf(_class8).call(this, e, t)), \"int\" !== _this11.dataType) throw new n(\"\".concat(_this11.dataType, \" decoding not yet implemented by BETA codec\"));\n\t      return _possibleConstructorReturn(_this11);\n\t    }\n\n\t    _createClass(_class8, [{\n\t      key: \"decode\",\n\t      value: function decode(e, t, r, n) {\n\t        return this._getBits(t.content, n.coreBlock, this.parameters.length) - this.parameters.offset;\n\t      }\n\t    }]);\n\n\t    return _class8;\n\t  }(i);\n\t}, function (e, t, r) {\n\t  var _r42 = r(0),\n\t      n = _r42.CramUnimplementedError,\n\t      i = r(6);\n\n\t  e.exports = /*#__PURE__*/function (_i10) {\n\t    _inherits(_class9, _i10);\n\n\t    function _class9() {\n\t      var _this12;\n\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var t = arguments.length > 1 ? arguments[1] : undefined;\n\n\t      _classCallCheck(this, _class9);\n\n\t      if (_this12 = _possibleConstructorReturn(this, _getPrototypeOf(_class9).call(this, e, t)), \"int\" !== _this12.dataType) throw new n(\"\".concat(_this12.dataType, \" decoding not yet implemented by GAMMA codec\"));\n\t      return _possibleConstructorReturn(_this12);\n\t    }\n\n\t    _createClass(_class9, [{\n\t      key: \"decode\",\n\t      value: function decode(e, t, r, n) {\n\t        var i = 1;\n\n\t        for (; 0 === this._getBits(t.content, n.coreBlock, 1);) {\n\t          i += 1;\n\t        }\n\n\t        return (this._getBits(t.content, n.coreBlock, i - 1) | 1 << i - 1) - this.parameters.offset;\n\t      }\n\t    }]);\n\n\t    return _class9;\n\t  }(i);\n\t}, function (e, t, r) {\n\t  var _r43 = r(0),\n\t      n = _r43.CramUnimplementedError,\n\t      i = r(6);\n\n\t  e.exports = /*#__PURE__*/function (_i11) {\n\t    _inherits(_class10, _i11);\n\n\t    function _class10() {\n\t      var _this13;\n\n\t      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var t = arguments.length > 1 ? arguments[1] : undefined;\n\n\t      _classCallCheck(this, _class10);\n\n\t      if (_this13 = _possibleConstructorReturn(this, _getPrototypeOf(_class10).call(this, e, t)), \"int\" !== _this13.dataType) throw new n(\"\".concat(_this13.dataType, \" decoding not yet implemented by SUBEXP codec\"));\n\t      return _possibleConstructorReturn(_this13);\n\t    }\n\n\t    _createClass(_class10, [{\n\t      key: \"decode\",\n\t      value: function decode(e, t, r, n) {\n\t        var i,\n\t            o,\n\t            s = 0;\n\n\t        for (; this._getBits(t.content, n.coreBlock, 1);) {\n\t          s += 1;\n\t        }\n\n\t        return 0 === s ? (i = this.parameters.K, o = this._getBits(t.content, n.coreBlock, i)) : o = 1 << (i = s + this.parameters.K - 1) | this._getBits(t.content, n.coreBlock, i), o - this.parameters.offset;\n\t      }\n\t    }]);\n\n\t    return _class10;\n\t  }(i);\n\t}, function (e, t, r) {\n\n\t  var n = r(88),\n\t      i = r(90);\n\n\t  function o() {\n\t    this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;\n\t  }\n\n\t  t.parse = b, t.resolve = function (e, t) {\n\t    return b(e, !1, !0).resolve(t);\n\t  }, t.resolveObject = function (e, t) {\n\t    return e ? b(e, !1, !0).resolveObject(t) : t;\n\t  }, t.format = function (e) {\n\t    i.isString(e) && (e = b(e));\n\t    return e instanceof o ? e.format() : o.prototype.format.call(e);\n\t  }, t.Url = o;\n\t  var s = /^([a-z0-9.+-]+:)/i,\n\t      a = /:[0-9]*$/,\n\t      h = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\t      f = [\"{\", \"}\", \"|\", \"\\\\\", \"^\", \"`\"].concat([\"<\", \">\", '\"', \"`\", \" \", \"\\r\", \"\\n\", \"\\t\"]),\n\t      u = [\"'\"].concat(f),\n\t      c = [\"%\", \"/\", \"?\", \";\", \"#\"].concat(u),\n\t      l = [\"/\", \"?\", \"#\"],\n\t      d = /^[+a-z0-9A-Z_-]{0,63}$/,\n\t      p = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n\t      g = {\n\t    javascript: !0,\n\t    \"javascript:\": !0\n\t  },\n\t      m = {\n\t    javascript: !0,\n\t    \"javascript:\": !0\n\t  },\n\t      _ = {\n\t    http: !0,\n\t    https: !0,\n\t    ftp: !0,\n\t    gopher: !0,\n\t    file: !0,\n\t    \"http:\": !0,\n\t    \"https:\": !0,\n\t    \"ftp:\": !0,\n\t    \"gopher:\": !0,\n\t    \"file:\": !0\n\t  },\n\t      y = r(91);\n\n\t  function b(e, t, r) {\n\t    if (e && i.isObject(e) && e instanceof o) return e;\n\t    var n = new o();\n\t    return n.parse(e, t, r), n;\n\t  }\n\n\t  o.prototype.parse = function (e, t, r) {\n\t    if (!i.isString(e)) throw new TypeError(\"Parameter 'url' must be a string, not \" + _typeof(e));\n\t    var o = e.indexOf(\"?\"),\n\t        a = -1 !== o && o < e.indexOf(\"#\") ? \"?\" : \"#\",\n\t        f = e.split(a);\n\t    f[0] = f[0].replace(/\\\\/g, \"/\");\n\t    var b = e = f.join(a);\n\n\t    if (b = b.trim(), !r && 1 === e.split(\"#\").length) {\n\t      var w = h.exec(b);\n\t      if (w) return this.path = b, this.href = b, this.pathname = w[1], w[2] ? (this.search = w[2], this.query = t ? y.parse(this.search.substr(1)) : this.search.substr(1)) : t && (this.search = \"\", this.query = {}), this;\n\t    }\n\n\t    var v = s.exec(b);\n\n\t    if (v) {\n\t      var E = (v = v[0]).toLowerCase();\n\t      this.protocol = E, b = b.substr(v.length);\n\t    }\n\n\t    if (r || v || b.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t      var S = \"//\" === b.substr(0, 2);\n\t      !S || v && m[v] || (b = b.substr(2), this.slashes = !0);\n\t    }\n\n\t    if (!m[v] && (S || v && !_[v])) {\n\t      for (var A, k, x = -1, C = 0; C < l.length; C++) {\n\t        -1 !== (R = b.indexOf(l[C])) && (-1 === x || R < x) && (x = R);\n\t      }\n\n\t      -1 !== (k = -1 === x ? b.lastIndexOf(\"@\") : b.lastIndexOf(\"@\", x)) && (A = b.slice(0, k), b = b.slice(k + 1), this.auth = decodeURIComponent(A)), x = -1;\n\n\t      for (C = 0; C < c.length; C++) {\n\t        var R;\n\t        -1 !== (R = b.indexOf(c[C])) && (-1 === x || R < x) && (x = R);\n\t      }\n\n\t      -1 === x && (x = b.length), this.host = b.slice(0, x), b = b.slice(x), this.parseHost(), this.hostname = this.hostname || \"\";\n\t      var T = \"[\" === this.hostname[0] && \"]\" === this.hostname[this.hostname.length - 1];\n\t      if (!T) for (var I = this.hostname.split(/\\./), B = (C = 0, I.length); C < B; C++) {\n\t        var L = I[C];\n\n\t        if (L && !L.match(d)) {\n\t          for (var N = \"\", F = 0, M = L.length; F < M; F++) {\n\t            L.charCodeAt(F) > 127 ? N += \"x\" : N += L[F];\n\t          }\n\n\t          if (!N.match(d)) {\n\t            var O = I.slice(0, C),\n\t                P = I.slice(C + 1),\n\t                U = L.match(p);\n\t            U && (O.push(U[1]), P.unshift(U[2])), P.length && (b = \"/\" + P.join(\".\") + b), this.hostname = O.join(\".\");\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      this.hostname.length > 255 ? this.hostname = \"\" : this.hostname = this.hostname.toLowerCase(), T || (this.hostname = n.toASCII(this.hostname));\n\t      var z = this.port ? \":\" + this.port : \"\",\n\t          D = this.hostname || \"\";\n\t      this.host = D + z, this.href += this.host, T && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), \"/\" !== b[0] && (b = \"/\" + b));\n\t    }\n\n\t    if (!g[E]) for (C = 0, B = u.length; C < B; C++) {\n\t      var j = u[C];\n\n\t      if (-1 !== b.indexOf(j)) {\n\t        var q = encodeURIComponent(j);\n\t        q === j && (q = escape(j)), b = b.split(j).join(q);\n\t      }\n\t    }\n\t    var Z = b.indexOf(\"#\");\n\t    -1 !== Z && (this.hash = b.substr(Z), b = b.slice(0, Z));\n\t    var H = b.indexOf(\"?\");\n\n\t    if (-1 !== H ? (this.search = b.substr(H), this.query = b.substr(H + 1), t && (this.query = y.parse(this.query)), b = b.slice(0, H)) : t && (this.search = \"\", this.query = {}), b && (this.pathname = b), _[E] && this.hostname && !this.pathname && (this.pathname = \"/\"), this.pathname || this.search) {\n\t      z = this.pathname || \"\";\n\t      var $ = this.search || \"\";\n\t      this.path = z + $;\n\t    }\n\n\t    return this.href = this.format(), this;\n\t  }, o.prototype.format = function () {\n\t    var e = this.auth || \"\";\n\t    e && (e = (e = encodeURIComponent(e)).replace(/%3A/i, \":\"), e += \"@\");\n\t    var t = this.protocol || \"\",\n\t        r = this.pathname || \"\",\n\t        n = this.hash || \"\",\n\t        o = !1,\n\t        s = \"\";\n\t    this.host ? o = e + this.host : this.hostname && (o = e + (-1 === this.hostname.indexOf(\":\") ? this.hostname : \"[\" + this.hostname + \"]\"), this.port && (o += \":\" + this.port)), this.query && i.isObject(this.query) && Object.keys(this.query).length && (s = y.stringify(this.query));\n\t    var a = this.search || s && \"?\" + s || \"\";\n\t    return t && \":\" !== t.substr(-1) && (t += \":\"), this.slashes || (!t || _[t]) && !1 !== o ? (o = \"//\" + (o || \"\"), r && \"/\" !== r.charAt(0) && (r = \"/\" + r)) : o || (o = \"\"), n && \"#\" !== n.charAt(0) && (n = \"#\" + n), a && \"?\" !== a.charAt(0) && (a = \"?\" + a), t + o + (r = r.replace(/[?#]/g, function (e) {\n\t      return encodeURIComponent(e);\n\t    })) + (a = a.replace(\"#\", \"%23\")) + n;\n\t  }, o.prototype.resolve = function (e) {\n\t    return this.resolveObject(b(e, !1, !0)).format();\n\t  }, o.prototype.resolveObject = function (e) {\n\t    if (i.isString(e)) {\n\t      var t = new o();\n\t      t.parse(e, !1, !0), e = t;\n\t    }\n\n\t    for (var r = new o(), n = Object.keys(this), s = 0; s < n.length; s++) {\n\t      var a = n[s];\n\t      r[a] = this[a];\n\t    }\n\n\t    if (r.hash = e.hash, \"\" === e.href) return r.href = r.format(), r;\n\n\t    if (e.slashes && !e.protocol) {\n\t      for (var h = Object.keys(e), f = 0; f < h.length; f++) {\n\t        var u = h[f];\n\t        \"protocol\" !== u && (r[u] = e[u]);\n\t      }\n\n\t      return _[r.protocol] && r.hostname && !r.pathname && (r.path = r.pathname = \"/\"), r.href = r.format(), r;\n\t    }\n\n\t    if (e.protocol && e.protocol !== r.protocol) {\n\t      if (!_[e.protocol]) {\n\t        for (var c = Object.keys(e), l = 0; l < c.length; l++) {\n\t          var d = c[l];\n\t          r[d] = e[d];\n\t        }\n\n\t        return r.href = r.format(), r;\n\t      }\n\n\t      if (r.protocol = e.protocol, e.host || m[e.protocol]) r.pathname = e.pathname;else {\n\t        for (var p = (e.pathname || \"\").split(\"/\"); p.length && !(e.host = p.shift());) {\n\t        }\n\n\t        e.host || (e.host = \"\"), e.hostname || (e.hostname = \"\"), \"\" !== p[0] && p.unshift(\"\"), p.length < 2 && p.unshift(\"\"), r.pathname = p.join(\"/\");\n\t      }\n\n\t      if (r.search = e.search, r.query = e.query, r.host = e.host || \"\", r.auth = e.auth, r.hostname = e.hostname || e.host, r.port = e.port, r.pathname || r.search) {\n\t        var g = r.pathname || \"\",\n\t            y = r.search || \"\";\n\t        r.path = g + y;\n\t      }\n\n\t      return r.slashes = r.slashes || e.slashes, r.href = r.format(), r;\n\t    }\n\n\t    var b = r.pathname && \"/\" === r.pathname.charAt(0),\n\t        w = e.host || e.pathname && \"/\" === e.pathname.charAt(0),\n\t        v = w || b || r.host && e.pathname,\n\t        E = v,\n\t        S = r.pathname && r.pathname.split(\"/\") || [],\n\t        A = (p = e.pathname && e.pathname.split(\"/\") || [], r.protocol && !_[r.protocol]);\n\t    if (A && (r.hostname = \"\", r.port = null, r.host && (\"\" === S[0] ? S[0] = r.host : S.unshift(r.host)), r.host = \"\", e.protocol && (e.hostname = null, e.port = null, e.host && (\"\" === p[0] ? p[0] = e.host : p.unshift(e.host)), e.host = null), v = v && (\"\" === p[0] || \"\" === S[0])), w) r.host = e.host || \"\" === e.host ? e.host : r.host, r.hostname = e.hostname || \"\" === e.hostname ? e.hostname : r.hostname, r.search = e.search, r.query = e.query, S = p;else if (p.length) S || (S = []), S.pop(), S = S.concat(p), r.search = e.search, r.query = e.query;else if (!i.isNullOrUndefined(e.search)) {\n\t      if (A) r.hostname = r.host = S.shift(), (T = !!(r.host && r.host.indexOf(\"@\") > 0) && r.host.split(\"@\")) && (r.auth = T.shift(), r.host = r.hostname = T.shift());\n\t      return r.search = e.search, r.query = e.query, i.isNull(r.pathname) && i.isNull(r.search) || (r.path = (r.pathname ? r.pathname : \"\") + (r.search ? r.search : \"\")), r.href = r.format(), r;\n\t    }\n\t    if (!S.length) return r.pathname = null, r.search ? r.path = \"/\" + r.search : r.path = null, r.href = r.format(), r;\n\n\t    for (var k = S.slice(-1)[0], x = (r.host || e.host || S.length > 1) && (\".\" === k || \"..\" === k) || \"\" === k, C = 0, R = S.length; R >= 0; R--) {\n\t      \".\" === (k = S[R]) ? S.splice(R, 1) : \"..\" === k ? (S.splice(R, 1), C++) : C && (S.splice(R, 1), C--);\n\t    }\n\n\t    if (!v && !E) for (; C--; C) {\n\t      S.unshift(\"..\");\n\t    }\n\t    !v || \"\" === S[0] || S[0] && \"/\" === S[0].charAt(0) || S.unshift(\"\"), x && \"/\" !== S.join(\"/\").substr(-1) && S.push(\"\");\n\t    var T,\n\t        I = \"\" === S[0] || S[0] && \"/\" === S[0].charAt(0);\n\t    A && (r.hostname = r.host = I ? \"\" : S.length ? S.shift() : \"\", (T = !!(r.host && r.host.indexOf(\"@\") > 0) && r.host.split(\"@\")) && (r.auth = T.shift(), r.host = r.hostname = T.shift()));\n\t    return (v = v || r.host && S.length) && !I && S.unshift(\"\"), S.length ? r.pathname = S.join(\"/\") : (r.pathname = null, r.path = null), i.isNull(r.pathname) && i.isNull(r.search) || (r.path = (r.pathname ? r.pathname : \"\") + (r.search ? r.search : \"\")), r.auth = e.auth || r.auth, r.slashes = r.slashes || e.slashes, r.href = r.format(), r;\n\t  }, o.prototype.parseHost = function () {\n\t    var e = this.host,\n\t        t = a.exec(e);\n\t    t && (\":\" !== (t = t[0]) && (this.port = t.substr(1)), e = e.substr(0, e.length - t.length)), e && (this.hostname = e);\n\t  };\n\t}, function (e, t, r) {\n\t  (function (e, n) {\n\t    var i;\n\t    /*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\t    !function (o) {\n\t      t && t.nodeType, e && e.nodeType;\n\t      var s = \"object\" == _typeof(n) && n;\n\t      s.global !== s && s.window !== s && s.self;\n\t      var a,\n\t          h = 2147483647,\n\t          f = 36,\n\t          u = 1,\n\t          c = 26,\n\t          l = 38,\n\t          d = 700,\n\t          p = 72,\n\t          g = 128,\n\t          m = \"-\",\n\t          _ = /^xn--/,\n\t          y = /[^\\x20-\\x7E]/,\n\t          b = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n\t          w = {\n\t        overflow: \"Overflow: input needs wider integers to process\",\n\t        \"not-basic\": \"Illegal input >= 0x80 (not a basic code point)\",\n\t        \"invalid-input\": \"Invalid input\"\n\t      },\n\t          v = f - u,\n\t          E = Math.floor,\n\t          S = String.fromCharCode;\n\n\t      function A(e) {\n\t        throw new RangeError(w[e]);\n\t      }\n\n\t      function k(e, t) {\n\t        for (var r = e.length, n = []; r--;) {\n\t          n[r] = t(e[r]);\n\t        }\n\n\t        return n;\n\t      }\n\n\t      function x(e, t) {\n\t        var r = e.split(\"@\"),\n\t            n = \"\";\n\t        return r.length > 1 && (n = r[0] + \"@\", e = r[1]), n + k((e = e.replace(b, \".\")).split(\".\"), t).join(\".\");\n\t      }\n\n\t      function C(e) {\n\t        for (var t, r, n = [], i = 0, o = e.length; i < o;) {\n\t          (t = e.charCodeAt(i++)) >= 55296 && t <= 56319 && i < o ? 56320 == (64512 & (r = e.charCodeAt(i++))) ? n.push(((1023 & t) << 10) + (1023 & r) + 65536) : (n.push(t), i--) : n.push(t);\n\t        }\n\n\t        return n;\n\t      }\n\n\t      function R(e) {\n\t        return k(e, function (e) {\n\t          var t = \"\";\n\t          return e > 65535 && (t += S((e -= 65536) >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), t += S(e);\n\t        }).join(\"\");\n\t      }\n\n\t      function T(e, t) {\n\t        return e + 22 + 75 * (e < 26) - ((0 != t) << 5);\n\t      }\n\n\t      function I(e, t, r) {\n\t        var n = 0;\n\n\t        for (e = r ? E(e / d) : e >> 1, e += E(e / t); e > v * c >> 1; n += f) {\n\t          e = E(e / v);\n\t        }\n\n\t        return E(n + (v + 1) * e / (e + l));\n\t      }\n\n\t      function B(e) {\n\t        var t,\n\t            r,\n\t            n,\n\t            i,\n\t            o,\n\t            s,\n\t            a,\n\t            l,\n\t            d,\n\t            _,\n\t            y,\n\t            b = [],\n\t            w = e.length,\n\t            v = 0,\n\t            S = g,\n\t            k = p;\n\n\t        for ((r = e.lastIndexOf(m)) < 0 && (r = 0), n = 0; n < r; ++n) {\n\t          e.charCodeAt(n) >= 128 && A(\"not-basic\"), b.push(e.charCodeAt(n));\n\t        }\n\n\t        for (i = r > 0 ? r + 1 : 0; i < w;) {\n\t          for (o = v, s = 1, a = f; i >= w && A(\"invalid-input\"), ((l = (y = e.charCodeAt(i++)) - 48 < 10 ? y - 22 : y - 65 < 26 ? y - 65 : y - 97 < 26 ? y - 97 : f) >= f || l > E((h - v) / s)) && A(\"overflow\"), v += l * s, !(l < (d = a <= k ? u : a >= k + c ? c : a - k)); a += f) {\n\t            s > E(h / (_ = f - d)) && A(\"overflow\"), s *= _;\n\t          }\n\n\t          k = I(v - o, t = b.length + 1, 0 == o), E(v / t) > h - S && A(\"overflow\"), S += E(v / t), v %= t, b.splice(v++, 0, S);\n\t        }\n\n\t        return R(b);\n\t      }\n\n\t      function L(e) {\n\t        var t,\n\t            r,\n\t            n,\n\t            i,\n\t            o,\n\t            s,\n\t            a,\n\t            l,\n\t            d,\n\t            _,\n\t            y,\n\t            b,\n\t            w,\n\t            v,\n\t            k,\n\t            x = [];\n\n\t        for (b = (e = C(e)).length, t = g, r = 0, o = p, s = 0; s < b; ++s) {\n\t          (y = e[s]) < 128 && x.push(S(y));\n\t        }\n\n\t        for (n = i = x.length, i && x.push(m); n < b;) {\n\t          for (a = h, s = 0; s < b; ++s) {\n\t            (y = e[s]) >= t && y < a && (a = y);\n\t          }\n\n\t          for (a - t > E((h - r) / (w = n + 1)) && A(\"overflow\"), r += (a - t) * w, t = a, s = 0; s < b; ++s) {\n\t            if ((y = e[s]) < t && ++r > h && A(\"overflow\"), y == t) {\n\t              for (l = r, d = f; !(l < (_ = d <= o ? u : d >= o + c ? c : d - o)); d += f) {\n\t                k = l - _, v = f - _, x.push(S(T(_ + k % v, 0))), l = E(k / v);\n\t              }\n\n\t              x.push(S(T(l, 0))), o = I(r, w, n == i), r = 0, ++n;\n\t            }\n\t          }\n\n\t          ++r, ++t;\n\t        }\n\n\t        return x.join(\"\");\n\t      }\n\n\t      a = {\n\t        version: \"1.4.1\",\n\t        ucs2: {\n\t          decode: C,\n\t          encode: R\n\t        },\n\t        decode: B,\n\t        encode: L,\n\t        toASCII: function toASCII(e) {\n\t          return x(e, function (e) {\n\t            return y.test(e) ? \"xn--\" + L(e) : e;\n\t          });\n\t        },\n\t        toUnicode: function toUnicode(e) {\n\t          return x(e, function (e) {\n\t            return _.test(e) ? B(e.slice(4).toLowerCase()) : e;\n\t          });\n\t        }\n\t      }, void 0 === (i = function () {\n\t        return a;\n\t      }.call(t, r, t, e)) || (e.exports = i);\n\t    }();\n\t  }).call(this, r(89)(e), r(2));\n\t}, function (e, t) {\n\t  e.exports = function (e) {\n\t    return e.webpackPolyfill || (e.deprecate = function () {}, e.paths = [], e.children || (e.children = []), Object.defineProperty(e, \"loaded\", {\n\t      enumerable: !0,\n\t      get: function get() {\n\t        return e.l;\n\t      }\n\t    }), Object.defineProperty(e, \"id\", {\n\t      enumerable: !0,\n\t      get: function get() {\n\t        return e.i;\n\t      }\n\t    }), e.webpackPolyfill = 1), e;\n\t  };\n\t}, function (e, t, r) {\n\n\t  e.exports = {\n\t    isString: function isString(e) {\n\t      return \"string\" == typeof e;\n\t    },\n\t    isObject: function isObject(e) {\n\t      return \"object\" == _typeof(e) && null !== e;\n\t    },\n\t    isNull: function isNull(e) {\n\t      return null === e;\n\t    },\n\t    isNullOrUndefined: function isNullOrUndefined(e) {\n\t      return null == e;\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\n\t  t.decode = t.parse = r(92), t.encode = t.stringify = r(93);\n\t}, function (e, t, r) {\n\n\t  function n(e, t) {\n\t    return Object.prototype.hasOwnProperty.call(e, t);\n\t  }\n\n\t  e.exports = function (e, t, r, o) {\n\t    t = t || \"&\", r = r || \"=\";\n\t    var s = {};\n\t    if (\"string\" != typeof e || 0 === e.length) return s;\n\t    var a = /\\+/g;\n\t    e = e.split(t);\n\t    var h = 1e3;\n\t    o && \"number\" == typeof o.maxKeys && (h = o.maxKeys);\n\t    var f = e.length;\n\t    h > 0 && f > h && (f = h);\n\n\t    for (var u = 0; u < f; ++u) {\n\t      var c,\n\t          l,\n\t          d,\n\t          p,\n\t          g = e[u].replace(a, \"%20\"),\n\t          m = g.indexOf(r);\n\t      m >= 0 ? (c = g.substr(0, m), l = g.substr(m + 1)) : (c = g, l = \"\"), d = decodeURIComponent(c), p = decodeURIComponent(l), n(s, d) ? i(s[d]) ? s[d].push(p) : s[d] = [s[d], p] : s[d] = p;\n\t    }\n\n\t    return s;\n\t  };\n\n\t  var i = Array.isArray || function (e) {\n\t    return \"[object Array]\" === Object.prototype.toString.call(e);\n\t  };\n\t}, function (e, t, r) {\n\n\t  var n = function n(e) {\n\t    switch (_typeof(e)) {\n\t      case \"string\":\n\t        return e;\n\n\t      case \"boolean\":\n\t        return e ? \"true\" : \"false\";\n\n\t      case \"number\":\n\t        return isFinite(e) ? e : \"\";\n\n\t      default:\n\t        return \"\";\n\t    }\n\t  };\n\n\t  e.exports = function (e, t, r, a) {\n\t    return t = t || \"&\", r = r || \"=\", null === e && (e = void 0), \"object\" == _typeof(e) ? o(s(e), function (s) {\n\t      var a = encodeURIComponent(n(s)) + r;\n\t      return i(e[s]) ? o(e[s], function (e) {\n\t        return a + encodeURIComponent(n(e));\n\t      }).join(t) : a + encodeURIComponent(n(e[s]));\n\t    }).join(t) : a ? encodeURIComponent(n(a)) + r + encodeURIComponent(n(e)) : \"\";\n\t  };\n\n\t  var i = Array.isArray || function (e) {\n\t    return \"[object Array]\" === Object.prototype.toString.call(e);\n\t  };\n\n\t  function o(e, t) {\n\t    if (e.map) return e.map(t);\n\n\t    for (var r = [], n = 0; n < e.length; n++) {\n\t      r.push(t(e[n], n));\n\t    }\n\n\t    return r;\n\t  }\n\n\t  var s = Object.keys || function (e) {\n\t    var t = [];\n\n\t    for (var r in e) {\n\t      Object.prototype.hasOwnProperty.call(e, r) && t.push(r);\n\t    }\n\n\t    return t;\n\t  };\n\t}, function (e, t, r) {\n\t  (function (t) {\n\t    var n = r(95),\n\t        i = r(96);\n\n\t    e.exports = /*#__PURE__*/function () {\n\t      function _class11(e) {\n\t        var _this14 = this;\n\n\t        _classCallCheck(this, _class11);\n\n\t        this.position = 0, this.url = e, this.cache = new i({\n\t          fetch: function fetch(e, t) {\n\t            return _this14._fetch(e, t);\n\t          }\n\t        });\n\t      }\n\n\t      _createClass(_class11, [{\n\t        key: \"_fetch\",\n\t        value: function () {\n\t          var _fetch2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(e, r) {\n\t            var i, o, _e33, _r44;\n\n\t            return regeneratorRuntime.wrap(function _callee23$(_context26) {\n\t              while (1) {\n\t                switch (_context26.prev = _context26.next) {\n\t                  case 0:\n\t                    i = {};\n\t                    r < 1 / 0 ? i.range = \"bytes=\".concat(e, \"-\").concat(e + r) : r === 1 / 0 && 0 !== e && (i.range = \"bytes=\".concat(e, \"-\"));\n\t                    _context26.next = 4;\n\t                    return n(this.url, {\n\t                      method: \"GET\",\n\t                      headers: i,\n\t                      redirect: \"follow\",\n\t                      mode: \"cors\"\n\t                    });\n\n\t                  case 4:\n\t                    o = _context26.sent;\n\n\t                    if (!(200 === o.status && 0 === e || 206 === o.status)) {\n\t                      _context26.next = 13;\n\t                      break;\n\t                    }\n\n\t                    _context26.t0 = t;\n\t                    _context26.next = 9;\n\t                    return o.arrayBuffer();\n\n\t                  case 9:\n\t                    _context26.t1 = _context26.sent;\n\t                    _e33 = _context26.t0.from.call(_context26.t0, _context26.t1);\n\t                    _r44 = /\\/(\\d+)$/.exec(o.headers.get(\"content-range\"));\n\t                    return _context26.abrupt(\"return\", (_r44 && _r44[1] ? this._stat = {\n\t                      size: parseInt(_r44[1], 10)\n\t                    } : this._stat = {\n\t                      size: void 0\n\t                    }, _e33));\n\n\t                  case 13:\n\t                    throw new Error(\"HTTP \".concat(o.status, \" fetching \").concat(this.url));\n\n\t                  case 14:\n\t                  case \"end\":\n\t                    return _context26.stop();\n\t                }\n\t              }\n\t            }, _callee23, this);\n\t          }));\n\n\t          function _fetch(_x14, _x15) {\n\t            return _fetch2.apply(this, arguments);\n\t          }\n\n\t          return _fetch;\n\t        }()\n\t      }, {\n\t        key: \"read\",\n\t        value: function read(e) {\n\t          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t          var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1 / 0;\n\t          var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\t          var i = n;\n\t          return null === n && (i = this.position, this.position += r), this.cache.get(e, t, r, n);\n\t        }\n\t      }, {\n\t        key: \"readFile\",\n\t        value: function () {\n\t          var _readFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n\t            var e;\n\t            return regeneratorRuntime.wrap(function _callee24$(_context27) {\n\t              while (1) {\n\t                switch (_context27.prev = _context27.next) {\n\t                  case 0:\n\t                    _context27.next = 2;\n\t                    return n(this.url, {\n\t                      method: \"GET\",\n\t                      redirect: \"follow\",\n\t                      mode: \"cors\"\n\t                    });\n\n\t                  case 2:\n\t                    e = _context27.sent;\n\t                    _context27.t0 = t;\n\t                    _context27.next = 6;\n\t                    return e.arrayBuffer();\n\n\t                  case 6:\n\t                    _context27.t1 = _context27.sent;\n\t                    return _context27.abrupt(\"return\", _context27.t0.from.call(_context27.t0, _context27.t1));\n\n\t                  case 8:\n\t                  case \"end\":\n\t                    return _context27.stop();\n\t                }\n\t              }\n\t            }, _callee24, this);\n\t          }));\n\n\t          function readFile() {\n\t            return _readFile.apply(this, arguments);\n\t          }\n\n\t          return readFile;\n\t        }()\n\t      }, {\n\t        key: \"stat\",\n\t        value: function () {\n\t          var _stat = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n\t            var _e34;\n\n\t            return regeneratorRuntime.wrap(function _callee25$(_context28) {\n\t              while (1) {\n\t                switch (_context28.prev = _context28.next) {\n\t                  case 0:\n\t                    if (this._stat) {\n\t                      _context28.next = 6;\n\t                      break;\n\t                    }\n\n\t                    _e34 = t.allocUnsafe(10);\n\t                    _context28.next = 4;\n\t                    return this.read(_e34, 0, 10, 0);\n\n\t                  case 4:\n\t                    if (this._stat) {\n\t                      _context28.next = 6;\n\t                      break;\n\t                    }\n\n\t                    throw new Error(\"unable to determine size of file at \".concat(this.url));\n\n\t                  case 6:\n\t                    return _context28.abrupt(\"return\", this._stat);\n\n\t                  case 7:\n\t                  case \"end\":\n\t                    return _context28.stop();\n\t                }\n\t              }\n\t            }, _callee25, this);\n\t          }));\n\n\t          function stat() {\n\t            return _stat.apply(this, arguments);\n\t          }\n\n\t          return stat;\n\t        }()\n\t      }]);\n\n\t      return _class11;\n\t    }();\n\t  }).call(this, r(1).Buffer);\n\t}, function (e, t) {\n\t  var r = function (e) {\n\t    function t() {\n\t      this.fetch = !1;\n\t    }\n\n\t    return t.prototype = e, new t();\n\t  }(\"undefined\" != typeof self ? self : this);\n\n\t  !function (e) {\n\t    !function (t) {\n\t      var r = {\n\t        searchParams: \"URLSearchParams\" in e,\n\t        iterable: \"Symbol\" in e && \"iterator\" in Symbol,\n\t        blob: \"FileReader\" in e && \"Blob\" in e && function () {\n\t          try {\n\t            return new Blob(), !0;\n\t          } catch (e) {\n\t            return !1;\n\t          }\n\t        }(),\n\t        formData: \"FormData\" in e,\n\t        arrayBuffer: \"ArrayBuffer\" in e\n\t      };\n\t      if (r.arrayBuffer) var n = [\"[object Int8Array]\", \"[object Uint8Array]\", \"[object Uint8ClampedArray]\", \"[object Int16Array]\", \"[object Uint16Array]\", \"[object Int32Array]\", \"[object Uint32Array]\", \"[object Float32Array]\", \"[object Float64Array]\"],\n\t          i = ArrayBuffer.isView || function (e) {\n\t        return e && n.indexOf(Object.prototype.toString.call(e)) > -1;\n\t      };\n\n\t      function o(e) {\n\t        if (\"string\" != typeof e && (e = String(e)), /[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(e)) throw new TypeError(\"Invalid character in header field name\");\n\t        return e.toLowerCase();\n\t      }\n\n\t      function s(e) {\n\t        return \"string\" != typeof e && (e = String(e)), e;\n\t      }\n\n\t      function a(e) {\n\t        var t = {\n\t          next: function next() {\n\t            var t = e.shift();\n\t            return {\n\t              done: void 0 === t,\n\t              value: t\n\t            };\n\t          }\n\t        };\n\t        return r.iterable && (t[Symbol.iterator] = function () {\n\t          return t;\n\t        }), t;\n\t      }\n\n\t      function h(e) {\n\t        this.map = {}, e instanceof h ? e.forEach(function (e, t) {\n\t          this.append(t, e);\n\t        }, this) : Array.isArray(e) ? e.forEach(function (e) {\n\t          this.append(e[0], e[1]);\n\t        }, this) : e && Object.getOwnPropertyNames(e).forEach(function (t) {\n\t          this.append(t, e[t]);\n\t        }, this);\n\t      }\n\n\t      function f(e) {\n\t        if (e.bodyUsed) return Promise.reject(new TypeError(\"Already read\"));\n\t        e.bodyUsed = !0;\n\t      }\n\n\t      function u(e) {\n\t        return new Promise(function (t, r) {\n\t          e.onload = function () {\n\t            t(e.result);\n\t          }, e.onerror = function () {\n\t            r(e.error);\n\t          };\n\t        });\n\t      }\n\n\t      function c(e) {\n\t        var t = new FileReader(),\n\t            r = u(t);\n\t        return t.readAsArrayBuffer(e), r;\n\t      }\n\n\t      function l(e) {\n\t        if (e.slice) return e.slice(0);\n\t        var t = new Uint8Array(e.byteLength);\n\t        return t.set(new Uint8Array(e)), t.buffer;\n\t      }\n\n\t      function d() {\n\t        return this.bodyUsed = !1, this._initBody = function (e) {\n\t          var t;\n\t          this._bodyInit = e, e ? \"string\" == typeof e ? this._bodyText = e : r.blob && Blob.prototype.isPrototypeOf(e) ? this._bodyBlob = e : r.formData && FormData.prototype.isPrototypeOf(e) ? this._bodyFormData = e : r.searchParams && URLSearchParams.prototype.isPrototypeOf(e) ? this._bodyText = e.toString() : r.arrayBuffer && r.blob && (t = e) && DataView.prototype.isPrototypeOf(t) ? (this._bodyArrayBuffer = l(e.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : r.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(e) || i(e)) ? this._bodyArrayBuffer = l(e) : this._bodyText = e = Object.prototype.toString.call(e) : this._bodyText = \"\", this.headers.get(\"content-type\") || (\"string\" == typeof e ? this.headers.set(\"content-type\", \"text/plain;charset=UTF-8\") : this._bodyBlob && this._bodyBlob.type ? this.headers.set(\"content-type\", this._bodyBlob.type) : r.searchParams && URLSearchParams.prototype.isPrototypeOf(e) && this.headers.set(\"content-type\", \"application/x-www-form-urlencoded;charset=UTF-8\"));\n\t        }, r.blob && (this.blob = function () {\n\t          var e = f(this);\n\t          if (e) return e;\n\t          if (this._bodyBlob) return Promise.resolve(this._bodyBlob);\n\t          if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n\t          if (this._bodyFormData) throw new Error(\"could not read FormData body as blob\");\n\t          return Promise.resolve(new Blob([this._bodyText]));\n\t        }, this.arrayBuffer = function () {\n\t          return this._bodyArrayBuffer ? f(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(c);\n\t        }), this.text = function () {\n\t          var e,\n\t              t,\n\t              r,\n\t              n = f(this);\n\t          if (n) return n;\n\t          if (this._bodyBlob) return e = this._bodyBlob, t = new FileReader(), r = u(t), t.readAsText(e), r;\n\t          if (this._bodyArrayBuffer) return Promise.resolve(function (e) {\n\t            for (var t = new Uint8Array(e), r = new Array(t.length), n = 0; n < t.length; n++) {\n\t              r[n] = String.fromCharCode(t[n]);\n\t            }\n\n\t            return r.join(\"\");\n\t          }(this._bodyArrayBuffer));\n\t          if (this._bodyFormData) throw new Error(\"could not read FormData body as text\");\n\t          return Promise.resolve(this._bodyText);\n\t        }, r.formData && (this.formData = function () {\n\t          return this.text().then(m);\n\t        }), this.json = function () {\n\t          return this.text().then(JSON.parse);\n\t        }, this;\n\t      }\n\n\t      h.prototype.append = function (e, t) {\n\t        e = o(e), t = s(t);\n\t        var r = this.map[e];\n\t        this.map[e] = r ? r + \", \" + t : t;\n\t      }, h.prototype.delete = function (e) {\n\t        delete this.map[o(e)];\n\t      }, h.prototype.get = function (e) {\n\t        return e = o(e), this.has(e) ? this.map[e] : null;\n\t      }, h.prototype.has = function (e) {\n\t        return this.map.hasOwnProperty(o(e));\n\t      }, h.prototype.set = function (e, t) {\n\t        this.map[o(e)] = s(t);\n\t      }, h.prototype.forEach = function (e, t) {\n\t        for (var r in this.map) {\n\t          this.map.hasOwnProperty(r) && e.call(t, this.map[r], r, this);\n\t        }\n\t      }, h.prototype.keys = function () {\n\t        var e = [];\n\t        return this.forEach(function (t, r) {\n\t          e.push(r);\n\t        }), a(e);\n\t      }, h.prototype.values = function () {\n\t        var e = [];\n\t        return this.forEach(function (t) {\n\t          e.push(t);\n\t        }), a(e);\n\t      }, h.prototype.entries = function () {\n\t        var e = [];\n\t        return this.forEach(function (t, r) {\n\t          e.push([r, t]);\n\t        }), a(e);\n\t      }, r.iterable && (h.prototype[Symbol.iterator] = h.prototype.entries);\n\t      var p = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"POST\", \"PUT\"];\n\n\t      function g(e, t) {\n\t        var r,\n\t            n,\n\t            i = (t = t || {}).body;\n\n\t        if (e instanceof g) {\n\t          if (e.bodyUsed) throw new TypeError(\"Already read\");\n\t          this.url = e.url, this.credentials = e.credentials, t.headers || (this.headers = new h(e.headers)), this.method = e.method, this.mode = e.mode, this.signal = e.signal, i || null == e._bodyInit || (i = e._bodyInit, e.bodyUsed = !0);\n\t        } else this.url = String(e);\n\n\t        if (this.credentials = t.credentials || this.credentials || \"same-origin\", !t.headers && this.headers || (this.headers = new h(t.headers)), this.method = (r = t.method || this.method || \"GET\", n = r.toUpperCase(), p.indexOf(n) > -1 ? n : r), this.mode = t.mode || this.mode || null, this.signal = t.signal || this.signal, this.referrer = null, (\"GET\" === this.method || \"HEAD\" === this.method) && i) throw new TypeError(\"Body not allowed for GET or HEAD requests\");\n\n\t        this._initBody(i);\n\t      }\n\n\t      function m(e) {\n\t        var t = new FormData();\n\t        return e.trim().split(\"&\").forEach(function (e) {\n\t          if (e) {\n\t            var r = e.split(\"=\"),\n\t                n = r.shift().replace(/\\+/g, \" \"),\n\t                i = r.join(\"=\").replace(/\\+/g, \" \");\n\t            t.append(decodeURIComponent(n), decodeURIComponent(i));\n\t          }\n\t        }), t;\n\t      }\n\n\t      function _(e, t) {\n\t        t || (t = {}), this.type = \"default\", this.status = void 0 === t.status ? 200 : t.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = \"statusText\" in t ? t.statusText : \"OK\", this.headers = new h(t.headers), this.url = t.url || \"\", this._initBody(e);\n\t      }\n\n\t      g.prototype.clone = function () {\n\t        return new g(this, {\n\t          body: this._bodyInit\n\t        });\n\t      }, d.call(g.prototype), d.call(_.prototype), _.prototype.clone = function () {\n\t        return new _(this._bodyInit, {\n\t          status: this.status,\n\t          statusText: this.statusText,\n\t          headers: new h(this.headers),\n\t          url: this.url\n\t        });\n\t      }, _.error = function () {\n\t        var e = new _(null, {\n\t          status: 0,\n\t          statusText: \"\"\n\t        });\n\t        return e.type = \"error\", e;\n\t      };\n\t      var y = [301, 302, 303, 307, 308];\n\t      _.redirect = function (e, t) {\n\t        if (-1 === y.indexOf(t)) throw new RangeError(\"Invalid status code\");\n\t        return new _(null, {\n\t          status: t,\n\t          headers: {\n\t            location: e\n\t          }\n\t        });\n\t      }, t.DOMException = e.DOMException;\n\n\t      try {\n\t        new t.DOMException();\n\t      } catch (e) {\n\t        t.DOMException = function (e, t) {\n\t          this.message = e, this.name = t;\n\t          var r = Error(e);\n\t          this.stack = r.stack;\n\t        }, t.DOMException.prototype = Object.create(Error.prototype), t.DOMException.prototype.constructor = t.DOMException;\n\t      }\n\n\t      function b(e, n) {\n\t        return new Promise(function (i, o) {\n\t          var s = new g(e, n);\n\t          if (s.signal && s.signal.aborted) return o(new t.DOMException(\"Aborted\", \"AbortError\"));\n\t          var a = new XMLHttpRequest();\n\n\t          function f() {\n\t            a.abort();\n\t          }\n\n\t          a.onload = function () {\n\t            var e,\n\t                t,\n\t                r = {\n\t              status: a.status,\n\t              statusText: a.statusText,\n\t              headers: (e = a.getAllResponseHeaders() || \"\", t = new h(), e.replace(/\\r?\\n[\\t ]+/g, \" \").split(/\\r?\\n/).forEach(function (e) {\n\t                var r = e.split(\":\"),\n\t                    n = r.shift().trim();\n\n\t                if (n) {\n\t                  var i = r.join(\":\").trim();\n\t                  t.append(n, i);\n\t                }\n\t              }), t)\n\t            };\n\t            r.url = \"responseURL\" in a ? a.responseURL : r.headers.get(\"X-Request-URL\");\n\t            var n = \"response\" in a ? a.response : a.responseText;\n\t            i(new _(n, r));\n\t          }, a.onerror = function () {\n\t            o(new TypeError(\"Network request failed\"));\n\t          }, a.ontimeout = function () {\n\t            o(new TypeError(\"Network request failed\"));\n\t          }, a.onabort = function () {\n\t            o(new t.DOMException(\"Aborted\", \"AbortError\"));\n\t          }, a.open(s.method, s.url, !0), \"include\" === s.credentials ? a.withCredentials = !0 : \"omit\" === s.credentials && (a.withCredentials = !1), \"responseType\" in a && r.blob && (a.responseType = \"blob\"), s.headers.forEach(function (e, t) {\n\t            a.setRequestHeader(t, e);\n\t          }), s.signal && (s.signal.addEventListener(\"abort\", f), a.onreadystatechange = function () {\n\t            4 === a.readyState && s.signal.removeEventListener(\"abort\", f);\n\t          }), a.send(void 0 === s._bodyInit ? null : s._bodyInit);\n\t        });\n\t      }\n\n\t      b.polyfill = !0, e.fetch || (e.fetch = b, e.Headers = h, e.Request = g, e.Response = _), t.Headers = h, t.Request = g, t.Response = _, t.fetch = b;\n\t    }({});\n\t  }(r), delete r.fetch.polyfill, e.exports = t = r.fetch, t.fetch = r.fetch, t.Headers = r.Headers, t.Request = r.Request, t.Response = r.Response, t.default = r.fetch;\n\t}, function (e, t, r) {\n\t  var n = r(30);\n\n\t  e.exports = /*#__PURE__*/function () {\n\t    function _class12(_ref17) {\n\t      var e = _ref17.fetch,\n\t          _ref17$size = _ref17.size,\n\t          t = _ref17$size === void 0 ? 1e7 : _ref17$size,\n\t          _ref17$chunkSize = _ref17.chunkSize,\n\t          r = _ref17$chunkSize === void 0 ? 32768 : _ref17$chunkSize;\n\n\t      _classCallCheck(this, _class12);\n\n\t      if (!e) throw new Error(\"fetch function required\");\n\t      this.fetch = e, this.chunkSize = r, this.lruCache = new n({\n\t        maxSize: Math.floor(t / r)\n\t      });\n\t    }\n\n\t    _createClass(_class12, [{\n\t      key: \"get\",\n\t      value: function () {\n\t        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(e, t, r, n) {\n\t          var _this15 = this;\n\n\t          var i, o, s, _loop, _e35, a, h;\n\n\t          return regeneratorRuntime.wrap(function _callee26$(_context29) {\n\t            while (1) {\n\t              switch (_context29.prev = _context29.next) {\n\t                case 0:\n\t                  if (!(e.length < t + r)) {\n\t                    _context29.next = 2;\n\t                    break;\n\t                  }\n\n\t                  throw new Error(\"output buffer not big enough for request\");\n\n\t                case 2:\n\t                  i = Math.floor(n / this.chunkSize), o = Math.floor((n + r) / this.chunkSize), s = new Array(o - i + 1);\n\n\t                  _loop = function _loop(_e35) {\n\t                    s[_e35 - i] = _this15._getChunk(_e35).then(function (t) {\n\t                      return {\n\t                        data: t,\n\t                        chunkNumber: _e35\n\t                      };\n\t                    });\n\t                  };\n\n\t                  for (_e35 = i; _e35 <= o; _e35 += 1) {\n\t                    _loop(_e35);\n\t                  }\n\n\t                  _context29.next = 7;\n\t                  return Promise.all(s);\n\n\t                case 7:\n\t                  a = _context29.sent;\n\t                  h = n - a[0].chunkNumber * this.chunkSize;\n\t                  a.forEach(function (_ref18) {\n\t                    var s = _ref18.data,\n\t                        a = _ref18.chunkNumber;\n\t                    var f = a * _this15.chunkSize;\n\t                    var u = 0,\n\t                        c = _this15.chunkSize,\n\t                        l = t + (a - i) * _this15.chunkSize - h;\n\t                    a === i && (l = t, u = h), a === o && (c = n + r - f), s.copy(e, l, u, c);\n\t                  });\n\n\t                case 10:\n\t                case \"end\":\n\t                  return _context29.stop();\n\t              }\n\t            }\n\t          }, _callee26, this);\n\t        }));\n\n\t        function get(_x16, _x17, _x18, _x19) {\n\t          return _get.apply(this, arguments);\n\t        }\n\n\t        return get;\n\t      }()\n\t    }, {\n\t      key: \"_getChunk\",\n\t      value: function _getChunk(e) {\n\t        var t = this.lruCache.get(e);\n\t        if (t) return t;\n\t        var r = this.fetch(e * this.chunkSize, this.chunkSize);\n\t        return this.lruCache.set(e, r), r;\n\t      }\n\t    }]);\n\n\t    return _class12;\n\t  }();\n\t}, function (e, t, r) {\n\t  var _r45 = r(34),\n\t      n = _r45.promisify,\n\t      i = null,\n\t      o = i,\n\t      s = i,\n\t      a = i,\n\t      h = i;\n\n\t  e.exports = /*#__PURE__*/function () {\n\t    function _class13(e) {\n\t      _classCallCheck(this, _class13);\n\n\t      this.position = 0, this.filename = e, this.fd = o(this.filename, \"r\");\n\t    }\n\n\t    _createClass(_class13, [{\n\t      key: \"read\",\n\t      value: function () {\n\t        var _read = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(e) {\n\t          var t,\n\t              r,\n\t              n,\n\t              i,\n\t              _args30 = arguments;\n\t          return regeneratorRuntime.wrap(function _callee27$(_context30) {\n\t            while (1) {\n\t              switch (_context30.prev = _context30.next) {\n\t                case 0:\n\t                  t = _args30.length > 1 && _args30[1] !== undefined ? _args30[1] : 0;\n\t                  r = _args30.length > 2 ? _args30[2] : undefined;\n\t                  n = _args30.length > 3 ? _args30[3] : undefined;\n\t                  i = n;\n\t                  null === n && (i = this.position, this.position += r);\n\t                  _context30.t0 = s;\n\t                  _context30.next = 8;\n\t                  return this.fd;\n\n\t                case 8:\n\t                  _context30.t1 = _context30.sent;\n\t                  _context30.t2 = e;\n\t                  _context30.t3 = t;\n\t                  _context30.t4 = r;\n\t                  _context30.t5 = n;\n\t                  return _context30.abrupt(\"return\", (0, _context30.t0)(_context30.t1, _context30.t2, _context30.t3, _context30.t4, _context30.t5));\n\n\t                case 14:\n\t                case \"end\":\n\t                  return _context30.stop();\n\t              }\n\t            }\n\t          }, _callee27, this);\n\t        }));\n\n\t        function read(_x20) {\n\t          return _read.apply(this, arguments);\n\t        }\n\n\t        return read;\n\t      }()\n\t    }, {\n\t      key: \"readFile\",\n\t      value: function () {\n\t        var _readFile2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {\n\t          return regeneratorRuntime.wrap(function _callee28$(_context31) {\n\t            while (1) {\n\t              switch (_context31.prev = _context31.next) {\n\t                case 0:\n\t                  _context31.t0 = h;\n\t                  _context31.next = 3;\n\t                  return this.fd;\n\n\t                case 3:\n\t                  _context31.t1 = _context31.sent;\n\t                  return _context31.abrupt(\"return\", (0, _context31.t0)(_context31.t1));\n\n\t                case 5:\n\t                case \"end\":\n\t                  return _context31.stop();\n\t              }\n\t            }\n\t          }, _callee28, this);\n\t        }));\n\n\t        function readFile() {\n\t          return _readFile2.apply(this, arguments);\n\t        }\n\n\t        return readFile;\n\t      }()\n\t    }, {\n\t      key: \"stat\",\n\t      value: function () {\n\t        var _stat2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {\n\t          return regeneratorRuntime.wrap(function _callee29$(_context32) {\n\t            while (1) {\n\t              switch (_context32.prev = _context32.next) {\n\t                case 0:\n\t                  _context32.t0 = this._stat;\n\n\t                  if (_context32.t0) {\n\t                    _context32.next = 9;\n\t                    break;\n\t                  }\n\n\t                  _context32.t1 = a;\n\t                  _context32.next = 5;\n\t                  return this.fd;\n\n\t                case 5:\n\t                  _context32.t2 = _context32.sent;\n\t                  _context32.next = 8;\n\t                  return (0, _context32.t1)(_context32.t2);\n\n\t                case 8:\n\t                  this._stat = _context32.sent;\n\n\t                case 9:\n\t                  return _context32.abrupt(\"return\", this._stat);\n\n\t                case 10:\n\t                case \"end\":\n\t                  return _context32.stop();\n\t              }\n\t            }\n\t          }, _callee29, this);\n\t        }));\n\n\t        function stat() {\n\t          return _stat2.apply(this, arguments);\n\t        }\n\n\t        return stat;\n\t      }()\n\t    }]);\n\n\t    return _class13;\n\t  }();\n\t}, function (e, t) {\n\t  e.exports = {\n\t    parseHeaderText: function parseHeaderText(e) {\n\t      var t = e.split(/\\r?\\n/),\n\t          r = [];\n\t      return t.forEach(function (e) {\n\t        var _e$split = e.split(/\\t/),\n\t            _e$split2 = _toArray(_e$split),\n\t            t = _e$split2[0],\n\t            n = _e$split2.slice(1),\n\t            i = n.map(function (e) {\n\t          var _e$split3 = e.split(\":\", 2),\n\t              _e$split4 = _slicedToArray(_e$split3, 2),\n\t              t = _e$split4[0],\n\t              r = _e$split4[1];\n\n\t          return {\n\t            tag: t,\n\t            value: r\n\t          };\n\t        });\n\n\t        t && r.push({\n\t          tag: t.substr(1),\n\t          data: i\n\t        });\n\t      }), r;\n\t    }\n\t  };\n\t}, function (e, t, r) {\n\t  var _r46 = r(0),\n\t      n = _r46.CramUnimplementedError,\n\t      i = _r46.CramSizeLimitError,\n\t      o = r(18);\n\n\t  e.exports = /*#__PURE__*/function () {\n\t    function _class14(e) {\n\t      _classCallCheck(this, _class14);\n\n\t      if (e.cram ? this.cram = e.cram : this.cram = new o({\n\t        url: e.cramUrl,\n\t        path: e.cramPath,\n\t        filehandle: e.cramFilehandle,\n\t        seqFetch: e.seqFetch,\n\t        checkSequenceMD5: e.checkSequenceMD5,\n\t        cacheSize: e.cacheSize\n\t      }), !(this.cram instanceof o)) throw new Error(\"invalid arguments: no cramfile\");\n\t      if (this.index = e.index, !this.index.getEntriesForRange) throw new Error(\"invalid arguments: not an index\");\n\t      this.fetchSizeLimit = e.fetchSizeLimit || 3e6;\n\t    }\n\n\t    _createClass(_class14, [{\n\t      key: \"getRecordsForRange\",\n\t      value: function () {\n\t        var _getRecordsForRange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30(e, t, r) {\n\t          var _this16 = this,\n\t              _Array$prototype;\n\n\t          var o,\n\t              s,\n\t              a,\n\t              h,\n\t              f,\n\t              u,\n\t              c,\n\t              _e36,\n\t              _t23,\n\t              _r48,\n\t              _n7,\n\t              _i13,\n\t              _r47,\n\t              _n6,\n\t              _e37,\n\t              _t24,\n\t              _t25,\n\t              _i12,\n\t              _a6,\n\t              _e38,\n\t              _a7,\n\t              _h,\n\t              _f,\n\t              _u3,\n\t              l,\n\t              _e39,\n\t              _args33 = arguments;\n\n\t          return regeneratorRuntime.wrap(function _callee30$(_context33) {\n\t            while (1) {\n\t              switch (_context33.prev = _context33.next) {\n\t                case 0:\n\t                  o = _args33.length > 3 && _args33[3] !== undefined ? _args33[3] : {};\n\n\t                  if (!(o.viewAsPairs = o.viewAsPairs || !1, o.pairAcrossChr = o.pairAcrossChr || !1, o.maxInsertSize = o.maxInsertSize || 2e5, \"string\" == typeof e)) {\n\t                    _context33.next = 3;\n\t                    break;\n\t                  }\n\n\t                  throw new n(\"string sequence names not yet supported\");\n\n\t                case 3:\n\t                  s = e;\n\t                  _context33.next = 6;\n\t                  return this.index.getEntriesForRange(s, t, r);\n\n\t                case 6:\n\t                  a = _context33.sent;\n\t                  h = a.map(function (e) {\n\t                    return e.sliceBytes;\n\t                  }).reduce(function (e, t) {\n\t                    return e + t;\n\t                  }, 0);\n\n\t                  if (!(h > this.fetchSizeLimit)) {\n\t                    _context33.next = 10;\n\t                    break;\n\t                  }\n\n\t                  throw new i(\"data size of \".concat(h.toLocaleString(), \" bytes exceeded fetch size limit of \").concat(this.fetchSizeLimit.toLocaleString(), \" bytes\"));\n\n\t                case 10:\n\t                  f = function f(n) {\n\t                    return n.sequenceId === e && n.alignmentStart <= r && n.alignmentStart + n.lengthOnRef >= t;\n\t                  };\n\n\t                  _context33.next = 13;\n\t                  return Promise.all(a.map(function (e) {\n\t                    return _this16.getRecordsInSlice(e, f);\n\t                  }));\n\n\t                case 13:\n\t                  u = _context33.sent;\n\t                  c = (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, _toConsumableArray(u));\n\n\t                  if (!o.viewAsPairs) {\n\t                    _context33.next = 36;\n\t                    break;\n\t                  }\n\n\t                  _e36 = {}, _t23 = {};\n\n\t                  for (_r48 = 0; _r48 < c.length; _r48 += 1) {\n\t                    _n7 = c[_r48].readName, _i13 = c[_r48].uniqueId;\n\t                    _e36[_n7] || (_e36[_n7] = 0), _e36[_n7] += 1, _t23[_i13] = 1;\n\t                  }\n\n\t                  _r47 = {};\n\t                  Object.entries(_e36).forEach(function (_ref19) {\n\t                    var _ref20 = _slicedToArray(_ref19, 2),\n\t                        e = _ref20[0],\n\t                        t = _ref20[1];\n\n\t                    1 === t && (_r47[e] = !0);\n\t                  });\n\t                  _n6 = [];\n\n\t                  for (_e37 = 0; _e37 < c.length; _e37 += 1) {\n\t                    _t24 = c[_e37].readName;\n\n\t                    if (_r47[_t24] && c[_e37].mate && (c[_e37].mate.sequenceId === s || o.pairAcrossChr) && Math.abs(c[_e37].alignmentStart - c[_e37].mate.alignmentStart) < o.maxInsertSize) {\n\t                      _t25 = this.index.getEntriesForRange(c[_e37].mate.sequenceId, c[_e37].mate.alignmentStart, c[_e37].mate.alignmentStart + 1);\n\n\t                      _n6.push(_t25);\n\t                    }\n\t                  }\n\n\t                  _context33.next = 24;\n\t                  return Promise.all(_n6);\n\n\t                case 24:\n\t                  _i12 = _context33.sent;\n\t                  _a6 = [];\n\n\t                  for (_e38 = 0; _e38 < _i12.length; _e38 += 1) {\n\t                    (_a7 = _a6).push.apply(_a7, _toConsumableArray(_i12[_e38]));\n\t                  }\n\n\t                  _a6 = _a6.sort(function (e, t) {\n\t                    return e.toString().localeCompare(t.toString());\n\t                  }).filter(function (e, t, r) {\n\t                    return !t || e.toString() !== r[t - 1].toString();\n\t                  });\n\t                  _h = [], _f = [], _u3 = _a6.map(function (e) {\n\t                    return e.sliceBytes;\n\t                  }).reduce(function (e, t) {\n\t                    return e + t;\n\t                  }, 0);\n\n\t                  if (!(_u3 > this.fetchSizeLimit)) {\n\t                    _context33.next = 31;\n\t                    break;\n\t                  }\n\n\t                  throw new Error(\"mate data size of \".concat(_u3.toLocaleString(), \" bytes exceeded fetch size limit of \").concat(this.fetchSizeLimit.toLocaleString(), \" bytes\"));\n\n\t                case 31:\n\t                  _a6.forEach(function (e) {\n\t                    var n = _this16.cram.featureCache.get(e.toString());\n\n\t                    n || (n = _this16.getRecordsInSlice(e, function () {\n\t                      return !0;\n\t                    }), _this16.cram.featureCache.set(e.toString(), n)), _h.push(n);\n\t                    var i = n.then(function (e) {\n\t                      var n = [];\n\n\t                      for (var _i14 = 0; _i14 < e.length; _i14 += 1) {\n\t                        var _o6 = e[_i14];\n\t                        _r47[_o6.readName] && !_t23[_o6.uniqueId] && n.push(_o6);\n\t                      }\n\n\t                      return n;\n\t                    });\n\n\t                    _f.push(i);\n\t                  });\n\n\t                  _context33.next = 34;\n\t                  return Promise.all(_f);\n\n\t                case 34:\n\t                  l = _context33.sent;\n\n\t                  if (l.length) {\n\t                    _e39 = l.reduce(function (e, t) {\n\t                      return e.concat(t);\n\t                    });\n\t                    c = c.concat(_e39);\n\t                  }\n\n\t                case 36:\n\t                  return _context33.abrupt(\"return\", c);\n\n\t                case 37:\n\t                case \"end\":\n\t                  return _context33.stop();\n\t              }\n\t            }\n\t          }, _callee30, this);\n\t        }));\n\n\t        function getRecordsForRange(_x21, _x22, _x23) {\n\t          return _getRecordsForRange.apply(this, arguments);\n\t        }\n\n\t        return getRecordsForRange;\n\t      }()\n\t    }, {\n\t      key: \"getRecordsInSlice\",\n\t      value: function getRecordsInSlice(_ref21, n) {\n\t        var e = _ref21.containerStart,\n\t            t = _ref21.sliceStart,\n\t            r = _ref21.sliceBytes;\n\t        return this.cram.getContainerAtPosition(e).getSlice(t, r).getRecords(n);\n\t      }\n\t    }, {\n\t      key: \"hasDataForReferenceSequence\",\n\t      value: function hasDataForReferenceSequence(e) {\n\t        return this.index.hasDataForReferenceSequence(e);\n\t      }\n\t    }]);\n\n\t    return _class14;\n\t  }();\n\t}, function (e, t, r) {\n\t  var _r49 = r(34),\n\t      n = _r49.promisify,\n\t      i = n(r(20).gunzip),\n\t      _r50 = r(33),\n\t      o = _r50.open,\n\t      _r51 = r(0),\n\t      s = _r51.CramMalformedError;\n\n\t  var a = /*#__PURE__*/function () {\n\t    function a(e) {\n\t      _classCallCheck(this, a);\n\n\t      Object.assign(this, e);\n\t    }\n\n\t    _createClass(a, [{\n\t      key: \"toString\",\n\t      value: function toString() {\n\t        return \"\".concat(this.start, \":\").concat(this.span, \":\").concat(this.containerStart, \":\").concat(this.sliceStart, \":\").concat(this.sliceBytes);\n\t      }\n\t    }]);\n\n\t    return a;\n\t  }();\n\n\t  function h(e, t) {\n\t    if (t.some(function (e) {\n\t      return void 0 === e;\n\t    })) throw new s(\"invalid .crai index file\");\n\n\t    var _t26 = _slicedToArray(t, 6),\n\t        r = _t26[0],\n\t        n = _t26[1],\n\t        i = _t26[2],\n\t        o = _t26[3],\n\t        h = _t26[4],\n\t        f = _t26[5];\n\n\t    e[r] || (e[r] = []), e[r].push(new a({\n\t      start: n,\n\t      span: i,\n\t      containerStart: o,\n\t      sliceStart: h,\n\t      sliceBytes: f\n\t    }));\n\t  }\n\n\t  e.exports = /*#__PURE__*/function () {\n\t    function _class15(e) {\n\t      _classCallCheck(this, _class15);\n\n\t      var t = o(e.url, e.path, e.filehandle);\n\t      this.readFile = t.readFile.bind(t), this.index = this.parseIndex();\n\t    }\n\n\t    _createClass(_class15, [{\n\t      key: \"parseIndex\",\n\t      value: function parseIndex() {\n\t        var e = {};\n\t        return this.readFile().then(function (e) {\n\t          return 31 === e[0] && 139 === e[1] ? i(e) : e;\n\t        }).then(function (t) {\n\t          var r = [],\n\t              n = \"\";\n\n\t          for (var _i15 = 0; _i15 < t.length; _i15 += 1) {\n\t            var _o7 = t[_i15];\n\t            if (_o7 >= 48 && _o7 <= 57 || !n && 45 === _o7) n += String.fromCharCode(_o7);else if (9 === _o7) r.push(Number.parseInt(n, 10)), n = \"\";else if (10 === _o7) r.push(Number.parseInt(n, 10)), n = \"\", h(e, r), r = [];else if (13 !== _o7 && 32 !== _o7) throw new s(\"invalid .crai index file\");\n\t          }\n\n\t          return n && r.push(Number.parseInt(n, 10)), 6 === r.length && h(e, r), Object.entries(e).forEach(function (_ref22) {\n\t            var _ref23 = _slicedToArray(_ref22, 2),\n\t                t = _ref23[0],\n\t                r = _ref23[1];\n\n\t            e[t] = r.sort(function (e, t) {\n\t              return e.start - t.start || e.span - t.span;\n\t            });\n\t          }), e;\n\t        });\n\t      }\n\t    }, {\n\t      key: \"getIndex\",\n\t      value: function getIndex() {\n\t        return this.index;\n\t      }\n\t    }, {\n\t      key: \"hasDataForReferenceSequence\",\n\t      value: function () {\n\t        var _hasDataForReferenceSequence = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31(e) {\n\t          return regeneratorRuntime.wrap(function _callee31$(_context34) {\n\t            while (1) {\n\t              switch (_context34.prev = _context34.next) {\n\t                case 0:\n\t                  _context34.next = 2;\n\t                  return this.index;\n\n\t                case 2:\n\t                  _context34.t0 = e;\n\t                  return _context34.abrupt(\"return\", !!_context34.sent[_context34.t0]);\n\n\t                case 4:\n\t                case \"end\":\n\t                  return _context34.stop();\n\t              }\n\t            }\n\t          }, _callee31, this);\n\t        }));\n\n\t        function hasDataForReferenceSequence(_x24) {\n\t          return _hasDataForReferenceSequence.apply(this, arguments);\n\t        }\n\n\t        return hasDataForReferenceSequence;\n\t      }()\n\t    }, {\n\t      key: \"getEntriesForRange\",\n\t      value: function () {\n\t        var _getEntriesForRange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32(e, t, r) {\n\t          var n, i, o, s, a, h, _e40, f, u, c;\n\n\t          return regeneratorRuntime.wrap(function _callee32$(_context35) {\n\t            while (1) {\n\t              switch (_context35.prev = _context35.next) {\n\t                case 0:\n\t                  _context35.next = 2;\n\t                  return this.index;\n\n\t                case 2:\n\t                  _context35.t0 = e;\n\t                  n = _context35.sent[_context35.t0];\n\n\t                  if (n) {\n\t                    _context35.next = 6;\n\t                    break;\n\t                  }\n\n\t                  return _context35.abrupt(\"return\", []);\n\n\t                case 6:\n\t                  i = n.length, o = function o(e) {\n\t                    var n = e.start,\n\t                        i = e.start + e.span;\n\t                    return n >= r ? -1 : i <= t ? 1 : 0;\n\t                  };\n\t                  a = 0, h = i - 1;\n\n\t                case 8:\n\t                  if (!(a <= h)) {\n\t                    _context35.next = 19;\n\t                    break;\n\t                  }\n\n\t                  _e40 = o(n[s = Math.round((h + a) / 2)]);\n\n\t                  if (!(_e40 > 0)) {\n\t                    _context35.next = 14;\n\t                    break;\n\t                  }\n\n\t                  a = s + 1;\n\t                  _context35.next = 17;\n\t                  break;\n\n\t                case 14:\n\t                  if (_e40 < 0) {\n\t                    _context35.next = 16;\n\t                    break;\n\t                  }\n\n\t                  return _context35.abrupt(\"break\", 19);\n\n\t                case 16:\n\t                  h = s - 1;\n\n\t                case 17:\n\t                  _context35.next = 8;\n\t                  break;\n\n\t                case 19:\n\t                  f = s;\n\n\t                  for (; f && !o(n[f - 1]);) {\n\t                    f -= 1;\n\t                  }\n\n\t                  u = s;\n\n\t                  for (; u < i - 1 && !o(n[u + 1]);) {\n\t                    u += 1;\n\t                  }\n\n\t                  c = n[f].start;\n\t                  return _context35.abrupt(\"return\", n[u].start + n[u].span >= t && r >= c ? n.slice(f, u + 1) : []);\n\n\t                case 25:\n\t                case \"end\":\n\t                  return _context35.stop();\n\t              }\n\t            }\n\t          }, _callee32, this);\n\t        }));\n\n\t        function getEntriesForRange(_x25, _x26, _x27) {\n\t          return _getEntriesForRange.apply(this, arguments);\n\t        }\n\n\t        return getEntriesForRange;\n\t      }()\n\t    }]);\n\n\t    return _class15;\n\t  }();\n\t}]);\n\n\tvar READ_STRAND_FLAG$2 = 0x10;\n\tvar MATE_STRAND_FLAG$2 = 0x20;\n\tvar CRAM_MATE_STRAND_FLAG = 0x1;\n\t/**\n\t * Class for reading a cram file\n\t *\n\t * @param config\n\t * @constructor\n\t */\n\n\tvar CramReader = function CramReader(config, genome, browser) {\n\t  this.config = config;\n\t  this.browser = browser;\n\t  this.genome = genome;\n\t  this.cramFile = new gmodCRAM.CramFile({\n\t    filehandle: new FileHandler(config.url, config),\n\t    seqFetch: config.seqFetch || seqFetch.bind(this),\n\t    checkSequenceMD5: config.checkSequenceMD5 !== undefined ? config.checkSequenceMD5 : true\n\t  });\n\t  var indexFileHandle = new FileHandler(config.indexURL, config);\n\t  this.indexedCramFile = new gmodCRAM.IndexedCramFile({\n\t    cram: this.cramFile,\n\t    index: new gmodCRAM.CraiIndex({\n\t      filehandle: indexFileHandle\n\t    }),\n\t    fetchSizeLimit: 30000000\n\t  });\n\t  BamUtils.setReaderDefaults(this, config);\n\t};\n\n\tfunction seqFetch(seqID, start, end) {\n\t  var sequence = this.genome.sequence;\n\t  var genome = this.genome;\n\t  return this.getHeader().then(function (header) {\n\t    var chrName = genome.getChromosomeName(header.chrNames[seqID]);\n\t    return sequence.getSequence(chrName, start - 1, end);\n\t  });\n\t}\n\t/**\n\t * Parse the sequence dictionary from the SAM header and build chr name tables.  This function\n\t * is public so it can be unit tested.\n\t *\n\t * @returns {PromiseLike<chrName, chrToIndex, chrAliasTable}>}\n\t */\n\n\n\tCramReader.prototype.getHeader = function () {\n\t  if (this.header) {\n\t    return Promise.resolve(this.header);\n\t  } else {\n\t    var self = this;\n\t    var genome = this.genome;\n\t    return this.cramFile.getSamHeader().then(function (samHeader) {\n\t      var chrToIndex = {};\n\t      var chrNames = [];\n\t      var chrAliasTable = {};\n\t      var readGroups = [];\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = samHeader[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var line = _step.value;\n\n\t          if ('SQ' === line.tag) {\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\n\t            try {\n\t              for (var _iterator2 = line.data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                var d = _step2.value;\n\n\t                if (d.tag === \"SN\") {\n\t                  var seq = d.value;\n\t                  chrToIndex[seq] = chrNames.length;\n\t                  chrNames.push(seq);\n\n\t                  if (genome) {\n\t                    var alias = genome.getChromosomeName(seq);\n\t                    chrAliasTable[alias] = seq;\n\t                  }\n\n\t                  break;\n\t                }\n\t              }\n\t            } catch (err) {\n\t              _didIteratorError2 = true;\n\t              _iteratorError2 = err;\n\t            } finally {\n\t              try {\n\t                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t                  _iterator2.return();\n\t                }\n\t              } finally {\n\t                if (_didIteratorError2) {\n\t                  throw _iteratorError2;\n\t                }\n\t              }\n\t            }\n\t          } else if ('RG' === line.tag) {\n\t            readGroups.push(line.data);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\n\t      self.header = {\n\t        chrNames: chrNames,\n\t        chrToIndex: chrToIndex,\n\t        chrAliasTable: chrAliasTable,\n\t        readGroups: readGroups\n\t      };\n\t      return self.header;\n\t    });\n\t  }\n\t};\n\n\tCramReader.prototype.readAlignments = function (chr, bpStart, bpEnd) {\n\t  var self = this;\n\t  var browser = this.browser;\n\t  return this.getHeader().then(function (header) {\n\t    var queryChr = header.chrAliasTable.hasOwnProperty(chr) ? header.chrAliasTable[chr] : chr;\n\t    var chrIdx = header.chrToIndex[queryChr];\n\t    var alignmentContainer = new AlignmentContainer(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported, self.alleleFreqThreshold);\n\n\t    if (chrIdx === undefined) {\n\t      return Promise.resolve(alignmentContainer);\n\t    } else {\n\t      return self.indexedCramFile.getRecordsForRange(chrIdx, bpStart, bpEnd).then(function (records) {\n\t        var _iteratorNormalCompletion3 = true;\n\t        var _didIteratorError3 = false;\n\t        var _iteratorError3 = undefined;\n\n\t        try {\n\t          for (var _iterator3 = records[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t            var record = _step3.value;\n\t            var refID = record.sequenceId;\n\t            var pos = record.alignmentStart;\n\t            var alignmentEnd = pos + record.lengthOnRef;\n\n\t            if (refID < 0) {\n\t              continue; // unmapped read\n\t            } else if (refID > chrIdx || pos > bpEnd) {\n\t              return; // off right edge, we're done\n\t            } else if (refID < chrIdx) {\n\t              continue; // Sequence to left of start, not sure this is possible\n\t            }\n\n\t            if (alignmentEnd < bpStart) {\n\t              continue;\n\t            } // Record out-of-range \"to the left\", skip to next one\n\n\n\t            var alignment = decodeCramRecord(record, header.chrNames); //  if (filter.pass(alignment)) {\n\n\t            alignmentContainer.push(alignment); //  }\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError3 = true;\n\t          _iteratorError3 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t              _iterator3.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError3) {\n\t              throw _iteratorError3;\n\t            }\n\t          }\n\t        }\n\n\t        alignmentContainer.finish();\n\t        return alignmentContainer;\n\t      }).catch(function (error) {\n\t        var message = error.message;\n\n\t        if (message && message.indexOf(\"MD5\") >= 0) {\n\t          message = \"Sequence mismatch. Is this the correct genome for the loaded CRAM?\";\n\t        }\n\n\t        browser.presentAlert(message);\n\t        throw error;\n\t      });\n\t    }\n\n\t    function decodeCramRecord(record, chrNames) {\n\t      var alignment = new BamAlignment();\n\t      alignment.chr = chrNames[record.sequenceId];\n\t      alignment.start = record.alignmentStart - 1;\n\t      alignment.lengthOnRef = record.lengthOnRef;\n\t      alignment.flags = record.flags;\n\t      alignment.strand = !(record.flags & READ_STRAND_FLAG$2);\n\t      alignment.fragmentLength = record.templateLength || record.templateSize;\n\t      alignment.mq = record.mappingQuality;\n\t      alignment.end = record.alignmentStart + record.lengthOnRef;\n\t      alignment.readGroupId = record.readGroupId;\n\n\t      if (record.mate && record.mate.sequenceId !== undefined) {\n\t        var strand = record.mate.flags !== undefined ? !(record.mate.flags & CRAM_MATE_STRAND_FLAG) : !(record.flags & MATE_STRAND_FLAG$2);\n\t        alignment.mate = {\n\t          chr: chrNames[record.mate.sequenceId],\n\t          position: record.mate.alignmentStart,\n\t          strand: strand\n\t        };\n\t      }\n\n\t      alignment.seq = record.getReadBases();\n\t      alignment.qual = record.qualityScores;\n\t      alignment.tagDict = record.tags;\n\t      alignment.readName = record.readName; // TODO -- cigar encoded in tag?\n\t      // BamUtils.bam_tag2cigar(ba, blockEnd, p, lseq, alignment, cigarArray);\n\n\t      makeBlocks(record, alignment);\n\n\t      if (alignment.mate && alignment.start > alignment.mate.position && alignment.fragmentLength > 0) {\n\t        alignment.fragmentLength = -alignment.fragmentLength;\n\t      }\n\n\t      BamUtils.setPairOrientation(alignment);\n\t      return alignment;\n\t    }\n\n\t    function makeBlocks(cramRecord, alignment) {\n\t      var blocks = [];\n\t      var insertions;\n\t      var gaps;\n\t      var basesUsed = 0;\n\t      var cigarString = '';\n\t      alignment.scStart = alignment.start;\n\t      alignment.scLengthOnRef = alignment.lengthOnRef;\n\n\t      if (cramRecord.readFeatures) {\n\t        var _iteratorNormalCompletion4 = true;\n\t        var _didIteratorError4 = false;\n\t        var _iteratorError4 = undefined;\n\n\t        try {\n\t          for (var _iterator4 = cramRecord.readFeatures[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t            var feature = _step4.value;\n\t            var code = feature.code;\n\t            var data = feature.data;\n\t            var readPos = feature.pos - 1;\n\t            var refPos = feature.refPos - 1;\n\n\t            switch (code) {\n\t              case 'S':\n\t              case 'I':\n\t              case 'i':\n\t              case 'N':\n\t              case 'D':\n\t                if (readPos > basesUsed) {\n\t                  var _len = readPos - basesUsed;\n\n\t                  blocks.push(new AlignmentBlock({\n\t                    start: refPos - _len,\n\t                    seqOffset: basesUsed,\n\t                    len: _len,\n\t                    type: 'M'\n\t                  }));\n\t                  basesUsed += _len;\n\t                  cigarString += _len + 'M';\n\t                }\n\n\t                if ('S' === code) {\n\t                  var scPos = refPos;\n\t                  alignment.scLengthOnRef += data.length;\n\n\t                  if (readPos === 0) {\n\t                    alignment.scStart -= data.length;\n\t                    scPos -= data.length;\n\t                  }\n\n\t                  var _len2 = data.length;\n\t                  blocks.push(new AlignmentBlock({\n\t                    start: scPos,\n\t                    seqOffset: basesUsed,\n\t                    len: _len2,\n\t                    type: 'S'\n\t                  }));\n\t                  basesUsed += _len2;\n\t                  cigarString += _len2 + code;\n\t                } else if ('I' === code || 'i' === code) {\n\t                  if (insertions === undefined) {\n\t                    insertions = [];\n\t                  }\n\n\t                  var _len3 = 'i' === code ? 1 : data.length;\n\n\t                  insertions.push(new AlignmentBlock({\n\t                    start: refPos - 1,\n\t                    len: _len3,\n\t                    seqOffset: basesUsed,\n\t                    type: 'I'\n\t                  }));\n\t                  basesUsed += _len3;\n\t                  cigarString += _len3 + code;\n\t                } else if ('D' === code || 'N' === code) {\n\t                  if (!gaps) {\n\t                    gaps = [];\n\t                  }\n\n\t                  gaps.push({\n\t                    start: refPos,\n\t                    len: data,\n\t                    type: code\n\t                  });\n\t                  cigarString += data + code;\n\t                }\n\n\t                break;\n\n\t              case 'H':\n\t              case 'P':\n\t                cigarString += data + code;\n\t                break;\n\n\t              default: //  Ignore\n\n\t            }\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError4 = true;\n\t          _iteratorError4 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t              _iterator4.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError4) {\n\t              throw _iteratorError4;\n\t            }\n\t          }\n\t        }\n\t      } // Last block\n\n\n\t      var len = cramRecord.readLength - basesUsed;\n\n\t      if (len > 0) {\n\t        blocks.push(new AlignmentBlock({\n\t          start: cramRecord.alignmentStart + cramRecord.lengthOnRef - len - 1,\n\t          seqOffset: basesUsed,\n\t          len: len,\n\t          type: 'M'\n\t        }));\n\t        cigarString += len + 'M';\n\t      }\n\n\t      alignment.blocks = blocks;\n\t      alignment.insertions = insertions;\n\t      alignment.gaps = gaps;\n\t      alignment.cigar = cigarString;\n\t    }\n\t  });\n\t};\n\n\tvar FileHandler = /*#__PURE__*/function () {\n\t  function FileHandler(source, config) {\n\t    var _this = this;\n\n\t    _classCallCheck(this, FileHandler);\n\n\t    this.position = 0;\n\t    this.url = source;\n\t    this.config = config;\n\t    this.cache = new BufferCache({\n\t      fetch: function fetch(start, length) {\n\t        return _this._fetch(start, length);\n\t      }\n\t    });\n\t  }\n\n\t  _createClass(FileHandler, [{\n\t    key: \"_fetch\",\n\t    value: function () {\n\t      var _fetch2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(position, length) {\n\t        var loadRange, arrayBuffer;\n\t        return regeneratorRuntime.wrap(function _callee$(_context) {\n\t          while (1) {\n\t            switch (_context.prev = _context.next) {\n\t              case 0:\n\t                loadRange = {\n\t                  start: position,\n\t                  size: length\n\t                };\n\t                this._stat = {\n\t                  size: undefined\n\t                };\n\t                _context.next = 4;\n\t                return igvxhr.loadArrayBuffer(this.url, buildOptions(this.config, {\n\t                  range: loadRange\n\t                }));\n\n\t              case 4:\n\t                arrayBuffer = _context.sent;\n\t                return _context.abrupt(\"return\", Buffer.from(arrayBuffer));\n\n\t              case 6:\n\t              case \"end\":\n\t                return _context.stop();\n\t            }\n\t          }\n\t        }, _callee, this);\n\t      }));\n\n\t      function _fetch(_x, _x2) {\n\t        return _fetch2.apply(this, arguments);\n\t      }\n\n\t      return _fetch;\n\t    }()\n\t  }, {\n\t    key: \"read\",\n\t    value: function () {\n\t      var _read = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(buffer) {\n\t        var offset,\n\t            length,\n\t            position,\n\t            readPosition,\n\t            _args2 = arguments;\n\t        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t          while (1) {\n\t            switch (_context2.prev = _context2.next) {\n\t              case 0:\n\t                offset = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 0;\n\t                length = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : Infinity;\n\t                position = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : 0;\n\t                readPosition = position;\n\n\t                if (readPosition === null) {\n\t                  readPosition = this.position;\n\t                  this.position += length;\n\t                }\n\n\t                return _context2.abrupt(\"return\", this.cache.get(buffer, offset, length, position));\n\n\t              case 6:\n\t              case \"end\":\n\t                return _context2.stop();\n\t            }\n\t          }\n\t        }, _callee2, this);\n\t      }));\n\n\t      function read(_x3) {\n\t        return _read.apply(this, arguments);\n\t      }\n\n\t      return read;\n\t    }()\n\t  }, {\n\t    key: \"readFile\",\n\t    value: function () {\n\t      var _readFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n\t        var arrayBuffer;\n\t        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t          while (1) {\n\t            switch (_context3.prev = _context3.next) {\n\t              case 0:\n\t                _context3.next = 2;\n\t                return igvxhr.loadArrayBuffer(this.url, buildOptions(this.config));\n\n\t              case 2:\n\t                arrayBuffer = _context3.sent;\n\t                return _context3.abrupt(\"return\", Buffer.from(arrayBuffer));\n\n\t              case 4:\n\t              case \"end\":\n\t                return _context3.stop();\n\t            }\n\t          }\n\t        }, _callee3, this);\n\t      }));\n\n\t      function readFile() {\n\t        return _readFile.apply(this, arguments);\n\t      }\n\n\t      return readFile;\n\t    }()\n\t  }, {\n\t    key: \"stat\",\n\t    value: function () {\n\t      var _stat = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n\t        var buf;\n\t        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t          while (1) {\n\t            switch (_context4.prev = _context4.next) {\n\t              case 0:\n\t                if (this._stat) {\n\t                  _context4.next = 6;\n\t                  break;\n\t                }\n\n\t                buf = Buffer.allocUnsafe(10);\n\t                _context4.next = 4;\n\t                return this.read(buf, 0, 10, 0);\n\n\t              case 4:\n\t                if (this._stat) {\n\t                  _context4.next = 6;\n\t                  break;\n\t                }\n\n\t                throw new Error(\"unable to determine size of file at \".concat(this.url));\n\n\t              case 6:\n\t                return _context4.abrupt(\"return\", this._stat);\n\n\t              case 7:\n\t              case \"end\":\n\t                return _context4.stop();\n\t            }\n\t          }\n\t        }, _callee4, this);\n\t      }));\n\n\t      function stat() {\n\t        return _stat.apply(this, arguments);\n\t      }\n\n\t      return stat;\n\t    }()\n\t  }]);\n\n\t  return FileHandler;\n\t}();\n\n\tvar BufferCache = /*#__PURE__*/function () {\n\t  function BufferCache(_ref) {\n\t    var fetch = _ref.fetch,\n\t        _ref$size = _ref.size,\n\t        size = _ref$size === void 0 ? 10000000 : _ref$size,\n\t        _ref$chunkSize = _ref.chunkSize,\n\t        chunkSize = _ref$chunkSize === void 0 ? 32768 : _ref$chunkSize;\n\n\t    _classCallCheck(this, BufferCache);\n\n\t    this.fetch = fetch;\n\t    this.chunkSize = chunkSize;\n\t    this.lruCache = new QuickLRU({\n\t      maxSize: Math.floor(size / chunkSize)\n\t    });\n\t  }\n\n\t  _createClass(BufferCache, [{\n\t    key: \"get\",\n\t    value: function () {\n\t      var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(outputBuffer, offset, length, position) {\n\t        var _this2 = this;\n\n\t        var firstChunk, lastChunk, fetches, _loop, chunk, chunks, chunksOffset;\n\n\t        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t          while (1) {\n\t            switch (_context5.prev = _context5.next) {\n\t              case 0:\n\t                if (!(outputBuffer.length < offset + length)) {\n\t                  _context5.next = 2;\n\t                  break;\n\t                }\n\n\t                throw new Error('output buffer not big enough for request');\n\n\t              case 2:\n\t                // calculate the list of chunks involved in this fetch\n\t                firstChunk = Math.floor(position / this.chunkSize);\n\t                lastChunk = Math.floor((position + length) / this.chunkSize); // fetch them all as necessary\n\n\t                fetches = new Array(lastChunk - firstChunk + 1);\n\n\t                _loop = function _loop(chunk) {\n\t                  fetches[chunk - firstChunk] = _this2._getChunk(chunk).then(function (data) {\n\t                    return {\n\t                      data: data,\n\t                      chunkNumber: chunk\n\t                    };\n\t                  });\n\t                };\n\n\t                for (chunk = firstChunk; chunk <= lastChunk; chunk += 1) {\n\t                  _loop(chunk);\n\t                } // stitch together the response buffer using them\n\n\n\t                _context5.next = 9;\n\t                return Promise.all(fetches);\n\n\t              case 9:\n\t                chunks = _context5.sent;\n\t                chunksOffset = position - chunks[0].chunkNumber * this.chunkSize;\n\t                chunks.forEach(function (_ref2) {\n\t                  var data = _ref2.data,\n\t                      chunkNumber = _ref2.chunkNumber;\n\t                  var chunkPositionStart = chunkNumber * _this2.chunkSize;\n\t                  var copyStart = 0;\n\t                  var copyEnd = _this2.chunkSize;\n\t                  var copyOffset = offset + (chunkNumber - firstChunk) * _this2.chunkSize - chunksOffset;\n\n\t                  if (chunkNumber === firstChunk) {\n\t                    copyOffset = offset;\n\t                    copyStart = chunksOffset;\n\t                  }\n\n\t                  if (chunkNumber === lastChunk) {\n\t                    copyEnd = position + length - chunkPositionStart;\n\t                  }\n\n\t                  data.copy(outputBuffer, copyOffset, copyStart, copyEnd);\n\t                });\n\n\t              case 12:\n\t              case \"end\":\n\t                return _context5.stop();\n\t            }\n\t          }\n\t        }, _callee5, this);\n\t      }));\n\n\t      function get(_x4, _x5, _x6, _x7) {\n\t        return _get.apply(this, arguments);\n\t      }\n\n\t      return get;\n\t    }()\n\t  }, {\n\t    key: \"_getChunk\",\n\t    value: function _getChunk(chunkNumber) {\n\t      var cachedPromise = this.lruCache.get(chunkNumber);\n\t      if (cachedPromise) return cachedPromise;\n\t      var freshPromise = this.fetch(chunkNumber * this.chunkSize, this.chunkSize);\n\t      this.lruCache.set(chunkNumber, freshPromise);\n\t      return freshPromise;\n\t    }\n\t  }]);\n\n\t  return BufferCache;\n\t}(); // From https://github.com/sindresorhus/quick-lru\n\n\tvar QuickLRU = /*#__PURE__*/function () {\n\t  function QuickLRU() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t    _classCallCheck(this, QuickLRU);\n\n\t    if (!(options.maxSize && options.maxSize > 0)) {\n\t      throw new TypeError('`maxSize` must be a number greater than 0');\n\t    }\n\n\t    this.maxSize = options.maxSize;\n\t    this.cache = new Map();\n\t    this.oldCache = new Map();\n\t    this._size = 0;\n\t  }\n\n\t  _createClass(QuickLRU, [{\n\t    key: \"_set\",\n\t    value: function _set(key, value) {\n\t      this.cache.set(key, value);\n\t      this._size++;\n\n\t      if (this._size >= this.maxSize) {\n\t        this._size = 0;\n\t        this.oldCache = this.cache;\n\t        this.cache = new Map();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"get\",\n\t    value: function get(key) {\n\t      if (this.cache.has(key)) {\n\t        return this.cache.get(key);\n\t      }\n\n\t      if (this.oldCache.has(key)) {\n\t        var value = this.oldCache.get(key);\n\n\t        this._set(key, value);\n\n\t        return value;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"set\",\n\t    value: function set(key, value) {\n\t      if (this.cache.has(key)) {\n\t        this.cache.set(key, value);\n\t      } else {\n\t        this._set(key, value);\n\t      }\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: \"has\",\n\t    value: function has(key) {\n\t      return this.cache.has(key) || this.oldCache.has(key);\n\t    }\n\t  }, {\n\t    key: \"peek\",\n\t    value: function peek(key) {\n\t      if (this.cache.has(key)) {\n\t        return this.cache.get(key);\n\t      }\n\n\t      if (this.oldCache.has(key)) {\n\t        return this.oldCache.get(key);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"delete\",\n\t    value: function _delete(key) {\n\t      var deleted = this.cache.delete(key);\n\n\t      if (deleted) {\n\t        this._size--;\n\t      }\n\n\t      return this.oldCache.delete(key) || deleted;\n\t    }\n\t  }, {\n\t    key: \"clear\",\n\t    value: function clear() {\n\t      this.cache.clear();\n\t      this.oldCache.clear();\n\t      this._size = 0;\n\t    }\n\t  }, {\n\t    key: \"keys\",\n\t    value: /*#__PURE__*/regeneratorRuntime.mark(function keys() {\n\t      var _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, _step5$value, key;\n\n\t      return regeneratorRuntime.wrap(function keys$(_context6) {\n\t        while (1) {\n\t          switch (_context6.prev = _context6.next) {\n\t            case 0:\n\t              _iteratorNormalCompletion5 = true;\n\t              _didIteratorError5 = false;\n\t              _iteratorError5 = undefined;\n\t              _context6.prev = 3;\n\t              _iterator5 = this[Symbol.iterator]();\n\n\t            case 5:\n\t              if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {\n\t                _context6.next = 12;\n\t                break;\n\t              }\n\n\t              _step5$value = _slicedToArray(_step5.value, 1), key = _step5$value[0];\n\t              _context6.next = 9;\n\t              return key;\n\n\t            case 9:\n\t              _iteratorNormalCompletion5 = true;\n\t              _context6.next = 5;\n\t              break;\n\n\t            case 12:\n\t              _context6.next = 18;\n\t              break;\n\n\t            case 14:\n\t              _context6.prev = 14;\n\t              _context6.t0 = _context6[\"catch\"](3);\n\t              _didIteratorError5 = true;\n\t              _iteratorError5 = _context6.t0;\n\n\t            case 18:\n\t              _context6.prev = 18;\n\t              _context6.prev = 19;\n\n\t              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t                _iterator5.return();\n\t              }\n\n\t            case 21:\n\t              _context6.prev = 21;\n\n\t              if (!_didIteratorError5) {\n\t                _context6.next = 24;\n\t                break;\n\t              }\n\n\t              throw _iteratorError5;\n\n\t            case 24:\n\t              return _context6.finish(21);\n\n\t            case 25:\n\t              return _context6.finish(18);\n\n\t            case 26:\n\t            case \"end\":\n\t              return _context6.stop();\n\t          }\n\t        }\n\t      }, keys, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n\t    })\n\t  }, {\n\t    key: \"values\",\n\t    value: /*#__PURE__*/regeneratorRuntime.mark(function values() {\n\t      var _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, _step6$value, value;\n\n\t      return regeneratorRuntime.wrap(function values$(_context7) {\n\t        while (1) {\n\t          switch (_context7.prev = _context7.next) {\n\t            case 0:\n\t              _iteratorNormalCompletion6 = true;\n\t              _didIteratorError6 = false;\n\t              _iteratorError6 = undefined;\n\t              _context7.prev = 3;\n\t              _iterator6 = this[Symbol.iterator]();\n\n\t            case 5:\n\t              if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {\n\t                _context7.next = 12;\n\t                break;\n\t              }\n\n\t              _step6$value = _slicedToArray(_step6.value, 2), value = _step6$value[1];\n\t              _context7.next = 9;\n\t              return value;\n\n\t            case 9:\n\t              _iteratorNormalCompletion6 = true;\n\t              _context7.next = 5;\n\t              break;\n\n\t            case 12:\n\t              _context7.next = 18;\n\t              break;\n\n\t            case 14:\n\t              _context7.prev = 14;\n\t              _context7.t0 = _context7[\"catch\"](3);\n\t              _didIteratorError6 = true;\n\t              _iteratorError6 = _context7.t0;\n\n\t            case 18:\n\t              _context7.prev = 18;\n\t              _context7.prev = 19;\n\n\t              if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n\t                _iterator6.return();\n\t              }\n\n\t            case 21:\n\t              _context7.prev = 21;\n\n\t              if (!_didIteratorError6) {\n\t                _context7.next = 24;\n\t                break;\n\t              }\n\n\t              throw _iteratorError6;\n\n\t            case 24:\n\t              return _context7.finish(21);\n\n\t            case 25:\n\t              return _context7.finish(18);\n\n\t            case 26:\n\t            case \"end\":\n\t              return _context7.stop();\n\t          }\n\t        }\n\t      }, values, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n\t    })\n\t  }, {\n\t    key: Symbol.iterator,\n\t    value: /*#__PURE__*/regeneratorRuntime.mark(function value() {\n\t      var _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, item, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, _item, _item2, key;\n\n\t      return regeneratorRuntime.wrap(function value$(_context8) {\n\t        while (1) {\n\t          switch (_context8.prev = _context8.next) {\n\t            case 0:\n\t              _iteratorNormalCompletion7 = true;\n\t              _didIteratorError7 = false;\n\t              _iteratorError7 = undefined;\n\t              _context8.prev = 3;\n\t              _iterator7 = this.cache[Symbol.iterator]();\n\n\t            case 5:\n\t              if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {\n\t                _context8.next = 12;\n\t                break;\n\t              }\n\n\t              item = _step7.value;\n\t              _context8.next = 9;\n\t              return item;\n\n\t            case 9:\n\t              _iteratorNormalCompletion7 = true;\n\t              _context8.next = 5;\n\t              break;\n\n\t            case 12:\n\t              _context8.next = 18;\n\t              break;\n\n\t            case 14:\n\t              _context8.prev = 14;\n\t              _context8.t0 = _context8[\"catch\"](3);\n\t              _didIteratorError7 = true;\n\t              _iteratorError7 = _context8.t0;\n\n\t            case 18:\n\t              _context8.prev = 18;\n\t              _context8.prev = 19;\n\n\t              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n\t                _iterator7.return();\n\t              }\n\n\t            case 21:\n\t              _context8.prev = 21;\n\n\t              if (!_didIteratorError7) {\n\t                _context8.next = 24;\n\t                break;\n\t              }\n\n\t              throw _iteratorError7;\n\n\t            case 24:\n\t              return _context8.finish(21);\n\n\t            case 25:\n\t              return _context8.finish(18);\n\n\t            case 26:\n\t              _iteratorNormalCompletion8 = true;\n\t              _didIteratorError8 = false;\n\t              _iteratorError8 = undefined;\n\t              _context8.prev = 29;\n\t              _iterator8 = this.oldCache[Symbol.iterator]();\n\n\t            case 31:\n\t              if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n\t                _context8.next = 40;\n\t                break;\n\t              }\n\n\t              _item = _step8.value;\n\t              _item2 = _slicedToArray(_item, 1), key = _item2[0];\n\n\t              if (this.cache.has(key)) {\n\t                _context8.next = 37;\n\t                break;\n\t              }\n\n\t              _context8.next = 37;\n\t              return _item;\n\n\t            case 37:\n\t              _iteratorNormalCompletion8 = true;\n\t              _context8.next = 31;\n\t              break;\n\n\t            case 40:\n\t              _context8.next = 46;\n\t              break;\n\n\t            case 42:\n\t              _context8.prev = 42;\n\t              _context8.t1 = _context8[\"catch\"](29);\n\t              _didIteratorError8 = true;\n\t              _iteratorError8 = _context8.t1;\n\n\t            case 46:\n\t              _context8.prev = 46;\n\t              _context8.prev = 47;\n\n\t              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n\t                _iterator8.return();\n\t              }\n\n\t            case 49:\n\t              _context8.prev = 49;\n\n\t              if (!_didIteratorError8) {\n\t                _context8.next = 52;\n\t                break;\n\t              }\n\n\t              throw _iteratorError8;\n\n\t            case 52:\n\t              return _context8.finish(49);\n\n\t            case 53:\n\t              return _context8.finish(46);\n\n\t            case 54:\n\t            case \"end\":\n\t              return _context8.stop();\n\t          }\n\t        }\n\t      }, value, this, [[3, 14, 18, 26], [19,, 21, 25], [29, 42, 46, 54], [47,, 49, 53]]);\n\t    })\n\t  }, {\n\t    key: \"size\",\n\t    get: function get() {\n\t      var oldCacheSize = 0;\n\t      var _iteratorNormalCompletion9 = true;\n\t      var _didIteratorError9 = false;\n\t      var _iteratorError9 = undefined;\n\n\t      try {\n\t        for (var _iterator9 = this.oldCache.keys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t          var key = _step9.value;\n\n\t          if (!this.cache.has(key)) {\n\t            oldCacheSize++;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError9 = true;\n\t        _iteratorError9 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n\t            _iterator9.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError9) {\n\t            throw _iteratorError9;\n\t          }\n\t        }\n\t      }\n\n\t      return this._size + oldCacheSize;\n\t    }\n\t  }]);\n\n\t  return QuickLRU;\n\t}();\n\n\tvar CigarOperationTable = {\n\t  \"ALIGNMENT_MATCH\": \"M\",\n\t  \"INSERT\": \"I\",\n\t  \"DELETE\": \"D\",\n\t  \"SKIP\": \"N\",\n\t  \"CLIP_SOFT\": \"S\",\n\t  \"CLIP_HARD\": \"H\",\n\t  \"PAD\": \"P\",\n\t  \"SEQUENCE_MATCH\": \"=\",\n\t  \"SEQUENCE_MISMATCH\": \"X\"\n\t};\n\n\tvar Ga4ghAlignmentReader = function Ga4ghAlignmentReader(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t  this.url = config.url;\n\t  this.filter = new BamFilter(config.filter);\n\t  this.readGroupSetIds = config.readGroupSetIds;\n\t  this.authKey = config.authKey; // Might be undefined or nill\n\n\t  this.samplingWindowSize = config.samplingWindowSize === undefined ? 100 : config.samplingWindowSize;\n\t  this.samplingDepth = config.samplingDepth === undefined ? 1000 : config.samplingDepth;\n\n\t  if (config.viewAsPairs) {\n\t    this.pairsSupported = true;\n\t  } else {\n\t    this.pairsSupported = config.pairsSupported === undefined ? true : config.pairsSupported;\n\t  }\n\t};\n\n\tGa4ghAlignmentReader.prototype.readAlignments = function (chr, bpStart, bpEnd) {\n\t  var genome = this.genome;\n\t  var self = this;\n\t  return getChrAliasTable().then(function (chrAliasTable) {\n\t    var queryChr = chrAliasTable.hasOwnProperty(chr) ? chrAliasTable[chr] : chr,\n\t        readURL = self.url + \"/reads/search\";\n\t    return ga4ghSearch({\n\t      url: readURL,\n\t      body: {\n\t        \"readGroupSetIds\": [self.readGroupSetIds],\n\t        \"referenceName\": queryChr,\n\t        \"start\": bpStart,\n\t        \"end\": bpEnd,\n\t        \"pageSize\": \"10000\"\n\t      },\n\t      decode: decodeGa4ghReads,\n\t      results: new AlignmentContainer(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported, self.alleleFreqThreshold)\n\t    });\n\t  });\n\n\t  function getChrAliasTable() {\n\t    if (self.chrAliasTable) {\n\t      return Promise.resolve(self.chrAliasTable);\n\t    } else {\n\t      return self.readMetadata().then(function (json) {\n\t        self.chrAliasTable = {};\n\n\t        if (genome && json.readGroups && json.readGroups.length > 0) {\n\t          var referenceSetId = json.readGroups[0].referenceSetId;\n\n\t          if (referenceSetId) {\n\t            // Query for reference names to build an alias table (map of genome ref names -> dataset ref names)\n\t            var readURL = self.url + \"/references/search\";\n\t            return ga4ghSearch({\n\t              url: readURL,\n\t              body: {\n\t                \"referenceSetId\": referenceSetId\n\t              },\n\t              decode: function decode(j) {\n\t                return j.references;\n\t              }\n\t            }).then(function (references) {\n\t              references.forEach(function (ref) {\n\t                var refName = ref.name,\n\t                    alias = genome.getChromosomeName(refName);\n\t                self.chrAliasTable[alias] = refName;\n\t              });\n\t              return self.chrAliasTable;\n\t            });\n\t          } else {\n\t            // Try hardcoded constants -- workaround for non-compliant data at Google\n\t            populateChrAliasTable(self.chrAliasTable, self.config.datasetId);\n\t            return self.chrAliasTable;\n\t          }\n\t        } else {\n\t          // No browser object, can't build map.  This can occur when run from unit tests\n\t          return self.chrAliasTable;\n\t        }\n\t      });\n\t    }\n\t  }\n\t  /**\n\t   * Decode an array of ga4gh read records\n\t   *\n\t    */\n\n\n\t  function decodeGa4ghReads(j) {\n\t    var i,\n\t        jsonRecords = j.alignments,\n\t        len = jsonRecords.length,\n\t        alignment,\n\t        jsonAlignment,\n\t        cigarDecoded,\n\t        alignments = [],\n\t        mate,\n\t        blocks;\n\n\t    for (i = 0; i < len; i++) {\n\t      var record = jsonRecords[i];\n\t      alignment = new BamAlignment();\n\t      alignment.readName = record.fragmentName;\n\t      alignment.properPlacement = record.properPlacement;\n\t      alignment.duplicateFragment = record.duplicateFragment;\n\t      alignment.numberReads = record.numberReads;\n\t      alignment.fragmentLength = record.fragmentLength;\n\t      alignment.readNumber = record.readNumber;\n\t      alignment.failedVendorQualityChecks = record.failedVendorQualityChecks;\n\t      alignment.secondaryAlignment = record.secondaryAlignment;\n\t      alignment.supplementaryAlignment = record.supplementaryAlignment;\n\t      alignment.seq = record.alignedSequence;\n\t      alignment.qual = record.alignedQuality;\n\t      alignment.matePos = record.nextMatePosition;\n\t      alignment.tagDict = record.info;\n\t      alignment.flags = encodeFlags();\n\t      jsonAlignment = record.alignment;\n\n\t      if (jsonAlignment) {\n\t        alignment.mapped = true;\n\t        alignment.chr = record.alignment.position.referenceName;\n\t        if (genome) alignment.chr = genome.getChromosomeName(alignment.chr);\n\t        alignment.start = parseInt(record.alignment.position.position);\n\t        alignment.strand = !record.alignment.position.reverseStrand;\n\t        alignment.mq = record.alignment.mappingQuality;\n\t        alignment.cigar = encodeCigar(record.alignment.cigar);\n\t        cigarDecoded = translateCigar(record.alignment.cigar);\n\t        alignment.lengthOnRef = cigarDecoded.lengthOnRef;\n\t        blocks = makeBlocks(alignment, cigarDecoded.array);\n\t        alignment.blocks = blocks.blocks;\n\t        alignment.insertions = blocks.insertions;\n\t      } else {\n\t        alignment.mapped = false;\n\t      }\n\n\t      mate = record.nextMatePosition;\n\n\t      if (mate) {\n\t        alignment.mate = {\n\t          chr: mate.referenceFrame,\n\t          position: parseInt(mate.position),\n\t          strand: !mate.reverseStrand\n\t        };\n\t      }\n\n\t      if (self.filter.pass(alignment)) {\n\t        alignments.push(alignment);\n\t      }\n\t    }\n\n\t    return alignments; // Encode a cigar string -- used for popup text\n\n\t    function encodeCigar(cigarArray) {\n\t      var cigarString = \"\";\n\t      cigarArray.forEach(function (cigarUnit) {\n\t        var op = CigarOperationTable[cigarUnit.operation],\n\t            len = cigarUnit.operationLength;\n\t        cigarString = cigarString + (len + op);\n\t      });\n\t      return cigarString;\n\t    } // TODO -- implement me\n\n\n\t    function encodeFlags(json) {\n\t      return 0;\n\t    }\n\n\t    function translateCigar(cigar) {\n\t      var cigarUnit,\n\t          opLen,\n\t          opLtr,\n\t          lengthOnRef = 0,\n\t          cigarArray = [],\n\t          i;\n\n\t      for (i = 0; i < cigar.length; i++) {\n\t        cigarUnit = cigar[i];\n\t        opLtr = CigarOperationTable[cigarUnit.operation];\n\t        opLen = parseInt(cigarUnit.operationLength); // Google represents long as a String\n\n\t        if (opLtr === 'M' || opLtr === 'EQ' || opLtr === 'X' || opLtr === 'D' || opLtr === 'N' || opLtr === '=') lengthOnRef += opLen;\n\t        cigarArray.push({\n\t          len: opLen,\n\t          ltr: opLtr\n\t        });\n\t      }\n\n\t      return {\n\t        lengthOnRef: lengthOnRef,\n\t        array: cigarArray\n\t      };\n\t    }\n\t    /**\n\t     * Split the alignment record into blocks as specified in the cigarArray.  Each aligned block contains\n\t     * its portion of the read sequence and base quality strings.  A read sequence or base quality string\n\t     * of \"*\" indicates the value is not recorded.  In all other cases the length of the block sequence (block.seq)\n\t     * and quality string (block.qual) must == the block length.\n\t     *\n\t     * NOTE: Insertions are not yet treated // TODO\n\t     *\n\t     * @param record\n\t     * @param cigarArray\n\t     * @returns array of blocks\n\t     */\n\n\n\t    function makeBlocks(record, cigarArray) {\n\t      var blocks = [],\n\t          gaps,\n\t          insertions,\n\t          seqOffset = 0,\n\t          pos = record.start,\n\t          len = cigarArray.length,\n\t          gapType;\n\n\t      for (var i = 0; i < len; i++) {\n\t        var c = cigarArray[i];\n\n\t        switch (c.ltr) {\n\t          case 'H':\n\t            break;\n\t          // ignore hard clips\n\n\t          case 'P':\n\t            break;\n\t          // ignore pads\n\n\t          case 'S':\n\t            seqOffset += c.len;\n\t            gapType = 'S';\n\t            break;\n\t          // soft clip read bases\n\n\t          case 'N':\n\t          case 'D':\n\t            if (gaps === undefined) {\n\t              gaps = [];\n\t            }\n\n\t            gaps.push({\n\t              start: pos,\n\t              len: c.len,\n\t              type: c.ltr\n\t            });\n\t            pos += c.len;\n\t            break;\n\n\t          case 'I':\n\t            if (insertions === undefined) insertions = [];\n\t            insertions.push(new AlignmentBlock({\n\t              start: pos,\n\t              len: c.len,\n\t              seqOffset: seqOffset\n\t            }));\n\t            seqOffset += c.len;\n\t            break;\n\n\t          case 'M':\n\t          case 'EQ':\n\t          case '=':\n\t          case 'X':\n\t            blocks.push(new AlignmentBlock({\n\t              start: pos,\n\t              len: c.len,\n\t              seqOffset: seqOffset,\n\t              gapType: gapType\n\t            }));\n\t            seqOffset += c.len;\n\t            pos += c.len;\n\t            break;\n\t        }\n\t      }\n\n\t      return {\n\t        blocks: blocks,\n\t        insertions: insertions,\n\t        gaps: gaps\n\t      };\n\t    }\n\t  }\n\t};\n\n\tGa4ghAlignmentReader.prototype.readMetadata = function () {\n\t  return ga4ghGet({\n\t    url: this.url,\n\t    entity: \"readgroupsets\",\n\t    entityId: this.readGroupSetIds\n\t  });\n\t};\n\t/**\n\t * Hardcoded hack to work around some non-compliant google datasets\n\t *\n\t * @param chrAliasTable\n\t * @param datasetId\n\t */\n\n\n\tfunction populateChrAliasTable(chrAliasTable, datasetId) {\n\t  var i;\n\n\t  if (\"461916304629\" === datasetId || \"337315832689\" === datasetId) {\n\t    for (i = 1; i < 23; i++) {\n\t      chrAliasTable[\"chr\" + i] = i;\n\t    }\n\n\t    chrAliasTable[\"chrX\"] = \"X\";\n\t    chrAliasTable[\"chrY\"] = \"Y\";\n\t    chrAliasTable[\"chrM\"] = \"MT\";\n\t  }\n\t}\n\n\tvar BamAlignmentRow = function BamAlignmentRow() {\n\t  this.alignments = [];\n\t  this.score = undefined;\n\t};\n\n\tBamAlignmentRow.prototype.findAlignment = function (genomicLocation) {\n\t  var centerAlignment, a, i; // find single alignment that overlaps sort location\n\n\t  for (i = 0; i < this.alignments.length; i++) {\n\t    a = this.alignments[i];\n\n\t    if (alignmentContains(a, genomicLocation)) {\n\t      if (a.paired) {\n\t        if (a.firstAlignment && alignmentContains(a.firstAlignment, genomicLocation)) {\n\t          centerAlignment = a.firstAlignment;\n\t        } else if (a.secondAlignment && alignmentContains(a.secondAlignment, genomicLocation)) {\n\t          centerAlignment = a.secondAlignment;\n\t        }\n\t      } else {\n\t        centerAlignment = a;\n\t      }\n\n\t      break;\n\t    }\n\t  }\n\n\t  return centerAlignment;\n\n\t  function alignmentContains(a, genomicLocation) {\n\t    return genomicLocation >= a.start && genomicLocation < a.start + a.lengthOnRef;\n\t  }\n\t};\n\n\tBamAlignmentRow.prototype.updateScore = function (options, alignmentContainer) {\n\t  this.score = this.calculateScore(options, alignmentContainer);\n\t};\n\n\tBamAlignmentRow.prototype.calculateScore = function (options, alignmentContainer) {\n\t  var genomicLocation = Math.floor(options.position);\n\t  var sortOption = options.sortOption;\n\t  var sortDirection = options.direction;\n\t  var alignment = this.findAlignment(genomicLocation);\n\n\t  if (undefined === alignment) {\n\t    return sortDirection ? Number.MAX_VALUE : -Number.MAX_VALUE;\n\t  }\n\n\t  var mate;\n\n\t  switch (sortOption) {\n\t    case \"NUCLEOTIDE\":\n\t      {\n\t        var readBase = alignment.readBaseAt(genomicLocation);\n\t        var quality = alignment.readBaseQualityAt(genomicLocation);\n\n\t        if (!readBase) {\n\t          return sortDirection ? Number.MAX_VALUE : -Number.MAX_VALUE;\n\t        } else {\n\t          return calculateBaseScore(readBase, quality, alignmentContainer, genomicLocation);\n\t        }\n\t      }\n\n\t    case \"STRAND\":\n\t      return alignment.strand ? 1 : -1;\n\n\t    case \"START\":\n\t      return alignment.start;\n\n\t    case \"TAG\":\n\t      {\n\t        var tagKey = options.tag;\n\t        var tagValue = alignment.tags()[tagKey];\n\n\t        if (tagValue !== undefined) {\n\t          return isString(tagValue) ? hashCode(tagValue) : tagValue;\n\t        } else {\n\t          return Number.MAX_VALUE;\n\t        }\n\t      }\n\n\t    case \"INSERT_SIZE\":\n\t      return -Math.abs(alignment.fragmentLength);\n\n\t    case \"MATE_CHR\":\n\t      mate = alignment.mate;\n\n\t      if (!mate) {\n\t        return Number.MAX_VALUE;\n\t      } else {\n\t        if (mate.chr === alignment.chr) {\n\t          return Number.MAX_VALUE - 1;\n\t        } else {\n\t          return hashCode(mate.chr);\n\t        }\n\t      }\n\n\t    case \"MQ\":\n\t      return alignment.mq === undefined ? Number.MAX_VALUE : -alignment.mq;\n\n\t    default:\n\t      return Number.MAX_VALUE;\n\t  }\n\n\t  function calculateBaseScore(base, quality, alignmentContainer, genomicLocation) {\n\t    var idx, reference, coverage, count;\n\t    idx = Math.floor(genomicLocation) - alignmentContainer.start;\n\n\t    if (idx < alignmentContainer.sequence.length) {\n\t      reference = alignmentContainer.sequence.charAt(idx);\n\t    }\n\n\t    if (!reference) {\n\t      return undefined;\n\t    }\n\n\t    if (undefined === base) {\n\t      return Number.MAX_VALUE;\n\t    }\n\n\t    if ('N' === base) {\n\t      return 2;\n\t    } else if (reference === base || '=' === base) {\n\t      return 4 - quality / 1000;\n\t    } else if (\"X\" === base || reference !== base) {\n\t      idx = Math.floor(genomicLocation) - alignmentContainer.coverageMap.bpStart;\n\n\t      if (idx > 0 && idx < alignmentContainer.coverageMap.coverage.length) {\n\t        coverage = alignmentContainer.coverageMap.coverage[idx];\n\t        count = coverage[\"pos\" + base] + coverage[\"neg\" + base];\n\t        return -(count + quality / 1000);\n\t      } else {\n\t        return -(1 + quality / 1000);\n\t      }\n\t    }\n\n\t    return 0;\n\t  }\n\t};\n\n\tvar BamSource = function BamSource(config, browser) {\n\t  var genome = browser.genome;\n\t  this.config = config;\n\t  this.genome = genome;\n\t  this.alignmentContainer = undefined;\n\n\t  if (isString(config.url) && config.url.startsWith(\"data:\")) {\n\t    if (\"cram\" === config.format) {\n\t      throw \"CRAM data uris are not supported\";\n\t    }\n\n\t    this.config.indexed = false;\n\t  }\n\n\t  if (\"ga4gh\" === config.sourceType) {\n\t    this.bamReader = new Ga4ghAlignmentReader(config, genome);\n\t  } else if (\"pysam\" === config.sourceType) {\n\t    this.bamReader = new BamWebserviceReader(config, genome);\n\t  } else if (\"htsget\" === config.sourceType) {\n\t    this.bamReader = new HtsgetReader(config, genome);\n\t  } else if (\"shardedBam\" === config.sourceType) {\n\t    this.bamReader = new ShardedBamReader(config, genome);\n\t  } else if (\"cram\" === config.format) {\n\t    this.bamReader = new CramReader(config, genome, browser);\n\t  } else {\n\t    if (this.config.indexed === false) {\n\t      this.bamReader = new BamReaderNonIndexed(config, genome);\n\t    } else {\n\t      this.bamReader = new BamReader(config, genome);\n\t    }\n\t  }\n\n\t  this.viewAsPairs = config.viewAsPairs;\n\t  this.showSoftClips = config.showSoftClips;\n\t};\n\n\tBamSource.prototype.setViewAsPairs = function (bool) {\n\n\t  if (this.viewAsPairs !== bool) {\n\t    this.viewAsPairs = bool; // TODO -- repair alignments\n\n\t    if (this.alignmentContainer) {\n\t      var alignmentContainer = this.alignmentContainer,\n\t          alignments;\n\n\t      if (bool) {\n\t        alignments = pairAlignments(alignmentContainer.packedAlignmentRows);\n\t      } else {\n\t        alignments = unpairAlignments(alignmentContainer.packedAlignmentRows);\n\t      }\n\n\t      alignmentContainer.packedAlignmentRows = packAlignmentRows(alignments, alignmentContainer.start, alignmentContainer.end);\n\t    }\n\t  }\n\t};\n\n\tBamSource.prototype.setShowSoftClips = function (bool) {\n\t  if (this.showSoftClips !== bool) {\n\t    this.showSoftClips = bool;\n\n\t    if (this.alignmentContainer) {\n\t      var alignments = allAlignments(this.alignmentContainer.packedAlignmentRows);\n\t      var alignmentContainer = this.alignmentContainer;\n\t      alignmentContainer.packedAlignmentRows = packAlignmentRows(alignments, alignmentContainer.start, alignmentContainer.end, bool);\n\t    }\n\t  }\n\n\t  function allAlignments(rows) {\n\t    var result = [];\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var row = _step.value;\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\n\t        try {\n\t          for (var _iterator2 = row.alignments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var alignment = _step2.value;\n\t            result.push(alignment);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t              _iterator2.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError2) {\n\t              throw _iteratorError2;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\n\t    return result;\n\t  }\n\t};\n\n\tBamSource.prototype.getAlignments = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chr, bpStart, bpEnd) {\n\t    var genome, showSoftClips, alignmentContainer, alignments, hasAlignments, sequence;\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            _context.prev = 0;\n\t            genome = this.genome;\n\t            showSoftClips = this.showSoftClips;\n\n\t            if (!(this.alignmentContainer && this.alignmentContainer.contains(chr, bpStart, bpEnd))) {\n\t              _context.next = 7;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"return\", this.alignmentContainer);\n\n\t          case 7:\n\t            _context.next = 9;\n\t            return this.bamReader.readAlignments(chr, bpStart, bpEnd);\n\n\t          case 9:\n\t            alignmentContainer = _context.sent;\n\t            alignments = alignmentContainer.alignments;\n\n\t            if (!this.viewAsPairs) {\n\t              alignments = unpairAlignments([{\n\t                alignments: alignments\n\t              }]);\n\t            }\n\n\t            hasAlignments = alignments.length > 0;\n\t            alignmentContainer.packedAlignmentRows = packAlignmentRows(alignments, alignmentContainer.start, alignmentContainer.end, showSoftClips);\n\t            alignmentContainer.alignments = undefined; // Don't need to hold onto these anymore\n\n\t            this.alignmentContainer = alignmentContainer;\n\n\t            if (hasAlignments) {\n\t              _context.next = 20;\n\t              break;\n\t            }\n\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 20:\n\t            _context.next = 22;\n\t            return genome.sequence.getSequence(chr, alignmentContainer.start, alignmentContainer.end);\n\n\t          case 22:\n\t            sequence = _context.sent;\n\n\t            if (!sequence) {\n\t              _context.next = 29;\n\t              break;\n\t            }\n\n\t            alignmentContainer.coverageMap.refSeq = sequence; // TODO -- fix this\n\n\t            alignmentContainer.sequence = sequence; // TODO -- fix this\n\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 29:\n\t            console.error(\"No sequence for: \" + chr + \":\" + alignmentContainer.start + \"-\" + alignmentContainer.end);\n\n\t          case 30:\n\t            _context.next = 36;\n\t            break;\n\n\t          case 32:\n\t            _context.prev = 32;\n\t            _context.t0 = _context[\"catch\"](0);\n\t            console.error(_context.t0);\n\t            throw _context.t0;\n\n\t          case 36:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this, [[0, 32]]);\n\t  }));\n\n\t  return function (_x, _x2, _x3) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tfunction pairAlignments(rows) {\n\t  var pairCache = {};\n\t  var result = [];\n\t  var _iteratorNormalCompletion3 = true;\n\t  var _didIteratorError3 = false;\n\t  var _iteratorError3 = undefined;\n\n\t  try {\n\t    for (var _iterator3 = rows[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t      var row = _step3.value;\n\t      var _iteratorNormalCompletion4 = true;\n\t      var _didIteratorError4 = false;\n\t      var _iteratorError4 = undefined;\n\n\t      try {\n\t        for (var _iterator4 = row.alignments[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t          var alignment = _step4.value;\n\n\t          if (canBePaired$1(alignment)) {\n\t            var pairedAlignment = pairCache[alignment.readName];\n\n\t            if (pairedAlignment) {\n\t              pairedAlignment.setSecondAlignment(alignment);\n\t              pairCache[alignment.readName] = undefined; // Don't need to track this anymore.\n\t            } else {\n\t              pairedAlignment = new PairedAlignment(alignment);\n\t              pairCache[alignment.readName] = pairedAlignment;\n\t              result.push(pairedAlignment);\n\t            }\n\t          } else {\n\t            result.push(alignment);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t            _iterator4.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError4) {\n\t            throw _iteratorError4;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError3 = true;\n\t    _iteratorError3 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t        _iterator3.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError3) {\n\t        throw _iteratorError3;\n\t      }\n\t    }\n\t  }\n\n\t  return result;\n\t}\n\n\tfunction unpairAlignments(rows) {\n\t  var result = [];\n\t  var _iteratorNormalCompletion5 = true;\n\t  var _didIteratorError5 = false;\n\t  var _iteratorError5 = undefined;\n\n\t  try {\n\t    for (var _iterator5 = rows[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t      var row = _step5.value;\n\t      var _iteratorNormalCompletion6 = true;\n\t      var _didIteratorError6 = false;\n\t      var _iteratorError6 = undefined;\n\n\t      try {\n\t        for (var _iterator6 = row.alignments[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t          var alignment = _step6.value;\n\n\t          if (alignment instanceof PairedAlignment) {\n\t            if (alignment.firstAlignment) result.push(alignment.firstAlignment); // shouldn't need the null test\n\n\t            if (alignment.secondAlignment) result.push(alignment.secondAlignment);\n\t          } else {\n\t            result.push(alignment);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError6 = true;\n\t        _iteratorError6 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n\t            _iterator6.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError6) {\n\t            throw _iteratorError6;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError5 = true;\n\t    _iteratorError5 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t        _iterator5.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError5) {\n\t        throw _iteratorError5;\n\t      }\n\t    }\n\t  }\n\n\t  return result;\n\t}\n\n\tfunction canBePaired$1(alignment) {\n\t  return alignment.isPaired() && alignment.isMateMapped() && alignment.chr === alignment.mate.chr && (alignment.isFirstOfPair() || alignment.isSecondOfPair()) && !(alignment.isSecondary() || alignment.isSupplementary());\n\t}\n\n\tfunction packAlignmentRows(alignments, start, end, showSoftClips) {\n\t  if (!alignments) {\n\t    return undefined;\n\t  } else if (alignments.length === 0) {\n\t    return [];\n\t  } else {\n\t    alignments.sort(function (a, b) {\n\t      return showSoftClips ? a.scStart - b.scStart : a.start - b.start;\n\t    }); // bucketStart = Math.max(start, alignments[0].start);\n\n\t    var firstAlignment = alignments[0];\n\t    var bucketStart = Math.max(start, showSoftClips ? firstAlignment.scStart : firstAlignment.start);\n\t    var nextStart = bucketStart;\n\t    var bucketList = [];\n\t    var _iteratorNormalCompletion7 = true;\n\t    var _didIteratorError7 = false;\n\t    var _iteratorError7 = undefined;\n\n\t    try {\n\t      for (var _iterator7 = alignments[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t        var _alignment = _step7.value;\n\t        //var buckListIndex = Math.max(0, alignment.start - bucketStart);\n\t        var s = showSoftClips ? _alignment.scStart : _alignment.start;\n\t        var buckListIndex = Math.max(0, s - bucketStart);\n\n\t        if (bucketList[buckListIndex] === undefined) {\n\t          bucketList[buckListIndex] = [];\n\t        }\n\n\t        bucketList[buckListIndex].push(_alignment);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError7 = true;\n\t      _iteratorError7 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n\t          _iterator7.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError7) {\n\t          throw _iteratorError7;\n\t        }\n\t      }\n\t    }\n\n\t    var allocatedCount = 0;\n\t    var lastAllocatedCount = 0;\n\t    var packedAlignmentRows = [];\n\t    var alignmentSpace = 2;\n\n\t    try {\n\t      while (allocatedCount < alignments.length) {\n\t        var alignmentRow = new BamAlignmentRow();\n\n\t        while (nextStart <= end) {\n\t          var bucket = undefined;\n\t          var index = void 0;\n\n\t          while (!bucket && nextStart <= end) {\n\t            index = nextStart - bucketStart;\n\n\t            if (bucketList[index] === undefined) {\n\t              ++nextStart; // No alignments at this index\n\t            } else {\n\t              bucket = bucketList[index];\n\t            }\n\t          } // while (bucket)\n\n\n\t          if (!bucket) {\n\t            break;\n\t          }\n\n\t          var alignment = bucket.pop();\n\n\t          if (0 === bucket.length) {\n\t            bucketList[index] = undefined;\n\t          }\n\n\t          alignmentRow.alignments.push(alignment);\n\t          nextStart = showSoftClips ? alignment.scStart + alignment.scLengthOnRef + alignmentSpace : alignment.start + alignment.lengthOnRef + alignmentSpace;\n\t          ++allocatedCount;\n\t        } // while (nextStart)\n\n\n\t        if (alignmentRow.alignments.length > 0) {\n\t          packedAlignmentRows.push(alignmentRow);\n\t        }\n\n\t        nextStart = bucketStart;\n\t        if (allocatedCount === lastAllocatedCount) break; // Protect from infinite loops\n\n\t        lastAllocatedCount = allocatedCount;\n\t      } // while (allocatedCount)\n\n\t    } catch (e) {\n\t      console.error(e);\n\t      throw e;\n\t    }\n\n\t    return packedAlignmentRows;\n\t  }\n\t}\n\n\tvar type = \"alignment\";\n\tvar alignmentStartGap = 5;\n\tvar downsampleRowHeight = 5;\n\tvar DEFAULT_COVERAGE_TRACK_HEIGHT = 50;\n\tvar DEFAULT_TRACK_HEIGHT = 300;\n\tvar DEFAULT_ALIGNMENT_COLOR = \"rgb(185, 185, 185)\";\n\tvar DEFAULT_COVERAGE_COLOR = \"rgb(150, 150, 150)\";\n\tvar DEFAULT_CONNECTOR_COLOR = \"rgb(200, 200, 200)\";\n\tvar BAMTrack = extend(TrackBase, function (config, browser) {\n\t  this.type = type; // Override default track height for bams\n\n\t  if (config.height === undefined) config.height = DEFAULT_TRACK_HEIGHT;\n\t  TrackBase.call(this, config, browser);\n\n\t  if (config.coverageTrackHeight === undefined) {\n\t    config.coverageTrackHeight = DEFAULT_COVERAGE_TRACK_HEIGHT;\n\t  }\n\n\t  this.featureSource = new BamSource(config, browser);\n\t  this.coverageTrack = new CoverageTrack(config, this);\n\t  this.alignmentTrack = new AlignmentTrack(config, this);\n\t  this.visibilityWindow = config.visibilityWindow || 30000;\n\t  this.viewAsPairs = config.viewAsPairs;\n\t  this.pairsSupported = undefined === config.pairsSupported;\n\t  this.showSoftClips = config.showSoftClips;\n\t  this.showAllBases = config.showAllBases;\n\t  this.color = config.color || DEFAULT_ALIGNMENT_COLOR;\n\t  this.coverageColor = config.coverageColor || DEFAULT_COVERAGE_COLOR;\n\t  this.minFragmentLength = config.minFragmentLength; // Optional, might be undefined\n\n\t  this.maxFragmentLength = config.maxFragmentLength; // Transient object, maintains the last sort option per viewport.\n\n\t  this.sortObjects = {};\n\n\t  if (config.sort) {\n\t    if (Array.isArray(config.sort)) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = config.sort[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var sort = _step.value;\n\t          assignSort(this.sortObjects, sort);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t      assignSort(this.sortObjects, config.sort);\n\t    }\n\n\t    config.sort = undefined;\n\t  } // Assign sort objects to a genomic state\n\n\n\t  function assignSort(currentSorts, sort) {\n\t    var range = parseLocusString(sort.locus);\n\t    if (browser && browser.genome) range.chr = browser.genome.getChromosomeName(range.chr); // Loop through current genomic states, assign sort to first matching state\n\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\n\t    try {\n\t      for (var _iterator2 = browser.genomicStateList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var gs = _step2.value;\n\n\t        if (gs.chromosome.name === range.chr && range.start >= gs.start && range.start <= gs.end) {\n\t          currentSorts[gs.id] = {\n\t            chr: range.chr,\n\t            position: range.start,\n\t            sortOption: sort.option || \"NUCLEOTIDE\",\n\t            direction: sort.direction === undefined ? true : \"ASC\" === sort.direction,\n\t            tag: sort.tag ? sort.tag.toUpperCase() : undefined\n\t          };\n\t          break;\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError2 = true;\n\t      _iteratorError2 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t          _iterator2.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError2) {\n\t          throw _iteratorError2;\n\t        }\n\t      }\n\t    }\n\t  }\n\t});\n\n\tBAMTrack.prototype.getFeatures = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(chr, bpStart, bpEnd, bpPerPixel, viewport) {\n\t    var self, alignmentContainer, sort;\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            self = this;\n\t            _context.next = 3;\n\t            return this.featureSource.getAlignments(chr, bpStart, bpEnd);\n\n\t          case 3:\n\t            alignmentContainer = _context.sent;\n\n\t            if (alignmentContainer.alignments && alignmentContainer.alignments.length > 99) {\n\t              if (undefined === self.minFragmentLength) {\n\t                self.minFragmentLength = alignmentContainer.pairedEndStats.lowerFragmentLength;\n\t              }\n\n\t              if (undefined === self.maxFragmentLength) {\n\t                self.maxFragmentLength = alignmentContainer.pairedEndStats.upperFragmentLength;\n\t              }\n\t            }\n\n\t            sort = self.sortObjects[viewport.genomicState.id];\n\n\t            if (sort) {\n\t              if (sort.chr === chr && sort.position >= bpStart && sort.position <= bpEnd) {\n\t                self.alignmentTrack.sortAlignmentRows(sort, alignmentContainer);\n\t                self.trackView.repaintViews();\n\t              } else {\n\t                delete self.sortObjects[viewport.genomicState.id];\n\t              }\n\t            }\n\n\t            return _context.abrupt(\"return\", alignmentContainer);\n\n\t          case 8:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3, _x4, _x5) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tBAMTrack.filters = {\n\t  noop: function noop() {\n\t    return function (alignment) {\n\t      return false;\n\t    };\n\t  },\n\t  strand: function strand(_strand) {\n\t    return function (alignment) {\n\t      return alignment.strand === _strand;\n\t    };\n\t  },\n\t  mappingQuality: function mappingQuality(lower, upper) {\n\t    return function (alignment) {\n\t      if (lower && alignment.mq < lower) {\n\t        return true;\n\t      }\n\n\t      if (upper && alignment.mq > upper) {\n\t        return true;\n\t      }\n\n\t      return false;\n\t    };\n\t  }\n\t};\n\t/**\n\t * Optional method to compute pixel height to accomodate the list of features.  The implementation below\n\t * has side effects (modifiying the samples hash).  This is unfortunate, but harmless.\n\t *\n\t * @param alignmentContainer\n\t * @returns {number}\n\t */\n\n\tBAMTrack.prototype.computePixelHeight = function (alignmentContainer) {\n\t  return this.coverageTrack.computePixelHeight(alignmentContainer) + this.alignmentTrack.computePixelHeight(alignmentContainer) + 15;\n\t};\n\n\tBAMTrack.prototype.draw = function (options) {\n\t  IGVGraphics.fillRect(options.context, 0, options.pixelTop, options.pixelWidth, options.pixelHeight, {\n\t    'fillStyle': \"rgb(255, 255, 255)\"\n\t  });\n\n\t  if (this.coverageTrack.height > 0) {\n\t    this.coverageTrack.draw(options);\n\t  }\n\n\t  this.alignmentTrack.draw(options);\n\t};\n\n\tBAMTrack.prototype.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\t  if (this.browser.isMultiLocusMode()) {\n\t    ctx.clearRect(0, 0, pixelWidth, pixelHeight);\n\t  } else {\n\t    this.coverageTrack.paintAxis(ctx, pixelWidth, this.coverageTrack.height);\n\t  }\n\t};\n\n\tBAMTrack.prototype.contextMenuItemList = function (config) {\n\t  return this.alignmentTrack.contextMenuItemList(config);\n\t};\n\n\tBAMTrack.prototype.popupData = function (config) {\n\t  if (config.y >= this.coverageTrack.top && config.y < this.coverageTrack.height) {\n\t    return this.coverageTrack.popupData(config);\n\t  } else {\n\t    return this.alignmentTrack.popupData(config);\n\t  }\n\t};\n\n\tBAMTrack.prototype.menuItemList = function () {\n\t  var self = this;\n\t  var menuItems = [];\n\t  var $e = $('<div class=\"igv-track-menu-category igv-track-menu-border-top\">');\n\t  $e.text('Color by');\n\t  menuItems.push({\n\t    name: undefined,\n\t    object: $e,\n\t    click: undefined,\n\t    init: undefined\n\t  });\n\t  var colorByMenuItems = [{\n\t    key: 'strand',\n\t    label: 'read strand'\n\t  }];\n\n\t  if (self.alignmentTrack.hasPairs) {\n\t    colorByMenuItems.push({\n\t      key: 'firstOfPairStrand',\n\t      label: 'first-of-pair strand'\n\t    });\n\t    colorByMenuItems.push({\n\t      key: 'pairOrientation',\n\t      label: 'pair orientation'\n\t    });\n\t    colorByMenuItems.push({\n\t      key: 'fragmentLength',\n\t      label: 'insert size (TLEN)'\n\t    });\n\t  }\n\n\t  var tagLabel = 'tag' + (self.alignmentTrack.colorByTag ? ' (' + self.alignmentTrack.colorByTag + ')' : '');\n\t  colorByMenuItems.push({\n\t    key: 'tag',\n\t    label: tagLabel\n\t  });\n\t  colorByMenuItems.forEach(function (item) {\n\t    var selected = self.alignmentTrack.colorBy === item.key;\n\t    menuItems.push(colorByCB(item, selected));\n\t  });\n\t  menuItems.push({\n\t    object: $('<div class=\"igv-track-menu-border-top\">')\n\t  });\n\t  menuItems.push({\n\t    object: createCheckbox(\"Show all bases\", self.showAllBases),\n\t    click: function click() {\n\t      self.showAllBases = !self.showAllBases;\n\t      self.config.showAllBases = self.showAllBases;\n\t      self.trackView.updateViews(true);\n\t    }\n\t  });\n\t  menuItems.push({\n\t    object: $('<div class=\"igv-track-menu-border-top\">')\n\t  });\n\n\t  if (self.pairsSupported && self.alignmentTrack.hasPairs) {\n\t    menuItems.push({\n\t      object: createCheckbox(\"View as pairs\", self.viewAsPairs),\n\t      click: function click() {\n\t        self.viewAsPairs = !self.viewAsPairs;\n\t        self.config.viewAsPairs = self.viewAsPairs;\n\t        self.featureSource.setViewAsPairs(self.viewAsPairs);\n\t        self.trackView.updateViews(true);\n\t      }\n\t    });\n\t  }\n\n\t  menuItems.push({\n\t    object: createCheckbox(\"Show soft clips\", self.showSoftClips),\n\t    click: function click() {\n\t      self.showSoftClips = !self.showSoftClips;\n\t      self.config.showSoftClips = self.showSoftClips;\n\t      self.featureSource.setShowSoftClips(self.showSoftClips);\n\t      self.trackView.updateViews(true);\n\t    }\n\t  });\n\t  return menuItems;\n\n\t  function colorByCB(menuItem, showCheck) {\n\t    var $e = createCheckbox(menuItem.label, showCheck);\n\n\t    var clickHandler = function clickHandler() {\n\t      if (menuItem.key === self.alignmentTrack.colorBy) {\n\t        self.alignmentTrack.colorBy = 'none';\n\t        self.config.colorBy = 'none';\n\t        self.trackView.repaintViews();\n\t      } else if ('tag' === menuItem.key) {\n\t        var clickFunction = function clickFunction() {\n\t          self.alignmentTrack.colorBy = 'tag';\n\t          self.config.colorBy = 'tag';\n\t          var tag = self.browser.inputDialog.$input.val().trim();\n\n\t          if (tag !== self.alignmentTrack.colorByTag) {\n\t            self.alignmentTrack.colorByTag = tag;\n\t            self.config.colorByTag = tag;\n\t            self.alignmentTrack.tagColors = new PaletteColorTable(\"Set1\");\n\t            $('#color-by-tag').text(self.alignmentTrack.colorByTag);\n\t          }\n\n\t          self.trackView.repaintViews();\n\t        };\n\n\t        var config = {\n\t          label: 'Tag Name',\n\t          input: self.alignmentTrack.colorByTag ? self.alignmentTrack.colorByTag : '',\n\t          click: clickFunction\n\t        };\n\t        self.browser.inputDialog.configure(config);\n\t        self.browser.inputDialog.present($(self.trackView.trackDiv));\n\t      } else {\n\t        self.alignmentTrack.colorBy = menuItem.key;\n\t        self.config.colorBy = menuItem.key;\n\t        self.trackView.repaintViews();\n\t      }\n\t    };\n\n\t    return {\n\t      name: undefined,\n\t      object: $e,\n\t      click: clickHandler,\n\t      init: undefined\n\t    };\n\t  }\n\t};\n\n\tfunction shadedBaseColor(qual, nucleotide) {\n\t  var minQ = 5; //prefs.getAsInt(PreferenceManager.SAM_BASE_QUALITY_MIN),\n\n\t  var maxQ = 20; //prefs.getAsInt(PreferenceManager.SAM_BASE_QUALITY_MAX);\n\n\t  var alpha;\n\n\t  if (qual < minQ) {\n\t    alpha = 0.1;\n\t  } else {\n\t    alpha = Math.max(0.1, Math.min(1.0, 0.1 + 0.9 * (qual - minQ) / (maxQ - minQ)));\n\t  } // Round alpha to nearest 0.1\n\n\n\t  alpha = Math.round(alpha * 10) / 10.0;\n\t  var baseColor;\n\n\t  if (alpha >= 1) {\n\t    baseColor = nucleotideColors[nucleotide];\n\t  } else {\n\t    var foregroundColor = nucleotideColorComponents[nucleotide];\n\n\t    if (!foregroundColor) {\n\t      return undefined;\n\t    }\n\n\t    baseColor = \"rgba(\" + foregroundColor[0] + \",\" + foregroundColor[1] + \",\" + foregroundColor[2] + \",\" + alpha + \")\";\n\t  }\n\n\t  return baseColor;\n\t}\n\t/**\n\t * Called when the track is removed.  Do any needed cleanup here\n\t */\n\n\n\tBAMTrack.prototype.dispose = function () {\n\t  this.trackView = undefined;\n\t};\n\t/**\n\t * Return the current state of the track.  Used to create sessions and bookmarks.\n\t *\n\t * @returns {*|{}}\n\t */\n\n\n\tBAMTrack.prototype.getState = function () {\n\t  var config = Object.assign({}, this.config);\n\t  config.sort = undefined;\n\t  var _iteratorNormalCompletion3 = true;\n\t  var _didIteratorError3 = false;\n\t  var _iteratorError3 = undefined;\n\n\t  try {\n\t    for (var _iterator3 = this.browser.genomicStateList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t      var gs = _step3.value;\n\t      var s = this.sortObjects[gs.id];\n\n\t      if (s) {\n\t        config.sort = config.sort || [];\n\t        config.sort.push({\n\t          locus: s.chr + \":\" + (s.position + 1),\n\t          option: s.sortOption,\n\t          direction: s.direction ? \"ASC\" : \"DESC\",\n\t          tag: s.tag\n\t        });\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError3 = true;\n\t    _iteratorError3 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t        _iterator3.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError3) {\n\t        throw _iteratorError3;\n\t      }\n\t    }\n\t  }\n\n\t  return config;\n\t};\n\n\tvar CoverageTrack = function CoverageTrack(config, parent) {\n\t  this.parent = parent;\n\t  this.featureSource = parent.featureSource;\n\t  this.top = 0;\n\t  this.height = config.coverageTrackHeight;\n\t  this.dataRange = {\n\t    min: 0\n\t  }; // Leav max undefined\n\n\t  this.paintAxis = paintAxis;\n\t};\n\n\tCoverageTrack.prototype.computePixelHeight = function (alignmentContainer) {\n\t  return this.height;\n\t};\n\n\tCoverageTrack.prototype.draw = function (options) {\n\t  var ctx = options.context;\n\n\t  if (this.top) {\n\t    ctx.translate(0, top);\n\t  }\n\n\t  var yTop = options.top || 0;\n\t  var yBottom = yTop + options.pixelHeight;\n\t  var alignmentContainer = options.features;\n\t  var coverageMap = alignmentContainer.coverageMap;\n\t  this.dataRange.max = coverageMap.maximum;\n\t  var sequence;\n\n\t  if (coverageMap.refSeq) {\n\t    sequence = coverageMap.refSeq.toUpperCase();\n\t  }\n\n\t  var bpPerPixel = options.bpPerPixel;\n\t  var bpStart = options.bpStart;\n\t  var pixelWidth = options.pixelWidth;\n\t  var bpEnd = bpStart + pixelWidth * bpPerPixel + 1; // paint for all coverage buckets\n\t  // If alignment track color is != default, use it\n\n\t  var color = this.parent.coverageColor;\n\n\t  if (this.parent.color !== DEFAULT_ALIGNMENT_COLOR) {\n\t    color = IGVColor.darkenLighten(this.parent.color, -35);\n\t  }\n\n\t  IGVGraphics.setProperties(ctx, {\n\t    fillStyle: color,\n\t    strokeStyle: color\n\t  });\n\t  var w = Math.max(1, Math.ceil(1.0 / bpPerPixel));\n\n\t  for (var i = 0, len = coverageMap.coverage.length; i < len; i++) {\n\t    var bp = coverageMap.bpStart + i;\n\t    if (bp < bpStart) continue;\n\t    if (bp > bpEnd) break;\n\t    var item = coverageMap.coverage[i];\n\t    if (!item) continue;\n\t    var h = Math.round(item.total / this.dataRange.max * this.height);\n\t    var y = this.height - h;\n\t    var x = Math.floor((bp - bpStart) / bpPerPixel); // IGVGraphics.setProperties(ctx, {fillStyle: \"rgba(0, 200, 0, 0.25)\", strokeStyle: \"rgba(0, 200, 0, 0.25)\" });\n\n\t    IGVGraphics.fillRect(ctx, x, y, w, h);\n\t  } // coverage mismatch coloring -- don't try to do this in above loop, color bar will be overwritten when w<1\n\n\n\t  if (sequence) {\n\t    for (var _i = 0, _len = coverageMap.coverage.length; _i < _len; _i++) {\n\t      var _bp = coverageMap.bpStart + _i;\n\n\t      if (_bp < bpStart) continue;\n\t      if (_bp > bpEnd) break;\n\t      var _item = coverageMap.coverage[_i];\n\t      if (!_item) continue;\n\n\t      var _h = _item.total / this.dataRange.max * this.height;\n\n\t      var _y = this.height - _h;\n\n\t      var _x6 = Math.floor((_bp - bpStart) / bpPerPixel);\n\n\t      var refBase = sequence[_i];\n\n\t      if (_item.isMismatch(refBase)) {\n\t        IGVGraphics.setProperties(ctx, {\n\t          fillStyle: nucleotideColors[refBase]\n\t        });\n\t        IGVGraphics.fillRect(ctx, _x6, _y, w, _h);\n\t        var accumulatedHeight = 0.0;\n\n\t        for (var _i2 = 0, _arr = [\"A\", \"C\", \"T\", \"G\"]; _i2 < _arr.length; _i2++) {\n\t          var nucleotide = _arr[_i2];\n\t          var count = _item[\"pos\" + nucleotide] + _item[\"neg\" + nucleotide]; // non-logoritmic\n\n\t          var hh = count / this.dataRange.max * this.height;\n\t          _y = this.height - hh - accumulatedHeight;\n\t          accumulatedHeight += hh;\n\t          IGVGraphics.setProperties(ctx, {\n\t            fillStyle: nucleotideColors[nucleotide]\n\t          });\n\t          IGVGraphics.fillRect(ctx, _x6, _y, w, hh);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n\tCoverageTrack.prototype.popupData = function (config) {\n\t  var features = config.viewport.getCachedFeatures();\n\t  if (!features || features.length === 0) return;\n\t  var genomicLocation = Math.floor(config.genomicLocation),\n\t      referenceFrame = config.viewport.genomicState.referenceFrame,\n\t      coverageMap = features.coverageMap,\n\t      nameValues = [],\n\t      coverageMapIndex = Math.floor(genomicLocation - coverageMap.bpStart),\n\t      coverage = coverageMap.coverage[coverageMapIndex];\n\n\t  if (coverage) {\n\t    nameValues.push(referenceFrame.chrName + \":\" + numberFormatter(1 + genomicLocation));\n\t    nameValues.push({\n\t      name: 'Total Count',\n\t      value: coverage.total\n\t    }); // A\n\n\t    var tmp = coverage.posA + coverage.negA;\n\t    if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round(tmp / coverage.total * 100.0) + \"%, \" + coverage.posA + \"+, \" + coverage.negA + \"- )\";\n\t    nameValues.push({\n\t      name: 'A',\n\t      value: tmp\n\t    }); // C\n\n\t    tmp = coverage.posC + coverage.negC;\n\t    if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round(tmp / coverage.total * 100.0) + \"%, \" + coverage.posC + \"+, \" + coverage.negC + \"- )\";\n\t    nameValues.push({\n\t      name: 'C',\n\t      value: tmp\n\t    }); // G\n\n\t    tmp = coverage.posG + coverage.negG;\n\t    if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round(tmp / coverage.total * 100.0) + \"%, \" + coverage.posG + \"+, \" + coverage.negG + \"- )\";\n\t    nameValues.push({\n\t      name: 'G',\n\t      value: tmp\n\t    }); // T\n\n\t    tmp = coverage.posT + coverage.negT;\n\t    if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round(tmp / coverage.total * 100.0) + \"%, \" + coverage.posT + \"+, \" + coverage.negT + \"- )\";\n\t    nameValues.push({\n\t      name: 'T',\n\t      value: tmp\n\t    }); // N\n\n\t    tmp = coverage.posN + coverage.negN;\n\t    if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round(tmp / coverage.total * 100.0) + \"%, \" + coverage.posN + \"+, \" + coverage.negN + \"- )\";\n\t    nameValues.push({\n\t      name: 'N',\n\t      value: tmp\n\t    });\n\t    nameValues.push('<HR/>');\n\t    nameValues.push({\n\t      name: 'DEL',\n\t      value: coverage.del.toString()\n\t    });\n\t    nameValues.push({\n\t      name: 'INS',\n\t      value: coverage.ins.toString()\n\t    });\n\t  }\n\n\t  return nameValues;\n\t};\n\n\tvar AlignmentTrack = function AlignmentTrack(config, parent) {\n\t  this.parent = parent;\n\t  this.browser = parent.browser;\n\t  this.featureSource = parent.featureSource;\n\t  this.top = config.coverageTrackHeight === 0 ? 0 : config.coverageTrackHeight + 5;\n\t  this.alignmentRowHeight = config.alignmentRowHeight || 14;\n\t  this.negStrandColor = config.negStrandColor || \"rgba(150, 150, 230, 0.75)\";\n\t  this.posStrandColor = config.posStrandColor || \"rgba(230, 150, 150, 0.75)\";\n\t  this.insertionColor = config.insertionColor || \"rgb(138, 94, 161)\";\n\t  this.deletionColor = config.deletionColor || \"black\";\n\t  this.skippedColor = config.skippedColor || \"rgb(150, 170, 170)\";\n\t  this.pairConnectorColor = config.pairConnectorColor;\n\t  this.smallFragmentLengthColor = config.smallFragmentLengthColor || \"rgb(0, 0, 150)\";\n\t  this.largeFragmentLengthColor = config.largeFragmentLengthColor || \"rgb(200, 0, 0)\";\n\t  this.pairOrientation = config.pairOrienation || 'fr';\n\t  this.pairColors = {};\n\t  this.pairColors[\"RL\"] = config.rlColor || \"rgb(0, 150, 0)\";\n\t  this.pairColors[\"RR\"] = config.rrColor || \"rgb(20, 50, 200)\";\n\t  this.pairColors[\"LL\"] = config.llColor || \"rgb(0, 150, 150)\";\n\t  this.colorBy = config.colorBy || \"pairOrientation\";\n\t  this.colorByTag = config.colorByTag ? config.colorByTag.toUpperCase() : undefined;\n\t  this.bamColorTag = config.bamColorTag === undefined ? \"YC\" : config.bamColorTag;\n\t  this.hideSmallIndels = config.hideSmallIndels;\n\t  this.indelSizeThreshold = config.indelSizeThreshold || 1;\n\t  this.hasPairs = false; // Until proven otherwise\n\t};\n\n\tAlignmentTrack.prototype.computePixelHeight = function (alignmentContainer) {\n\t  if (alignmentContainer.packedAlignmentRows) {\n\t    var h = 0;\n\n\t    if (alignmentContainer.hasDownsampledIntervals()) {\n\t      h += downsampleRowHeight + alignmentStartGap;\n\t    }\n\n\t    return h + this.alignmentRowHeight * alignmentContainer.packedAlignmentRows.length + 5;\n\t  } else {\n\t    return this.height;\n\t  }\n\t};\n\n\tAlignmentTrack.prototype.draw = function (options) {\n\t  var alignmentContainer = options.features;\n\t  var ctx = options.context;\n\t  var bpPerPixel = options.bpPerPixel;\n\t  var bpStart = options.bpStart;\n\t  var pixelWidth = options.pixelWidth;\n\t  var bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\t  var packedAlignmentRows = alignmentContainer.packedAlignmentRows;\n\t  var showSoftClips = this.parent.showSoftClips;\n\t  var showAllBases = this.parent.showAllBases;\n\t  var yTop = options.top || 0;\n\t  var yBottom = yTop + options.pixelHeight;\n\t  var referenceSequence = alignmentContainer.sequence;\n\n\t  if (referenceSequence) {\n\t    referenceSequence = referenceSequence.toUpperCase();\n\t  }\n\n\t  var alignmentRowYInset = 0;\n\t  ctx.save();\n\t  if (this.top) ctx.translate(0, this.top);\n\n\t  if (alignmentContainer.hasDownsampledIntervals()) {\n\t    alignmentRowYInset = downsampleRowHeight + alignmentStartGap;\n\t    alignmentContainer.downsampledIntervals.forEach(function (interval) {\n\t      var xBlockStart = (interval.start - bpStart) / bpPerPixel,\n\t          xBlockEnd = (interval.end - bpStart) / bpPerPixel;\n\n\t      if (xBlockEnd - xBlockStart > 5) {\n\t        xBlockStart += 1;\n\t        xBlockEnd -= 1;\n\t      }\n\n\t      IGVGraphics.fillRect(ctx, xBlockStart, 2, xBlockEnd - xBlockStart, downsampleRowHeight - 2, {\n\t        fillStyle: \"black\"\n\t      });\n\t    });\n\t  } else {\n\t    alignmentRowYInset = 0;\n\t  } // Transient variable -- rewritten on every draw, used for click object selection\n\n\n\t  this.alignmentsYOffset = alignmentRowYInset;\n\n\t  if (packedAlignmentRows) {\n\t    var nRows = packedAlignmentRows.length;\n\n\t    for (var rowIndex = 0; rowIndex < nRows; rowIndex++) {\n\t      var alignmentRow = packedAlignmentRows[rowIndex];\n\t      var alignmentY = alignmentRowYInset + this.alignmentRowHeight * rowIndex;\n\t      var alignmentHeight = this.alignmentRowHeight <= 4 ? this.alignmentRowHeight : this.alignmentRowHeight - 2;\n\t      var _iteratorNormalCompletion4 = true;\n\t      var _didIteratorError4 = false;\n\t      var _iteratorError4 = undefined;\n\n\t      try {\n\t        for (var _iterator4 = alignmentRow.alignments[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t          var alignment = _step4.value;\n\t          this.hasPairs = this.hasPairs || alignment.isPaired();\n\t          if (alignment.start + alignment.lengthOnRef < bpStart) continue;\n\t          if (alignment.start > bpEnd) break;\n\n\t          if (true === alignment.hidden) {\n\t            continue;\n\t          }\n\n\t          if (alignment instanceof PairedAlignment) {\n\t            drawPairConnector.call(this, alignment, alignmentY, alignmentHeight);\n\t            drawSingleAlignment.call(this, alignment.firstAlignment, alignmentY, alignmentHeight);\n\n\t            if (alignment.secondAlignment) {\n\t              drawSingleAlignment.call(this, alignment.secondAlignment, alignmentY, alignmentHeight);\n\t            }\n\t          } else {\n\t            drawSingleAlignment.call(this, alignment, alignmentY, alignmentHeight);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t            _iterator4.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError4) {\n\t            throw _iteratorError4;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  ctx.restore(); // alignment is a PairedAlignment\n\n\t  function drawPairConnector(alignment, yRect, alignmentHeight) {\n\t    var connectorColor = this.getConnectorColor(alignment.firstAlignment),\n\t        xBlockStart = (alignment.connectingStart - bpStart) / bpPerPixel,\n\t        xBlockEnd = (alignment.connectingEnd - bpStart) / bpPerPixel,\n\t        yStrokedLine = yRect + alignmentHeight / 2;\n\n\t    if (alignment.connectingEnd < bpStart || alignment.connectingStart > bpEnd) {\n\t      return;\n\t    }\n\n\t    if (alignment.mq <= 0) {\n\t      connectorColor = IGVColor.addAlpha(connectorColor, 0.15);\n\t    }\n\n\t    IGVGraphics.setProperties(ctx, {\n\t      fillStyle: connectorColor,\n\t      strokeStyle: connectorColor\n\t    });\n\t    IGVGraphics.strokeLine(ctx, xBlockStart, yStrokedLine, xBlockEnd, yStrokedLine);\n\t  }\n\n\t  function drawSingleAlignment(alignment, yRect, alignmentHeight) {\n\t    if (alignment.start + alignment.lengthOnRef < bpStart || alignment.start > bpEnd) {\n\t      return;\n\t    }\n\n\t    var blocks = showSoftClips ? alignment.blocks : alignment.blocks.filter(function (b) {\n\t      return 'S' !== b.type;\n\t    });\n\t    var alignmentColor = this.getAlignmentColor(alignment);\n\t    var outlineColor = alignmentColor;\n\n\t    if (alignment.mq <= 0) {\n\t      alignmentColor = IGVColor.addAlpha(alignmentColor, 0.15);\n\t    }\n\n\t    IGVGraphics.setProperties(ctx, {\n\t      fillStyle: alignmentColor,\n\t      strokeStyle: outlineColor\n\t    });\n\n\t    for (var b = 0; b < blocks.length; b++) {\n\t      // Can't use forEach here -- we need ability to break\n\t      var block = blocks[b]; // Somewhat complex test, neccessary to insure gaps are drawn.\n\t      // If this is not the last block, and the next block starts before the orign (off screen to left) then skip.\n\n\t      if (b !== blocks.length - 1 && blocks[b + 1].start < bpStart) continue;\n\t      drawBlock.call(this, block, b);\n\n\t      if (block.start + block.len > bpEnd) {\n\t        // Do this after drawBlock to insure gaps are drawn\n\t        break;\n\t      }\n\t    }\n\n\t    if (alignment.insertions) {\n\t      var lastXBlockStart = -1;\n\t      var _iteratorNormalCompletion5 = true;\n\t      var _didIteratorError5 = false;\n\t      var _iteratorError5 = undefined;\n\n\t      try {\n\t        for (var _iterator5 = alignment.insertions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t          var insertionBlock = _step5.value;\n\n\t          if (this.hideSmallIndels && insertionBlock.len <= this.indelSizeThreshold) {\n\t            continue;\n\t          }\n\n\t          if (insertionBlock.start < bpStart) {\n\t            continue;\n\t          }\n\n\t          if (insertionBlock.start > bpEnd) {\n\t            break;\n\t          }\n\n\t          var refOffset = insertionBlock.start - bpStart;\n\t          var xBlockStart = refOffset / bpPerPixel - 1;\n\n\t          if (xBlockStart - lastXBlockStart > 2) {\n\t            var widthBlock = 3;\n\t            IGVGraphics.fillRect(ctx, xBlockStart, yRect - 1, widthBlock, alignmentHeight + 2, {\n\t              fillStyle: this.insertionColor\n\t            });\n\t            lastXBlockStart = xBlockStart;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError5 = true;\n\t        _iteratorError5 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t            _iterator5.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError5) {\n\t            throw _iteratorError5;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    if (alignment.gaps) {\n\t      var yStrokedLine = yRect + alignmentHeight / 2;\n\t      var _iteratorNormalCompletion6 = true;\n\t      var _didIteratorError6 = false;\n\t      var _iteratorError6 = undefined;\n\n\t      try {\n\t        for (var _iterator6 = alignment.gaps[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t          var gap = _step6.value;\n\t          var sPixel = (gap.start - bpStart) / bpPerPixel;\n\t          var ePixel = (gap.start + gap.len - bpStart) / bpPerPixel;\n\t          var color = \"D\" === gap.type ? this.deletionColor : this.skippedColor;\n\t          IGVGraphics.strokeLine(ctx, sPixel, yStrokedLine, ePixel, yStrokedLine, {\n\t            strokeStyle: color\n\t          });\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError6 = true;\n\t        _iteratorError6 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n\t            _iterator6.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError6) {\n\t            throw _iteratorError6;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    function drawBlock(block, b) {\n\t      var offsetBP = block.start - alignmentContainer.start;\n\t      var blockStartPixel = (block.start - bpStart) / bpPerPixel;\n\t      var blockEndPixel = (block.start + block.len - bpStart) / bpPerPixel;\n\t      var blockWidthPixel = Math.max(1, blockEndPixel - blockStartPixel);\n\t      var arrowHeadWidthPixel = this.alignmentRowHeight / 2.0;\n\t      var isSoftClip = 'S' === block.type;\n\t      var strokeOutline = alignment.mq <= 0 || this.highlightedAlignmentReadNamed === alignment.readName || isSoftClip;\n\t      var blockOutlineColor = outlineColor;\n\t      if (this.highlightedAlignmentReadNamed === alignment.readName) blockOutlineColor = 'red';else if (isSoftClip) blockOutlineColor = 'rgb(50,50,50)';\n\t      var lastBlockPositiveStrand = true === alignment.strand && b === blocks.length - 1;\n\t      var lastBlockReverseStrand = false === alignment.strand && b === 0;\n\t      var lastBlock = lastBlockPositiveStrand | lastBlockReverseStrand;\n\n\t      if (lastBlock) {\n\t        var xListPixel;\n\t        var yListPixel;\n\n\t        if (lastBlockPositiveStrand) {\n\t          xListPixel = [blockStartPixel, blockEndPixel, blockEndPixel + arrowHeadWidthPixel, blockEndPixel, blockStartPixel, blockStartPixel];\n\t          yListPixel = [yRect, yRect, yRect + alignmentHeight / 2.0, yRect + alignmentHeight, yRect + alignmentHeight, yRect];\n\t        } // Last block on - strand ?\n\t        else if (lastBlockReverseStrand) {\n\t            xListPixel = [blockEndPixel, blockStartPixel, blockStartPixel - arrowHeadWidthPixel, blockStartPixel, blockEndPixel, blockEndPixel];\n\t            yListPixel = [yRect, yRect, yRect + alignmentHeight / 2.0, yRect + alignmentHeight, yRect + alignmentHeight, yRect];\n\t          }\n\n\t        IGVGraphics.fillPolygon(ctx, xListPixel, yListPixel, {\n\t          fillStyle: alignmentColor\n\t        });\n\n\t        if (strokeOutline) {\n\t          IGVGraphics.strokePolygon(ctx, xListPixel, yListPixel, {\n\t            strokeStyle: blockOutlineColor\n\t          });\n\t        }\n\t      } // Internal block\n\t      else {\n\t          IGVGraphics.fillRect(ctx, blockStartPixel, yRect, blockWidthPixel, alignmentHeight, {\n\t            fillStyle: alignmentColor\n\t          });\n\n\t          if (strokeOutline) {\n\t            ctx.save();\n\t            ctx.strokeStyle = blockOutlineColor;\n\t            ctx.strokeRect(blockStartPixel, yRect, blockWidthPixel, alignmentHeight);\n\t            ctx.restore();\n\t          }\n\t        } // Mismatch coloring\n\n\n\t      if (isSoftClip || showAllBases || referenceSequence && alignment.seq && alignment.seq !== \"*\") {\n\t        var seq = alignment.seq ? alignment.seq.toUpperCase() : undefined;\n\t        var qual = alignment.qual;\n\t        var seqOffset = block.seqOffset;\n\n\t        for (var i = 0, len = block.len; i < len; i++) {\n\t          if (offsetBP + i < 0) continue;\n\t          var readChar = seq ? seq.charAt(seqOffset + i) : '';\n\t          var refChar = referenceSequence.charAt(offsetBP + i);\n\n\t          if (readChar === \"=\") {\n\t            readChar = refChar;\n\t          }\n\n\t          if (readChar === \"X\" || refChar !== readChar || isSoftClip || showAllBases) {\n\t            var baseColor = void 0;\n\n\t            if (!isSoftClip && qual !== undefined && qual.length > seqOffset + i) {\n\t              var readQual = qual[seqOffset + i];\n\t              baseColor = shadedBaseColor(readQual, readChar, i + block.start);\n\t            } else {\n\t              baseColor = nucleotideColors[readChar];\n\t            }\n\n\t            if (baseColor) {\n\t              var xPixel = (block.start + i - bpStart) / bpPerPixel;\n\t              var widthPixel = Math.max(1, 1 / bpPerPixel);\n\t              renderBlockOrReadChar(ctx, bpPerPixel, {\n\t                x: xPixel,\n\t                y: yRect,\n\t                width: widthPixel,\n\t                height: alignmentHeight\n\t              }, baseColor, readChar);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    function renderBlockOrReadChar(context, bpp, bbox, color, char) {\n\t      var threshold, center;\n\t      threshold = 1.0 / 10.0;\n\n\t      if (bpp <= threshold && bbox.height >= 8) {\n\t        // render letter\n\t        var fontHeight = Math.min(10, bbox.height);\n\t        context.font = '' + fontHeight + 'px sans-serif';\n\t        center = bbox.x + bbox.width / 2.0;\n\t        IGVGraphics.strokeText(context, char, center - context.measureText(char).width / 2, fontHeight - 1 + bbox.y, {\n\t          strokeStyle: color\n\t        });\n\t      } else {\n\t        // render colored block\n\t        IGVGraphics.fillRect(context, bbox.x, bbox.y, bbox.width, bbox.height, {\n\t          fillStyle: color\n\t        });\n\t      }\n\t    }\n\t  }\n\t};\n\n\tAlignmentTrack.prototype.sortAlignmentRows = function (options, alignmentContainer) {\n\t  var direction = options.direction;\n\n\t  if (alignmentContainer === null) {\n\t    alignmentContainer = this.featureSource.alignmentContainer;\n\t  }\n\n\t  var _iteratorNormalCompletion7 = true;\n\t  var _didIteratorError7 = false;\n\t  var _iteratorError7 = undefined;\n\n\t  try {\n\t    for (var _iterator7 = alignmentContainer.packedAlignmentRows[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t      var row = _step7.value;\n\t      row.updateScore(options, alignmentContainer);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError7 = true;\n\t    _iteratorError7 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n\t        _iterator7.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError7) {\n\t        throw _iteratorError7;\n\t      }\n\t    }\n\t  }\n\n\t  alignmentContainer.packedAlignmentRows.sort(function (rowA, rowB) {\n\t    var i = rowA.score > rowB.score ? 1 : rowA.score < rowB.score ? -1 : 0;\n\t    return true === direction ? i : -i;\n\t  });\n\t};\n\n\tAlignmentTrack.prototype.popupData = function (config) {\n\t  var clickedObject = this.getClickedObject(config.viewport, config.y, config.genomicLocation);\n\t  return clickedObject ? clickedObject.popupData(config.genomicLocation) : undefined;\n\t};\n\n\tAlignmentTrack.prototype.contextMenuItemList = function (clickState) {\n\t  var self = this;\n\t  var viewport = clickState.viewport;\n\t  var genomicState = clickState.viewport.genomicState;\n\t  var clickedObject = this.getClickedObject(clickState.viewport, clickState.y, clickState.genomicLocation);\n\t  var isSingleAlignment = clickedObject && !clickedObject.paired && typeof clickedObject.isPaired === 'function';\n\t  var list = [];\n\t  list.push('<b>Sort by...</b>');\n\t  list.push({\n\t    label: '&nbsp; base',\n\t    click: function click() {\n\t      return sortByOption(\"NUCLEOTIDE\");\n\t    }\n\t  });\n\t  list.push({\n\t    label: '&nbsp; read strand',\n\t    click: function click() {\n\t      return sortByOption(\"STRAND\");\n\t    }\n\t  });\n\t  list.push({\n\t    label: '&nbsp; insert size',\n\t    click: function click() {\n\t      return sortByOption(\"INSERT_SIZE\");\n\t    }\n\t  });\n\t  list.push({\n\t    label: '&nbsp; chromosome of mate',\n\t    click: function click() {\n\t      return sortByOption(\"MATE_CHR\");\n\t    }\n\t  });\n\t  list.push({\n\t    label: '&nbsp; mapping quality',\n\t    click: function click() {\n\t      return sortByOption(\"MQ\");\n\t    }\n\t  });\n\t  list.push({\n\t    label: '&nbsp; tag',\n\t    click: sortByTag\n\t  });\n\t  list.push('<hr/>');\n\n\t  if (isSingleAlignment && clickedObject.isMateMapped()) {\n\t    list.push({\n\t      label: 'View mate in split screen',\n\t      click: viewMateInSplitScreen,\n\t      init: undefined\n\t    });\n\t  }\n\n\t  list.push({\n\t    label: 'View read sequence',\n\t    click: viewReadSequence\n\t  });\n\t  list.push('<hr/>');\n\t  return list;\n\n\t  function sortByOption(option) {\n\t    sortRows({\n\t      chr: genomicState.referenceFrame.chrName,\n\t      position: Math.floor(clickState.genomicLocation),\n\t      sortOption: option\n\t    });\n\t  }\n\n\t  function sortByTag() {\n\t    var config = {\n\t      label: 'Tag Name',\n\t      input: self.sortByTag ? self.sortByTag : '',\n\t      click: function click() {\n\t        var tag = self.browser.inputDialog.$input.val().trim();\n\t        self.sortByTag = tag;\n\t        sortRows({\n\t          chr: genomicState.referenceFrame.chrName,\n\t          position: Math.floor(clickState.genomicLocation),\n\t          sortOption: \"TAG\",\n\t          tag: tag\n\t        });\n\t      }\n\t    };\n\t    self.browser.inputDialog.configure(config);\n\t    self.browser.inputDialog.present($(self.parent.trackView.trackDiv));\n\t  }\n\n\t  function sortRows(options) {\n\t    if (!clickState.viewport.tile) {\n\t      return;\n\t    }\n\n\t    var currentSorts = self.parent.sortObjects;\n\t    var cs = currentSorts[viewport.genomicState.id];\n\t    options.direction = cs ? !cs.direction : true;\n\t    self.sortAlignmentRows(options, clickState.viewport.getCachedFeatures());\n\t    self.parent.trackView.repaintViews();\n\t    currentSorts[viewport.genomicState.id] = options;\n\t  }\n\n\t  function viewMateInSplitScreen() {\n\t    if (clickedObject.mate) {\n\t      self.highlightedAlignmentReadNamed = clickedObject.readName;\n\t      self.browser.presentSplitScreenMultiLocusPanel(clickedObject, clickState.viewport.genomicState);\n\t    }\n\t  }\n\n\t  function viewReadSequence() {\n\t    var alignment = clickedObject;\n\t    if (!alignment) return;\n\t    var seqstring = alignment.seq; //.map(b => String.fromCharCode(b)).join(\"\");\n\n\t    if (!seqstring || \"*\" === seqstring) {\n\t      self.browser.presentAlert(\"Read sequence: *\");\n\t    } else {\n\t      self.browser.presentAlert(seqstring);\n\t    }\n\t  }\n\t};\n\n\tAlignmentTrack.prototype.getClickedObject = function (viewport, y, genomicLocation) {\n\t  var showSoftClips = this.parent.showSoftClips;\n\t  var features = viewport.getCachedFeatures();\n\t  if (!features || features.length === 0) return;\n\t  var packedAlignmentRows = features.packedAlignmentRows;\n\t  var downsampledIntervals = features.downsampledIntervals;\n\t  var packedAlignmentsIndex = Math.floor((y - this.top - this.alignmentsYOffset) / this.alignmentRowHeight);\n\n\t  if (packedAlignmentsIndex < 0) {\n\t    for (var i = 0; i < downsampledIntervals.length; i++) {\n\t      if (downsampledIntervals[i].start <= genomicLocation && downsampledIntervals[i].end >= genomicLocation) {\n\t        return downsampledIntervals[i];\n\t      }\n\t    }\n\t  } else if (packedAlignmentsIndex < packedAlignmentRows.length) {\n\t    var alignmentRow = packedAlignmentRows[packedAlignmentsIndex];\n\t    var clicked = alignmentRow.alignments.filter(function (alignment) {\n\t      var s = showSoftClips ? alignment.scStart : alignment.start;\n\t      var l = showSoftClips ? alignment.scLengthOnRef : alignment.lengthOnRef;\n\t      return genomicLocation >= s && genomicLocation <= s + l;\n\t    });\n\t    if (clicked.length > 0) return clicked[0];\n\t  }\n\n\t  return undefined;\n\t};\n\t/**\n\t * Return the color for connectors in paired alignment view.   If explicitly set return that, otherwise return\n\t * the alignment color, unless the color option can result in split colors (separte color for each mate).\n\t *\n\t * @param alignment\n\t * @returns {string}\n\t */\n\n\n\tAlignmentTrack.prototype.getConnectorColor = function (alignment) {\n\t  if (this.pairConnectorColor) {\n\t    return this.pairConnectorColor;\n\t  }\n\n\t  switch (this.colorBy) {\n\t    case \"strand\":\n\t    case \"firstOfPairStrand\":\n\t    case \"pairOrientation\":\n\t    case \"tag\":\n\t      return this.parent.color || DEFAULT_CONNECTOR_COLOR;\n\n\t    default:\n\t      return this.getAlignmentColor(alignment);\n\t  }\n\t};\n\n\tAlignmentTrack.prototype.getAlignmentColor = function (alignment) {\n\t  var self = this;\n\t  var color = self.parent.color;\n\t  var option = self.colorBy;\n\t  var tagValue;\n\n\t  switch (option) {\n\t    case \"strand\":\n\t      color = alignment.strand ? self.posStrandColor : self.negStrandColor;\n\t      break;\n\n\t    case \"firstOfPairStrand\":\n\t      if (alignment instanceof PairedAlignment) {\n\t        color = alignment.firstOfPairStrand() ? self.posStrandColor : self.negStrandColor;\n\t      } else if (alignment.isPaired()) {\n\t        if (alignment.isFirstOfPair()) {\n\t          color = alignment.strand ? self.posStrandColor : self.negStrandColor;\n\t        } else if (alignment.isSecondOfPair()) {\n\t          color = alignment.strand ? self.negStrandColor : self.posStrandColor;\n\t        } else {\n\t          console.error(\"ERROR. Paired alignments are either first or second.\");\n\t        }\n\t      }\n\n\t      break;\n\n\t    case \"pairOrientation\":\n\t      if (alignment.mate && alignment.isMateMapped() && alignment.mate.chr !== alignment.chr) {\n\t        color = getChrColor(alignment.mate.chr);\n\t      } else if (self.pairOrientation && alignment.pairOrientation) {\n\t        var oTypes = orientationTypes[self.pairOrientation];\n\n\t        if (oTypes) {\n\t          var pairColor = self.pairColors[oTypes[alignment.pairOrientation]];\n\t          if (pairColor) color = pairColor;\n\t        }\n\t      }\n\n\t      break;\n\n\t    case \"fragmentLength\":\n\t      if (alignment.mate && alignment.isMateMapped() && alignment.mate.chr !== alignment.chr) {\n\t        color = getChrColor(alignment.mate.chr);\n\t      } else if (self.parent.minFragmentLength && Math.abs(alignment.fragmentLength) < self.parent.minFragmentLength) {\n\t        color = self.smallFragmentLengthColor;\n\t      } else if (self.parent.maxFragmentLength && Math.abs(alignment.fragmentLength) > self.parent.maxFragmentLength) {\n\t        color = self.largeFragmentLengthColor;\n\t      }\n\n\t      break;\n\n\t    case \"tag\":\n\t      tagValue = alignment.tags()[self.colorByTag];\n\n\t      if (tagValue !== undefined) {\n\t        if (self.bamColorTag === self.colorByTag) {\n\t          // UCSC style color option\n\t          color = \"rgb(\" + tagValue + \")\";\n\t        } else {\n\t          if (!self.tagColors) {\n\t            self.tagColors = new PaletteColorTable(\"Set1\");\n\t          }\n\n\t          color = self.tagColors.getColor(tagValue);\n\t        }\n\t      }\n\n\t      break;\n\n\t    default:\n\t      color = self.parent.color;\n\t  }\n\n\t  return color;\n\t};\n\n\tvar orientationTypes = {\n\t  \"fr\": {\n\t    \"F1R2\": \"LR\",\n\t    \"F2R1\": \"LR\",\n\t    \"F1F2\": \"LL\",\n\t    \"F2F1\": \"LL\",\n\t    \"R1R2\": \"RR\",\n\t    \"R2R1\": \"RR\",\n\t    \"R1F2\": \"RL\",\n\t    \"R2F1\": \"RL\"\n\t  },\n\t  \"rf\": {\n\t    \"R1F2\": \"LR\",\n\t    \"R2F1\": \"LR\",\n\t    \"R1R2\": \"LL\",\n\t    \"R2R1\": \"LL\",\n\t    \"F1F2\": \"RR\",\n\t    \"F2F1\": \"RR\",\n\t    \"F1R2\": \"RL\",\n\t    \"F2R1\": \"RL\"\n\t  },\n\t  \"ff\": {\n\t    \"F2F1\": \"LR\",\n\t    \"R1R2\": \"LR\",\n\t    \"F2R1\": \"LL\",\n\t    \"R1F2\": \"LL\",\n\t    \"R2F1\": \"RR\",\n\t    \"F1R2\": \"RR\",\n\t    \"R2R1\": \"RL\",\n\t    \"F1F2\": \"RL\"\n\t  }\n\t};\n\n\tfunction getChrColor(chr) {\n\t  if (chrColorMap[chr]) {\n\t    return chrColorMap[chr];\n\t  } else if (chrColorMap[\"chr\" + chr]) {\n\t    var color = chrColorMap[\"chr\" + chr];\n\t    chrColorMap[chr] = color;\n\t    return color;\n\t  } else {\n\t    var _color = IGVColor.randomRGB();\n\n\t    chrColorMap[chr] = _color;\n\t    return _color;\n\t  }\n\t}\n\n\tvar chrColorMap = {\n\t  \"chrX\": \"rgb(204, 153, 0)\",\n\t  \"chrY\": \"rgb(153, 204, 0\",\n\t  \"chrUn\": \"rgb(50, 50, 50)\",\n\t  \"chr1\": \"rgb(80, 80, 255)\",\n\t  \"chrI\": \"rgb(139, 155, 187)\",\n\t  \"chr2\": \"rgb(206, 61, 50)\",\n\t  \"chrII\": \"rgb(206, 61, 50)\",\n\t  \"chr2a\": \"rgb(216, 71, 60)\",\n\t  \"chr2b\": \"rgb(226, 81, 70)\",\n\t  \"chr3\": \"rgb(116, 155, 88)\",\n\t  \"chrIII\": \"rgb(116, 155, 88)\",\n\t  \"chr4\": \"rgb(240, 230, 133)\",\n\t  \"chrIV\": \"rgb(240, 230, 133)\",\n\t  \"chr5\": \"rgb(70, 105, 131)\",\n\t  \"chr6\": \"rgb(186, 99, 56)\",\n\t  \"chr7\": \"rgb(93, 177, 221)\",\n\t  \"chr8\": \"rgb(128, 34, 104)\",\n\t  \"chr9\": \"rgb(107, 215, 107)\",\n\t  \"chr10\": \"rgb(213, 149, 167)\",\n\t  \"chr11\": \"rgb(146, 72, 34)\",\n\t  \"chr12\": \"rgb(131, 123, 141)\",\n\t  \"chr13\": \"rgb(199, 81, 39)\",\n\t  \"chr14\": \"rgb(213, 143, 92)\",\n\t  \"chr15\": \"rgb(122, 101, 165)\",\n\t  \"chr16\": \"rgb(228, 175, 105)\",\n\t  \"chr17\": \"rgb(59, 27, 83)\",\n\t  \"chr18\": \"rgb(205, 222, 183)\",\n\t  \"chr19\": \"rgb(97, 42, 121)\",\n\t  \"chr20\": \"rgb(174, 31, 99)\",\n\t  \"chr21\": \"rgb(231, 199, 111)\",\n\t  \"chr22\": \"rgb(90, 101, 94)\",\n\t  \"chr23\": \"rgb(204, 153, 0)\",\n\t  \"chr24\": \"rgb(153, 204, 0)\",\n\t  \"chr25\": \"rgb(51, 204, 0)\",\n\t  \"chr26\": \"rgb(0, 204, 51)\",\n\t  \"chr27\": \"rgb(0, 204, 153)\",\n\t  \"chr28\": \"rgb(0, 153, 204)\",\n\t  \"chr29\": \"rgb(10, 71, 255)\",\n\t  \"chr30\": \"rgb(71, 117, 255)\",\n\t  \"chr31\": \"rgb(255, 194, 10)\",\n\t  \"chr32\": \"rgb(255, 209, 71)\",\n\t  \"chr33\": \"rgb(153, 0, 51)\",\n\t  \"chr34\": \"rgb(153, 26, 0)\",\n\t  \"chr35\": \"rgb(153, 102, 0)\",\n\t  \"chr36\": \"rgb(128, 153, 0)\",\n\t  \"chr37\": \"rgb(51, 153, 0)\",\n\t  \"chr38\": \"rgb(0, 153, 26)\",\n\t  \"chr39\": \"rgb(0, 153, 102)\",\n\t  \"chr40\": \"rgb(0, 128, 153)\",\n\t  \"chr41\": \"rgb(0, 51, 153)\",\n\t  \"chr42\": \"rgb(26, 0, 153)\",\n\t  \"chr43\": \"rgb(102, 0, 153)\",\n\t  \"chr44\": \"rgb(153, 0, 128)\",\n\t  \"chr45\": \"rgb(214, 0, 71)\",\n\t  \"chr46\": \"rgb(255, 20, 99)\",\n\t  \"chr47\": \"rgb(0, 214, 143)\",\n\t  \"chr48\": \"rgb(20, 255, 177)\"\n\t};\n\n\tvar InteractionTrack = extend(TrackBase, function (config, browser) {\n\t  TrackBase.call(this, config, browser);\n\t  this.theta = config.theta || Math.PI / 4;\n\t  this.sinTheta = Math.sin(this.theta);\n\t  this.cosTheta = Math.cos(this.theta);\n\t  this.height = config.height || 250;\n\t  this.autoHeight = true;\n\t  this.arcOrientation = config.arcOrientation === undefined ? true : config.arcOrientation; // true for up, false for down\n\n\t  this.thickness = config.thickness || 2;\n\t  this.color = config.color || \"rgb(180,25,137)\";\n\t  this.visibilityWindow = -1;\n\t  this.colorAlphaCache = {};\n\t});\n\t/**\n\t * Return the current state of the track.  Used to create sessions and bookmarks.\n\t *\n\t * @returns {*|{}}\n\t */\n\n\tInteractionTrack.prototype.getState = function () {\n\t  var config = this.config || {};\n\t  config.arcOrientation = this.arcOrientation;\n\t  config.thickness = this.thickness;\n\t  config.color = this.color;\n\t  return config;\n\t};\n\n\tInteractionTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\t  var self = this;\n\t  var genome = this.browser.genome;\n\n\t  if (self.featureCache) {\n\t    return Promise.resolve(self.featureCache.queryFeatures(chr, bpStart, bpEnd));\n\t  } else {\n\t    var options = buildOptions(self.config); // Add oauth token, if any\n\n\t    return igvxhr.loadString(self.config.url, options).then(function (data) {\n\t      var parser = new FeatureParser(\"bedpe\");\n\t      var header = parser.parseHeader(data);\n\t      var features = parser.parseFeatures(data);\n\t      self.featureCache = new FeatureCache(features, genome); // TODO -- whole genome features here.\n\n\t      return self.featureCache.queryFeatures(chr, bpStart, bpEnd);\n\t    });\n\t  }\n\t};\n\n\tInteractionTrack.prototype.draw = function (options) {\n\t  var self = this;\n\t  var ctx = options.context;\n\t  var pixelWidth = options.pixelWidth;\n\t  var pixelHeight = options.pixelHeight;\n\t  var viewportWidth = options.viewportWidth;\n\t  var bpPerPixel = options.bpPerPixel;\n\t  var bpStart = options.bpStart;\n\t  var xScale = bpPerPixel;\n\t  IGVGraphics.fillRect(ctx, 0, options.pixelTop, pixelWidth, pixelHeight, {\n\t    'fillStyle': \"rgb(255, 255, 255)\"\n\t  });\n\t  var featureList = options.features;\n\n\t  if (featureList) {\n\t    // Autoscale theta\n\t    autoscale();\n\t    featureList.forEach(function (feature) {\n\t      var pixelStart = Math.round((feature.m1 - bpStart) / xScale);\n\t      var pixelEnd = Math.round((feature.m2 - bpStart) / xScale);\n\t      var direction = self.arcOrientation;\n\t      var w = pixelEnd - pixelStart;\n\n\t      if (w < 3) {\n\t        w = 3;\n\t        pixelStart--;\n\t      }\n\n\t      var a = w / 2;\n\t      var r = a / self.sinTheta;\n\t      var b = self.cosTheta * r;\n\t      var xc = pixelStart + a;\n\t      var yc, startAngle, endAngle;\n\n\t      if (direction) {\n\t        // UP\n\t        var trackBaseLine = self.height;\n\t        yc = trackBaseLine + b;\n\t        startAngle = Math.PI + Math.PI / 2 - self.theta;\n\t        endAngle = Math.PI + Math.PI / 2 + self.theta;\n\t      } else {\n\t        // DOWN\n\t        yc = -b;\n\t        startAngle = Math.PI / 2 - self.theta;\n\t        endAngle = Math.PI / 2 + self.theta;\n\t      }\n\n\t      var color = feature.color || self.color;\n\n\t      if (color && w > viewportWidth) {\n\t        color = getAlphaColor.call(self, color, \"0.1\");\n\t      }\n\n\t      ctx.strokeStyle = color;\n\t      ctx.lineWidth = feature.thickness || self.thicknewss || 1;\n\t      ctx.beginPath();\n\t      ctx.arc(xc, yc, r, startAngle, endAngle, false);\n\t      ctx.stroke();\n\t    });\n\t  }\n\n\t  function autoscale() {\n\t    var max = 0;\n\t    featureList.forEach(function (feature) {\n\t      var pixelStart = (feature.start - bpStart) / xScale;\n\t      var pixelEnd = (feature.end - bpStart) / xScale;\n\n\t      if (pixelEnd >= 0 && pixelStart <= pixelWidth) {\n\t        max = Math.max(max, pixelEnd - pixelStart);\n\t      }\n\t    });\n\t    var a = Math.min(viewportWidth, max) / 2;\n\n\t    if (max > 0) {\n\t      var coa = pixelHeight / a;\n\t      self.theta = estimateTheta(coa);\n\t      self.sinTheta = Math.sin(self.theta);\n\t      self.cosTheta = Math.cos(self.theta);\n\t    }\n\t  }\n\t};\n\n\tInteractionTrack.prototype.menuItemList = function () {\n\t  var self = this;\n\t  return [{\n\t    name: \"Toggle arc direction\",\n\t    click: function click() {\n\t      self.arcOrientation = !self.arcOrientation;\n\t      self.trackView.repaintViews();\n\t    }\n\t  }, {\n\t    name: \"Set track color\",\n\t    click: function click() {\n\t      self.trackView.presentColorPicker();\n\t    }\n\t  }];\n\t}; //\n\t//\n\t//\n\t// InteractionTrack.prototype.popupData = function (config) {\n\t//\n\t//     return null;\n\t// };\n\t// InteractionTrack.prototype.contextMenuItemList = function (config) {\n\t//\n\t//     var self = this,\n\t//         clickHandler;\n\t//\n\t//\n\t//\n\t//     clickHandler = function () {\n\t//\n\t//         var genomicLocation = config.genomicLocation,\n\t//             referenceFrame = config.viewport.genomicState.referenceFrame;\n\t//\n\t//         // Define a region 5 \"pixels\" wide in genomic coordinates\n\t//         var bpWidth = referenceFrame.toBP(2.5);\n\t//\n\t//         self.sortSamples(referenceFrame.chrName, genomicLocation - bpWidth, genomicLocation + bpWidth, sortDirection);\n\t//\n\t//         sortDirection = (sortDirection === \"ASC\" ? \"DESC\" : \"ASC\");\n\t//\n\t//\n\t//     };\n\t//\n\t//     return [{label: 'Sort by value',  click: clickHandler, init: undefined}];\n\t//\n\t// };\n\n\t/**\n\t * Estimate theta given the ratio of track height to 1/2 the feature width (coa).  This relationship is approximately linear.\n\t */\n\n\n\tfunction estimateTheta(x) {\n\t  var coa = [0.01570925532366355, 0.15838444032453644, 0.3249196962329063, 0.5095254494944288, 0.7265425280053609, 0.9999999999999999];\n\t  var theta = [0.031415926535897934, 0.3141592653589793, 0.6283185307179586, 0.9424777960769379, 1.2566370614359172, 1.5707963267948966];\n\t  var idx;\n\n\t  for (idx = 0; idx < coa.length; idx++) {\n\t    if (coa[idx] > x) {\n\t      break;\n\t    }\n\t  }\n\n\t  var left = idx === 0 ? 0 : coa[idx - 1];\n\t  var right = idx < coa.length ? coa[idx] : 1;\n\t  var r = (x - left) / (right - left);\n\t  var thetaLeft = idx === 0 ? 0 : theta[idx - 1];\n\t  var thetaRight = idx < theta.length ? theta[idx] : Math.PI / 2;\n\t  return thetaLeft + r * (thetaRight - thetaLeft);\n\t}\n\n\tfunction getAlphaColor(color, alpha) {\n\t  var c = this.colorAlphaCache[color];\n\n\t  if (!c) {\n\t    c = IGVColor.addAlpha(color, alpha);\n\t    this.colorAlphaCache[color] = c;\n\t  }\n\n\t  return c;\n\t}\n\n\tvar DEFAULT_VISIBILITY_WINDOW = 1000000;\n\tvar type$1 = \"variant\";\n\tvar topMargin = 10;\n\tvar VariantTrack = extend(TrackBase, function (config, browser) {\n\t  this.type = type$1;\n\t  this.visibilityWindow = config.visibilityWindow;\n\t  TrackBase.call(this, config, browser);\n\t  this.displayMode = config.displayMode || \"EXPANDED\"; // COLLAPSED | EXPANDED | SQUISHED\n\n\t  this.labelDisplayMode = config.labelDisplayMode;\n\t  this.variantHeight = config.variantHeight || 10;\n\t  this.squishedCallHeight = config.squishedCallHeight || 1;\n\t  this.expandedCallHeight = config.expandedCallHeight || 10;\n\t  this.expandedVGap = config.expandedVGap !== undefined ? config.expandedVGap : 2;\n\t  this.squishedVGap = config.squishedVGap !== undefined ? config.squishedVGap : 1;\n\t  this.expandedGroupGap = config.expandedGroupGap || 10;\n\t  this.squishedGroupGap = config.squishedGroupGap || 5;\n\t  this.featureHeight = config.featureHeight || 14;\n\t  this.visibilityWindow = config.visibilityWindow;\n\t  this.featureSource = new FeatureSource(config, browser.genome);\n\t  this.noCallColor = config.noCallColor || \"rgb(245, 245, 245)\";\n\t  this.nonRefColor = config.nonRefColor || \"rgb(200, 200, 215)\";\n\t  this.mixedColor = config.mixedColor || \"rgb(200, 220, 200)\";\n\t  this.homrefColor = config.homrefColor || \"rgb(200, 200, 200)\";\n\t  this.homvarColor = config.homvarColor || \"rgb(17,248,254)\";\n\t  this.hetvarColor = config.hetvarColor || \"rgb(34,12,253)\";\n\t  this.sortDirection = \"ASC\";\n\t  this.nRows = 1; // Computed dynamically\n\t});\n\tVariantTrack.prototype.postInit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t  var header, fn, length;\n\t  return regeneratorRuntime.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          _context.next = 2;\n\t          return this.getFileHeader();\n\n\t        case 2:\n\t          header = _context.sent;\n\n\t          // cricital, don't remove'\n\t          if (undefined === this.visibilityWindow) {\n\t            fn = this.config.url instanceof File ? this.config.url.name : this.config.url;\n\n\t            if (isString(fn) && fn.toLowerCase().includes(\"gnomad\")) {\n\t              this.visibilityWindow = 1000; // these are known to be very dense\n\t            } else if (this.callSets) {\n\t              length = this.callSets.length;\n\t              this.visibilityWindow = Math.max(1000, DEFAULT_VISIBILITY_WINDOW - length * (DEFAULT_VISIBILITY_WINDOW / 100));\n\t            } else {\n\t              this.visibilityWindow = DEFAULT_VISIBILITY_WINDOW;\n\t            }\n\t          }\n\n\t          return _context.abrupt(\"return\", this);\n\n\t        case 5:\n\t        case \"end\":\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t}));\n\tVariantTrack.prototype.getFileHeader = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n\t  var header;\n\t  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t    while (1) {\n\t      switch (_context2.prev = _context2.next) {\n\t        case 0:\n\t          if (!this.header) {\n\t            _context2.next = 4;\n\t            break;\n\t          }\n\n\t          return _context2.abrupt(\"return\", this.header);\n\n\t        case 4:\n\t          if (!(typeof this.featureSource.getFileHeader === \"function\")) {\n\t            _context2.next = 13;\n\t            break;\n\t          }\n\n\t          _context2.next = 7;\n\t          return this.featureSource.getFileHeader();\n\n\t        case 7:\n\t          header = _context2.sent;\n\n\t          if (header) {\n\t            // Header (from track line).  Set properties,unless set in the config (config takes precedence)\n\t            if (header.name && !this.config.name) {\n\t              this.name = header.name;\n\t            }\n\n\t            if (header.color && !this.config.color) {\n\t              this.color = \"rgb(\" + header.color + \")\";\n\t            }\n\n\t            this.callSets = header.callSets || [];\n\t          }\n\n\t          this.header = header;\n\t          return _context2.abrupt(\"return\", header);\n\n\t        case 13:\n\t          this.callSets = [];\n\t          return _context2.abrupt(\"return\", undefined);\n\n\t        case 15:\n\t        case \"end\":\n\t          return _context2.stop();\n\t      }\n\t    }\n\t  }, _callee2, this);\n\t}));\n\n\tVariantTrack.prototype.getCallsetsLength = function () {\n\t  return this.callSets.length;\n\t};\n\n\tVariantTrack.prototype.getFeatures = /*#__PURE__*/function () {\n\t  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(chr, bpStart, bpEnd, bpPerPixel) {\n\t    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t      while (1) {\n\t        switch (_context3.prev = _context3.next) {\n\t          case 0:\n\t            if (!(this.header === undefined)) {\n\t              _context3.next = 4;\n\t              break;\n\t            }\n\n\t            _context3.next = 3;\n\t            return this.getFileHeader();\n\n\t          case 3:\n\t            this.header = _context3.sent;\n\n\t          case 4:\n\t            return _context3.abrupt(\"return\", this.featureSource.getFeatures(chr, bpStart, bpEnd, bpPerPixel, this.visibilityWindow));\n\n\t          case 5:\n\t          case \"end\":\n\t            return _context3.stop();\n\t        }\n\t      }\n\t    }, _callee3, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3, _x4) {\n\t    return _ref3.apply(this, arguments);\n\t  };\n\t}();\n\t/**\n\t * The required height in pixels required for the track content.   This is not the visible track height, which\n\t * can be smaller (with a scrollbar) or larger.\n\t *\n\t * @param features\n\t * @returns {*}\n\t */\n\n\n\tVariantTrack.prototype.computePixelHeight = function (features) {\n\t  if (this.displayMode === \"COLLAPSED\") {\n\t    this.nRows = 1;\n\t    return topMargin + this.variantHeight;\n\t  } else {\n\t    var maxRow = 0;\n\n\t    if (features) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = features[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var feature = _step.value;\n\t          if (feature.row && feature.row > maxRow) maxRow = feature.row;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    var vGap = this.displayMode === 'EXPANDED' ? this.expandedVGap : this.squishedVGap;\n\t    this.nRows = maxRow + 1;\n\t    var h = topMargin + this.nRows * (this.variantHeight + vGap);\n\t    this.variantBandHeight = h;\n\t    var callHeight = this.displayMode === \"EXPANDED\" ? this.expandedCallHeight : this.squishedCallHeight;\n\t    var nCalls = this.getCallsetsLength() * this.nRows;\n\t    return h + vGap + (nCalls + 1) * (callHeight + vGap);\n\t  }\n\t};\n\n\tVariantTrack.prototype.draw = function (options) {\n\t  var ctx = options.context;\n\t  var callSets = this.callSets;\n\t  var nCalls = this.getCallsetsLength();\n\t  var pixelWidth = options.pixelWidth;\n\t  var pixelHeight = options.pixelHeight;\n\t  var callHeight = \"EXPANDED\" === this.displayMode ? this.expandedCallHeight : this.squishedCallHeight;\n\t  var bpPerPixel = options.bpPerPixel;\n\t  var bpStart = options.bpStart;\n\t  var bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\t  IGVGraphics.fillRect(ctx, 0, options.pixelTop, pixelWidth, pixelHeight, {\n\t    'fillStyle': \"rgb(255, 255, 255)\"\n\t  });\n\t  var vGap = this.displayMode === 'EXPANDED' ? this.expandedVGap : this.squishedVGap;\n\n\t  if (callSets && nCalls > 0 && \"COLLAPSED\" !== this.displayMode) {\n\t    IGVGraphics.strokeLine(ctx, 0, this.variantBandHeight, pixelWidth, this.variantBandHeight, {\n\t      strokeStyle: 'rgb(224,224,224) '\n\t    });\n\t  }\n\n\t  var featureList = options.features;\n\n\t  if (featureList) {\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\n\t    try {\n\t      for (var _iterator2 = featureList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var variant = _step2.value;\n\t        if (variant.end < bpStart) continue;\n\t        if (variant.start > bpEnd) break;\n\t        var py = topMargin + (\"COLLAPSED\" === this.displayMode ? 0 : variant.row * (this.variantHeight + vGap));\n\t        var vh = this.variantHeight; // Compute pixel width.   Minimum width is 3 pixels,  if > 5 pixels create gap between variants\n\n\t        var px = Math.round((variant.start - bpStart) / bpPerPixel);\n\t        var px1 = Math.round((variant.end - bpStart) / bpPerPixel);\n\t        var pw = Math.max(1, px1 - px);\n\n\t        if (pw < 3) {\n\t          pw = 3;\n\t          px -= 1;\n\t        } else if (pw > 5) {\n\t          px += 1;\n\t          pw -= 2;\n\t        }\n\n\t        if (\"NONVARIANT\" === variant.type) {\n\t          ctx.fillStyle = this.nonRefColor;\n\t        } else if (\"MIXED\" === variant.type) {\n\t          ctx.fillStyle = this.mixedColor;\n\t        } else {\n\t          ctx.fillStyle = this.color;\n\t        }\n\n\t        ctx.fillRect(px, py, pw, vh);\n\n\t        if (nCalls > 0 && variant.calls && \"COLLAPSED\" !== this.displayMode) {\n\t          var callsDrawn = 0;\n\t          var _iteratorNormalCompletion3 = true;\n\t          var _didIteratorError3 = false;\n\t          var _iteratorError3 = undefined;\n\n\t          try {\n\t            for (var _iterator3 = callSets[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t              var callSet = _step3.value;\n\t              var call = variant.calls[callSet.id];\n\n\t              if (call) {\n\t                var _py = this.variantBandHeight + vGap + (callsDrawn + variant.row) * (callHeight + vGap);\n\n\t                var allVar = true; // until proven otherwise\n\n\t                var allRef = true;\n\t                var noCall = false;\n\t                var _iteratorNormalCompletion4 = true;\n\t                var _didIteratorError4 = false;\n\t                var _iteratorError4 = undefined;\n\n\t                try {\n\t                  for (var _iterator4 = call.genotype[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var g = _step4.value;\n\n\t                    if ('.' === g) {\n\t                      noCall = true;\n\t                      break;\n\t                    } else {\n\t                      if (g !== 0) allRef = false;\n\t                      if (g === 0) allVar = false;\n\t                    }\n\t                  }\n\t                } catch (err) {\n\t                  _didIteratorError4 = true;\n\t                  _iteratorError4 = err;\n\t                } finally {\n\t                  try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t                      _iterator4.return();\n\t                    }\n\t                  } finally {\n\t                    if (_didIteratorError4) {\n\t                      throw _iteratorError4;\n\t                    }\n\t                  }\n\t                }\n\n\t                if (noCall) {\n\t                  ctx.fillStyle = this.noCallColor;\n\t                } else if (allRef) {\n\t                  ctx.fillStyle = this.homrefColor;\n\t                } else if (allVar) {\n\t                  ctx.fillStyle = this.homvarColor;\n\t                } else {\n\t                  ctx.fillStyle = this.hetvarColor;\n\t                }\n\n\t                ctx.fillRect(px, _py, pw, callHeight);\n\t              }\n\n\t              callsDrawn++;\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t                _iterator3.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError3) {\n\t                throw _iteratorError3;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError2 = true;\n\t      _iteratorError2 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t          _iterator2.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError2) {\n\t          throw _iteratorError2;\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t/**\n\t * Return \"popup data\" for feature @ genomic location.  Data is an array of key-value pairs\n\t */\n\n\n\tVariantTrack.prototype.popupData = function (clickState, featureList) {\n\t  if (!featureList) featureList = this.clickedFeatures(clickState);\n\t  var genomicLocation = clickState.genomicLocation;\n\t  var genomeID = this.browser.genome.id;\n\t  var popupData = [];\n\t  var sampleInformation = this.browser.sampleInformation;\n\t  var _iteratorNormalCompletion5 = true;\n\t  var _didIteratorError5 = false;\n\t  var _iteratorError5 = undefined;\n\n\t  try {\n\t    for (var _iterator5 = featureList[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t      var variant = _step5.value;\n\n\t      if (popupData.length > 0) {\n\t        popupData.push('<HR>');\n\t      }\n\n\t      if (\"COLLAPSED\" === this.displayMode) {\n\t        Array.prototype.push.apply(popupData, variant.popupData(genomicLocation, this.type));\n\t      } else {\n\t        var yOffset = clickState.y;\n\t        var vGap = this.displayMode === 'EXPANDED' ? this.expandedVGap : this.squishedVGap;\n\n\t        if (yOffset <= this.variantBandHeight) {\n\t          // Variant\n\t          var row = Math.floor((yOffset - topMargin) / (this.variantHeight + vGap));\n\n\t          if (variant.row === row) {\n\t            Array.prototype.push.apply(popupData, variant.popupData(genomicLocation, genomeID), this.type);\n\t          }\n\t        } else {\n\t          // Genotype\n\t          var callSets = this.callSets;\n\n\t          if (callSets && variant.calls) {\n\t            var callHeight = this.nRows * (\"SQUISHED\" === this.displayMode ? this.squishedCallHeight : this.expandedCallHeight);\n\n\t            var _row = Math.floor((yOffset - this.variantBandHeight) / (callHeight + vGap));\n\n\t            if (_row >= 0 && _row < callSets.length) {\n\t              var cs = callSets[_row];\n\t              var call = variant.calls[cs.id];\n\t              Array.prototype.push.apply(popupData, extractGenotypePopupData(call, variant, genomeID, sampleInformation));\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError5 = true;\n\t    _iteratorError5 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t        _iterator5.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError5) {\n\t        throw _iteratorError5;\n\t      }\n\t    }\n\t  }\n\n\t  return popupData;\n\t};\n\t/**\n\t * Genotype popup text.\n\t * @param call\n\t * @param variant\n\t * @returns {Array}\n\t */\n\n\n\tfunction extractGenotypePopupData(call, variant, genomeId, sampleInformation) {\n\t  var gt = '';\n\t  var altArray = variant.alternateBases.split(\",\");\n\t  var _iteratorNormalCompletion6 = true;\n\t  var _didIteratorError6 = false;\n\t  var _iteratorError6 = undefined;\n\n\t  try {\n\t    for (var _iterator6 = call.genotype[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t      var allele = _step6.value;\n\n\t      if ('.' === allele) {\n\t        gt += 'No Call';\n\t        break;\n\t      } else if (allele === 0) {\n\t        gt += variant.referenceBases;\n\t      } else {\n\t        var alt = altArray[allele - 1].replace(\"<\", \"&lt;\");\n\t        gt += alt;\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError6 = true;\n\t    _iteratorError6 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n\t        _iterator6.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError6) {\n\t        throw _iteratorError6;\n\t      }\n\t    }\n\t  }\n\n\t  var popupData = [];\n\n\t  if (call.callSetName !== undefined) {\n\t    popupData.push({\n\t      name: 'Name',\n\t      value: call.callSetName\n\t    });\n\t  }\n\n\t  popupData.push({\n\t    name: 'Genotype',\n\t    value: gt\n\t  });\n\n\t  if (call.phaseset !== undefined) {\n\t    popupData.push({\n\t      name: 'Phase set',\n\t      value: call.phaseset\n\t    });\n\t  }\n\n\t  if (call.genotypeLikelihood !== undefined) {\n\t    popupData.push({\n\t      name: 'genotypeLikelihood',\n\t      value: call.genotypeLikelihood.toString()\n\t    });\n\t  }\n\n\t  if (sampleInformation) {\n\t    var attr = sampleInformation.getAttributes(call.callSetName);\n\n\t    if (attr) {\n\t      Object.keys(attr).forEach(function (attrName) {\n\t        var displayText = attrName.replace(/([A-Z])/g, \" $1\");\n\t        displayText = displayText.charAt(0).toUpperCase() + displayText.slice(1);\n\t        popupData.push({\n\t          name: displayText,\n\t          value: attr[attrName]\n\t        });\n\t      });\n\t    }\n\t  }\n\n\t  var infoKeys = Object.keys(call.info);\n\n\t  if (infoKeys.length) {\n\t    popupData.push(\"<hr>\");\n\t  }\n\n\t  infoKeys.forEach(function (key) {\n\t    popupData.push({\n\t      name: key,\n\t      value: call.info[key]\n\t    });\n\t  });\n\t  var cravatLinks = []; // TODO -- where do these get calculated?\n\n\t  if (cravatLinks.length > 0) {\n\t    popupData.push(\"<HR/>\");\n\t    popupData = popupData.concat(cravatLinks);\n\t  }\n\n\t  return popupData;\n\t} // VariantTrack.prototype.contextMenuItemList = function (clickState) {\n\t//\n\t//     const self = this;\n\t//     const menuItems = [];\n\t//\n\t//     const featureList = this.clickedFeatures(clickState);\n\t//\n\t//     if (this.callSets && featureList && featureList.length > 0) {\n\t//\n\t//         featureList.forEach(function (variant) {\n\t//\n\t//             if ('str' === variant.type) {\n\t//\n\t//                 menuItems.push({\n\t//                     label: 'Sort by allele length',\n\t//                     click: function () {\n\t//                         sortCallSetsByAlleleLength(self.callSets, variant, self.sortDirection);\n\t//                         self.sortDirection = (self.sortDirection === \"ASC\") ? \"DESC\" : \"ASC\";\n\t//                         self.trackView.repaintViews();\n\t//                     }\n\t//                 });\n\t//\n\t//             }\n\t//\n\t//         });\n\t//     }\n\t//\n\t//\n\t//     function sortCallSetsByAlleleLength(callSets, variant, direction) {\n\t//         var d = (direction === \"DESC\") ? 1 : -1;\n\t//         Object.keys(callSets).forEach(function (property) {\n\t//             callSets[property].sort(function (a, b) {\n\t//                 var aNan = isNaN(variant.calls[a.id].genotype[0]);\n\t//                 var bNan = isNaN(variant.calls[b.id].genotype[0]);\n\t//                 if (aNan && bNan) {\n\t//                     return 0;\n\t//                 } else if (aNan) {\n\t//                     return 1;\n\t//                 } else if (bNan) {\n\t//                     return -1;\n\t//                 } else {\n\t//                     var a0 = getAlleleString(variant.calls[a.id], variant, 0);\n\t//                     var a1 = getAlleleString(variant.calls[a.id], variant, 1);\n\t//                     var b0 = getAlleleString(variant.calls[b.id], variant, 0);\n\t//                     var b1 = getAlleleString(variant.calls[b.id], variant, 1);\n\t//                     var result = Math.max(b0.length, b1.length) - Math.max(a0.length, a1.length);\n\t//                     if (result === 0) {\n\t//                         result = Math.min(b0.length, b1.length) - Math.min(a0.length, a1.length);\n\t//                     }\n\t//                     return d * result;\n\t//                 }\n\t//             });\n\t//         });\n\t//     }\n\t//\n\t//\n\t//     return menuItems;\n\t//\n\t// };\n\n\n\tVariantTrack.prototype.menuItemList = function () {\n\t  var self = this,\n\t      menuItems = [];\n\t  menuItems.push({\n\t    object: $('<div class=\"igv-track-menu-border-top\">')\n\t  });\n\t  [\"COLLAPSED\", \"SQUISHED\", \"EXPANDED\"].forEach(function (displayMode) {\n\t    var lut = {\n\t      \"COLLAPSED\": \"Collapse\",\n\t      \"SQUISHED\": \"Squish\",\n\t      \"EXPANDED\": \"Expand\"\n\t    };\n\t    menuItems.push({\n\t      object: createCheckbox(lut[displayMode], displayMode === self.displayMode),\n\t      click: function click() {\n\t        self.displayMode = displayMode;\n\t        self.trackView.checkContentHeight();\n\t        self.trackView.repaintViews();\n\t      }\n\t    });\n\t  });\n\t  return menuItems;\n\t};\n\n\tvar dataRangeMenuItem$1 = MenuUtils.dataRangeMenuItem;\n\tvar EqtlTrack = extend(TrackBase, function (config, browser) {\n\t  var url = config.url,\n\t      label = config.name;\n\t  this.config = config;\n\t  this.url = url;\n\t  this.name = label;\n\t  this.pValueField = config.pValueField || \"pValue\";\n\t  this.geneField = config.geneField || \"geneSymbol\";\n\t  this.snpField = config.snpField || \"snp\";\n\t  var min = config.minLogP || config.min;\n\t  var max = config.maxLogP || config.max;\n\t  this.dataRange = {\n\t    min: min || 3.5,\n\t    max: max || 25\n\t  };\n\n\t  if (!max) {\n\t    this.autoscale = true;\n\t  } else {\n\t    this.autoscale = config.autoscale;\n\t  }\n\n\t  this.autoscalePercentile = config.autoscalePercentile === undefined ? 98 : config.autoscalePercentile;\n\t  this.background = config.background; // No default\n\n\t  this.divider = config.divider || \"rgb(225,225,225)\";\n\t  this.dotSize = config.dotSize || 2;\n\t  this.height = config.height || 100;\n\t  this.autoHeight = false;\n\t  this.disableButtons = config.disableButtons; // Limit visibility window to 2 mb,  gtex server gets flaky beyond that\n\n\t  this.visibilityWindow = config.visibilityWindow === undefined ? 2000000 : config.visibilityWindow >= 0 ? Math.min(2000000, config.visibilityWindow) : 2000000;\n\t  this.featureSource = new FeatureSource(config, browser.genome);\n\t  GtexUtils.gtexLoaded = true;\n\t});\n\n\tEqtlTrack.prototype.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\t  var track = this,\n\t      yScale = (track.dataRange.max - track.dataRange.min) / pixelHeight;\n\t  var font = {\n\t    'font': 'normal 10px Arial',\n\t    'textAlign': 'right',\n\t    'strokeStyle': \"black\"\n\t  };\n\t  IGVGraphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {\n\t    'fillStyle': \"rgb(255, 255, 255)\"\n\t  }); // Determine a tick spacing such that there is at least 10 pixels between ticks\n\n\t  var n = Math.ceil((this.dataRange.max - this.dataRange.min) * 10 / pixelHeight);\n\n\t  for (var p = 4; p <= track.dataRange.max; p += n) {\n\t    var x1, x2, y1, y2, ref; // TODO: Dashes may not actually line up with correct scale. Ask Jim about this\n\n\t    ref = 0.85 * pixelWidth;\n\t    x1 = ref - 5;\n\t    x2 = ref;\n\t    y1 = y2 = pixelHeight - Math.round((p - track.dataRange.min) / yScale);\n\t    IGVGraphics.strokeLine(ctx, x1, y1, x2, y2, font); // Offset dashes up by 2 pixel\n\n\t    if (y1 > 8) {\n\t      IGVGraphics.fillText(ctx, p, x1 - 1, y1 + 2, font);\n\t    } // Offset numbers down by 2 pixels;\n\n\t  }\n\n\t  font['textAlign'] = 'center';\n\t  IGVGraphics.fillText(ctx, \"-log10(pvalue)\", pixelWidth / 4, pixelHeight / 2, font, {\n\t    rotate: {\n\t      angle: -90\n\t    }\n\t  });\n\t};\n\n\tEqtlTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\t  var pValueField = this.pValueField;\n\t  return this.featureSource.getFeatures(chr, bpStart, bpEnd).then(function (features) {\n\t    features.forEach(function (f) {\n\t      f.value = f[pValueField];\n\t    });\n\t    return features;\n\t  });\n\t};\n\n\tEqtlTrack.prototype.draw = function (options) {\n\t  var self = this,\n\t      featureList = options.features,\n\t      ctx = options.context,\n\t      bpPerPixel = options.bpPerPixel,\n\t      bpStart = options.bpStart,\n\t      pixelWidth = options.pixelWidth,\n\t      pixelHeight = options.pixelHeight,\n\t      yScale = (self.dataRange.max - self.dataRange.min) / pixelHeight,\n\t      selection = options.genomicState.selection; // Background\n\n\t  if (this.background) IGVGraphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {\n\t    'fillStyle': this.background\n\t  });\n\t  IGVGraphics.strokeLine(ctx, 0, pixelHeight - 1, pixelWidth, pixelHeight - 1, {\n\t    'strokeStyle': this.divider\n\t  });\n\n\t  if (ctx) {\n\t    var len = featureList.length;\n\t    ctx.save(); // Draw in two passes, with \"selected\" eqtls drawn last\n\n\t    drawEqtls(false);\n\t    drawEqtls(true);\n\t    ctx.restore();\n\t  }\n\n\t  function drawEqtls(drawSelected) {\n\t    var radius = drawSelected ? 2 * self.dotSize : self.dotSize,\n\t        eqtl,\n\t        i,\n\t        px,\n\t        py,\n\t        color,\n\t        isSelected,\n\t        snp,\n\t        geneName,\n\t        capped;\n\n\t    for (i = 0; i < len; i++) {\n\t      eqtl = featureList[i];\n\t      px = Math.round(eqtl.position - bpStart + 0.5) / bpPerPixel;\n\t      if (px < 0) continue;else if (px > pixelWidth) break;\n\t      snp = eqtl.snp.toUpperCase();\n\t      geneName = eqtl[self.geneField].toUpperCase();\n\t      isSelected = selection && (selection.snp === snp || selection.gene === geneName);\n\n\t      if (!drawSelected || isSelected) {\n\t        // Add eqtl's gene to the selection if this is the selected snp.\n\t        // TODO -- this should not be done here in the rendering code.\n\t        if (selection && selection.snp === snp) {\n\t          selection.addGene(geneName);\n\t        }\n\n\t        var mLogP = -Math.log(eqtl[self.pValueField]) / Math.LN10;\n\n\t        if (mLogP >= self.dataRange.min) {\n\t          if (mLogP > self.dataRange.max) {\n\t            mLogP = self.dataRange.max;\n\t            capped = true;\n\t          } else {\n\t            capped = false;\n\t          }\n\n\t          py = Math.max(0 + radius, pixelHeight - Math.round((mLogP - self.dataRange.min) / yScale));\n\t          eqtl.px = px;\n\t          eqtl.py = py;\n\n\t          if (drawSelected && selection) {\n\t            color = selection.colorForGene(geneName);\n\t            IGVGraphics.setProperties(ctx, {\n\t              fillStyle: color,\n\t              strokeStyle: \"black\"\n\t            });\n\t          } else {\n\t            color = capped ? \"rgb(150, 150, 150)\" : \"rgb(180, 180, 180)\";\n\t            IGVGraphics.setProperties(ctx, {\n\t              fillStyle: color,\n\t              strokeStyle: color\n\t            });\n\t          }\n\n\t          IGVGraphics.fillCircle(ctx, px, py, radius);\n\t          IGVGraphics.strokeCircle(ctx, px, py, radius);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t/**\n\t * Return \"popup data\" for feature @ genomic location.  Data is an array of key-value pairs\n\t */\n\n\n\tEqtlTrack.prototype.popupData = function (config) {\n\t  var features = config.viewport.getCachedFeatures();\n\t  if (!features || features.length === 0) return [];\n\t  var genomicLocation = config.genomicLocation,\n\t      xOffset = config.x,\n\t      yOffset = config.y,\n\t      referenceFrame = config.viewport.genomicState.referenceFrame,\n\t      tolerance = 2 * this.dotSize * referenceFrame.bpPerPixel,\n\t      dotSize = this.dotSize,\n\t      tissue = this.name,\n\t      popupData = [];\n\t  features.forEach(function (feature) {\n\t    if (feature.end >= genomicLocation - tolerance && feature.start <= genomicLocation + tolerance && feature.py - yOffset < 2 * dotSize) {\n\t      if (popupData.length > 0) {\n\t        popupData.push(\"<hr>\");\n\t      }\n\n\t      popupData.push({\n\t        name: \"snp id\",\n\t        value: feature.snp\n\t      }, {\n\t        name: \"gene id\",\n\t        value: feature.geneId\n\t      }, {\n\t        name: \"gene name\",\n\t        value: feature.geneName\n\t      }, {\n\t        name: \"p value\",\n\t        value: feature.pValue\n\t      }, {\n\t        name: \"tissue\",\n\t        value: tissue\n\t      });\n\t    }\n\t  });\n\t  return popupData;\n\t};\n\n\tEqtlTrack.prototype.menuItemList = function () {\n\t  var self = this,\n\t      menuItems = [];\n\t  menuItems.push(dataRangeMenuItem$1(this.trackView));\n\t  menuItems.push({\n\t    object: createCheckbox(\"Autoscale\", self.autoscale),\n\t    click: function click() {\n\t      self.autoscale = !self.autoscale;\n\t      self.config.autoscale = self.autoscale;\n\t      self.trackView.setDataRange(undefined, undefined, self.autoscale);\n\t    }\n\t  });\n\t  return menuItems;\n\t};\n\n\tEqtlTrack.prototype.doAutoscale = function (featureList) {\n\t  if (featureList.length > 0) {\n\t    var values = featureList.map(function (eqtl) {\n\t      return -Math.log(eqtl.value) / Math.LN10;\n\t    });\n\t    this.dataRange.max = IGVMath.percentile(values, this.autoscalePercentile);\n\t  } else {\n\t    // No features -- default\n\t    var max = this.config.maxLogP || this.config.max;\n\t    this.dataRange.max = max || 25;\n\t  }\n\n\t  return this.dataRange;\n\t};\n\n\tvar VARIANT = \"VARIANT\";\n\tvar TRAIT = \"TRAIT\";\n\t/**\n\t * @param url - url to the webservice\n\t * @constructor\n\t */\n\n\tvar T2DVariantSource = function T2DVariantSource(config) {\n\t  this.config = config;\n\t  this.url = config.url;\n\t  this.trait = config.trait;\n\t  this.dataset = config.dataset;\n\t  this.pvalue = config.pvalue; // Hack for old service that is missing CORS headers\n\t  // if (config.dataset === undefined && config.proxy === undefined) {\n\t  // }\n\n\t  if (config.valueThreshold === undefined) {\n\t    config.valueThreshold = 5E-2;\n\t  }\n\n\t  if (config.dataset === undefined) {\n\t    this.queryJson = config.queryJson || queryJsonV1;\n\t    this.jsonToVariants = config.jsonToVariants || jsonToVariantsV1;\n\t  } else {\n\t    this.queryJson = config.queryJson || queryJsonV2;\n\t    this.jsonToVariants = config.jsonToVariants || jsonToVariantsV2;\n\t  }\n\t};\n\t/**\n\t * Required function fo all data source objects.  Fetches features for the\n\t * range requested and passes them on to the success function.  Usually this is\n\t * a function that renders the features on the canvas\n\t *\n\t * @param queryChr\n\t * @param bpStart\n\t * @param bpEnd\n\t */\n\n\n\tT2DVariantSource.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\t  var self = this;\n\t  var genome = this.genome;\n\t  return new Promise(function (fulfill, reject) {\n\t    if (self.cache && self.cache.chr === chr && self.cache.end > bpEnd && self.cache.start < bpStart) {\n\t      fulfill(self.cache.featuresBetween(bpStart, bpEnd));\n\t    } else {\n\t      // Get a minimum 10mb window around the requested locus\n\t      var window = Math.max(bpEnd - bpStart, 10000000) / 2,\n\t          center = (bpEnd + bpStart) / 2,\n\t          queryChr = chr.startsWith(\"chr\") ? chr.substring(3) : chr,\n\t          // Webservice uses \"1,2,3...\" convention\n\t      queryStart = Math.max(0, center - window),\n\t          queryEnd = center + window,\n\t          queryURL = self.config.proxy ? self.config.proxy : self.url,\n\t          body = self.queryJson(queryChr, queryStart, queryEnd, self.config);\n\t      igvxhr.loadJson(queryURL, {\n\t        sendData: body,\n\t        withCredentials: self.config.withCredentials\n\t      }).then(function (json) {\n\t        var variants;\n\n\t        if (json) {\n\t          if (json.error_code) {\n\t            //alert(\"Error querying trait \" + self.trait + \"  (error_code=\" + json.error_code + \")\");\n\t            Alert.presentAlert(\"Error querying trait \" + self.trait + \"  (error_code=\" + json.error_code + \")\", undefined);\n\t            fulfill(null);\n\t          } else {\n\t            variants = self.jsonToVariants(json, self.config);\n\t            variants.sort(function (a, b) {\n\t              return a.POS - b.POS;\n\t            }); // TODO -- extract pvalue\n\n\t            self.cache = new FeatureCache$1(chr, queryStart, queryEnd, variants);\n\t            fulfill(variants);\n\t          }\n\t        } else {\n\t          fulfill(null);\n\t        }\n\t      }).catch(reject);\n\t    }\n\t  });\n\t}; // Experimental linear index feature cache.\n\n\n\tvar FeatureCache$1 = function FeatureCache(chr, start, end, features) {\n\t  var i, bin, lastBin;\n\t  this.chr = chr;\n\t  this.start = start;\n\t  this.end = end;\n\t  this.binSize = (end - start) / 100;\n\t  this.binIndeces = [0];\n\t  this.features = features;\n\t  lastBin = 0;\n\n\t  for (i = 0; i < features.length; i++) {\n\t    bin = Math.max(0, Math.floor((features[i].POS - this.start) / this.binSize));\n\n\t    if (bin > lastBin) {\n\t      this.binIndeces.push(i);\n\t      lastBin = bin;\n\t    }\n\t  }\n\t};\n\n\tFeatureCache$1.prototype.featuresBetween = function (start, end) {\n\t  var startBin = Math.max(0, Math.min(Math.floor((start - this.start) / this.binSize) - 1, this.binIndeces.length - 1)),\n\t      endBin = Math.max(0, Math.min(Math.floor((end - this.start) / this.binSize), this.binIndeces.length - 1)),\n\t      startIdx = this.binIndeces[startBin],\n\t      endIdx = this.binIndeces[endBin];\n\t  return this.features; //.slice(startIdx, endIdx);\n\t}; //\n\t//\n\n\t/**\n\t * Default json -> variant converter function.  Can be overriden.\n\t * Convert webservice json to an array of variants\n\t *\n\t * @param json\n\t * @param config\n\t * @returns {Array|*}\n\t */\n\n\n\tfunction jsonToVariantsV2(json, config) {\n\t  var variants = [];\n\t  json.variants.forEach(function (record) {\n\t    var variant = {};\n\t    record.forEach(function (object) {\n\t      for (var property in object) {\n\t        if (object.hasOwnProperty(property)) {\n\t          if (\"POS\" === property) {\n\t            variant.start = object[property] - 1;\n\t          }\n\n\t          variant[property] = object[property];\n\t        }\n\t      }\n\t    }); // \"unwind\" the pvalue, then null the nested array to save memory\n\n\t    variant.pvalue = variant[config.pvalue][config.dataset][config.trait];\n\t    variant[config.pvalue] = undefined;\n\t    variants.push(variant);\n\t  });\n\t  return variants;\n\t}\n\n\tfunction queryJsonV2(queryChr, queryStart, queryEnd, config) {\n\t  var phenotype = config.trait,\n\t      pvalue = config.pvalue,\n\t      dataset = config.dataset,\n\t      properties = {\n\t    \"cproperty\": [\"VAR_ID\", \"DBSNP_ID\", \"CHROM\", \"POS\"],\n\t    \"orderBy\": [\"CHROM\"],\n\t    \"dproperty\": {},\n\t    \"pproperty\": JSON.parse('{\"' + pvalue + '\": {\"' + dataset + '\": [\"' + phenotype + '\"]}}')\n\t  },\n\t      filters = [{\n\t    \"dataset_id\": \"x\",\n\t    \"phenotype\": \"x\",\n\t    \"operand\": \"CHROM\",\n\t    \"operator\": \"EQ\",\n\t    \"value\": queryChr,\n\t    \"operand_type\": \"STRING\"\n\t  }, {\n\t    \"dataset_id\": \"x\",\n\t    \"phenotype\": \"x\",\n\t    \"operand\": \"POS\",\n\t    \"operator\": \"GTE\",\n\t    \"value\": queryStart,\n\t    \"operand_type\": \"INTEGER\"\n\t  }, {\n\t    \"dataset_id\": \"x\",\n\t    \"phenotype\": \"x\",\n\t    \"operand\": \"POS\",\n\t    \"operator\": \"LTE\",\n\t    \"value\": queryEnd,\n\t    \"operand_type\": \"INTEGER\"\n\t  }, {\n\t    \"dataset_id\": dataset,\n\t    \"phenotype\": phenotype,\n\t    \"operand\": pvalue,\n\t    \"operator\": \"LT\",\n\t    \"value\": config.valueThreshold,\n\t    \"operand_type\": \"FLOAT\"\n\t  }],\n\t      data = {\n\t    \"passback\": \"x\",\n\t    \"entity\": \"variant\",\n\t    \"properties\": properties,\n\t    \"filters\": filters\n\t  };\n\t  return JSON.stringify(data);\n\t}\n\n\tfunction queryJsonV1(queryChr, queryStart, queryEnd, config) {\n\t  var type = config.url.includes(\"variant\") ? VARIANT : TRAIT,\n\t      pvalue = config.pvalue ? config.pvalue : \"PVALUE\",\n\t      filters = [{\n\t    \"operand\": \"CHROM\",\n\t    \"operator\": \"EQ\",\n\t    \"value\": queryChr,\n\t    \"filter_type\": \"STRING\"\n\t  }, {\n\t    \"operand\": \"POS\",\n\t    \"operator\": \"GT\",\n\t    \"value\": queryStart,\n\t    \"filter_type\": \"FLOAT\"\n\t  }, {\n\t    \"operand\": \"POS\",\n\t    \"operator\": \"LT\",\n\t    \"value\": queryEnd,\n\t    \"filter_type\": \"FLOAT\"\n\t  }, {\n\t    \"operand\": pvalue,\n\t    \"operator\": \"LTE\",\n\t    \"value\": config.valueThreshold,\n\t    \"filter_type\": \"FLOAT\"\n\t  }],\n\t      columns = type === TRAIT ? [\"CHROM\", \"POS\", \"DBSNP_ID\", \"PVALUE\", \"ZSCORE\"] : [\"CHROM\", \"POS\", pvalue, \"DBSNP_ID\"],\n\t      data = {\n\t    \"user_group\": \"ui\",\n\t    \"filters\": filters,\n\t    \"columns\": columns\n\t  };\n\t  if (type === TRAIT) data.trait = config.trait;\n\t  return config.proxy ? \"url=\" + config.url + \"&data=\" + JSON.stringify(data) : JSON.stringify(data);\n\t}\n\n\tfunction jsonToVariantsV1(json, config) {\n\t  json.variants.forEach(function (variant) {\n\t    variant.chr = variant.CHROM;\n\t    variant.start = variant.POS - 1;\n\t  });\n\t  return json.variants;\n\t}\n\n\tvar DEFAULT_POPOVER_WINDOW = 100000000;\n\tvar GWASTrack = extend(TrackBase, function (config, browser) {\n\t  this.config = config;\n\t  this.url = config.url;\n\t  this.name = config.name;\n\t  this.trait = config.trait;\n\t  this.height = config.height || 100; // The preferred height\n\n\t  this.minLogP = config.minLogP || 0;\n\t  this.maxLogP = config.maxLogP || 15;\n\t  this.background = config.background; // No default\n\n\t  this.divider = config.divider || \"rgb(225,225,225)\";\n\t  this.dotSize = config.dotSize || 4;\n\t  this.popoverWindow = config.popoverWindow === undefined ? DEFAULT_POPOVER_WINDOW : config.popoverWindow;\n\t  this.description = config.description; // might be null\n\n\t  this.proxy = config.proxy; // might be null\n\n\t  this.portalURL = config.portalURL ? config.portalURL : window.location.origin;\n\t  this.variantURL = config.variantURL || \"http://www.type2diabetesgenetics.org/variant/variantInfo/\";\n\t  this.traitURL = config.traitURL || \"http://www.type2diabetesgenetics.org/trait/traitInfo/\";\n\t  var cs = config.colorScale || {\n\t    thresholds: [5e-8, 5e-4, 0.5],\n\t    colors: [\"rgb(255,50,50)\", \"rgb(251,100,100)\", \"rgb(251,170,170)\", \"rgb(227,238,249)\"]\n\t  };\n\t  this.pvalue = config.pvalue ? config.pvalue : \"PVALUE\";\n\t  this.colorScale = new BinnedColorScale(cs); // An obvious hack -- the source should be passed in as an arbument\n\n\t  if (config.format && \"gtexgwas\" === config.format.toLowerCase()) {\n\t    this.featureSource = new FeatureSource(config, browser.genome);\n\t  } else {\n\t    this.featureSource = new T2DVariantSource(config, browser.genome);\n\t  }\n\t});\n\n\tGWASTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\t  return this.featureSource.getFeatures(chr, bpStart, bpEnd);\n\t};\n\n\tGWASTrack.prototype.draw = function (options) {\n\t  var track = this,\n\t      featureList = options.features,\n\t      ctx = options.context,\n\t      bpPerPixel = options.bpPerPixel,\n\t      bpStart = options.bpStart,\n\t      pixelWidth = options.pixelWidth,\n\t      pixelHeight = options.pixelHeight,\n\t      bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n\t      yScale = (track.maxLogP - track.minLogP) / pixelHeight,\n\t      enablePopover = bpEnd - bpStart < DEFAULT_POPOVER_WINDOW;\n\n\t  if (enablePopover) {\n\t    this.po = [];\n\t  } else {\n\t    this.po = undefined;\n\t  }\n\n\t  if (this.background) IGVGraphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {\n\t    'fillStyle': this.background\n\t  });\n\t  IGVGraphics.strokeLine(ctx, 0, pixelHeight - 1, pixelWidth, pixelHeight - 1, {\n\t    'strokeStyle': this.divider\n\t  });\n\t  var variant, pos, len, xScale, px, py, color, pvalue, val;\n\n\t  if (featureList) {\n\t    len = featureList.length;\n\n\t    for (var i = 0; i < len; i++) {\n\t      variant = featureList[i];\n\t      pos = variant.start; // TODO fixme\n\n\t      if (pos < bpStart) continue;\n\t      if (pos > bpEnd) break;\n\t      pvalue = variant.pvalue || variant[track.pvalue];\n\t      if (!pvalue) continue;\n\t      color = track.colorScale.getColor(pvalue);\n\t      val = -Math.log(pvalue) / 2.302585092994046;\n\t      xScale = bpPerPixel;\n\t      px = Math.round((pos - bpStart) / xScale);\n\t      py = Math.max(track.dotSize, pixelHeight - Math.round((val - track.minLogP) / yScale));\n\t      if (color) IGVGraphics.setProperties(ctx, {\n\t        fillStyle: color,\n\t        strokeStyle: \"black\"\n\t      });\n\t      IGVGraphics.fillCircle(ctx, px, py, track.dotSize); //canvas.strokeCircle(px, py, radius);\n\n\t      if (enablePopover) track.po.push({\n\t        x: px,\n\t        y: py,\n\t        feature: variant\n\t      });\n\t    }\n\t  }\n\t};\n\n\tGWASTrack.prototype.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\t  var track = this,\n\t      yScale = (track.maxLogP - track.minLogP) / pixelHeight;\n\t  var font = {\n\t    'font': 'normal 10px Arial',\n\t    'textAlign': 'right',\n\t    'strokeStyle': \"black\"\n\t  };\n\t  IGVGraphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {\n\t    'fillStyle': \"rgb(255, 255, 255)\"\n\t  });\n\n\t  for (var p = 2; p < track.maxLogP; p += 2) {\n\t    var yp = pixelHeight - Math.round((p - track.minLogP) / yScale); // TODO: Dashes may not actually line up with correct scale. Ask Jim about this\n\n\t    IGVGraphics.strokeLine(ctx, 45, yp - 2, 50, yp - 2, font); // Offset dashes up by 2 pixel\n\n\t    IGVGraphics.fillText(ctx, p, 44, yp + 2, font); // Offset numbers down by 2 pixels;\n\t  }\n\n\t  font['textAlign'] = 'center';\n\t  IGVGraphics.fillText(ctx, \"-log10(pvalue)\", pixelWidth / 2, pixelHeight / 2, font, {\n\t    rotate: {\n\t      angle: -90\n\t    }\n\t  });\n\t};\n\n\tGWASTrack.prototype.popupData = function (config) {\n\t  var genomicLocation = config.genomicLocation,\n\t      xOffset = config.x,\n\t      yOffset = config.y,\n\t      referenceFrame = config.viewport.genomicState.referenceFrame,\n\t      i,\n\t      len,\n\t      p,\n\t      dbSnp,\n\t      url,\n\t      data = [],\n\t      chr,\n\t      pos,\n\t      pvalue;\n\n\t  if (this.po) {\n\t    for (i = 0, len = this.po.length; i < len; i++) {\n\t      p = this.po[i];\n\n\t      if (Math.abs(xOffset - p.x) < this.dotSize && Math.abs(yOffset - p.y) <= this.dotSize) {\n\t        chr = p.feature.CHROM || p.feature.chr; // TODO fixme\n\n\t        pos = p.feature.POS || p.feature.start; // TODO fixme\n\n\t        pvalue = p.feature[this.pvalue] || p.feature.pvalue;\n\t        dbSnp = p.feature.DBSNP_ID;\n\n\t        if (dbSnp) {\n\t          url = this.variantURL.startsWith(\"http\") ? this.variantURL : this.portalURL + \"/\" + this.variantURL;\n\t          data.push(\"<a target='_blank' href='\" + url + (url.endsWith(\"/\") ? \"\" : \"/\") + dbSnp + \"' >\" + dbSnp + \"</a>\");\n\t        }\n\n\t        data.push(chr + \":\" + pos.toString());\n\t        data.push({\n\t          name: 'p-value',\n\t          value: pvalue\n\t        });\n\n\t        if (p.feature.ZSCORE) {\n\t          data.push({\n\t            name: 'z-score',\n\t            value: p.feature.ZSCORE\n\t          });\n\t        }\n\n\t        if (dbSnp) {\n\t          url = this.traitURL.startsWith(\"http\") ? this.traitURL : this.portalURL + \"/\" + this.traitURL;\n\t          data.push(\"<a target='_blank' href='\" + url + (url.endsWith(\"/\") ? \"\" : \"/\") + dbSnp + \"'>\" + \"see all available statistics for this variant</a>\");\n\t        }\n\n\t        if (i < len - 1) {\n\t          data.push(\"<p/>\");\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    data.push(\"Popover not available at this resolution.\");\n\t  }\n\n\t  return data;\n\t};\n\n\tvar X_PIXEL_DIFF_THRESHOLD = 1;\n\tvar dataRangeMenuItem$2 = MenuUtils.dataRangeMenuItem;\n\tvar GCNVTrack = extend(TrackBase, function (config, browser) {\n\t  TrackBase.call(this, config, browser);\n\t  this.autoscale = config.autoscale || config.max === undefined;\n\t  this.dataRange = {\n\t    min: config.min || 0,\n\t    max: config.max\n\t  };\n\t  this.windowFunction = config.windowFunction || \"mean\";\n\t  this.paintAxis = paintAxis;\n\t  this.graphType = config.graphType || \"bar\";\n\t  this.featureSource = new FeatureSource(this.config, browser.genome);\n\t});\n\tGCNVTrack.prototype.postInit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t  return regeneratorRuntime.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          _context.next = 2;\n\t          return this.featureSource.getFileHeader();\n\n\t        case 2:\n\t          this.header = _context.sent;\n\n\t        case 3:\n\t        case \"end\":\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t}));\n\n\tGCNVTrack.prototype.menuItemList = function () {\n\t  var self = this;\n\t  var menuItems = [];\n\t  menuItems.push(dataRangeMenuItem$2(this.trackView));\n\t  menuItems.push({\n\t    object: createCheckbox(\"Autoscale\", self.autoscale),\n\t    click: function click() {\n\t      self.autoscale = !self.autoscale;\n\t      self.config.autoscale = self.autoscale;\n\t      self.trackView.setDataRange(undefined, undefined, self.autoscale);\n\t    }\n\t  });\n\t  return menuItems;\n\t};\n\n\tGCNVTrack.prototype.getFeatures = /*#__PURE__*/function () {\n\t  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(chr, bpStart, bpEnd) {\n\t    var chrFeatures, prevIndex, nextIndex, i;\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            _context2.next = 2;\n\t            return this.featureSource.getFeatures(chr, 0, Number.MAX_VALUE);\n\n\t          case 2:\n\t            chrFeatures = _context2.sent;\n\t            //bpStart, bpEnd);\n\t            prevIndex = undefined;\n\t            nextIndex = undefined;\n\t            i = 1;\n\n\t          case 6:\n\t            if (!(i < chrFeatures.length - 1)) {\n\t              _context2.next = 14;\n\t              break;\n\t            }\n\n\t            if (prevIndex === undefined && chrFeatures[i].end > bpStart) {\n\t              prevIndex = i - 1;\n\t            }\n\n\t            if (!(nextIndex === undefined && chrFeatures[i].start > bpEnd)) {\n\t              _context2.next = 11;\n\t              break;\n\t            }\n\n\t            nextIndex = i + 1;\n\t            return _context2.abrupt(\"break\", 14);\n\n\t          case 11:\n\t            i++;\n\t            _context2.next = 6;\n\t            break;\n\n\t          case 14:\n\t            if (prevIndex === undefined) prevIndex = 0;\n\t            if (nextIndex === undefined) nextIndex = chrFeatures.length;\n\t            return _context2.abrupt(\"return\", chrFeatures.slice(prevIndex, nextIndex));\n\n\t          case 17:\n\t          case \"end\":\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this);\n\t  }));\n\n\t  return function (_x, _x2, _x3) {\n\t    return _ref2.apply(this, arguments);\n\t  };\n\t}();\n\n\tGCNVTrack.prototype.draw = function (options) {\n\t  var self = this;\n\t  var features = options.features;\n\t  var ctx = options.context;\n\t  var bpPerPixel = options.bpPerPixel;\n\t  var bpStart = options.bpStart;\n\t  var pixelWidth = options.pixelWidth;\n\t  var pixelHeight = options.pixelHeight;\n\t  //if (typeof self.color === \"string\" && self.color.startsWith(\"rgb(\")) {\n\t  //    baselineColor = IGVColor.addAlpha(self.color, 0.1);\n\t  //}\n\n\t  var yScale = function yScale(yValue) {\n\t    return (self.dataRange.max - yValue) / (self.dataRange.max - self.dataRange.min) * pixelHeight;\n\t  };\n\n\t  var getX = function getX(bpPosition) {\n\t    var x = Math.floor((bpPosition - bpStart) / bpPerPixel);\n\t    if (isNaN(x)) console.warn('isNaN(x). feature start ' + numberFormatter(bpPosition) + ' bp start ' + numberFormatter(bpStart));\n\t    return x;\n\t  };\n\n\t  var drawGuideLines = function drawGuideLines(options) {\n\t    if (self.config.hasOwnProperty('guideLines')) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = self.config.guideLines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var line = _step.value;\n\n\t          if (line.hasOwnProperty('color') && line.hasOwnProperty('y') && line.hasOwnProperty('dotted')) {\n\t            var y = yScale(line.y);\n\t            var props = {\n\t              'strokeStyle': line['color'],\n\t              'strokeWidth': 2\n\t            };\n\t            if (line['dotted']) IGVGraphics.dashedLine(options.context, 0, y, options.pixelWidth, y, 5, props);else IGVGraphics.strokeLine(options.context, 0, y, options.pixelWidth, y, props);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  if (features && features.length > 0) {\n\t    if (self.dataRange.min === undefined) self.dataRange.min = 0; // Max can be less than min if config.min is set but max left to autoscale. If that's the case there is\n\t    // nothing to paint.\n\n\t    if (self.dataRange.max > self.dataRange.min) {\n\t      var highlightSamples = this.config.highlightSamples;\n\t      var onlyHandleClicksForHighlightedSamples = this.config.onlyHandleClicksForHighlightedSamples;\n\t      var previousEnd = -1;\n\t      var previousValues = {};\n\t      var highlightConnectorLines = [];\n\t      var highlightFeatureLines = []; // clickDetectorCache allows fast retrieval of whether a mouse click hits a rendered line segment\n\t      // by storing lists of rendered line segments, keyed by their right x coordinate in canvas pixel space.\n\t      // this cache is regenerated on every draw.\n\n\t      this.clickDetectorCache = {};\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\n\t      try {\n\t        for (var _iterator2 = features[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var feature = _step2.value;\n\t          var x1 = getX(feature.start);\n\t          var x2 = getX(feature.end);\n\t          var previousX = previousEnd >= 0 ? getX(previousEnd) : x1;\n\t          if (isNaN(x1) || isNaN(x2)) continue;\n\t          if (x1 - previousX < X_PIXEL_DIFF_THRESHOLD && x2 - x1 < X_PIXEL_DIFF_THRESHOLD) continue;\n\t          this.clickDetectorCache[x1] = [];\n\t          this.clickDetectorCache[x2] = [];\n\n\t          for (var i = 0; i < feature.values.length; i++) {\n\t            var sampleName = self.header[i];\n\t            var value = feature.values[i];\n\t            var y = yScale(value);\n\n\t            if (x1 - previousX >= X_PIXEL_DIFF_THRESHOLD) {\n\t              var previousValue = previousValues[sampleName];\n\t              var previousY = yScale(previousValue);\n\t              var highlightColor = highlightSamples && highlightSamples[sampleName];\n\n\t              if (highlightColor) {\n\t                highlightConnectorLines.push([previousX, previousY, x1, y, highlightColor]);\n\t              } else {\n\t                IGVGraphics.strokeLine(ctx, previousX, previousY, x1, y, {\n\t                  strokeStyle: '#D9D9D9'\n\t                });\n\t              }\n\n\t              if (!onlyHandleClicksForHighlightedSamples || sampleName in highlightSamples) {\n\t                this.clickDetectorCache[x1].push([previousX, previousY, x1, y, sampleName, highlightColor || 'gray']);\n\t              }\n\t            }\n\n\t            if (x2 - x1 >= X_PIXEL_DIFF_THRESHOLD) {\n\t              var _highlightColor = highlightSamples && highlightSamples[sampleName];\n\n\t              if (_highlightColor) {\n\t                highlightFeatureLines.push([x1, y, x2, y, _highlightColor]);\n\t              } else {\n\t                IGVGraphics.strokeLine(ctx, x1, y, x2, y, {\n\t                  strokeStyle: 'gray'\n\t                });\n\t              }\n\n\t              if (!onlyHandleClicksForHighlightedSamples || sampleName in highlightSamples) {\n\t                this.clickDetectorCache[x2].push([x1, y, x2, y, sampleName, _highlightColor || 'gray']);\n\t              }\n\t            }\n\n\t            previousValues[sampleName] = value; //IGVGraphics.fillCircle(ctx, px, y, pointSize / 2, {\"fillStyle\": color, \"strokeStyle\": color});\n\t            //IGVGraphics.fillRect(ctx, x, y, width, height, {fillStyle: color});\n\t          }\n\n\t          previousEnd = feature.end;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\n\t      for (var _i = 0, _highlightConnectorLi = highlightConnectorLines; _i < _highlightConnectorLi.length; _i++) {\n\t        var f = _highlightConnectorLi[_i];\n\t        IGVGraphics.strokeLine(ctx, f[0], f[1], f[2], f[3], {\n\t          strokeStyle: f[4],\n\t          lineWidth: 1.3\n\t        });\n\t      }\n\n\t      for (var _i2 = 0, _highlightFeatureLine = highlightFeatureLines; _i2 < _highlightFeatureLine.length; _i2++) {\n\t        var _f = _highlightFeatureLine[_i2];\n\t        IGVGraphics.strokeLine(ctx, _f[0], _f[1], _f[2], _f[3], {\n\t          strokeStyle: _f[4],\n\t          lineWidth: 2\n\t        });\n\t      }\n\t      /*\n\t      // If the track includes negative values draw a baseline\n\t      if (self.dataRange.min < 0) {\n\t          const basepx = (self.dataRange.max / (self.dataRange.max - self.dataRange.min)) * options.pixelHeight;\n\t          IGVGraphics.strokeLine(ctx, 0, basepx, options.pixelWidth, basepx, {strokeStyle: baselineColor});\n\t      }\n\t      */\n\n\t    }\n\t  }\n\n\t  drawGuideLines(options);\n\t};\n\n\tGCNVTrack.prototype.doAutoscale = function (features) {\n\t  var min, max;\n\n\t  if (features.length > 0) {\n\t    min = Number.MAX_VALUE;\n\t    max = -Number.MAX_VALUE;\n\t    features.forEach(function (feature) {\n\t      min = Math.min.apply(Math, [min].concat(_toConsumableArray(feature.values)));\n\t      max = Math.max.apply(Math, [max].concat(_toConsumableArray(feature.values)));\n\t    });\n\t    min -= 0.01;\n\t    max += 0.01;\n\t  } else {\n\t    // No features -- default\n\t    min = 0;\n\t    max = 100;\n\t  }\n\n\t  return {\n\t    min: min,\n\t    max: max\n\t  };\n\t};\n\n\tvar distanceToLine = function distanceToLine(x, y, ax, ay, bx, by) {\n\t  /*\n\t      Finds distance between point (x, y) and line defined by points (ax, ay) (bx, by)\n\t      based on http://mathworld.wolfram.com/Point-LineDistance2-Dimensional.html\n\t  */\n\t  var bx_minus_ax = bx - ax;\n\t  var by_minus_ay = by - ay;\n\t  var v = Math.abs(bx_minus_ax * (ay - y) - (ax - x) * by_minus_ay);\n\t  var r = Math.sqrt(bx_minus_ax * bx_minus_ax + by_minus_ay * by_minus_ay);\n\t  var distance = r > 0 ? v / r : 0; //console.warn('Check if', x, y, 'is within', ax, ay, bx, by, '. Distance from line: ', distance);\n\n\t  return distance;\n\t};\n\n\tGCNVTrack.prototype.clickedFeatures = function (clickState) {\n\t  //console.warn('click', clickState.canvasX, clickState.canvasY, clickState)\n\t  var BOUNDING_BOX_PADDING = 10;\n\t  var MIN_DISTANCE_TO_SEGMENT = 5;\n\t  var clickX = clickState.canvasX;\n\t  var clickY = clickState.canvasY;\n\t  var key = null;\n\n\t  for (var _i3 = 0, _Object$keys = Object.keys(this.clickDetectorCache); _i3 < _Object$keys.length; _i3++) {\n\t    key = _Object$keys[_i3];\n\t    key = parseInt(key);\n\n\t    if (key >= clickX) {\n\t      break;\n\t    }\n\t  }\n\n\t  if (key) {\n\t    var closestDistanceSoFar = Number.MAX_VALUE;\n\t    var closestResult = [];\n\t    var segments = this.clickDetectorCache[key];\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\n\t    try {\n\t      for (var _iterator3 = segments[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t        var segment = _step3.value;\n\t        var x1 = segment[0];\n\t        var x2 = segment[2];\n\t        if (clickX < x1 || clickX > x2) return [];\n\t        var y1 = segment[1];\n\t        var y2 = segment[3];\n\t        if (clickY < Math.min(y1, y2) - BOUNDING_BOX_PADDING || clickY > Math.max(y1, y2) + BOUNDING_BOX_PADDING) continue;\n\t        var distance = distanceToLine(clickX, clickY, x1, y1, x2, y2);\n\n\t        if (distance < closestDistanceSoFar) {\n\t          closestResult = [{\n\t            'name': segment[4],\n\t            'color': segment[5]\n\t          }];\n\t          closestDistanceSoFar = distance; //console.warn('closest:', 'name', segment[4], 'color', segment[5], distance);\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError3 = true;\n\t      _iteratorError3 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t          _iterator3.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError3) {\n\t          throw _iteratorError3;\n\t        }\n\t      }\n\t    }\n\n\t    if (closestDistanceSoFar < MIN_DISTANCE_TO_SEGMENT) {\n\t      return closestResult;\n\t    }\n\t  }\n\n\t  return [];\n\t};\n\n\tGCNVTrack.prototype.popupData = function (clickState, featureList) {\n\t  if (!featureList) featureList = this.clickedFeatures(clickState);\n\t  var items = [];\n\t  featureList.forEach(function (f) {\n\t    for (var _i4 = 0, _Object$keys2 = Object.keys(f); _i4 < _Object$keys2.length; _i4++) {\n\t      var property = _Object$keys2[_i4];\n\n\t      if (isSimpleType(f[property])) {\n\t        items.push({\n\t          name: property,\n\t          value: f[property]\n\t        });\n\t      }\n\t    }\n\t  });\n\t  return items;\n\t};\n\n\tGCNVTrack.prototype.contextMenuItemList = function (clickState) {\n\t  var referenceFrame = clickState.viewport.genomicState.referenceFrame;\n\t  var genomicLocation = clickState.genomicLocation;\n\t  return [];\n\t};\n\n\tGCNVTrack.prototype.getState = function () {\n\t  var config = this.config;\n\t  config.autoscale = this.autoscale;\n\n\t  if (!this.autoscale && this.dataRange) {\n\t    config.min = this.dataRange.min;\n\t    config.max = this.dataRange.max;\n\t  }\n\n\t  return config;\n\t};\n\n\tGCNVTrack.prototype.supportsWholeGenome = function () {\n\t  return false;\n\t};\n\n\tvar RnaStructTrack = extend(TrackBase, function (config, browser) {\n\t  TrackBase.call(this, config, browser); // Set defaults\n\n\t  if (!config.height) {\n\t    this.height = 300;\n\t  }\n\n\t  this.arcOrientation = false;\n\t  this.theta = Math.PI / 2;\n\n\t  if (\"bp\" === config.format) {\n\t    this.featureSource = new RNAFeatureSource(config, browser.genome);\n\t  } else {\n\t    this.featureSource = new RNAFeatureSource(config, browser.genome);\n\t  }\n\t});\n\n\tRnaStructTrack.prototype.getFeatures = function (chr, start, end) {\n\t  return this.featureSource.getFeatures(chr, start, end);\n\t};\n\n\tRnaStructTrack.prototype.draw = function (options) {\n\t  var self = this;\n\t  var theta = Math.PI / 2;\n\t  var ctx = options.context;\n\t  var pixelWidth = options.pixelWidth;\n\t  var pixelHeight = options.pixelHeight;\n\t  var viewportWidth = options.viewportWidth;\n\t  var bpPerPixel = options.bpPerPixel;\n\t  var bpStart = options.bpStart;\n\t  var xScale = bpPerPixel;\n\t  var orienation = self.arcOrientation;\n\t  IGVGraphics.fillRect(ctx, 0, options.pixelTop, pixelWidth, pixelHeight, {\n\t    'fillStyle': \"rgb(255, 255, 255)\"\n\t  });\n\t  var featureList = options.features;\n\n\t  if (featureList) {\n\t    // Sort by score -- draw lowest scored features first\n\t    sortByScore(featureList, 1);\n\t    featureList.forEach(function (feature) {\n\t      if (feature.startLeft) {\n\t        var sl = Math.round((feature.startLeft - bpStart) / xScale);\n\t        var sr = Math.round((feature.startRight - bpStart) / xScale);\n\t        var el = Math.round((feature.endLeft - bpStart) / xScale);\n\t        var er = Math.round((feature.endRight - bpStart) / xScale);\n\t        ctx.fillStyle = feature.color;\n\t        ctx.strokeStyle = feature.color;\n\t        ctx.beginPath(); // First arc\n\n\t        var x1 = (sl + er) / 2;\n\t        var r1 = (er - sl) / 2;\n\t        var y1 = self.height;\n\t        var sa = Math.PI + (Math.PI / 2 - theta);\n\t        var ea = 2 * Math.PI - (Math.PI / 2 - theta);\n\n\t        if (orienation) {\n\t          y1 = 0;\n\t          ctx.arc(x1, y1, r1, ea, sa);\n\t          ctx.lineTo(er, y1);\n\t        } else {\n\t          ctx.arc(x1, y1, r1, sa, ea);\n\t          ctx.lineTo(el, y1);\n\t        } // Second arc\n\n\n\t        var x2 = (sr + el) / 2;\n\t        var r2 = (el - sr) / 2;\n\t        var y2 = y1; // Only for theta == pi/2\n\n\t        if (orienation) {\n\t          ctx.arc(x2, y2, r2, sa, ea, true);\n\t          ctx.lineTo(el, y2);\n\t        } else {\n\t          ctx.arc(x2, y2, r2, ea, sa, true);\n\t          ctx.lineTo(sl, y2);\n\t        }\n\n\t        ctx.stroke();\n\t        ctx.fill();\n\t        feature.drawState = {\n\t          x1: x1,\n\t          y1: y1,\n\t          r1: r1,\n\t          x2: x2,\n\t          y2: y2,\n\t          r2: r2,\n\t          sa: sa,\n\t          ea: ea\n\t        };\n\t      } else {\n\t        var s = Math.round((feature.start - bpStart) / xScale);\n\t        var e = Math.round((feature.end - bpStart) / xScale);\n\t        ctx.strokeStyle = feature.color;\n\t        ctx.beginPath(); // First arc\n\n\t        var x = (s + e) / 2;\n\t        var r = (e - s) / 2;\n\t        var y = self.height;\n\n\t        var _sa = Math.PI + (Math.PI / 2 - theta);\n\n\t        var _ea = 2 * Math.PI - (Math.PI / 2 - theta);\n\n\t        if (orienation) {\n\t          y = 0;\n\t          ctx.arc(x, y, r, _ea, _sa);\n\t        } else {\n\t          ctx.arc(x, y, r, _sa, _ea);\n\t        }\n\n\t        ctx.stroke();\n\t        feature.drawState = {\n\t          x1: x,\n\t          y1: y,\n\t          r1: r,\n\t          sa: _sa,\n\t          ea: _ea\n\t        };\n\t      }\n\t    });\n\t  }\n\t};\n\n\tRnaStructTrack.prototype.clickedFeatures = function (clickState) {\n\t  var features = TrackBase.prototype.clickedFeatures.call(this, clickState);\n\t  var clicked = []; // Sort by score in descending order   (opposite order than drawn)\n\n\t  sortByScore(features, -1);\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = features[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var f = _step.value;\n\t      var ds = f.drawState; // Distance from arc radius, or outer arc for type \".bp\"\n\n\t      var dx1 = clickState.canvasX - ds.x1;\n\t      var dy1 = clickState.canvasY - ds.y1;\n\t      var d1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n\t      var outerLim = ds.r1 + 3;\n\t      var d2 = void 0;\n\t      var innerLim = void 0;\n\n\t      if (ds.x2 === undefined) {\n\t        d2 = d1;\n\t        innerLim = ds.r1 - 3;\n\t      } else {\n\t        var dx2 = clickState.canvasX - ds.x2;\n\t        var dy2 = clickState.canvasY - ds.y2;\n\t        d2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n\t        innerLim = ds.r2 - 3;\n\t      } // Between outer and inner arcs, with some tolerance\n\n\n\t      if (d1 < outerLim && d2 > innerLim) {\n\t        clicked.push(f);\n\t        break;\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return clicked;\n\t};\n\n\tRnaStructTrack.prototype.popupData = function (clickState, features) {\n\t  // We use the featureCache property rather than method to avoid async load.  If the\n\t  // feature is not already loaded this won't work,  but the user wouldn't be mousing over it either.\n\t  if (!features) features = this.clickedFeatures(clickState);\n\n\t  if (features && features.length > 0) {\n\t    return TrackBase.extractPopupData(features[0], this.getGenomeId());\n\t  }\n\t};\n\n\tRnaStructTrack.prototype.menuItemList = function () {\n\t  var self = this;\n\t  return [{\n\t    name: \"Toggle arc direction\",\n\t    click: function click() {\n\t      self.arcOrientation = !self.arcOrientation;\n\t      self.trackView.repaintViews();\n\t    }\n\t  }];\n\t};\n\t/**\n\t * Return the current state of the track.  Used to create sessions and bookmarks.\n\t *\n\t * @returns {*|{}}\n\t */\n\n\n\tRnaStructTrack.prototype.getState = function () {\n\t  var config = this._super.getState.call(this);\n\n\t  config.arcOrientation = this.arcOrientation;\n\t  config.thickness = this.thickness;\n\t  config.color = this.color;\n\t  return config;\n\t};\n\n\tfunction sortByScore(featureList, direction) {\n\t  featureList.sort(function (a, b) {\n\t    var s1 = a.score === undefined ? -Number.MAX_VALUE : a.score;\n\t    var s2 = b.score === undefined ? -Number.MAX_VALUE : b.score;\n\t    var d = direction === undefined ? 1 : direction;\n\t    return d * (s1 - s2);\n\t  });\n\t}\n\n\tfunction RNAFeatureSource(config, genome) {\n\t  this.config = config;\n\t  this.genome = genome;\n\t}\n\n\tRNAFeatureSource.prototype.getFeatures = function (chr, start, end) {\n\t  var self = this;\n\t  var genome = this.genome;\n\n\t  if (!this.featureCache) {\n\t    var options = buildOptions(this.config);\n\t    return igvxhr.loadString(self.config.url, options).then(function (data) {\n\t      self.featureCache = new FeatureCache(parseBP(data), genome);\n\t      return self.featureCache.queryFeatures(chr, start, end);\n\t    });\n\t  } else {\n\t    return Promise.resolve(self.featureCache.queryFeatures(chr, start, end));\n\t  }\n\n\t  function parseBP(data) {\n\t    if (!data) return null;\n\t    var dataWrapper = getDataWrapper(data);\n\t    var header = true;\n\t    var line;\n\t    var colors = [];\n\t    var descriptors = [];\n\t    var features = [];\n\n\t    while (line = dataWrapper.nextLine()) {\n\t      var tokens = line.split('\\t');\n\n\t      if (header && line.startsWith(\"color:\")) {\n\t        var color = \"rgb(\" + tokens[1] + \",\" + tokens[2] + \",\" + tokens[3] + \")\";\n\t        colors.push(color);\n\n\t        if (tokens.length > 4) {\n\t          descriptors.push(tokens[4]);\n\t        } // TODO - use label\n\n\t      } else {\n\t        header = false;\n\t        var _chr = tokens[0];\n\t        var startLeftNuc = Number.parseInt(tokens[1]) - 1;\n\t        var startRightNuc = Number.parseInt(tokens[2]) - 1;\n\t        var endLeftNuc = Number.parseInt(tokens[3]);\n\t        var endRightNuc = Number.parseInt(tokens[4]);\n\t        var colorIdx = Number.parseInt(tokens[5]);\n\t        var _color = colors[colorIdx];\n\t        var feature = void 0;\n\n\t        if (startLeftNuc <= endRightNuc) {\n\t          feature = {\n\t            chr: _chr,\n\t            startLeft: Math.min(startLeftNuc, startRightNuc),\n\t            startRight: Math.max(startLeftNuc, startRightNuc),\n\t            endLeft: Math.min(endLeftNuc, endRightNuc),\n\t            endRight: Math.max(endLeftNuc, endRightNuc),\n\t            color: _color,\n\t            score: colorIdx\n\t          };\n\t        } else {\n\t          feature = {\n\t            chr: _chr,\n\t            startLeft: Math.min(endLeftNuc, endRightNuc),\n\t            startRight: Math.max(endLeftNuc, endRightNuc),\n\t            endLeft: Math.min(startLeftNuc, startRightNuc),\n\t            endRight: Math.max(startLeftNuc, startRightNuc),\n\t            color: _color,\n\t            score: colorIdx\n\t          };\n\t        }\n\n\t        feature.start = feature.startLeft;\n\t        feature.end = feature.endRight;\n\n\t        if (descriptors.length > colorIdx) {\n\t          feature.description = descriptors[colorIdx];\n\t        }\n\n\t        features.push(feature);\n\t      }\n\t    }\n\n\t    return features;\n\t  }\n\t};\n\n\tvar TrackFactory = {\n\t  'sequence': function sequence(config, browser) {\n\t    return new SequenceTrack(config, browser);\n\t  },\n\t  'feature': function feature(config, browser) {\n\t    return new FeatureTrack(config, browser);\n\t  },\n\t  'seg': function seg(config, browser) {\n\t    return new SegTrack(config, browser);\n\t  },\n\t  'wig': function wig(config, browser) {\n\t    return new WigTrack(config, browser);\n\t  },\n\t  'merged': function merged(config, browser) {\n\t    return new MergedTrack(config, browser);\n\t  },\n\t  'alignment': function alignment(config, browser) {\n\t    return new BAMTrack(config, browser);\n\t  },\n\t  'interaction': function interaction(config, browser) {\n\t    return new InteractionTrack(config, browser);\n\t  },\n\t  'variant': function variant(config, browser) {\n\t    return new VariantTrack(config, browser);\n\t  },\n\t  'eqtl': function eqtl(config, browser) {\n\t    return new EqtlTrack(config, browser);\n\t  },\n\t  'gwas': function gwas(config, browser) {\n\t    return new GWASTrack(config, browser);\n\t  },\n\t  'arc': function arc(config, browser) {\n\t    return new RnaStructTrack(config, browser);\n\t  },\n\t  'gcnv': function gcnv(config, browser) {\n\t    return new GCNVTrack(config, browser);\n\t  }\n\t};\n\n\tvar defaultHighlightColor = \"rgba(68, 134, 247, 0.25)\";\n\n\tvar ROI = function ROI(config, genome) {\n\t  this.config = config;\n\t  this.name = config.name;\n\t  this.roiSource = new FeatureSource(config, genome);\n\t  this.color = config.color || defaultHighlightColor;\n\t};\n\n\tROI.prototype.getFeatures = function (chr, start, end) {\n\t  return this.roiSource.getFeatures(chr, start, end);\n\t};\n\n\tROI.prototype.draw = function (drawConfiguration) {\n\t  var endBP, region, coord, regions;\n\t  regions = drawConfiguration.features;\n\n\t  if (!regions) {\n\t    return;\n\t  }\n\n\t  endBP = drawConfiguration.bpStart + (drawConfiguration.pixelWidth * drawConfiguration.bpPerPixel + 1);\n\n\t  for (var i = 0, len = regions.length; i < len; i++) {\n\t    region = regions[i];\n\n\t    if (region.end < drawConfiguration.bpStart) {\n\t      continue;\n\t    }\n\n\t    if (region.start > endBP) {\n\t      break;\n\t    }\n\n\t    coord = coordinates(region, drawConfiguration.bpStart, drawConfiguration.bpPerPixel);\n\t    IGVGraphics.fillRect(drawConfiguration.context, coord.x, 0, coord.width, drawConfiguration.pixelHeight, {\n\t      fillStyle: this.color\n\t    });\n\t  }\n\t};\n\n\tfunction coordinates(region, startBP, bpp) {\n\t  var ss, ee, width;\n\t  ss = Math.round((region.start - startBP) / bpp);\n\t  ee = Math.round((region.end - startBP) / bpp);\n\t  width = ee - ss;\n\n\t  if (width < 3) {\n\t    width = 3;\n\t    ss -= 1;\n\t  }\n\n\t  return {\n\t    x: ss,\n\t    width: width\n\t  };\n\t}\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2014 Broad Institute\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tvar GtexSelection = function GtexSelection(gene, snp) {\n\t  this.geneColors = {};\n\t  this.gene = null;\n\t  this.snp = null;\n\t  this.genesCount = 0;\n\n\t  if (gene) {\n\t    this.gene = gene.toUpperCase();\n\t    this.geneColors[this.gene] = brewer[this.genesCount++];\n\t  }\n\n\t  if (snp) {\n\t    this.snp = snp.toUpperCase();\n\t  }\n\t};\n\n\tGtexSelection.prototype.addGene = function (geneName) {\n\t  if (!this.geneColors[geneName.toUpperCase()]) {\n\t    this.geneColors[geneName.toUpperCase()] = brewer[this.genesCount++];\n\t  }\n\t};\n\n\tGtexSelection.prototype.colorForGene = function (geneName) {\n\t  return this.geneColors[geneName.toUpperCase()];\n\t};\n\n\tvar brewer = new Array(); // Set +!\n\n\tbrewer.push(\"rgb(228,26,28)\");\n\tbrewer.push(\"rgb(55,126,184)\");\n\tbrewer.push(\"rgb(77,175,74)\");\n\tbrewer.push(\"rgb(166,86,40)\");\n\tbrewer.push(\"rgb(152,78,163)\");\n\tbrewer.push(\"rgb(255,127,0)\");\n\tbrewer.push(\"rgb(247,129,191)\");\n\tbrewer.push(\"rgb(153,153,153)\");\n\tbrewer.push(\"rgb(255,255,51)\"); // #Set 2\n\n\tbrewer.push(\"rgb(102, 194, 165\");\n\tbrewer.push(\"rgb(252, 141, 98\");\n\tbrewer.push(\"rgb(141, 160, 203\");\n\tbrewer.push(\"rgb(231, 138, 195\");\n\tbrewer.push(\"rgb(166, 216, 84\");\n\tbrewer.push(\"rgb(255, 217, 47\");\n\tbrewer.push(\"rgb(229, 196, 148\");\n\tbrewer.push(\"rgb(179, 179, 179\"); //#Set 3\n\n\tbrewer.push(\"rgb( 141, 211, 199\");\n\tbrewer.push(\"rgb(255, 255, 179\");\n\tbrewer.push(\"rgb(190, 186, 218\");\n\tbrewer.push(\"rgb(251, 128, 114\");\n\tbrewer.push(\"rgb(128, 177, 211\");\n\tbrewer.push(\"rgb(253, 180, 98\");\n\tbrewer.push(\"rgb(179, 222, 105\");\n\tbrewer.push(\"rgb(252, 205, 229\");\n\tbrewer.push(\"rgb(217, 217, 217\");\n\tbrewer.push(\"rgb(188, 128, 189\");\n\tbrewer.push(\"rgb(204, 235, 197\");\n\tbrewer.push(\"rgb(255, 237, 111\");\n\n\tvar INCORRECT_ITERATION$1 = !checkCorrectnessOfIteration(function (iterable) {\n\t  Array.from(iterable);\n\t}); // `Array.from` method\n\t// https://tc39.github.io/ecma262/#sec-array.from\n\n\t_export({\n\t  target: 'Array',\n\t  stat: true,\n\t  forced: INCORRECT_ITERATION$1\n\t}, {\n\t  from: arrayFrom\n\t});\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016-2017 The Regents of the University of California\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\t/**\n\t * Minimal support for the legacy IGV desktop session format.\n\t */\n\tvar XMLSession = function XMLSession(xmlString, knownGenomes) {\n\t  var self = this,\n\t      parser,\n\t      xmlDoc,\n\t      elements;\n\t  parser = new DOMParser();\n\t  xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\n\t  processRootNode();\n\t  elements = xmlDoc.getElementsByTagName(\"Resource\");\n\t  self.tracks = [];\n\t  var resourceMap = {};\n\t  Array.from(elements).forEach(function (r, idx) {\n\t    var res = {\n\t      url: r.getAttribute(\"path\"),\n\t      indexURL: r.getAttribute(\"index\"),\n\t      order: idx\n\t    };\n\t    self.tracks.push(res);\n\t    resourceMap[res.url] = res;\n\t  }); // Check for optional Track section\n\n\t  elements = xmlDoc.getElementsByTagName(\"Track\");\n\n\t  if (elements && elements.length > 0) {\n\t    // Track order is defined by elements, reset\n\t    self.tracks = [];\n\t    Array.from(elements).forEach(function (track) {\n\t      var id, res, subtracks, mergedTrack;\n\t      subtracks = track.getElementsByTagName(\"Track\");\n\n\t      if (subtracks && subtracks.length > 0) {\n\t        mergedTrack = {\n\t          type: 'merged',\n\t          tracks: []\n\t        };\n\t        extractTrackAttributes(track, mergedTrack);\n\t        self.tracks.push(mergedTrack);\n\t        Array.from(subtracks).forEach(function (t) {\n\t          t.processed = true;\n\t          var id, res;\n\t          id = t.getAttribute(\"id\");\n\t          res = resourceMap[id];\n\n\t          if (res) {\n\t            mergedTrack.tracks.push(res);\n\t            extractTrackAttributes(t, res);\n\t            res.autoscale = false;\n\t            mergedTrack.height = res.height; //\n\t          }\n\t        });\n\t      } else if (!track.processed) {\n\t        id = track.getAttribute(\"id\");\n\t        res = resourceMap[id];\n\n\t        if (res) {\n\t          self.tracks.push(res);\n\t          extractTrackAttributes(track, res);\n\t        }\n\t      }\n\t    });\n\t  }\n\n\t  function extractTrackAttributes(track, config) {\n\t    var color, height, autoScale, altColor, dataRange, dataRangeCltn, windowFunction, visWindow, indexed, autoscaleGroup;\n\t    config.name = track.getAttribute(\"name\");\n\t    color = track.getAttribute(\"color\");\n\n\t    if (color) {\n\t      config.color = \"rgb(\" + color + \")\";\n\t    }\n\n\t    altColor = track.getAttribute(\"altColor\");\n\n\t    if (color) {\n\t      config.altColor = \"rgb(\" + altColor + \")\";\n\t    }\n\n\t    height = track.getAttribute(\"height\");\n\n\t    if (height) {\n\t      config.height = parseInt(height);\n\t    }\n\n\t    autoScale = track.getAttribute(\"autoScale\");\n\n\t    if (autoScale) {\n\t      config.autoScale = autoScale === \"true\";\n\t    }\n\n\t    autoscaleGroup = track.getAttribute(\"autoscaleGroup\");\n\n\t    if (autoscaleGroup) {\n\t      config.autoscaleGroup = autoscaleGroup;\n\t    }\n\n\t    windowFunction = track.getAttribute(\"windowFunction\");\n\n\t    if (windowFunction) {\n\t      config.windowFunction = windowFunction;\n\t    }\n\n\t    visWindow = track.getAttribute(\"visibilityWindow\") || track.getAttribute(\"featureVisibilityWindow\");\n\n\t    if (visWindow) {\n\t      config.visibilityWindow = visWindow;\n\t    }\n\n\t    indexed = track.getAttribute(\"indexed\");\n\n\t    if (indexed) {\n\t      config.indexed = indexed === \"true\";\n\t    }\n\n\t    dataRangeCltn = track.getElementsByTagName(\"DataRange\");\n\n\t    if (dataRangeCltn.length > 0) {\n\t      dataRange = dataRangeCltn.item(0);\n\n\t      if (!autoScale) {\n\t        config.min = parseInt(dataRange.getAttribute(\"minimum\"));\n\t        config.max = parseInt(dataRange.getAttribute(\"maximum\"));\n\t      }\n\n\t      config.logScale = dataRange.getAttribute(\"type\") === \"LOG\";\n\t    }\n\t  }\n\n\t  function processRootNode() {\n\t    var elements, session, genome, locus, ucscID;\n\t    elements = xmlDoc.getElementsByTagName(\"Session\");\n\n\t    if (!elements || elements.length === 0) ;\n\n\t    session = elements.item(0);\n\t    genome = session.getAttribute(\"genome\");\n\t    locus = session.getAttribute(\"locus\");\n\t    ucscID = session.getAttribute(\"ucscID\");\n\n\t    if (knownGenomes && knownGenomes.hasOwnProperty(genome)) {\n\t      self.genome = genome;\n\t    } else {\n\t      self.reference = {\n\t        fastaURL: genome\n\t      };\n\n\t      if (ucscID) {\n\t        self.reference.id = ucscID;\n\t      }\n\t    }\n\n\t    if (locus) {\n\t      self.locus = locus;\n\t    }\n\t  }\n\t};\n\n\tvar SampleInformation = function SampleInformation() {\n\t  this.attributes = {};\n\t  this.plinkLoaded = false;\n\t};\n\n\tSampleInformation.prototype.loadPlinkFile = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url, config) {\n\t    var options, data, lines, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, line, line_arr;\n\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            if (!config) config = {};\n\t            options = buildOptions(config); // Add oauth token, if any\n\n\t            _context.next = 4;\n\t            return igvxhr.loadString(url, options);\n\n\t          case 4:\n\t            data = _context.sent;\n\t            lines = splitLines(data);\n\t            _iteratorNormalCompletion = true;\n\t            _didIteratorError = false;\n\t            _iteratorError = undefined;\n\t            _context.prev = 9;\n\n\t            for (_iterator = lines[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t              line = _step.value;\n\t              line_arr = line.split(' ');\n\t              this.attributes[line_arr[1]] = {\n\t                familyId: line_arr[0],\n\t                fatherId: line_arr[2],\n\t                motherId: line_arr[3],\n\t                sex: line_arr[4],\n\t                phenotype: line_arr[5]\n\t              };\n\t            }\n\n\t            _context.next = 17;\n\t            break;\n\n\t          case 13:\n\t            _context.prev = 13;\n\t            _context.t0 = _context[\"catch\"](9);\n\t            _didIteratorError = true;\n\t            _iteratorError = _context.t0;\n\n\t          case 17:\n\t            _context.prev = 17;\n\t            _context.prev = 18;\n\n\t            if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t              _iterator.return();\n\t            }\n\n\t          case 20:\n\t            _context.prev = 20;\n\n\t            if (!_didIteratorError) {\n\t              _context.next = 23;\n\t              break;\n\t            }\n\n\t            throw _iteratorError;\n\n\t          case 23:\n\t            return _context.finish(20);\n\n\t          case 24:\n\t            return _context.finish(17);\n\n\t          case 25:\n\t            this.plinkLoaded = true;\n\t            return _context.abrupt(\"return\", this);\n\n\t          case 27:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee, this, [[9, 13, 17, 25], [18,, 20, 24]]);\n\t  }));\n\n\t  return function (_x, _x2) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\t/**\n\t * Return the attributes for the given sample as a map-like object (key-value pairs)\n\t * @param sample\n\t */\n\n\n\tSampleInformation.prototype.getAttributes = function (sample) {\n\t  return this.attributes[sample];\n\t};\n\n\tSampleInformation.prototype.getAttributeNames = function () {\n\t  if (this.hasAttributes()) {\n\t    return Object.keys(this.attributes[Object.keys(this.attributes)[0]]);\n\t  } else return [];\n\t};\n\n\tSampleInformation.prototype.hasAttributes = function () {\n\t  return Object.keys(this.attributes).length > 0;\n\t};\n\n\tfunction loadPlinkFile(url, config) {\n\t  var si = new SampleInformation();\n\t  return si.loadPlinkFile(url, config);\n\t}\n\n\tvar IdeoPanel = function IdeoPanel($parent, panelWidth, browser) {\n\t  this.browser = browser;\n\t  this.$parent = $parent;\n\t  this.buildPanels($parent, panelWidth);\n\t};\n\n\tIdeoPanel.prototype.renderSVGContext = function (context, offset) {\n\t  var self = this;\n\t  this.panels.forEach(function (panel, i) {\n\t    var bbox = panel.$ideogram.get(0).getBoundingClientRect();\n\t    var dx = offset.deltaX + i * (panel.$canvas.width() + context.multiLocusGap);\n\t    var dy = offset.deltaY;\n\t    context.addTrackGroupWithTranslationAndClipRect('ideogram', dx, dy, bbox.width, bbox.height, 0);\n\t    context.save();\n\t    var paintConfig = {\n\t      ctx: context,\n\t      width: panel.$canvas.width(),\n\t      height: panel.$canvas.height(),\n\t      genome: self.browser.genome,\n\t      referenceFrame: panel.genomicState.referenceFrame,\n\t      ideogramWidth: panel.$ideogram.width()\n\t    };\n\t    repaintContext(paintConfig);\n\t    context.restore();\n\t  });\n\t};\n\n\tIdeoPanel.prototype.buildPanels = function ($parent, width) {\n\t  var self = this;\n\t  $parent.append($('<div class=\"igv-ideogram-shim\"></div>'));\n\t  this.panels = this.browser.genomicStateList.map(function (genomicState) {\n\t    return panelWithGenomicState.call(self, $parent, genomicState, width);\n\t  });\n\t};\n\n\tIdeoPanel.prototype.setWidth = function (width, doRepaint) {\n\t  this.panels.forEach(function (panel) {\n\t    panel.$ideogram.outerWidth(width);\n\t    setupCanvasSize(panel);\n\t    panel.ideograms = {};\n\t  });\n\n\t  if (true === doRepaint) {\n\t    this.repaint();\n\t  }\n\t};\n\n\tIdeoPanel.prototype.resize = function () {\n\t  this.setWidth(this.browser.viewportContainerWidth() / this.browser.genomicStateList.length, true);\n\t};\n\n\tIdeoPanel.prototype.repaint = function () {\n\t  var self = this;\n\t  this.panels.forEach(function (panel) {\n\t    var config = {\n\t      ctx: panel.ctx,\n\t      width: panel.$canvas.width(),\n\t      height: panel.$canvas.height(),\n\t      genome: self.browser.genome,\n\t      referenceFrame: panel.genomicState.referenceFrame,\n\t      ideogramWidth: panel.$ideogram.width()\n\t    };\n\t    repaintContext(config);\n\t  });\n\t};\n\n\tIdeoPanel.prototype.discardPanels = function () {\n\t  this.panels.forEach(function (panel) {\n\t    panel.$ideogram.remove();\n\t  });\n\t  this.panels = undefined;\n\t};\n\n\tIdeoPanel.prototype.addPanelWithGenomicStateAtIndex = function (genomicState, index, width) {\n\t  var panel, $detached;\n\t  panel = panelWithGenomicState.call(this, this.$parent, genomicState, width);\n\n\t  if (index === this.panels.length) {\n\t    this.panels.push(panel);\n\t  } else {\n\t    this.panels.splice(index, 0, panel); // The viewport constructor always appends. Reorder here.\n\n\t    $detached = panel.$ideogram.detach();\n\t    $detached.insertAfter(this.panels[index - 1].$ideogram);\n\t  }\n\n\t  assessBorders(this.panels);\n\t};\n\n\tIdeoPanel.prototype.removePanelWithLocusIndex = function (index) {\n\t  this.panels[index].$ideogram.remove();\n\t  this.panels.splice(index, 1);\n\t  assessBorders(this.panels);\n\t};\n\n\tIdeoPanel.prototype.repaintPanelWithGenomicState = function (genomicState) {\n\t  var panel = this.panels[this.browser.genomicStateList.indexOf(genomicState)];\n\t  var config = {\n\t    ctx: panel.ctx,\n\t    width: panel.$canvas.width(),\n\t    height: panel.$canvas.height(),\n\t    genome: this.browser.genome,\n\t    referenceFrame: panel.genomicState.referenceFrame,\n\t    ideogramWidth: panel.$ideogram.width()\n\t  };\n\t  repaintContext(config);\n\t};\n\n\tfunction panelWithGenomicState($parent, genomicState, width) {\n\t  var panel;\n\t  var browser = this.browser;\n\t  panel = {};\n\t  panel.genomicState = genomicState;\n\t  panel.$ideogram = $('<div class=\"igv-ideogram-content\"></div>');\n\t  $parent.append(panel.$ideogram);\n\t  addBorder(panel.$ideogram, browser.genomicStateList.indexOf(genomicState), browser.genomicStateList.length);\n\t  panel.$ideogram.outerWidth(width);\n\t  panel.$canvas = $('<canvas>');\n\t  panel.$ideogram.append(panel.$canvas);\n\t  setupCanvasSize(panel);\n\t  panel.ideograms = {};\n\t  panel.$ideogram.on('click', function (e) {\n\t    clickHandler(browser, panel, e);\n\t  });\n\t  return panel;\n\t}\n\n\tfunction addBorder($ideogram, index, length) {\n\t  if (index < length && 1 + index !== length) {\n\t    $ideogram.addClass('igv-ideogram-content-border-right');\n\t  } else {\n\t    $ideogram.removeClass('igv-ideogram-content-border-right');\n\t  }\n\t}\n\n\tfunction assessBorders(panels) {\n\t  panels.forEach(function (panel, p) {\n\t    if (1 === panels.length || 1 + p === panels.length) {\n\t      panel.$ideogram.removeClass('igv-ideogram-content-border-right');\n\t    } else {\n\t      panel.$ideogram.addClass('igv-ideogram-content-border-right');\n\t    }\n\t  });\n\t}\n\n\tfunction repaintContext(_ref) {\n\t  var ctx = _ref.ctx,\n\t      width = _ref.width,\n\t      height = _ref.height,\n\t      genome = _ref.genome,\n\t      referenceFrame = _ref.referenceFrame,\n\t      ideogramWidth = _ref.ideogramWidth;\n\n\t  if (!(width > 0 && height > 0)) {\n\t    return;\n\t  }\n\n\t  if (!(genome && referenceFrame && genome.getChromosome(referenceFrame.chrName) && height > 0)) {\n\t    return;\n\t  }\n\n\t  var stainColors = [];\n\t  IGVGraphics.fillRect(ctx, 0, 0, width, height, {\n\t    fillStyle: IGVColor.greyScale(255)\n\t  });\n\n\t  if (referenceFrame.chrName.toLowerCase() === \"all\") {\n\t    return;\n\t  }\n\n\t  drawIdeogram({\n\t    ctx: ctx,\n\t    referenceFrame: referenceFrame,\n\t    genome: genome,\n\t    width: width,\n\t    height: height,\n\t    stainColors: stainColors\n\t  });\n\t  var chromosome = genome.getChromosome(referenceFrame.chrName);\n\t  var widthBP = Math.round(referenceFrame.bpPerPixel * ideogramWidth);\n\t  var xBP = referenceFrame.start; // Total chromosome length can be > chromosome.bpLength for partial fastas.\n\n\t  var chrLength = chromosome.bpLength;\n\t  var cytobands = genome.getCytobands(referenceFrame.chrName);\n\n\t  if (cytobands && cytobands.length > 0) {\n\t    chrLength = Math.max(chrLength, cytobands[cytobands.length - 1].end);\n\t  }\n\n\t  if (widthBP < chrLength) {\n\t    var percentWidth = widthBP / chrLength;\n\t    var percentX = xBP / chrLength;\n\t    var x = Math.floor(percentX * width);\n\t    var ww = Math.floor(percentWidth * width);\n\t    x = Math.max(0, x);\n\t    x = Math.min(width - ww, x); // Push current context\n\n\t    ctx.save(); // Draw red box\n\n\t    ctx.strokeStyle = \"red\";\n\t    ctx.lineWidth = ww < 2 ? 1 : 2;\n\t    var xx = x + ctx.lineWidth / 2;\n\t    ww = ww < 2 ? 1 : ww - ctx.lineWidth;\n\t    var yy = ctx.lineWidth / 2;\n\t    var hh = height - ctx.lineWidth;\n\t    ctx.strokeRect(xx, yy, ww, hh); // Pop current context\n\n\t    ctx.restore();\n\t  }\n\t}\n\n\tfunction drawIdeogram(_ref2) {\n\t  var ctx = _ref2.ctx,\n\t      referenceFrame = _ref2.referenceFrame,\n\t      genome = _ref2.genome,\n\t      width = _ref2.width,\n\t      height = _ref2.height,\n\t      stainColors = _ref2.stainColors;\n\t  var shim, shim2, ideogramTop, cytobands, cytoband, center, xC, yC, chrLength, scale, start, end, i;\n\t  shim = 1;\n\t  shim2 = 0.5 * shim;\n\t  ideogramTop = 0;\n\n\t  if (undefined === genome) {\n\t    return;\n\t  }\n\n\t  IGVGraphics.fillRect(ctx, 0, 0, width, height, {\n\t    fillStyle: IGVColor.greyScale(255)\n\t  });\n\t  cytobands = genome.getCytobands(referenceFrame.chrName);\n\n\t  if (cytobands) {\n\t    center = ideogramTop + height / 2;\n\t    xC = [];\n\t    yC = [];\n\n\t    if (0 === cytobands.length) {\n\t      return;\n\t    }\n\n\t    chrLength = cytobands[cytobands.length - 1].end;\n\t    scale = width / chrLength; // round rect clipping path\n\n\t    ctx.beginPath();\n\t    IGVGraphics.roundRect(ctx, shim2, shim2 + ideogramTop, width - 2 * shim2, height - 2 * shim2, (height - 2 * shim2) / 2, 0, 1);\n\t    ctx.clip();\n\n\t    for (i = 0; i < cytobands.length; i++) {\n\t      cytoband = cytobands[i];\n\t      start = scale * cytoband.start;\n\t      end = scale * cytoband.end;\n\n\t      if (cytoband.type === 'c') {\n\t        if (cytoband.name.charAt(0) === 'p') {\n\t          xC[0] = start;\n\t          yC[0] = height + ideogramTop;\n\t          xC[1] = start;\n\t          yC[1] = ideogramTop;\n\t          xC[2] = end;\n\t          yC[2] = center;\n\t        } else {\n\t          xC[0] = end;\n\t          yC[0] = height + ideogramTop;\n\t          xC[1] = end;\n\t          yC[1] = ideogramTop;\n\t          xC[2] = start;\n\t          yC[2] = center;\n\t        }\n\n\t        ctx.fillStyle = \"rgb(150, 0, 0)\";\n\t        ctx.strokeStyle = \"rgb(150, 0, 0)\";\n\t        IGVGraphics.polygon(ctx, xC, yC, 1, 0);\n\t      } else {\n\t        ctx.fillStyle = getCytobandColor(stainColors, cytoband);\n\t        IGVGraphics.fillRect(ctx, start, shim + ideogramTop, end - start, height - 2 * shim);\n\t      }\n\t    }\n\t  } // round rect border\n\n\n\t  ctx.strokeStyle = IGVColor.greyScale(41);\n\t  IGVGraphics.roundRect(ctx, shim2, shim2 + ideogramTop, width - 2 * shim2, height - 2 * shim2, (height - 2 * shim2) / 2, 0, 1);\n\t}\n\n\tfunction getCytobandColor(colors, data) {\n\t  if (data.type === 'c') {\n\t    // centermere: \"acen\"\n\t    return \"rgb(150, 10, 10)\";\n\t  } else {\n\t    var stain = data.stain; // + 4;\n\n\t    var shade = 230;\n\n\t    if (data.type === 'p') {\n\t      shade = Math.floor(230 - stain / 100.0 * 230);\n\t    }\n\n\t    var c = colors[shade];\n\n\t    if (!c) {\n\t      c = \"rgb(\" + shade + \",\" + shade + \",\" + shade + \")\";\n\t      colors[shade] = c;\n\t    }\n\n\t    return c;\n\t  }\n\t}\n\n\tfunction setupCanvasSize(panel) {\n\t  var canvas = panel.$canvas.get(0);\n\t  var w = +panel.$ideogram.width();\n\t  var h = +panel.$ideogram.height();\n\t  canvas.style.width = w + \"px\";\n\t  canvas.style.height = h + \"px\";\n\t  canvas.width = window.devicePixelRatio * w;\n\t  canvas.height = window.devicePixelRatio * h;\n\t  panel.ctx = canvas.getContext(\"2d\");\n\t  panel.ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t}\n\n\tfunction clickHandler(browser, panel, e) {\n\t  var xy = translateMouseCoordinates(e, panel.$ideogram.get(0));\n\t  var referenceFrame = panel.genomicState.referenceFrame;\n\t  var locusLength = referenceFrame.bpPerPixel * panel.$ideogram.width();\n\t  var chr = browser.genome.getChromosome(referenceFrame.chrName);\n\t  var chrCoveragePercentage = locusLength / chr.bpLength;\n\t  var xPercentage = xy.x / panel.$ideogram.width();\n\n\t  if (xPercentage - chrCoveragePercentage / 2.0 < 0) {\n\t    xPercentage = chrCoveragePercentage / 2.0;\n\t  }\n\n\t  if (xPercentage + chrCoveragePercentage / 2.0 > 1.0) {\n\t    xPercentage = 1.0 - chrCoveragePercentage / 2.0;\n\t  }\n\n\t  var ss = Math.round((xPercentage - chrCoveragePercentage / 2.0) * chr.bpLength);\n\t  var ee = Math.round((xPercentage + chrCoveragePercentage / 2.0) * chr.bpLength);\n\t  referenceFrame.start = Math.round((xPercentage - chrCoveragePercentage / 2.0) * chr.bpLength);\n\t  referenceFrame.bpPerPixel = (ee - ss) / panel.$ideogram.width();\n\t  browser.updateLocusSearchWidget(panel.genomicState);\n\t  browser.updateViews();\n\t}\n\n\tvar ReferenceFrame = function ReferenceFrame(genome, chrName, start, end, bpPerPixel) {\n\t  this.genome = genome;\n\t  this.chrName = chrName;\n\t  this.start = start;\n\t  this.initialEnd = end; // TODO WARNING THIS IS NOT UPDATED !!!\n\n\t  this.bpPerPixel = bpPerPixel;\n\t};\n\n\tReferenceFrame.prototype.calculateEnd = function (pixels) {\n\t  return this.start + this.bpPerPixel * pixels;\n\t};\n\n\tReferenceFrame.prototype.calculateBPP = function (end, pixels) {\n\t  return (end - this.start) / pixels;\n\t};\n\n\tReferenceFrame.prototype.set = function (json) {\n\t  this.chrName = json.chrName;\n\t  this.start = json.start;\n\t  this.bpPerPixel = json.bpPerPixel;\n\t};\n\n\tReferenceFrame.prototype.toPixels = function (bp) {\n\t  return bp / this.bpPerPixel;\n\t};\n\n\tReferenceFrame.prototype.toBP = function (pixels) {\n\t  return this.bpPerPixel * pixels;\n\t};\n\t/**\n\t * Shift frame by stated pixels.  Return true if view changed, false if not.\n\t * @param pixels\n\t * @param viewportWidth\n\t */\n\n\n\tReferenceFrame.prototype.shiftPixels = function (pixels, viewportWidth) {\n\t  var start = this.start;\n\t  this.start += pixels * this.bpPerPixel;\n\t  this.clamp(viewportWidth);\n\t  return start !== this.start;\n\t};\n\n\tReferenceFrame.prototype.clamp = function (viewportWidth) {\n\t  // clamp left\n\t  var min = this.genome.getChromosome(this.chrName).bpStart || 0;\n\t  this.start = Math.max(min, this.start); // clamp right\n\n\t  if (viewportWidth) {\n\t    var chromosome = this.genome.getChromosome(this.chrName);\n\t    var maxEnd = chromosome.bpLength;\n\t    var maxStart = maxEnd - viewportWidth * this.bpPerPixel;\n\n\t    if (this.start > maxStart) {\n\t      this.start = maxStart;\n\t    }\n\t  }\n\t};\n\n\tReferenceFrame.prototype.getChromosome = function () {\n\t  return this.genome.getChromosome(this.chrName);\n\t};\n\n\tReferenceFrame.prototype.showLocus = function (pixels) {\n\t  if ('all' === this.chrName.toLowerCase()) {\n\t    return this.chrName.toLowerCase();\n\t  } else {\n\t    var ss = numberFormatter(Math.floor(this.start) + 1);\n\t    var ee = numberFormatter(Math.round(this.start + this.bpPerPixel * pixels));\n\t    return this.chrName + ':' + ss + '-' + ee;\n\t  }\n\t};\n\n\tReferenceFrame.prototype.description = function () {\n\t  return \"ReferenceFrame \" + this.chrName + \" \" + numberFormatter(Math.floor(this.start)) + \" bpp \" + this.bpPerPixel;\n\t};\n\n\tvar Browser = function Browser(options, parentDiv) {\n\t  this.guid = guid();\n\t  this.namespace = '.browser_' + this.guid;\n\t  this.config = options;\n\t  this.parent = parentDiv;\n\t  this.$root = $('<div class=\"igv-root-div\">');\n\t  $(parentDiv).append(this.$root);\n\t  this.$content = $('<div class=\"igv-content-div\">');\n\t  this.$root.append(this.$content);\n\t  this.$contentHeader = $('<div>', {\n\t    class: 'igv-content-header'\n\t  });\n\t  this.$content.append(this.$contentHeader);\n\t  var $trackContainer = $('<div class=\"igv-track-container-div\">');\n\t  this.$content.append($trackContainer);\n\t  this.trackContainerDiv = $trackContainer.get(0);\n\t  initialize.call(this, options);\n\t  this.trackViews = [];\n\t  this.trackLabelsVisible = true;\n\t  this.isCenterGuideVisible = false;\n\t  this.cursorGuideVisible = false;\n\t  this.featureDB = {}; // Hash of name -> feature, used for search function.\n\n\t  this.constants = {\n\t    dragThreshold: 3,\n\t    scrollThreshold: 5,\n\t    defaultColor: \"rgb(0,0,150)\",\n\t    doubleClickDelay: options.doubleClickDelay || 500\n\t  }; // Map of event name -> [ handlerFn, ... ]\n\n\t  this.eventHandlers = {};\n\t  this.$spinner = $('<div class=\"igv-track-container-spinner\">');\n\t  $trackContainer.append(this.$spinner);\n\t  this.$spinner.append(createIcon(\"spinner\"));\n\t  this.stopSpinner();\n\t  addMouseHandlers$1.call(this);\n\t};\n\n\tfunction initialize(options) {\n\t  var genomeId;\n\n\t  if (options.gtex) {\n\t    GtexUtils.gtexLoaded = true;\n\t  }\n\n\t  this.flanking = options.flanking;\n\t  this.crossDomainProxy = options.crossDomainProxy;\n\t  this.formats = options.formats;\n\t  this.trackDefaults = options.trackDefaults;\n\n\t  if (options.search) {\n\t    this.searchConfig = {\n\t      type: \"json\",\n\t      url: options.search.url,\n\t      coords: options.search.coords === undefined ? 1 : options.search.coords,\n\t      chromosomeField: options.search.chromosomeField || \"chromosome\",\n\t      startField: options.search.startField || \"start\",\n\t      endField: options.search.endField || \"end\",\n\t      geneField: options.search.geneField || \"gene\",\n\t      snpField: options.search.snpField || \"snp\",\n\t      resultsField: options.search.resultsField\n\t    };\n\t  } else {\n\t    if (options.reference && options.reference.id) {\n\t      genomeId = options.reference.id;\n\t    } else if (options.genome) {\n\t      genomeId = options.genome;\n\t    } else {\n\t      genomeId = \"hg19\";\n\t    }\n\n\t    this.searchConfig = {\n\t      // Legacy support -- deprecated\n\t      type: \"plain\",\n\t      url: 'https://igv.org/genomes/locus.php?genome=$GENOME$&name=$FEATURE$',\n\t      coords: 0,\n\t      chromosomeField: \"chromosome\",\n\t      startField: \"start\",\n\t      endField: \"end\",\n\t      geneField: \"gene\",\n\t      snpField: \"snp\"\n\t    };\n\t  }\n\t}\n\n\tBrowser.prototype.startSpinner = function () {\n\t  var $spinner = this.$spinner;\n\n\t  if ($spinner) {\n\t    $spinner.addClass(\"igv-fa5-spin\");\n\t    $spinner.show();\n\t  }\n\t};\n\n\tBrowser.prototype.stopSpinner = function () {\n\t  var $spinner = this.$spinner;\n\n\t  if ($spinner) {\n\t    $spinner.hide();\n\t    $spinner.removeClass(\"igv-fa5-spin\");\n\t  }\n\t};\n\n\tBrowser.prototype.isMultiLocusMode = function () {\n\t  return this.genomicStateList && this.genomicStateList.length > 1;\n\t};\n\n\tBrowser.prototype.isMultiLocusWholeGenomeView = function () {\n\t  if (undefined === this.genomicStateList || 1 === this.genomicStateList.length) {\n\t    return false;\n\t  }\n\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = this.genomicStateList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var genomicState = _step.value;\n\t      var chromosomeName = genomicState.referenceFrame.chrName.toLowerCase();\n\n\t      if ('all' === chromosomeName) {\n\t        return true;\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return false;\n\t};\n\n\tBrowser.prototype.toSVG = function () {\n\t  var trackContainerBBox = this.trackContainerDiv.getBoundingClientRect();\n\t  var anyViewportContainerBBox = this.trackViews[0].$viewportContainer.get(0).getBoundingClientRect();\n\t  var ideoPanelBBox = this.ideoPanel ? this.ideoPanel.panels[0].$ideogram.get(0).getBoundingClientRect() : {\n\t    height: 0,\n\t    width: 0\n\t  }; // multi-locus inter-panel gap\n\n\t  var multiLocusGap = 8;\n\t  var w = trackContainerBBox.width + (this.genomicStateList.length - 1) * multiLocusGap;\n\t  var h_output = trackContainerBBox.height + ideoPanelBBox.height;\n\t  var h_render = 8000;\n\t  var svgContext = new C2S({\n\t    width: w,\n\t    height: h_render,\n\t    backdropColor: 'white',\n\t    multiLocusGap: multiLocusGap,\n\t    viewbox: {\n\t      x: 0,\n\t      y: 0,\n\t      width: w,\n\t      height: h_render\n\t    }\n\t  });\n\t  var dx = anyViewportContainerBBox.x - trackContainerBBox.x; // ideoPanel -> SVG\n\n\t  if (this.ideoPanel) {\n\t    this.ideoPanel.renderSVGContext(svgContext, {\n\t      deltaX: dx,\n\t      deltaY: 0\n\t    });\n\t  } // tracks -> SVG\n\n\n\t  var _iteratorNormalCompletion2 = true;\n\t  var _didIteratorError2 = false;\n\t  var _iteratorError2 = undefined;\n\n\t  try {\n\t    for (var _iterator2 = this.trackViews[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t      var trackView = _step2.value;\n\t      trackView.renderSVGContext(svgContext, {\n\t        deltaX: dx,\n\t        deltaY: ideoPanelBBox.height - trackContainerBBox.y\n\t      });\n\t    } // reset height to trim away unneeded svg canvas real estate. Yes, a bit of a hack.\n\n\t  } catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n\t        _iterator2.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError2) {\n\t        throw _iteratorError2;\n\t      }\n\t    }\n\t  }\n\n\t  svgContext.setHeight(h_output);\n\t  return svgContext.getSerializedSvg(true);\n\t};\n\n\tBrowser.prototype.renderSVG = function (config) {\n\t  var svg = this.toSVG();\n\n\t  if (config.$container) {\n\t    var trackContainerBBox = this.trackContainerDiv.getBoundingClientRect();\n\t    config.$container.empty();\n\t    config.$container.width(trackContainerBBox.width);\n\t    config.$container.append(svg);\n\t  }\n\n\t  var path = config.filename || 'igv.svg';\n\t  var data = URL.createObjectURL(new Blob([svg], {\n\t    type: \"application/octet-stream\"\n\t  }));\n\t  download(path, data);\n\t};\n\t/**\n\t * Initialize a session from an object, json, or by loading from a file.\n\t *\n\t * TODO Really should be split into at least 2 functions, load from file and load from object/json\n\t *\n\t * @param options\n\t * @param config\n\t * @returns {*}\n\t */\n\n\n\tBrowser.prototype.loadSession = /*#__PURE__*/function () {\n\t  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(options) {\n\t    var self, session, loadSessionFile, _loadSessionFile;\n\n\t    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t      while (1) {\n\t        switch (_context2.prev = _context2.next) {\n\t          case 0:\n\t            _loadSessionFile = function _ref3() {\n\t              _loadSessionFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(options) {\n\t                var urlOrFile, json, filename, knownGenomes, string;\n\t                return regeneratorRuntime.wrap(function _callee$(_context) {\n\t                  while (1) {\n\t                    switch (_context.prev = _context.next) {\n\t                      case 0:\n\t                        urlOrFile = options.url || options.file;\n\n\t                        if (!(options.url && (options.url.startsWith(\"blob:\") || options.url.startsWith(\"data:\")))) {\n\t                          _context.next = 6;\n\t                          break;\n\t                        }\n\n\t                        json = Browser.uncompressSession(options.url);\n\t                        return _context.abrupt(\"return\", JSON.parse(json));\n\n\t                      case 6:\n\t                        filename = options.filename;\n\n\t                        if (!filename) {\n\t                          filename = options.url ? getFilename(options.url) : options.file.name;\n\t                        }\n\n\t                        if (!filename.endsWith(\".xml\")) {\n\t                          _context.next = 18;\n\t                          break;\n\t                        }\n\n\t                        _context.next = 11;\n\t                        return GenomeUtils.getKnownGenomes();\n\n\t                      case 11:\n\t                        knownGenomes = _context.sent;\n\t                        _context.next = 14;\n\t                        return igvxhr.loadString(urlOrFile);\n\n\t                      case 14:\n\t                        string = _context.sent;\n\t                        return _context.abrupt(\"return\", new XMLSession(string, knownGenomes));\n\n\t                      case 18:\n\t                        if (!filename.endsWith(\".json\")) {\n\t                          _context.next = 22;\n\t                          break;\n\t                        }\n\n\t                        return _context.abrupt(\"return\", igvxhr.loadJson(urlOrFile));\n\n\t                      case 22:\n\t                        return _context.abrupt(\"return\", undefined);\n\n\t                      case 23:\n\t                      case \"end\":\n\t                        return _context.stop();\n\t                    }\n\t                  }\n\t                }, _callee);\n\t              }));\n\t              return _loadSessionFile.apply(this, arguments);\n\t            };\n\n\t            loadSessionFile = function _ref2(_x2) {\n\t              return _loadSessionFile.apply(this, arguments);\n\t            };\n\n\t            self = this;\n\n\t            if (!(options.url || options.file)) {\n\t              _context2.next = 9;\n\t              break;\n\t            }\n\n\t            _context2.next = 6;\n\t            return loadSessionFile(options);\n\n\t          case 6:\n\t            session = _context2.sent;\n\t            _context2.next = 10;\n\t            break;\n\n\t          case 9:\n\t            session = options;\n\n\t          case 10:\n\t            return _context2.abrupt(\"return\", self.loadSessionObject(session));\n\n\t          case 11:\n\t          case \"end\":\n\t            return _context2.stop();\n\t        }\n\t      }\n\t    }, _callee2, this);\n\t  }));\n\n\t  return function (_x) {\n\t    return _ref.apply(this, arguments);\n\t  };\n\t}();\n\n\tBrowser.prototype.loadSessionObject = /*#__PURE__*/function () {\n\t  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(session) {\n\t    var genome, genomicStates, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, gs, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, s, _gs, gene, snp, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, r, panelWidth;\n\n\t    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t      while (1) {\n\t        switch (_context3.prev = _context3.next) {\n\t          case 0:\n\t            this.removeAllTracks(true);\n\t            _context3.next = 3;\n\t            return this.loadGenome(session.reference || session.genome, session.locus);\n\n\t          case 3:\n\t            genome = _context3.sent;\n\n\t            if (!session.gtexSelections) {\n\t              _context3.next = 44;\n\t              break;\n\t            }\n\n\t            genomicStates = {};\n\t            _iteratorNormalCompletion3 = true;\n\t            _didIteratorError3 = false;\n\t            _iteratorError3 = undefined;\n\t            _context3.prev = 9;\n\n\t            for (_iterator3 = this.genomicStateList[Symbol.iterator](); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t              gs = _step3.value;\n\t              genomicStates[gs.locusSearchString] = gs;\n\t            }\n\n\t            _context3.next = 17;\n\t            break;\n\n\t          case 13:\n\t            _context3.prev = 13;\n\t            _context3.t0 = _context3[\"catch\"](9);\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = _context3.t0;\n\n\t          case 17:\n\t            _context3.prev = 17;\n\t            _context3.prev = 18;\n\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n\t              _iterator3.return();\n\t            }\n\n\t          case 20:\n\t            _context3.prev = 20;\n\n\t            if (!_didIteratorError3) {\n\t              _context3.next = 23;\n\t              break;\n\t            }\n\n\t            throw _iteratorError3;\n\n\t          case 23:\n\t            return _context3.finish(20);\n\n\t          case 24:\n\t            return _context3.finish(17);\n\n\t          case 25:\n\t            _iteratorNormalCompletion4 = true;\n\t            _didIteratorError4 = false;\n\t            _iteratorError4 = undefined;\n\t            _context3.prev = 28;\n\n\t            for (_iterator4 = Object.getOwnPropertyNames(session.gtexSelections)[Symbol.iterator](); !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t              s = _step4.value;\n\t              _gs = genomicStates[s];\n\n\t              if (_gs) {\n\t                gene = session.gtexSelections[s].gene;\n\t                snp = session.gtexSelections[s].snp;\n\t                _gs.selection = new GtexSelection(gene, snp);\n\t              }\n\t            }\n\n\t            _context3.next = 36;\n\t            break;\n\n\t          case 32:\n\t            _context3.prev = 32;\n\t            _context3.t1 = _context3[\"catch\"](28);\n\t            _didIteratorError4 = true;\n\t            _iteratorError4 = _context3.t1;\n\n\t          case 36:\n\t            _context3.prev = 36;\n\t            _context3.prev = 37;\n\n\t            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n\t              _iterator4.return();\n\t            }\n\n\t          case 39:\n\t            _context3.prev = 39;\n\n\t            if (!_didIteratorError4) {\n\t              _context3.next = 42;\n\t              break;\n\t            }\n\n\t            throw _iteratorError4;\n\n\t          case 42:\n\t            return _context3.finish(39);\n\n\t          case 43:\n\t            return _context3.finish(36);\n\n\t          case 44:\n\t            if (!session.roi) {\n\t              _context3.next = 65;\n\t              break;\n\t            }\n\n\t            this.roi = [];\n\t            _iteratorNormalCompletion5 = true;\n\t            _didIteratorError5 = false;\n\t            _iteratorError5 = undefined;\n\t            _context3.prev = 49;\n\n\t            for (_iterator5 = session.roi[Symbol.iterator](); !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t              r = _step5.value;\n\t              this.roi.push(new ROI(r, genome));\n\t            }\n\n\t            _context3.next = 57;\n\t            break;\n\n\t          case 53:\n\t            _context3.prev = 53;\n\t            _context3.t2 = _context3[\"catch\"](49);\n\t            _didIteratorError5 = true;\n\t            _iteratorError5 = _context3.t2;\n\n\t          case 57:\n\t            _context3.prev = 57;\n\t            _context3.prev = 58;\n\n\t            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n\t              _iterator5.return();\n\t            }\n\n\t          case 60:\n\t            _context3.prev = 60;\n\n\t            if (!_didIteratorError5) {\n\t              _context3.next = 63;\n\t              break;\n\t            }\n\n\t            throw _iteratorError5;\n\n\t          case 63:\n\t            return _context3.finish(60);\n\n\t          case 64:\n\t            return _context3.finish(57);\n\n\t          case 65:\n\t            if (!session.tracks) {\n\t              // eslint-disable-next-line require-atomic-updates\n\t              session.tracks = [];\n\t            }\n\n\t            if (session.tracks.filter(function (track) {\n\t              return track.type === 'sequence';\n\t            }).length === 0) {\n\t              session.tracks.push({\n\t                type: \"sequence\",\n\t                order: -Number.MAX_VALUE\n\t              });\n\t            }\n\n\t            _context3.next = 69;\n\t            return this.loadTrackList(session.tracks);\n\n\t          case 69:\n\t            if (false !== session.showIdeogram && !this.ideoPanel) {\n\t              panelWidth = this.viewportContainerWidth() / this.genomicStateList.length;\n\t              this.ideoPanel = new IdeoPanel(this.$contentHeader, panelWidth, this);\n\t              this.ideoPanel.repaint();\n\t            }\n\n\t            this.updateLocusSearchWidget(this.genomicStateList[0]);\n\t            this.windowSizePanel.updateWithGenomicState(this.genomicStateList[0]); // Resize is called to address minor alignment problems with multi-locus view.\n\n\t            this.resize();\n\n\t          case 73:\n\t          case \"end\":\n\t            return _context3.stop();\n\t        }\n\t      }\n\t    }, _callee3, this, [[9, 13, 17, 25], [18,, 20, 24], [28, 32, 36, 44], [37,, 39, 43], [49, 53, 57, 65], [58,, 60, 64]]);\n\t  }));\n\n\t  return function (_x3) {\n\t    return _ref4.apply(this, arguments);\n\t  };\n\t}();\n\n\tBrowser.prototype.loadGenome = /*#__PURE__*/function () {\n\t  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(idOrConfig, initialLocus) {\n\t    var genomeConfig, genome, genomeChange, genomicStateList, errorString, expandReference, _expandReference, getInitialLocus;\n\n\t    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t      while (1) {\n\t        switch (_context5.prev = _context5.next) {\n\t          case 0:\n\t            getInitialLocus = function _ref8(locus, genome) {\n\t              var loci = [];\n\n\t              if (locus) {\n\t                if (Array.isArray(locus)) {\n\t                  loci = locus.join(' ');\n\t                } else {\n\t                  loci = locus;\n\t                }\n\t              } else {\n\t                loci = genome.getHomeChromosomeName();\n\t              }\n\n\t              return loci;\n\t            };\n\n\t            _expandReference = function _ref7() {\n\t              _expandReference = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(conf) {\n\t                var genomeID, knownGenomes, reference;\n\t                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t                  while (1) {\n\t                    switch (_context4.prev = _context4.next) {\n\t                      case 0:\n\t                        if (isString(conf)) {\n\t                          genomeID = conf;\n\t                        } else if (conf.genome) {\n\t                          genomeID = conf.genome;\n\t                        } else if (conf.id !== undefined && conf.fastaURL === undefined) {\n\t                          // Backward compatibility\n\t                          genomeID = conf.id;\n\t                        }\n\n\t                        if (!genomeID) {\n\t                          _context4.next = 10;\n\t                          break;\n\t                        }\n\n\t                        _context4.next = 4;\n\t                        return GenomeUtils.getKnownGenomes();\n\n\t                      case 4:\n\t                        knownGenomes = _context4.sent;\n\t                        reference = knownGenomes[genomeID];\n\n\t                        if (!reference) {\n\t                          this.presentAlert(\"Uknown genome id: \" + genomeID, undefined);\n\t                        }\n\n\t                        return _context4.abrupt(\"return\", reference);\n\n\t                      case 10:\n\t                        return _context4.abrupt(\"return\", conf);\n\n\t                      case 11:\n\t                      case \"end\":\n\t                        return _context4.stop();\n\t                    }\n\t                  }\n\t                }, _callee4, this);\n\t              }));\n\t              return _expandReference.apply(this, arguments);\n\t            };\n\n\t            expandReference = function _ref6(_x6) {\n\t              return _expandReference.apply(this, arguments);\n\t            };\n\n\t            // idOrConfig might be json\n\t            if (isString(idOrConfig) && idOrConfig.startsWith(\"{\")) {\n\t              try {\n\t                idOrConfig = JSON.parse(idOrConfig);\n\t              } catch (e) {// Apparently its not json,  just continue\n\t              }\n\t            }\n\n\t            _context5.next = 6;\n\t            return expandReference.call(this, idOrConfig);\n\n\t          case 6:\n\t            genomeConfig = _context5.sent;\n\t            _context5.next = 9;\n\t            return GenomeUtils.loadGenome(genomeConfig);\n\n\t          case 9:\n\t            genome = _context5.sent;\n\t            genomeChange = this.genome && this.genome.id !== genome.id;\n\t            this.genome = genome;\n\t            this.$current_genome.text(genome.id || '');\n\t            this.$current_genome.attr('title', genome.id || '');\n\t            this.chromosomeSelectWidget.update(genome);\n\n\t            if (genomeChange) {\n\t              this.removeAllTracks();\n\t            }\n\n\t            this.genome = genome;\n\t            _context5.prev = 17;\n\t            _context5.next = 20;\n\t            return this.search(getInitialLocus(initialLocus, genome), true);\n\n\t          case 20:\n\t            genomicStateList = _context5.sent;\n\t            _context5.next = 29;\n\t            break;\n\n\t          case 23:\n\t            _context5.prev = 23;\n\t            _context5.t0 = _context5[\"catch\"](17);\n\t            // Couldn't find initial locus\n\t            console.error(_context5.t0);\n\t            _context5.next = 28;\n\t            return this.search(this.genome.getHomeChromosomeName());\n\n\t          case 28:\n\t            genomicStateList = _context5.sent;\n\n\t          case 29:\n\t            this.genomicStateList = genomicStateList;\n\n\t            if (this.genomicStateList.length > 0) {\n\t              if (!this.rulerTrack && false !== this.config.showRuler) {\n\t                this.rulerTrack = new RulerTrack(this);\n\t                this.addTrack(this.rulerTrack);\n\t              }\n\t            } else {\n\t              errorString = 'Unrecognized locus ' + this.config.locus;\n\t              this.presentAlert(errorString, undefined);\n\t            }\n\n\t            if (!genomeConfig.tracks) {\n\t              _context5.next = 34;\n\t              break;\n\t            }\n\n\t            _context5.next = 34;\n\t            return this.loadTrackList(genomeConfig.tracks);\n\n\t          case 34:\n\t            this.resize(); // Force recomputation and repaint\n\n\t            return _context5.abrupt(\"return\", this.genome);\n\n\t          case 36:\n\t          case \"end\":\n\t            return _context5.stop();\n\t        }\n\t      }\n\t    }, _callee5, this, [[17, 23]]);\n\t  }));\n\n\t  return function (_x4, _x5) {\n\t    return _ref5.apply(this, arguments);\n\t  };\n\t}(); //\n\n\n\tBrowser.prototype.updateUIWithGenomicStateListChange = function (genomicStateList) {\n\t  var isWGV = this.isMultiLocusWholeGenomeView() || GenomeUtils.isWholeGenomeView(genomicStateList[0].referenceFrame);\n\n\t  if (isWGV || this.isMultiLocusMode()) {\n\t    this.centerGuide.forcedHide();\n\t  } else {\n\t    this.centerGuide.forcedShow();\n\t  }\n\n\t  this.navbarManager.navbarDidResize(this.$navigation.width(), isWGV);\n\t  toggleTrackLabels(this.trackViews, this.trackLabelsVisible);\n\t}; // track labels\n\n\n\tBrowser.prototype.setTrackLabelName = function (trackView, name) {\n\t  trackView.viewports.forEach(function (viewport) {\n\t    viewport.setTrackLabel(name);\n\t  });\n\t};\n\n\tBrowser.prototype.hideTrackLabels = function () {\n\t  this.trackLabelsVisible = false;\n\t  toggleTrackLabels(this.trackViews, this.trackLabelsVisible);\n\t};\n\n\tBrowser.prototype.showTrackLabels = function () {\n\t  this.trackLabelsVisible = true;\n\t  toggleTrackLabels(this.trackViews, this.trackLabelsVisible);\n\t};\n\n\tfunction toggleTrackLabels(trackViews, isVisible) {\n\t  var _iteratorNormalCompletion6 = true;\n\t  var _didIteratorError6 = false;\n\t  var _iteratorError6 = undefined;\n\n\t  try {\n\t    for (var _iterator6 = trackViews[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t      var trackView = _step6.value;\n\t      var _iteratorNormalCompletion7 = true;\n\t      var _didIteratorError7 = false;\n\t      var _iteratorError7 = undefined;\n\n\t      try {\n\t        for (var _iterator7 = trackView.viewports[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t          var viewport = _step7.value;\n\n\t          if (viewport.$trackLabel) {\n\t            if (0 === trackView.viewports.indexOf(viewport) && true === isVisible) {\n\t              viewport.$trackLabel.show();\n\t            } else {\n\t              viewport.$trackLabel.hide();\n\t            }\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError7 = true;\n\t        _iteratorError7 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n\t            _iterator7.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError7) {\n\t            throw _iteratorError7;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError6 = true;\n\t    _iteratorError6 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n\t        _iterator6.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError6) {\n\t        throw _iteratorError6;\n\t      }\n\t    }\n\t  }\n\t} // cursor guide\n\n\n\tBrowser.prototype.hideCursorGuide = function () {\n\t  this.cursorGuide.$guide.hide();\n\t  this.cursorGuideVisible = false;\n\t};\n\n\tBrowser.prototype.showCursorGuide = function () {\n\t  this.cursorGuide.$guide.show();\n\t  this.cursorGuideVisible = true;\n\t};\n\n\tBrowser.prototype.setCustomCursorGuideMouseHandler = function (mouseHandler) {\n\t  this.cursorGuide.customMouseHandler = mouseHandler;\n\t}; // center guide\n\n\n\tBrowser.prototype.hideCenterGuide = function () {\n\t  this.centerGuide.$container.hide();\n\t  this.isCenterGuideVisible = false;\n\t};\n\n\tBrowser.prototype.showCenterGuide = function () {\n\t  this.centerGuide.$container.show();\n\t  this.centerGuide.resize();\n\t  this.isCenterGuideVisible = true;\n\t};\n\n\tBrowser.prototype.loadTrackList = /*#__PURE__*/function () {\n\t  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(configList) {\n\t    var self, unloadableTracks, message, promises, loadedTracks, groupAutoscaleViews;\n\t    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n\t      while (1) {\n\t        switch (_context6.prev = _context6.next) {\n\t          case 0:\n\t            self = this;\n\t            unloadableTracks = configList.filter(function (config) {\n\t              return !knowHowToLoad(config);\n\t            });\n\n\t            if (unloadableTracks.length > 0) {\n\t              message = \"The following tracks could not be loaded.  Are these local files?\";\n\t              unloadableTracks.forEach(function (config) {\n\t                message += \", \" + config.name;\n\t              });\n\t              self.presentAlert(message);\n\t            }\n\n\t            _context6.prev = 3;\n\t            this.startSpinner();\n\t            promises = [];\n\t            configList.filter(knowHowToLoad).forEach(function (config) {\n\t              config.noSpinner = true;\n\t              promises.push(self.loadTrack(config));\n\t            });\n\t            _context6.next = 9;\n\t            return Promise.all(promises);\n\n\t          case 9:\n\t            loadedTracks = _context6.sent;\n\t            groupAutoscaleViews = self.trackViews.filter(function (trackView) {\n\t              return trackView.track.autoscaleGroup;\n\t            });\n\n\t            if (groupAutoscaleViews.length > 0) {\n\t              self.updateViews(self.genomicStateList[0], groupAutoscaleViews);\n\t            }\n\n\t            return _context6.abrupt(\"return\", loadedTracks);\n\n\t          case 13:\n\t            _context6.prev = 13;\n\t            this.stopSpinner();\n\t            return _context6.finish(13);\n\n\t          case 16:\n\t          case \"end\":\n\t            return _context6.stop();\n\t        }\n\t      }\n\t    }, _callee6, this, [[3,, 13, 16]]);\n\t  }));\n\n\t  return function (_x7) {\n\t    return _ref9.apply(this, arguments);\n\t  };\n\t}();\n\n\tfunction knowHowToLoad(config) {\n\t  // config might be json\n\t  if (isString(config)) {\n\t    config = JSON.parse(config);\n\t  }\n\n\t  var url = config.url;\n\t  var features = config.features;\n\t  return undefined === url || isString(url) || url instanceof File;\n\t}\n\n\tBrowser.prototype.loadROI = /*#__PURE__*/function () {\n\t  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(config) {\n\t    var _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, c;\n\n\t    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n\t      while (1) {\n\t        switch (_context7.prev = _context7.next) {\n\t          case 0:\n\t            if (!this.roi) {\n\t              this.roi = [];\n\t            }\n\n\t            if (!Array.isArray(config)) {\n\t              _context7.next = 23;\n\t              break;\n\t            }\n\n\t            _iteratorNormalCompletion8 = true;\n\t            _didIteratorError8 = false;\n\t            _iteratorError8 = undefined;\n\t            _context7.prev = 5;\n\n\t            for (_iterator8 = config[Symbol.iterator](); !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t              c = _step8.value;\n\t              this.roi.push(new ROI(c, this.genome));\n\t            }\n\n\t            _context7.next = 13;\n\t            break;\n\n\t          case 9:\n\t            _context7.prev = 9;\n\t            _context7.t0 = _context7[\"catch\"](5);\n\t            _didIteratorError8 = true;\n\t            _iteratorError8 = _context7.t0;\n\n\t          case 13:\n\t            _context7.prev = 13;\n\t            _context7.prev = 14;\n\n\t            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n\t              _iterator8.return();\n\t            }\n\n\t          case 16:\n\t            _context7.prev = 16;\n\n\t            if (!_didIteratorError8) {\n\t              _context7.next = 19;\n\t              break;\n\t            }\n\n\t            throw _iteratorError8;\n\n\t          case 19:\n\t            return _context7.finish(16);\n\n\t          case 20:\n\t            return _context7.finish(13);\n\n\t          case 21:\n\t            _context7.next = 24;\n\t            break;\n\n\t          case 23:\n\t            this.roi.push(new ROI(config, this.genome));\n\n\t          case 24:\n\t            _context7.next = 26;\n\t            return this.updateViews(undefined, undefined, true);\n\n\t          case 26:\n\t          case \"end\":\n\t            return _context7.stop();\n\t        }\n\t      }\n\t    }, _callee7, this, [[5, 9, 13, 21], [14,, 16, 20]]);\n\t  }));\n\n\t  return function (_x8) {\n\t    return _ref10.apply(this, arguments);\n\t  };\n\t}();\n\n\tBrowser.prototype.removeROI = function (roiToRemove) {\n\t  for (var i = 0; i < this.roi.length; i++) {\n\t    if (this.roi[i].name === roiToRemove.name) {\n\t      this.roi.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\n\t  var _iteratorNormalCompletion9 = true;\n\t  var _didIteratorError9 = false;\n\t  var _iteratorError9 = undefined;\n\n\t  try {\n\t    for (var _iterator9 = this.trackViews[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t      var tv = _step9.value;\n\t      tv.updateViews(true);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError9 = true;\n\t    _iteratorError9 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n\t        _iterator9.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError9) {\n\t        throw _iteratorError9;\n\t      }\n\t    }\n\t  }\n\t};\n\t/**\n\t * Return a promise to load a track\n\t *\n\t * @param config\n\t * @returns {*}\n\t */\n\n\n\tBrowser.prototype.loadTrack = /*#__PURE__*/function () {\n\t  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(config) {\n\t    var json, settings, property, newTrack, httpMessages, msg;\n\t    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n\t      while (1) {\n\t        switch (_context8.prev = _context8.next) {\n\t          case 0:\n\t            // config might be json\n\t            if (isString(config)) {\n\t              config = JSON.parse(config);\n\t            }\n\n\t            if (isString(config.url)) {\n\t              config.url = config.url.trim();\n\t            }\n\n\t            if (config.indexURL && isString(config.indexURL)) {\n\t              config.indexURL = config.indexURL.trim();\n\t            }\n\n\t            if (knowHowToLoad(config)) {\n\t              _context8.next = 6;\n\t              break;\n\t            }\n\n\t            this.presentAlert(\"The following track could not be loaded.  Is this a local file? \" + config.name);\n\t            return _context8.abrupt(\"return\");\n\n\t          case 6:\n\t            if (!(isString(config.url) && config.url.startsWith(\"https://drive.google.com\"))) {\n\t              _context8.next = 16;\n\t              break;\n\t            }\n\n\t            _context8.next = 9;\n\t            return google.getDriveFileInfo(config.url);\n\n\t          case 9:\n\t            json = _context8.sent;\n\t            config.url = \"https://www.googleapis.com/drive/v3/files/\" + json.id + \"?alt=media\";\n\n\t            if (!config.filename) {\n\t              config.filename = json.originalFileName || json.name;\n\t            }\n\n\t            if (!config.format) {\n\t              config.format = inferFileFormat(config.filename);\n\t            }\n\n\t            if (config.indexURL && config.indexURL.startsWith(\"https://drive.google.com\")) {\n\t              config.indexURL = google.driveDownloadURL(config.indexURL);\n\t            }\n\n\t            _context8.next = 17;\n\t            break;\n\n\t          case 16:\n\t            if (config.url && !config.filename) {\n\t              config.filename = getFilename(config.url);\n\t            }\n\n\t          case 17:\n\t            inferTrackTypes(config); // Set defaults if specified\n\n\t            if (this.trackDefaults && config.type) {\n\t              settings = this.trackDefaults[config.type];\n\n\t              if (settings) {\n\t                for (property in settings) {\n\t                  if (settings.hasOwnProperty(property) && config[property] === undefined) {\n\t                    config[property] = settings[property];\n\t                  }\n\t                }\n\t              }\n\t            }\n\n\t            _context8.prev = 19;\n\t            if (!config.noSpinner) this.startSpinner();\n\t            newTrack = this.createTrack(config);\n\n\t            if (!(undefined === newTrack)) {\n\t              _context8.next = 25;\n\t              break;\n\t            }\n\n\t            this.presentAlert(\"Unknown file type: \" + config.url, undefined);\n\t            return _context8.abrupt(\"return\", newTrack);\n\n\t          case 25:\n\t            // Set order field of track here.  Otherwise track order might get shuffled during asynchronous load\n\t            if (undefined === newTrack.order) {\n\t              newTrack.order = this.trackViews.length;\n\t            }\n\n\t            if (!(typeof newTrack.postInit === 'function')) {\n\t              _context8.next = 29;\n\t              break;\n\t            }\n\n\t            _context8.next = 29;\n\t            return newTrack.postInit();\n\n\t          case 29:\n\t            if (!config.sync) {\n\t              _context8.next = 34;\n\t              break;\n\t            }\n\n\t            _context8.next = 32;\n\t            return this.addTrack(newTrack);\n\n\t          case 32:\n\t            _context8.next = 35;\n\t            break;\n\n\t          case 34:\n\t            this.addTrack(newTrack);\n\n\t          case 35:\n\t            return _context8.abrupt(\"return\", newTrack);\n\n\t          case 38:\n\t            _context8.prev = 38;\n\t            _context8.t0 = _context8[\"catch\"](19);\n\t            httpMessages = {\n\t              \"401\": \"Access unauthorized\",\n\t              \"403\": \"Access forbidden\",\n\t              \"404\": \"Not found\"\n\t            };\n\t            console.error(_context8.t0);\n\t            msg = _context8.t0.message || _context8.t0.toString();\n\n\t            if (httpMessages.hasOwnProperty(msg)) {\n\t              msg = httpMessages[msg] + \": \" + config.url;\n\t            }\n\n\t            this.presentAlert(msg, undefined);\n\n\t          case 45:\n\t            _context8.prev = 45;\n\t            if (!config.noSpinner) this.stopSpinner();\n\t            return _context8.finish(45);\n\n\t          case 48:\n\t          case \"end\":\n\t            return _context8.stop();\n\t        }\n\t      }\n\t    }, _callee8, this, [[19, 38, 45, 48]]);\n\t  }));\n\n\t  return function (_x9) {\n\t    return _ref11.apply(this, arguments);\n\t  };\n\t}();\n\n\tBrowser.prototype.createTrack = function (config) {\n\t  // Lowercase format\n\t  if (config.format) {\n\t    config.format = config.format.toLowerCase();\n\t  }\n\n\t  var type = undefined === config.type ? 'unknown_type' : config.type.toLowerCase();\n\t  if (\"data\" === type) type = \"wig\"; // deprecated\n\t  // add browser to track config\n\n\t  var trackConfig = Object.assign({}, config);\n\t  trackConfig.browser = this;\n\t  var track;\n\n\t  switch (type) {\n\t    case \"annotation\":\n\t    case \"genes\":\n\t    case \"fusionjuncspan\":\n\t    case \"junctions\":\n\t    case \"splicejunctions\":\n\t    case \"snp\":\n\t      track = TrackFactory[\"feature\"](trackConfig, this);\n\t      break;\n\n\t    default:\n\t      if (TrackFactory.hasOwnProperty(type)) {\n\t        track = TrackFactory[type](trackConfig, this);\n\t      } else {\n\t        track = undefined;\n\t      }\n\n\t  }\n\n\t  if (config.roi && track) {\n\t    track.roi = [];\n\t    var _iteratorNormalCompletion10 = true;\n\t    var _didIteratorError10 = false;\n\t    var _iteratorError10 = undefined;\n\n\t    try {\n\t      for (var _iterator10 = config.roi[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t        var r = _step10.value;\n\t        track.roi.push(new ROI(r, this.genome));\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError10 = true;\n\t      _iteratorError10 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n\t          _iterator10.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError10) {\n\t          throw _iteratorError10;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  return track;\n\t};\n\t/**\n\t * Add a new track.  Each track is associated with the following DOM elements\n\t *\n\t *      leftHandGutter  - div on the left for track controls and legend\n\t *      contentDiv  - a div element wrapping all the track content.  Height can be > viewportDiv height\n\t *      viewportDiv - a div element through which the track is viewed.  This might have a vertical scrollbar\n\t *      canvas     - canvas element upon which the track is drawn.  Child of contentDiv\n\t *\n\t * The width of all elements should be equal.  Height of the viewportDiv is controlled by the user, but never\n\t * greater than the contentDiv height.   Height of contentDiv and canvas are equal, and governed by the data\n\t * loaded.\n\t *\n\t * @param track\n\t */\n\n\n\tBrowser.prototype.addTrack = /*#__PURE__*/function () {\n\t  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(track) {\n\t    var trackView;\n\t    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n\t      while (1) {\n\t        switch (_context9.prev = _context9.next) {\n\t          case 0:\n\t            trackView = new TrackView(this, $(this.trackContainerDiv), track);\n\t            this.trackViews.push(trackView);\n\t            toggleTrackLabels(this.trackViews, this.trackLabelsVisible);\n\t            this.reorderTracks();\n\n\t            if (track.autoscaleGroup) {\n\t              _context9.next = 6;\n\t              break;\n\t            }\n\n\t            return _context9.abrupt(\"return\", trackView.updateViews());\n\n\t          case 6:\n\t          case \"end\":\n\t            return _context9.stop();\n\t        }\n\t      }\n\t    }, _callee9, this);\n\t  }));\n\n\t  return function (_x10) {\n\t    return _ref12.apply(this, arguments);\n\t  };\n\t}();\n\n\tBrowser.prototype.reorderTracks = function () {\n\t  var myself = this;\n\t  this.trackViews.sort(function (a, b) {\n\t    var aOrder = a.track.order || 0;\n\t    var bOrder = b.track.order || 0;\n\t    return aOrder - bOrder;\n\t  }); // Reattach the divs to the dom in the correct order\n\n\t  $(this.trackContainerDiv).children(\"igv-track-div\").detach();\n\t  this.trackViews.forEach(function (trackView) {\n\t    myself.trackContainerDiv.appendChild(trackView.trackDiv);\n\t  });\n\t};\n\n\tBrowser.prototype.removeTrackByName = function (name) {\n\t  var copy = this.trackViews.slice();\n\t  var _iteratorNormalCompletion11 = true;\n\t  var _didIteratorError11 = false;\n\t  var _iteratorError11 = undefined;\n\n\t  try {\n\t    for (var _iterator11 = copy[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t      var trackView = _step11.value;\n\n\t      if (name === trackView.track.name) {\n\t        this.removeTrack(trackView.track);\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError11 = true;\n\t    _iteratorError11 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n\t        _iterator11.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError11) {\n\t        throw _iteratorError11;\n\t      }\n\t    }\n\t  }\n\t};\n\n\tBrowser.prototype.removeTrack = function (track) {\n\t  // Find track panel\n\t  var trackPanelRemoved;\n\n\t  for (var i = 0; i < this.trackViews.length; i++) {\n\t    if (track === this.trackViews[i].track) {\n\t      trackPanelRemoved = this.trackViews[i];\n\t      break;\n\t    }\n\t  }\n\n\t  if (trackPanelRemoved) {\n\t    this.trackViews.splice(i, 1);\n\t    $(trackPanelRemoved.trackDiv).remove();\n\t    this.fireEvent('trackremoved', [trackPanelRemoved.track]);\n\t    trackPanelRemoved.dispose();\n\t  }\n\t};\n\t/**\n\t * API function\n\t */\n\n\n\tBrowser.prototype.removeAllTracks = function (removeSequence) {\n\t  var self = this,\n\t      newTrackViews = [];\n\t  var _iteratorNormalCompletion12 = true;\n\t  var _didIteratorError12 = false;\n\t  var _iteratorError12 = undefined;\n\n\t  try {\n\t    for (var _iterator12 = this.trackViews[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t      var tv = _step12.value;\n\n\t      if ((removeSequence || tv.track.id !== 'sequence') && tv.track.id !== 'ruler') {\n\t        self.trackContainerDiv.removeChild(tv.trackDiv);\n\t        self.fireEvent('trackremoved', [tv.track]);\n\t        tv.dispose();\n\t      } else {\n\t        newTrackViews.push(tv);\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError12 = true;\n\t    _iteratorError12 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n\t        _iterator12.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError12) {\n\t        throw _iteratorError12;\n\t      }\n\t    }\n\t  }\n\n\t  this.trackViews = newTrackViews;\n\t};\n\t/**\n\t *\n\t * @param property\n\t * @param value\n\t * @returns {Array}  tracks with given property value.  e.g. findTracks(\"type\", \"annotation\")\n\t */\n\n\n\tBrowser.prototype.findTracks = function (property, value) {\n\t  var tracks = [];\n\t  this.trackViews.forEach(function (trackView) {\n\t    if (value === trackView.track[property]) {\n\t      tracks.push(trackView.track);\n\t    }\n\t  });\n\t  return tracks;\n\t};\n\n\tBrowser.prototype.setTrackHeight = function (newHeight) {\n\t  this.trackHeight = newHeight;\n\t  this.trackViews.forEach(function (trackView) {\n\t    trackView.setTrackHeight(newHeight);\n\t  });\n\t};\n\n\tBrowser.prototype.visibilityChange = function () {\n\t  this.resize();\n\t};\n\n\tBrowser.prototype.resize = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n\t  var self, viewportWidth, isWGV, resizeWillExceedChromosomeLength;\n\t  return regeneratorRuntime.wrap(function _callee10$(_context10) {\n\t    while (1) {\n\t      switch (_context10.prev = _context10.next) {\n\t        case 0:\n\t          resizeWillExceedChromosomeLength = function _ref14(genomicState) {\n\t            var pixel = self.viewportContainerWidth();\n\t            var bpp = genomicState.referenceFrame.bpPerPixel;\n\t            var bp = pixel * bpp;\n\t            return bp > genomicState.chromosome.bpLength;\n\t          };\n\n\t          self = this; // Recompute bpPerPixel -- if previous width was zero this can be infinity\n\n\t          viewportWidth = this.viewportWidth();\n\n\t          if (!(viewportWidth === 0)) {\n\t            _context10.next = 5;\n\t            break;\n\t          }\n\n\t          return _context10.abrupt(\"return\");\n\n\t        case 5:\n\t          if (this.genomicStateList && viewportWidth > 0) {\n\t            isWGV = this.isMultiLocusWholeGenomeView() || GenomeUtils.isWholeGenomeView(this.genomicStateList[0].referenceFrame);\n\n\t            if (isWGV || this.isMultiLocusMode()) {\n\t              this.centerGuide.forcedHide();\n\t            } else {\n\t              this.centerGuide.forcedShow();\n\t            }\n\n\t            this.navbarManager.navbarDidResize(this.$navigation.width(), isWGV);\n\t            this.genomicStateList.forEach(function (gstate) {\n\t              var referenceFrame = gstate.referenceFrame;\n\n\t              if (!isFinite(referenceFrame.bpPerPixel) && undefined !== referenceFrame.initialEnd) {\n\t                referenceFrame.bpPerPixel = (referenceFrame.initialEnd - referenceFrame.start) / viewportWidth;\n\t              }\n\t            });\n\t          }\n\n\t          if (this.genomicStateList && 1 === this.genomicStateList.length && resizeWillExceedChromosomeLength(this.genomicStateList[0])) {\n\t            this.search(this.genomicStateList[0].chromosome.name);\n\t          } else {\n\t            if (this.ideoPanel) this.ideoPanel.resize();\n\t            if (this.centerGuide) this.centerGuide.resize();\n\t            this.trackViews.forEach(function (trackView) {\n\t              trackView.resize();\n\t            });\n\t          }\n\n\t          if (this.genomicStateList && this.genomicStateList.length > 0) {\n\t            this.updateLocusSearchWidget(this.genomicStateList[0]);\n\t            this.windowSizePanel.updateWithGenomicState(this.genomicStateList[0]);\n\t          }\n\n\t          _context10.next = 10;\n\t          return this.updateViews();\n\n\t        case 10:\n\t        case \"end\":\n\t          return _context10.stop();\n\t      }\n\t    }\n\t  }, _callee10, this);\n\t}));\n\n\tBrowser.prototype.updateViews = /*#__PURE__*/function () {\n\t  var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(genomicState, views, force) {\n\t    var self, groupAutoscaleTracks, otherTracks, _iteratorNormalCompletion13, _didIteratorError13, _iteratorError13, _iterator13, _step13, trackView, keys, _i, _keys, group, groupTrackViews, promises, featureArray, allFeatures, dataRange, _iteratorNormalCompletion15, _didIteratorError15, _iteratorError15, _iterator15, _step15, features, _iteratorNormalCompletion16, _didIteratorError16, _iteratorError16, _iterator16, _step16, _trackView, _iteratorNormalCompletion14, _didIteratorError14, _iteratorError14, _iterator14, _step14, _trackView2;\n\n\t    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n\t      while (1) {\n\t        switch (_context11.prev = _context11.next) {\n\t          case 0:\n\t            self = this;\n\n\t            if (!views) {\n\t              views = this.trackViews;\n\t            }\n\n\t            if (!genomicState && this.genomicStateList && this.genomicStateList.length == 1) {\n\t              genomicState = this.genomicStateList[0];\n\t            }\n\n\t            if (genomicState) {\n\t              this.updateLocusSearchWidget(genomicState);\n\t              this.windowSizePanel.updateWithGenomicState(genomicState);\n\t            }\n\n\t            if (this.ideoPanel) {\n\t              this.ideoPanel.repaint();\n\t            }\n\n\t            if (this.centerGuide) {\n\t              this.centerGuide.repaint();\n\t            } // Don't autoscale while dragging.\n\n\n\t            if (!self.dragObject) {\n\t              _context11.next = 35;\n\t              break;\n\t            }\n\n\t            _iteratorNormalCompletion13 = true;\n\t            _didIteratorError13 = false;\n\t            _iteratorError13 = undefined;\n\t            _context11.prev = 10;\n\t            _iterator13 = views[Symbol.iterator]();\n\n\t          case 12:\n\t            if (_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done) {\n\t              _context11.next = 19;\n\t              break;\n\t            }\n\n\t            trackView = _step13.value;\n\t            _context11.next = 16;\n\t            return trackView.updateViews();\n\n\t          case 16:\n\t            _iteratorNormalCompletion13 = true;\n\t            _context11.next = 12;\n\t            break;\n\n\t          case 19:\n\t            _context11.next = 25;\n\t            break;\n\n\t          case 21:\n\t            _context11.prev = 21;\n\t            _context11.t0 = _context11[\"catch\"](10);\n\t            _didIteratorError13 = true;\n\t            _iteratorError13 = _context11.t0;\n\n\t          case 25:\n\t            _context11.prev = 25;\n\t            _context11.prev = 26;\n\n\t            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n\t              _iterator13.return();\n\t            }\n\n\t          case 28:\n\t            _context11.prev = 28;\n\n\t            if (!_didIteratorError13) {\n\t              _context11.next = 31;\n\t              break;\n\t            }\n\n\t            throw _iteratorError13;\n\n\t          case 31:\n\t            return _context11.finish(28);\n\n\t          case 32:\n\t            return _context11.finish(25);\n\n\t          case 33:\n\t            _context11.next = 126;\n\t            break;\n\n\t          case 35:\n\t            // Group autoscale\n\t            groupAutoscaleTracks = {};\n\t            otherTracks = [];\n\t            views.forEach(function (trackView) {\n\t              var group = trackView.track.autoscaleGroup;\n\n\t              if (group) {\n\t                var l = groupAutoscaleTracks[group];\n\n\t                if (!l) {\n\t                  l = [];\n\t                  groupAutoscaleTracks[group] = l;\n\t                }\n\n\t                l.push(trackView);\n\t              } else {\n\t                otherTracks.push(trackView);\n\t              }\n\t            });\n\t            keys = Object.keys(groupAutoscaleTracks);\n\t            _i = 0, _keys = keys;\n\n\t          case 40:\n\t            if (!(_i < _keys.length)) {\n\t              _context11.next = 100;\n\t              break;\n\t            }\n\n\t            group = _keys[_i];\n\t            groupTrackViews = groupAutoscaleTracks[group];\n\t            promises = [];\n\t            groupTrackViews.forEach(function (trackView) {\n\t              promises.push(trackView.getInViewFeatures());\n\t            });\n\t            _context11.next = 47;\n\t            return Promise.all(promises);\n\n\t          case 47:\n\t            featureArray = _context11.sent;\n\t            allFeatures = [];\n\t            _iteratorNormalCompletion15 = true;\n\t            _didIteratorError15 = false;\n\t            _iteratorError15 = undefined;\n\t            _context11.prev = 52;\n\n\t            for (_iterator15 = featureArray[Symbol.iterator](); !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n\t              features = _step15.value;\n\t              allFeatures = allFeatures.concat(features);\n\t            }\n\n\t            _context11.next = 60;\n\t            break;\n\n\t          case 56:\n\t            _context11.prev = 56;\n\t            _context11.t1 = _context11[\"catch\"](52);\n\t            _didIteratorError15 = true;\n\t            _iteratorError15 = _context11.t1;\n\n\t          case 60:\n\t            _context11.prev = 60;\n\t            _context11.prev = 61;\n\n\t            if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n\t              _iterator15.return();\n\t            }\n\n\t          case 63:\n\t            _context11.prev = 63;\n\n\t            if (!_didIteratorError15) {\n\t              _context11.next = 66;\n\t              break;\n\t            }\n\n\t            throw _iteratorError15;\n\n\t          case 66:\n\t            return _context11.finish(63);\n\n\t          case 67:\n\t            return _context11.finish(60);\n\n\t          case 68:\n\t            dataRange = doAutoscale(allFeatures);\n\t            _iteratorNormalCompletion16 = true;\n\t            _didIteratorError16 = false;\n\t            _iteratorError16 = undefined;\n\t            _context11.prev = 72;\n\t            _iterator16 = groupTrackViews[Symbol.iterator]();\n\n\t          case 74:\n\t            if (_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done) {\n\t              _context11.next = 83;\n\t              break;\n\t            }\n\n\t            _trackView = _step16.value;\n\t            _trackView.track.dataRange = dataRange;\n\t            _trackView.track.autoscale = false;\n\t            _context11.next = 80;\n\t            return _trackView.updateViews();\n\n\t          case 80:\n\t            _iteratorNormalCompletion16 = true;\n\t            _context11.next = 74;\n\t            break;\n\n\t          case 83:\n\t            _context11.next = 89;\n\t            break;\n\n\t          case 85:\n\t            _context11.prev = 85;\n\t            _context11.t2 = _context11[\"catch\"](72);\n\t            _didIteratorError16 = true;\n\t            _iteratorError16 = _context11.t2;\n\n\t          case 89:\n\t            _context11.prev = 89;\n\t            _context11.prev = 90;\n\n\t            if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n\t              _iterator16.return();\n\t            }\n\n\t          case 92:\n\t            _context11.prev = 92;\n\n\t            if (!_didIteratorError16) {\n\t              _context11.next = 95;\n\t              break;\n\t            }\n\n\t            throw _iteratorError16;\n\n\t          case 95:\n\t            return _context11.finish(92);\n\n\t          case 96:\n\t            return _context11.finish(89);\n\n\t          case 97:\n\t            _i++;\n\t            _context11.next = 40;\n\t            break;\n\n\t          case 100:\n\t            _iteratorNormalCompletion14 = true;\n\t            _didIteratorError14 = false;\n\t            _iteratorError14 = undefined;\n\t            _context11.prev = 103;\n\t            _iterator14 = otherTracks[Symbol.iterator]();\n\n\t          case 105:\n\t            if (_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done) {\n\t              _context11.next = 112;\n\t              break;\n\t            }\n\n\t            _trackView2 = _step14.value;\n\t            _context11.next = 109;\n\t            return _trackView2.updateViews(force);\n\n\t          case 109:\n\t            _iteratorNormalCompletion14 = true;\n\t            _context11.next = 105;\n\t            break;\n\n\t          case 112:\n\t            _context11.next = 118;\n\t            break;\n\n\t          case 114:\n\t            _context11.prev = 114;\n\t            _context11.t3 = _context11[\"catch\"](103);\n\t            _didIteratorError14 = true;\n\t            _iteratorError14 = _context11.t3;\n\n\t          case 118:\n\t            _context11.prev = 118;\n\t            _context11.prev = 119;\n\n\t            if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n\t              _iterator14.return();\n\t            }\n\n\t          case 121:\n\t            _context11.prev = 121;\n\n\t            if (!_didIteratorError14) {\n\t              _context11.next = 124;\n\t              break;\n\t            }\n\n\t            throw _iteratorError14;\n\n\t          case 124:\n\t            return _context11.finish(121);\n\n\t          case 125:\n\t            return _context11.finish(118);\n\n\t          case 126:\n\t          case \"end\":\n\t            return _context11.stop();\n\t        }\n\t      }\n\t    }, _callee11, this, [[10, 21, 25, 33], [26,, 28, 32], [52, 56, 60, 68], [61,, 63, 67], [72, 85, 89, 97], [90,, 92, 96], [103, 114, 118, 126], [119,, 121, 125]]);\n\t  }));\n\n\t  return function (_x11, _x12, _x13) {\n\t    return _ref15.apply(this, arguments);\n\t  };\n\t}();\n\n\tBrowser.prototype.loadInProgress = function () {\n\t  var i;\n\n\t  for (i = 0; i < this.trackViews.length; i++) {\n\t    if (this.trackViews[i].isLoading()) return true;\n\t  }\n\n\t  return false;\n\t};\n\n\tBrowser.prototype.updateLocusSearchWidget = function (genomicState) {\n\t  var self = this,\n\t      referenceFrame,\n\t      ss,\n\t      ee,\n\t      str,\n\t      end,\n\t      chromosome;\n\n\t  if (this.rulerTrack) {\n\t    this.rulerTrack.updateLocusLabel();\n\t  }\n\n\t  if (0 === this.genomicStateList.indexOf(genomicState) && 1 === this.genomicStateList.length) {\n\t    if (genomicState.locusSearchString && 'all' === genomicState.locusSearchString.toLowerCase()) {\n\t      this.$searchInput.val(genomicState.locusSearchString);\n\t      this.chromosomeSelectWidget.$select.val('all');\n\t    } else {\n\t      referenceFrame = genomicState.referenceFrame;\n\t      this.chromosomeSelectWidget.$select.val(referenceFrame.chrName);\n\n\t      if (this.$searchInput) {\n\t        end = referenceFrame.start + referenceFrame.bpPerPixel * (self.viewportContainerWidth() / this.genomicStateList.length);\n\n\t        if (this.genome) {\n\t          chromosome = this.genome.getChromosome(referenceFrame.chrName);\n\n\t          if (chromosome) {\n\t            end = Math.min(end, chromosome.bpLength);\n\t          }\n\t        }\n\n\t        ss = numberFormatter(Math.floor(referenceFrame.start + 1));\n\t        ee = numberFormatter(Math.floor(end));\n\t        str = referenceFrame.chrName + \":\" + ss + \"-\" + ee;\n\t        this.$searchInput.val(str);\n\t      }\n\n\t      this.fireEvent('locuschange', [{\n\t        chr: referenceFrame.chrName,\n\t        start: ss,\n\t        end: ee,\n\t        label: str\n\t      }]);\n\t    }\n\t  } else {\n\t    this.$searchInput.val('');\n\t    this.chromosomeSelectWidget.$select.val('');\n\t  }\n\t};\n\t/**\n\t * Return the visible width of a track.  All tracks should have the same width.\n\t */\n\n\n\tBrowser.prototype.viewportContainerWidth = function () {\n\t  if (this.trackViews && this.trackViews.length > 0) {\n\t    return this.trackViews[0].$viewportContainer.width();\n\t  } else {\n\t    return syntheticViewportContainerWidth.call(this);\n\t  }\n\n\t  function syntheticViewportContainerWidth() {\n\t    var $track, $viewportContainer, width;\n\t    $track = $('<div class=\"igv-track-div\">');\n\t    $(this.trackContainerDiv).append($track);\n\t    $viewportContainer = $('<div class=\"igv-viewport-container\">');\n\t    $track.append($viewportContainer);\n\t    width = $viewportContainer.width(); // discard temporary DOM elements\n\n\t    $track.remove();\n\t    return width;\n\t  }\n\t};\n\n\tBrowser.prototype.viewportWidth = function () {\n\t  var cw, vw;\n\t  cw = this.viewportContainerWidth();\n\t  vw = undefined === this.genomicStateList || 1 === this.genomicStateList.length ? cw : Math.round(cw / this.genomicStateList.length);\n\t  return vw;\n\t};\n\n\tBrowser.prototype.minimumBases = function () {\n\t  return this.config.minimumBases;\n\t};\n\n\tBrowser.prototype.updateZoomSlider = function ($slider) {\n\t  var viewport = this.trackViews[0].viewports[0];\n\t  var referenceFrame = viewport.genomicState.referenceFrame;\n\t  var window = viewport.$viewport.width() * referenceFrame.bpPerPixel;\n\t  var maxWindow = referenceFrame.getChromosome().bpLength;\n\t  var minWindow = this.minimumBases();\n\t  var v = (maxWindow - window) / (maxWindow - minWindow);\n\t  var value = Math.round(100 * v);\n\t  $slider.val(value);\n\t};\n\n\tBrowser.prototype.zoom = function (scaleFactor) {\n\t  this.zoomWithScaleFactor(scaleFactor);\n\t}; // Zoom in by a factor of 2, keeping the same center location\n\n\n\tBrowser.prototype.zoomIn = function () {\n\t  this.zoomWithScaleFactor(0.5);\n\t}; // Zoom out by a factor of 2, keeping the same center location if possible\n\n\n\tBrowser.prototype.zoomOut = function () {\n\t  this.zoomWithScaleFactor(2.0);\n\t};\n\n\tBrowser.prototype.zoomWithRangePercentage = function (percentage) {\n\t  var _this = this;\n\n\t  if (this.loadInProgress()) {\n\t    return;\n\t  }\n\n\t  var self = this;\n\t  this.trackViews[0].viewports.forEach(function (viewport) {\n\t    var referenceFrame = viewport.genomicState.referenceFrame;\n\t    var centerBP = referenceFrame.start + referenceFrame.toBP(viewport.$viewport.width() / 2.0);\n\t    var chromosome = referenceFrame.getChromosome();\n\t    var bpp = lerp((chromosome.bpLength - chromosome.bpStart) / viewport.$viewport.width(), _this.minimumBases() / viewport.$viewport.width(), percentage);\n\t    var viewportWidthBP = bpp * viewport.$viewport.width();\n\t    referenceFrame.start = centerBP - viewportWidthBP / 2;\n\t    referenceFrame.bpPerPixel = bpp;\n\t    self.updateViews(viewport.genomicState);\n\n\t    function lerp(v0, v1, t) {\n\t      return (1 - t) * v0 + t * v1;\n\t    }\n\t  });\n\t};\n\n\tBrowser.prototype.zoomWithScaleFactor = function (scaleFactor, centerBPOrUndefined, viewportOrUndefined) {\n\t  var viewports = viewportOrUndefined ? [viewportOrUndefined] : this.trackViews[0].viewports;\n\t  var _iteratorNormalCompletion17 = true;\n\t  var _didIteratorError17 = false;\n\t  var _iteratorError17 = undefined;\n\n\t  try {\n\t    for (var _iterator17 = viewports[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n\t      var viewport = _step17.value;\n\t      var referenceFrame = viewport.genomicState.referenceFrame;\n\t      var chromosome = referenceFrame.getChromosome();\n\t      var start = referenceFrame.start;\n\t      var bpPerPixel = referenceFrame.bpPerPixel;\n\t      var chromosomeLengthBP = chromosome.bpLength - chromosome.bpStart;\n\t      var bppThreshold = scaleFactor < 1.0 ? this.minimumBases() / viewport.$viewport.width() : chromosomeLengthBP / viewport.$viewport.width();\n\t      var centerBP = undefined === centerBPOrUndefined ? referenceFrame.start + referenceFrame.toBP(viewport.$viewport.width() / 2.0) : centerBPOrUndefined;\n\t      var bpp = void 0;\n\n\t      if (scaleFactor < 1.0) {\n\t        bpp = Math.max(referenceFrame.bpPerPixel * scaleFactor, bppThreshold);\n\t      } else {\n\t        bpp = Math.min(referenceFrame.bpPerPixel * scaleFactor, bppThreshold);\n\t      }\n\n\t      var viewportWidthBP = bpp * viewport.$viewport.width();\n\t      referenceFrame.start = centerBP - viewportWidthBP / 2;\n\t      referenceFrame.bpPerPixel = bpp;\n\t      referenceFrame.clamp(viewport.$viewport.width());\n\t      var viewChanged = start !== referenceFrame.start || bpPerPixel !== referenceFrame.bpPerPixel;\n\n\t      if (viewChanged) {\n\t        this.updateViews(viewport.genomicState);\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError17 = true;\n\t    _iteratorError17 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n\t        _iterator17.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError17) {\n\t        throw _iteratorError17;\n\t      }\n\t    }\n\t  }\n\t};\n\n\tBrowser.prototype.presentSplitScreenMultiLocusPanel = function (alignment, genomicState) {\n\t  var genome = this.genome;\n\t  var referenceFrame, viewportWidth, leftMatePairGenomicState, rightMatePairGenomicState; // account for reduced viewport width as a result of adding right mate pair panel\n\n\t  viewportWidth = this.viewportContainerWidth() / (1 + this.genomicStateList.length); // adjust left mate pair reference frame\n\n\t  leftMatePairGenomicState = genomicState;\n\t  referenceFrame = leftMatePairGenomicState.referenceFrame;\n\t  var chrName = genome.getChromosomeName(alignment.chr);\n\t  leftMatePairGenomicState.referenceFrame = createReferenceFrame(chrName, referenceFrame.bpPerPixel, viewportWidth, alignment.start, alignment.lengthOnRef); // create right mate pair reference frame\n\n\t  var mateChrName = genome.getChromosomeName(alignment.mate.chr);\n\t  rightMatePairGenomicState = {};\n\t  rightMatePairGenomicState.chromosome = leftMatePairGenomicState.chromosome;\n\t  rightMatePairGenomicState.referenceFrame = createReferenceFrame(mateChrName, referenceFrame.bpPerPixel, viewportWidth, alignment.mate.position, alignment.lengthOnRef); // add right mate panel beside left mate panel\n\n\t  this.addMultiLocusPanelWithGenomicStateAtIndex(rightMatePairGenomicState, 1 + this.genomicStateList.indexOf(leftMatePairGenomicState), viewportWidth);\n\n\t  function createReferenceFrame(chromosomeName, bpp, pixels, alignmentStart, alignmentLength) {\n\t    var ss, ee, alignmentEE, alignmentCC;\n\t    alignmentEE = alignmentStart + alignmentLength;\n\t    alignmentCC = (alignmentStart + alignmentEE) / 2;\n\t    ss = alignmentCC - bpp * (pixels / 2);\n\t    ee = ss + bpp * pixels;\n\t    return new ReferenceFrame(genome, chromosomeName, ss, ee, bpp);\n\t  }\n\t};\n\n\tBrowser.prototype.selectMultiLocusPanelWithGenomicState = function (selectedGenomicState) {\n\t  var self = this,\n\t      removable;\n\t  removable = this.genomicStateList.filter(function (gs) {\n\t    return selectedGenomicState !== gs;\n\t  });\n\t  removable.forEach(function (gs) {\n\t    self.removeMultiLocusPanelWithGenomicState(gs, false);\n\t  });\n\t  this.resize();\n\t};\n\n\tBrowser.prototype.removeMultiLocusPanelWithGenomicState = function (genomicState, doResize) {\n\t  var genome = this.genome;\n\t  var self = this,\n\t      index,\n\t      viewportContainerWidth,\n\t      previousGenomicStateListLength;\n\t  index = this.genomicStateList.indexOf(genomicState);\n\n\t  if (this.ideoPanel) {\n\t    this.ideoPanel.removePanelWithLocusIndex(index);\n\t  }\n\n\t  this.trackViews.forEach(function (trackView) {\n\t    trackView.removeViewportWithLocusIndex(index);\n\t  });\n\t  viewportContainerWidth = this.viewportContainerWidth();\n\t  previousGenomicStateListLength = this.genomicStateList.length;\n\t  this.genomicStateList.splice(index, 1);\n\t  this.genomicStateList.forEach(function (gs, i) {\n\t    var ee = gs.referenceFrame.calculateEnd(viewportContainerWidth / previousGenomicStateListLength);\n\t    var bpp = gs.referenceFrame.calculateBPP(ee, viewportContainerWidth / self.genomicStateList.length);\n\t    self.genomicStateList[i].referenceFrame = new ReferenceFrame(genome, gs.chromosome.name, gs.referenceFrame.start, ee, bpp);\n\t  });\n\t  this.updateUIWithGenomicStateListChange(this.genomicStateList);\n\n\t  if (true === doResize) {\n\t    this.resize();\n\t  }\n\t};\n\n\tBrowser.prototype.addMultiLocusPanelWithGenomicStateAtIndex = function (genomicState, index, viewportWidth) {\n\t  if (index === this.genomicStateList.length) {\n\t    this.genomicStateList.push(genomicState);\n\n\t    if (this.ideoPanel) {\n\t      this.ideoPanel.addPanelWithGenomicStateAtIndex(genomicState, index, viewportWidth);\n\t    }\n\n\t    this.trackViews.forEach(function (trackView) {\n\t      var viewport;\n\t      viewport = new ViewPort(trackView, trackView.$viewportContainer, genomicState, viewportWidth);\n\t      trackView.viewports.push(viewport);\n\t      trackView.decorateViewports();\n\t      trackView.configureViewportContainer(trackView.$viewportContainer, trackView.viewports);\n\t    });\n\t  } else {\n\t    this.genomicStateList.splice(index, 0, genomicState);\n\n\t    if (this.ideoPanel) {\n\t      this.ideoPanel.addPanelWithGenomicStateAtIndex(genomicState, index, viewportWidth);\n\t    }\n\n\t    this.trackViews.forEach(function (trackView) {\n\t      var viewport, $detached;\n\t      viewport = new ViewPort(trackView, trackView.$viewportContainer, genomicState, viewportWidth);\n\t      trackView.viewports.splice(index, 0, viewport); // The viewport constructor always appends. Reorder here.\n\n\t      $detached = viewport.$viewport.detach();\n\t      $detached.insertAfter(trackView.viewports[index - 1].$viewport);\n\t      trackView.decorateViewports();\n\t      trackView.configureViewportContainer(trackView.$viewportContainer, trackView.viewports);\n\t    });\n\t  }\n\n\t  if (this.rulerTrack) {\n\t    this.rulerTrack.updateLocusLabel();\n\t  }\n\n\t  this.updateUIWithGenomicStateListChange(this.genomicStateList);\n\t  this.resize();\n\t};\n\n\tBrowser.prototype.emptyViewportContainers = function () {\n\t  var _iteratorNormalCompletion18 = true;\n\t  var _didIteratorError18 = false;\n\t  var _iteratorError18 = undefined;\n\n\t  try {\n\t    for (var _iterator18 = this.trackViews[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n\t      var trackView = _step18.value;\n\n\t      if (trackView.$outerScroll) {\n\t        trackView.$outerScroll.remove();\n\t      }\n\n\t      var _iteratorNormalCompletion19 = true;\n\t      var _didIteratorError19 = false;\n\t      var _iteratorError19 = undefined;\n\n\t      try {\n\t        for (var _iterator19 = trackView.viewports[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n\t          var viewport = _step19.value;\n\n\t          if (viewport.rulerSweeper) {\n\t            viewport.rulerSweeper.$rulerSweeper.remove();\n\t          }\n\n\t          if (viewport.popover) {\n\t            viewport.popover.$popover.off();\n\t            viewport.popover.$popover.empty();\n\t            viewport.popover.$popover.remove();\n\t          }\n\n\t          viewport.$viewport.remove();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError19 = true;\n\t        _iteratorError19 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion19 && _iterator19.return != null) {\n\t            _iterator19.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError19) {\n\t            throw _iteratorError19;\n\t          }\n\t        }\n\t      }\n\n\t      delete trackView.viewports;\n\t      trackView.viewports = [];\n\t      delete trackView.scrollbar;\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError18 = true;\n\t    _iteratorError18 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion18 && _iterator18.return != null) {\n\t        _iterator18.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError18) {\n\t        throw _iteratorError18;\n\t      }\n\t    }\n\t  }\n\n\t  this.$contentHeader.empty();\n\t};\n\n\tBrowser.prototype.buildViewportsWithGenomicStateList = function (genomicStateList) {\n\t  var width;\n\t  width = this.viewportContainerWidth() / this.genomicStateList.length;\n\t  this.trackViews.forEach(function (trackView) {\n\t    genomicStateList.forEach(function (genomicState) {\n\t      var viewport;\n\t      viewport = new ViewPort(trackView, trackView.$viewportContainer, genomicState, width);\n\t      trackView.viewports.push(viewport);\n\t    });\n\t    trackView.decorateViewports();\n\t    trackView.configureViewportContainer(trackView.$viewportContainer, trackView.viewports);\n\t  });\n\t};\n\n\tBrowser.prototype.getViewportWithGUID = function (guid) {\n\t  var result = undefined;\n\t  var _iteratorNormalCompletion20 = true;\n\t  var _didIteratorError20 = false;\n\t  var _iteratorError20 = undefined;\n\n\t  try {\n\t    for (var _iterator20 = this.trackViews[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n\t      var trackView = _step20.value;\n\t      var _iteratorNormalCompletion21 = true;\n\t      var _didIteratorError21 = false;\n\t      var _iteratorError21 = undefined;\n\n\t      try {\n\t        for (var _iterator21 = trackView.viewports[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n\t          var viewport = _step21.value;\n\n\t          if (guid === viewport.guid) {\n\t            result = viewport;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError21 = true;\n\t        _iteratorError21 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion21 && _iterator21.return != null) {\n\t            _iterator21.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError21) {\n\t            throw _iteratorError21;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError20 = true;\n\t    _iteratorError20 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion20 && _iterator20.return != null) {\n\t        _iterator20.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError20) {\n\t        throw _iteratorError20;\n\t      }\n\t    }\n\t  }\n\n\t  return result;\n\t};\n\n\tBrowser.prototype.goto = function (chrName, start, end) {\n\t  return this.search(chrName + \":\" + start + \"-\" + end);\n\t};\n\n\tBrowser.prototype.search = /*#__PURE__*/function () {\n\t  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(string, init) {\n\t    var self, genome, loci, genomicStateList, _iteratorNormalCompletion22, _didIteratorError22, _iteratorError22, _iterator22, _step22, gs, panelWidth, createGenomicStateList, _createGenomicStateList;\n\n\t    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n\t      while (1) {\n\t        switch (_context14.prev = _context14.next) {\n\t          case 0:\n\t            _createGenomicStateList = function _ref23() {\n\t              _createGenomicStateList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(loci) {\n\t                var searchConfig, result, _iteratorNormalCompletion23, _didIteratorError23, _iteratorError23, _iterator23, _step23, locus, genomicState, feature, chromosome, response, _genomicState, appendReferenceFrames, searchWebService, _searchWebService, processSearchResult, isLocusChrNameStartEnd;\n\n\t                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n\t                  while (1) {\n\t                    switch (_context13.prev = _context13.next) {\n\t                      case 0:\n\t                        isLocusChrNameStartEnd = function _ref21(locus, genome) {\n\t                          var a, b, numeric, chr, chromosome, locusObject;\n\t                          locusObject = {};\n\t                          a = locus.split(':');\n\t                          chr = a[0];\n\t                          chromosome = genome.getChromosome(chr); // Map chr to official name from (possible) alias\n\n\t                          if (!chromosome) {\n\t                            return undefined; // Unknown chromosome\n\t                          }\n\n\t                          locusObject.chromosome = chromosome; // Map chr to offical name from possible alias\n\n\t                          locusObject.start = 0;\n\t                          locusObject.end = chromosome.bpLength; // if just a chromosome name we are done\n\n\t                          if (1 === a.length) {\n\t                            return locusObject;\n\t                          } else {\n\t                            b = a[1].split('-');\n\n\t                            if (b.length > 2) {\n\t                              return undefined; // Not a locus string\n\t                            } else {\n\t                              locusObject.start = locusObject.end = undefined;\n\t                              numeric = b[0].replace(/,/g, '');\n\n\t                              if (isNaN(numeric)) {\n\t                                return undefined;\n\t                              }\n\n\t                              locusObject.start = parseInt(numeric, 10) - 1;\n\n\t                              if (isNaN(locusObject.start)) {\n\t                                return undefined;\n\t                              }\n\n\t                              if (2 === b.length) {\n\t                                numeric = b[1].replace(/,/g, '');\n\n\t                                if (isNaN(numeric)) {\n\t                                  return false;\n\t                                }\n\n\t                                locusObject.end = parseInt(numeric, 10);\n\t                              }\n\t                            }\n\n\t                            validateLocusExtent(locusObject.chromosome.bpLength, locusObject, self.minimumBases());\n\t                            return locusObject;\n\t                          }\n\t                        };\n\n\t                        processSearchResult = function _ref20(searchServiceResponse, locusSearchString) {\n\t                          var results;\n\n\t                          if ('plain' === searchConfig.type) {\n\t                            results = parseSearchResults(searchServiceResponse);\n\t                          } else {\n\t                            results = JSON.parse(searchServiceResponse);\n\t                          }\n\n\t                          if (searchConfig.resultsField) {\n\t                            results = results[searchConfig.resultsField];\n\t                          }\n\n\t                          if (!results || 0 === results.length) {\n\t                            return undefined;\n\t                          } else {\n\t                            // Ingoring all but first result for now\n\t                            // TODO -- present all and let user select if results.length > 1\n\t                            var _result = results[0];\n\n\t                            if (!(_result.hasOwnProperty(searchConfig.chromosomeField) && _result.hasOwnProperty(searchConfig.startField))) {\n\t                              return undefined;\n\t                            }\n\n\t                            var chr = _result[searchConfig.chromosomeField];\n\t                            var start = _result[searchConfig.startField] - searchConfig.coords;\n\t                            var end = _result[searchConfig.endField];\n\n\t                            if (undefined === end) {\n\t                              end = start + 1;\n\t                            }\n\n\t                            if (self.flanking) {\n\t                              start = Math.max(0, start - self.flanking);\n\t                              end += self.flanking;\n\t                            }\n\n\t                            var geneNameLocusObject = Object.assign({}, _result);\n\t                            geneNameLocusObject.chromosome = self.genome.getChromosome(chr);\n\t                            geneNameLocusObject.start = start;\n\t                            geneNameLocusObject.end = end;\n\t                            geneNameLocusObject.locusSearchString = locusSearchString;\n\t                            geneNameLocusObject.selection = new GtexSelection(_result[searchConfig.geneField], _result[searchConfig.snpField]);\n\t                            return geneNameLocusObject;\n\t                          }\n\t                          /**\n\t                           * Parse the igv line-oriented (non json) search results.\n\t                           * Example\n\t                           *    EGFR    chr7:55,086,724-55,275,031    refseq\n\t                           *\n\t                           * @param data\n\t                           */\n\n\n\t                          function parseSearchResults(data) {\n\t                            var linesTrimmed = [];\n\t                            var results = [];\n\t                            var lines = splitLines(data);\n\t                            lines.forEach(function (item) {\n\t                              if (\"\" === item) ; else {\n\t                                linesTrimmed.push(item);\n\t                              }\n\t                            });\n\t                            linesTrimmed.forEach(function (line) {\n\t                              var tokens = line.split(\"\\t\"),\n\t                                  source,\n\t                                  locusTokens,\n\t                                  rangeTokens,\n\t                                  obj;\n\n\t                              if (tokens.length >= 3) {\n\t                                locusTokens = tokens[1].split(\":\");\n\t                                rangeTokens = locusTokens[1].split(\"-\");\n\t                                source = tokens[2].trim();\n\t                                obj = {\n\t                                  gene: tokens[0],\n\t                                  chromosome: self.genome.getChromosomeName(locusTokens[0].trim()),\n\t                                  start: parseInt(rangeTokens[0].replace(/,/g, '')),\n\t                                  end: parseInt(rangeTokens[1].replace(/,/g, '')),\n\t                                  type: \"gtex\" === source ? \"snp\" : \"gene\"\n\t                                };\n\t                                results.push(obj);\n\t                              }\n\t                            });\n\t                            return results;\n\t                          }\n\t                        };\n\n\t                        _searchWebService = function _ref19() {\n\t                          _searchWebService = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(locus) {\n\t                            var path, result;\n\t                            return regeneratorRuntime.wrap(function _callee12$(_context12) {\n\t                              while (1) {\n\t                                switch (_context12.prev = _context12.next) {\n\t                                  case 0:\n\t                                    path = searchConfig.url.replace(\"$FEATURE$\", locus.toUpperCase());\n\n\t                                    if (path.indexOf(\"$GENOME$\") > -1) {\n\t                                      path = path.replace(\"$GENOME$\", self.genome.id ? self.genome.id : \"hg19\");\n\t                                    }\n\n\t                                    _context12.next = 4;\n\t                                    return igvxhr.loadString(path);\n\n\t                                  case 4:\n\t                                    result = _context12.sent;\n\t                                    return _context12.abrupt(\"return\", {\n\t                                      result: result,\n\t                                      locusSearchString: locus\n\t                                    });\n\n\t                                  case 6:\n\t                                  case \"end\":\n\t                                    return _context12.stop();\n\t                                }\n\t                              }\n\t                            }, _callee12);\n\t                          }));\n\t                          return _searchWebService.apply(this, arguments);\n\t                        };\n\n\t                        searchWebService = function _ref18(_x17) {\n\t                          return _searchWebService.apply(this, arguments);\n\t                        };\n\n\t                        appendReferenceFrames = function _ref17(genomicStateList) {\n\t                          var viewportWidth = self.viewportContainerWidth() / genomicStateList.length;\n\t                          genomicStateList.forEach(function (gs) {\n\t                            gs.referenceFrame = new ReferenceFrame(genome, gs.chromosome.name, gs.start, gs.end, (gs.end - gs.start) / viewportWidth);\n\t                          });\n\t                          return genomicStateList;\n\t                        };\n\n\t                        searchConfig = self.searchConfig;\n\t                        result = []; // Try locus string first  (e.g.  chr1:100-200)\n\n\t                        _iteratorNormalCompletion23 = true;\n\t                        _didIteratorError23 = false;\n\t                        _iteratorError23 = undefined;\n\t                        _context13.prev = 10;\n\t                        _iterator23 = loci[Symbol.iterator]();\n\n\t                      case 12:\n\t                        if (_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done) {\n\t                          _context13.next = 35;\n\t                          break;\n\t                        }\n\n\t                        locus = _step23.value;\n\t                        genomicState = isLocusChrNameStartEnd(locus, self.genome);\n\n\t                        if (!genomicState) {\n\t                          _context13.next = 20;\n\t                          break;\n\t                        }\n\n\t                        genomicState.locusSearchString = locus;\n\t                        result.push(genomicState);\n\t                        _context13.next = 31;\n\t                        break;\n\n\t                      case 20:\n\t                        // Try local feature cache.    This is created from feature tracks tagged \"searchable\"\n\t                        feature = self.featureDB[locus.toUpperCase()];\n\n\t                        if (!feature) {\n\t                          _context13.next = 26;\n\t                          break;\n\t                        }\n\n\t                        chromosome = self.genome.getChromosome(feature.chr);\n\n\t                        if (chromosome) {\n\t                          genomicState = {\n\t                            chromosome: chromosome,\n\t                            start: feature.start,\n\t                            end: feature.end,\n\t                            locusSearchString: locus\n\t                          };\n\t                          validateLocusExtent(genomicState.chromosome.bpLength, genomicState, self.minimumBases());\n\t                          result.push(genomicState);\n\t                        }\n\n\t                        _context13.next = 31;\n\t                        break;\n\n\t                      case 26:\n\t                        _context13.next = 28;\n\t                        return searchWebService(locus);\n\n\t                      case 28:\n\t                        response = _context13.sent;\n\t                        _genomicState = processSearchResult(response.result, response.locusSearchString);\n\n\t                        if (_genomicState) {\n\t                          result.push(_genomicState);\n\t                        }\n\n\t                      case 31:\n\t                        appendReferenceFrames(result);\n\n\t                      case 32:\n\t                        _iteratorNormalCompletion23 = true;\n\t                        _context13.next = 12;\n\t                        break;\n\n\t                      case 35:\n\t                        _context13.next = 41;\n\t                        break;\n\n\t                      case 37:\n\t                        _context13.prev = 37;\n\t                        _context13.t0 = _context13[\"catch\"](10);\n\t                        _didIteratorError23 = true;\n\t                        _iteratorError23 = _context13.t0;\n\n\t                      case 41:\n\t                        _context13.prev = 41;\n\t                        _context13.prev = 42;\n\n\t                        if (!_iteratorNormalCompletion23 && _iterator23.return != null) {\n\t                          _iterator23.return();\n\t                        }\n\n\t                      case 44:\n\t                        _context13.prev = 44;\n\n\t                        if (!_didIteratorError23) {\n\t                          _context13.next = 47;\n\t                          break;\n\t                        }\n\n\t                        throw _iteratorError23;\n\n\t                      case 47:\n\t                        return _context13.finish(44);\n\n\t                      case 48:\n\t                        return _context13.finish(41);\n\n\t                      case 49:\n\t                        return _context13.abrupt(\"return\", result);\n\n\t                      case 50:\n\t                      case \"end\":\n\t                        return _context13.stop();\n\t                    }\n\t                  }\n\t                }, _callee13, null, [[10, 37, 41, 49], [42,, 44, 48]]);\n\t              }));\n\t              return _createGenomicStateList.apply(this, arguments);\n\t            };\n\n\t            createGenomicStateList = function _ref22(_x16) {\n\t              return _createGenomicStateList.apply(this, arguments);\n\t            };\n\n\t            self = this;\n\t            genome = this.genome;\n\n\t            if (string && string.trim().toLowerCase() === \"all\" || string === \"*\") {\n\t              string = \"all\";\n\t            }\n\n\t            loci = string.split(' ');\n\t            _context14.next = 8;\n\t            return createGenomicStateList(loci);\n\n\t          case 8:\n\t            genomicStateList = _context14.sent;\n\n\t            if (!(!genomicStateList || genomicStateList.length === 0)) {\n\t              _context14.next = 13;\n\t              break;\n\t            }\n\n\t            _context14.next = 12;\n\t            return createGenomicStateList([string]);\n\n\t          case 12:\n\t            genomicStateList = _context14.sent;\n\n\t          case 13:\n\t            if (!(genomicStateList.length > 0)) {\n\t              _context14.next = 38;\n\t              break;\n\t            }\n\n\t            this.emptyViewportContainers();\n\t            this.genomicStateList = genomicStateList;\n\t            this.buildViewportsWithGenomicStateList(genomicStateList); // assign ids to the state objects\n\n\t            _iteratorNormalCompletion22 = true;\n\t            _didIteratorError22 = false;\n\t            _iteratorError22 = undefined;\n\t            _context14.prev = 20;\n\n\t            for (_iterator22 = genomicStateList[Symbol.iterator](); !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n\t              gs = _step22.value;\n\t              gs.id = guid();\n\t            }\n\n\t            _context14.next = 28;\n\t            break;\n\n\t          case 24:\n\t            _context14.prev = 24;\n\t            _context14.t0 = _context14[\"catch\"](20);\n\t            _didIteratorError22 = true;\n\t            _iteratorError22 = _context14.t0;\n\n\t          case 28:\n\t            _context14.prev = 28;\n\t            _context14.prev = 29;\n\n\t            if (!_iteratorNormalCompletion22 && _iterator22.return != null) {\n\t              _iterator22.return();\n\t            }\n\n\t          case 31:\n\t            _context14.prev = 31;\n\n\t            if (!_didIteratorError22) {\n\t              _context14.next = 34;\n\t              break;\n\t            }\n\n\t            throw _iteratorError22;\n\n\t          case 34:\n\t            return _context14.finish(31);\n\n\t          case 35:\n\t            return _context14.finish(28);\n\n\t          case 36:\n\t            _context14.next = 39;\n\t            break;\n\n\t          case 38:\n\t            throw new Error('Unrecognized locus ' + string);\n\n\t          case 39:\n\t            if (this.ideoPanel) {\n\t              this.ideoPanel.discardPanels();\n\t              panelWidth = self.viewportContainerWidth() / genomicStateList.length;\n\t              this.ideoPanel.buildPanels(this.$contentHeader, panelWidth);\n\t            }\n\n\t            this.updateUIWithGenomicStateListChange(genomicStateList);\n\n\t            if (!init) {\n\t              this.updateViews();\n\t            }\n\n\t            return _context14.abrupt(\"return\", genomicStateList);\n\n\t          case 43:\n\t          case \"end\":\n\t            return _context14.stop();\n\t        }\n\t      }\n\t    }, _callee14, this, [[20, 24, 28, 36], [29,, 31, 35]]);\n\t  }));\n\n\t  return function (_x14, _x15) {\n\t    return _ref16.apply(this, arguments);\n\t  };\n\t}();\n\n\tBrowser.prototype.loadSampleInformation = /*#__PURE__*/function () {\n\t  var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(url) {\n\t    var name, ext;\n\t    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n\t      while (1) {\n\t        switch (_context15.prev = _context15.next) {\n\t          case 0:\n\t            name = url;\n\n\t            if (url instanceof File) {\n\t              name = url.name;\n\t            }\n\n\t            ext = name.substr(name.lastIndexOf('.') + 1);\n\n\t            if (!(ext === 'fam')) {\n\t              _context15.next = 7;\n\t              break;\n\t            }\n\n\t            _context15.next = 6;\n\t            return loadPlinkFile(url);\n\n\t          case 6:\n\t            this.sampleInformation = _context15.sent;\n\n\t          case 7:\n\t          case \"end\":\n\t            return _context15.stop();\n\t        }\n\t      }\n\t    }, _callee15, this);\n\t  }));\n\n\t  return function (_x18) {\n\t    return _ref24.apply(this, arguments);\n\t  };\n\t}(); // EVENTS\n\n\n\tBrowser.prototype.on = function (eventName, fn) {\n\t  if (!this.eventHandlers[eventName]) {\n\t    this.eventHandlers[eventName] = [];\n\t  }\n\n\t  this.eventHandlers[eventName].push(fn);\n\t};\n\t/**\n\t * @deprecated use off()\n\t * @param eventName\n\t * @param fn\n\t */\n\n\n\tBrowser.prototype.un = function (eventName, fn) {\n\t  if (!this.eventHandlers[eventName]) {\n\t    return;\n\t  }\n\n\t  var callbackIndex = this.eventHandlers[eventName].indexOf(fn);\n\n\t  if (callbackIndex !== -1) {\n\t    this.eventHandlers[eventName].splice(callbackIndex, 1);\n\t  }\n\t};\n\n\tBrowser.prototype.off = function (eventName, fn) {\n\t  if (!eventName) {\n\t    this.eventHandlers = {}; // Remove all event handlers\n\t  } else if (!fn) {\n\t    this.eventHandlers[eventName] = []; // Remove all eventhandlers matching name\n\t  } else {\n\t    // Remove specific event handler\n\t    var callbackIndex = this.eventHandlers[eventName].indexOf(fn);\n\n\t    if (callbackIndex !== -1) {\n\t      this.eventHandlers[eventName].splice(callbackIndex, 1);\n\t    }\n\t  }\n\t};\n\n\tBrowser.prototype.fireEvent = function (eventName, args, thisObj) {\n\t  var scope,\n\t      results,\n\t      eventHandler = this.eventHandlers[eventName];\n\n\t  if (undefined === eventHandler || eventHandler.length === 0) {\n\t    return undefined;\n\t  }\n\n\t  scope = thisObj || window;\n\t  results = eventHandler.map(function (event) {\n\t    return event.apply(scope, args);\n\t  });\n\t  return results[0];\n\t};\n\n\tBrowser.prototype.dispose = function () {\n\t  $(window).off(this.namespace);\n\t  $(document).off(this.namespace);\n\t  this.eventHandlers = undefined;\n\t  this.trackViews.forEach(function (tv) {\n\t    tv.dispose();\n\t  });\n\t};\n\n\tBrowser.prototype.toJSON = function () {\n\t  var json, trackJson;\n\t  json = {\n\t    \"reference\": this.genome.toJSON()\n\t  }; // Use first available trackView.\n\n\t  var locus = [];\n\t  var gtexSelections = {};\n\t  var anyTrackView = this.trackViews[0];\n\t  anyTrackView.viewports.forEach(function (viewport) {\n\t    var genomicState = viewport.genomicState;\n\t    var pixelWidth = viewport.$viewport[0].clientWidth;\n\t    var locusString = genomicState.referenceFrame.showLocus(pixelWidth);\n\t    locus.push(locusString);\n\n\t    if (genomicState.selection) {\n\t      var selection = {\n\t        gene: genomicState.selection.gene,\n\t        snp: genomicState.selection.snp\n\t      };\n\t      gtexSelections[locusString] = selection;\n\t    }\n\t  });\n\t  json[\"locus\"] = locus;\n\t  var gtexKeys = Object.getOwnPropertyNames(gtexSelections);\n\n\t  if (gtexKeys.length > 0) {\n\t    json[\"gtexSelections\"] = gtexSelections;\n\t  }\n\n\t  trackJson = [];\n\t  this.trackViews.forEach(function (tv) {\n\t    var track, config;\n\t    track = tv.track;\n\n\t    if (typeof track.getState === \"function\") {\n\t      config = track.getState();\n\t    } else {\n\t      config = track.config;\n\t    }\n\n\t    if (config) {\n\t      // null backpointer to browser\n\t      if (config.browser) {\n\t        delete config.browser;\n\t      }\n\n\t      config.order = track.order; //order++;\n\n\t      trackJson.push(config);\n\t    }\n\t  });\n\t  json[\"tracks\"] = trackJson;\n\t  return json; // This is an object, not a json string\n\t};\n\n\tBrowser.prototype.compressedSession = function () {\n\t  var json;\n\t  json = JSON.stringify(this.toJSON());\n\t  return compressString(json);\n\t};\n\n\tBrowser.uncompressSession = function (url) {\n\t  var bytes;\n\n\t  if (url.indexOf('/gzip;base64') > 0) {\n\t    //Proper dataURI\n\t    bytes = decodeDataURI(url);\n\t    var json = '';\n\t    var _iteratorNormalCompletion24 = true;\n\t    var _didIteratorError24 = false;\n\t    var _iteratorError24 = undefined;\n\n\t    try {\n\t      for (var _iterator24 = bytes[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {\n\t        var b = _step24.value;\n\t        json += String.fromCharCode(b);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError24 = true;\n\t      _iteratorError24 = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion24 && _iterator24.return != null) {\n\t          _iterator24.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError24) {\n\t          throw _iteratorError24;\n\t        }\n\t      }\n\t    }\n\n\t    return json;\n\t  } else {\n\t    var enc = url.substring(5);\n\t    return uncompressString(enc);\n\t  }\n\t};\n\n\tBrowser.prototype.sessionURL = function () {\n\t  var surl, path, idx;\n\t  path = window.location.href.slice();\n\t  idx = path.indexOf(\"?\");\n\t  surl = (idx > 0 ? path.substring(0, idx) : path) + \"?sessionURL=data:\" + this.compressedSession();\n\t  return surl;\n\t};\n\n\tBrowser.prototype.presentAlert = function (alert) {\n\t  this.alertDialog.present(alert);\n\t};\n\t/**\n\t * Record a mouse click on a specific viewport.   This might be the start of a drag operation.   Dragging\n\t * (panning) is handled here so that the mouse can move out of a specific viewport (e.g. stray into another\n\t * track) without halting the drag.\n\t *\n\t * @param e\n\t * @param viewport\n\t */\n\n\n\tBrowser.prototype.mouseDownOnViewport = function (e, viewport) {\n\t  var coords;\n\t  coords = pageCoordinates(e);\n\t  this.vpMouseDown = {\n\t    viewport: viewport,\n\t    lastMouseX: coords.x,\n\t    mouseDownX: coords.x,\n\t    lastMouseY: coords.y,\n\t    mouseDownY: coords.y,\n\t    genomicState: viewport.genomicState,\n\t    referenceFrame: viewport.genomicState.referenceFrame\n\t  };\n\t};\n\n\tBrowser.prototype.cancelTrackPan = function () {\n\t  var dragObject = this.dragObject;\n\t  this.dragObject = undefined;\n\t  this.isScrolling = false;\n\t  this.vpMouseDown = undefined;\n\n\t  if (dragObject && dragObject.viewport.genomicState.referenceFrame.start !== dragObject.start) {\n\t    this.updateViews();\n\t    this.fireEvent('trackdragend');\n\t  }\n\t};\n\n\tBrowser.prototype.startTrackDrag = function (trackView) {\n\t  this.dragTrack = trackView;\n\t};\n\n\tBrowser.prototype.updateTrackDrag = function (dragDestination) {\n\t  if (dragDestination && this.dragTrack) {\n\t    var dragged = this.dragTrack;\n\t    var indexDestination = this.trackViews.indexOf(dragDestination);\n\t    var indexDragged = this.trackViews.indexOf(dragged);\n\t    var trackViews = this.trackViews;\n\t    trackViews[indexDestination] = dragged;\n\t    trackViews[indexDragged] = dragDestination;\n\t    var newOrder = this.trackViews[indexDestination].track.order;\n\t    this.trackViews[indexDragged].track.order = newOrder;\n\t    var nTracks = trackViews.length;\n\t    var lastOrder = newOrder;\n\n\t    if (indexDestination < indexDragged) {\n\t      // Displace tracks below\n\t      for (var i = indexDestination + 1; i < nTracks; i++) {\n\t        var track = trackViews[i].track;\n\n\t        if (track.order <= lastOrder) {\n\t          track.order = Math.min(Number.MAX_VALUE, lastOrder + 1);\n\t          lastOrder = track.order;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    } else {\n\t      // Displace tracks above.  First track (index 0) is \"ruler\"\n\t      for (var _i2 = indexDestination - 1; _i2 > 0; _i2--) {\n\t        var _track = trackViews[_i2].track;\n\n\t        if (_track.order >= lastOrder) {\n\t          _track.order = Math.max(-Number.MAX_VALUE, lastOrder - 1);\n\t          lastOrder = _track.order;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    this.reorderTracks();\n\t  }\n\t};\n\n\tBrowser.prototype.endTrackDrag = function () {\n\t  if (this.dragTrack) {\n\t    this.dragTrack.$trackDragScrim.hide();\n\t  }\n\n\t  this.dragTrack = undefined;\n\t};\n\t/**\n\t * Mouse handlers to support drag (pan)\n\t */\n\n\n\tfunction addMouseHandlers$1() {\n\t  var self = this;\n\t  $(window).on('resize' + this.namespace, function () {\n\t    self.resize();\n\t  });\n\t  $(this.root).on('mouseup', mouseUpOrLeave);\n\t  $(this.root).on('mouseleave', mouseUpOrLeave);\n\t  $(this.trackContainerDiv).on('mousemove', handleMouseMove);\n\t  $(this.trackContainerDiv).on('touchmove', handleMouseMove);\n\t  $(this.trackContainerDiv).on('mouseleave', mouseUpOrLeave);\n\t  $(this.trackContainerDiv).on('mouseup', mouseUpOrLeave);\n\t  $(this.trackContainerDiv).on('touchend', mouseUpOrLeave);\n\n\t  function handleMouseMove(e) {\n\t    var coords, viewport, viewportWidth, referenceFrame;\n\t    e.preventDefault();\n\n\t    if (self.loadInProgress()) {\n\t      return;\n\t    }\n\n\t    coords = pageCoordinates(e);\n\n\t    if (self.vpMouseDown) {\n\t      // Determine direction,  true == horizontal\n\t      var horizontal = Math.abs(coords.x - self.vpMouseDown.mouseDownX) > Math.abs(coords.y - self.vpMouseDown.mouseDownY);\n\t      viewport = self.vpMouseDown.viewport;\n\t      viewportWidth = viewport.$viewport.width();\n\t      referenceFrame = viewport.genomicState.referenceFrame;\n\n\t      if (!self.dragObject && !self.isScrolling) {\n\t        if (horizontal) {\n\t          if (self.vpMouseDown.mouseDownX && Math.abs(coords.x - self.vpMouseDown.mouseDownX) > self.constants.dragThreshold) {\n\t            self.dragObject = {\n\t              viewport: viewport,\n\t              start: referenceFrame.start\n\t            };\n\t          }\n\t        } else {\n\t          if (self.vpMouseDown.mouseDownY && Math.abs(coords.y - self.vpMouseDown.mouseDownY) > self.constants.scrollThreshold) {\n\t            self.isScrolling = true;\n\t            var trackView = viewport.trackView;\n\t            var viewportContainerHeight = trackView.$viewportContainer.height();\n\t            var contentHeight = trackView.maxContentHeight();\n\t            self.vpMouseDown.r = viewportContainerHeight / contentHeight;\n\t          }\n\t        }\n\t      }\n\n\t      if (self.dragObject) {\n\t        var viewChanged = referenceFrame.shiftPixels(self.vpMouseDown.lastMouseX - coords.x, viewportWidth);\n\n\t        if (viewChanged) {\n\t          self.updateLocusSearchWidget(self.vpMouseDown.genomicState);\n\t          self.updateViews();\n\t        }\n\n\t        self.fireEvent('trackdrag');\n\t      }\n\n\t      if (self.isScrolling) {\n\t        var delta = self.vpMouseDown.r * (self.vpMouseDown.lastMouseY - coords.y);\n\t        self.vpMouseDown.viewport.trackView.scrollBy(delta);\n\t      }\n\n\t      self.vpMouseDown.lastMouseX = coords.x;\n\t      self.vpMouseDown.lastMouseY = coords.y;\n\t    }\n\t  }\n\n\t  function mouseUpOrLeave(e) {\n\t    self.cancelTrackPan();\n\t    self.endTrackDrag();\n\t  }\n\t}\n\n\tvar WindowSizePanel = function WindowSizePanel($parent, browser) {\n\t  this.$content = $('<div class=\"igv-windowsizepanel-content-div\">');\n\t  $parent.append(this.$content);\n\t  this.browser = browser;\n\t};\n\n\tWindowSizePanel.prototype.show = function () {\n\t  this.$content.show();\n\t};\n\n\tWindowSizePanel.prototype.hide = function () {\n\t  this.$content.hide();\n\t};\n\n\tWindowSizePanel.prototype.updateWithGenomicState = function (genomicState) {\n\t  this.$content.text(prettyBasePairNumber(Math.round(this.browser.viewportWidth() * genomicState.referenceFrame.bpPerPixel)));\n\t};\n\n\tfunction prettyBasePairNumber(raw) {\n\t  var denom, units, value, floored;\n\n\t  if (raw > 1e7) {\n\t    denom = 1e6;\n\t    units = \" mb\";\n\t  } else if (raw > 1e4) {\n\t    denom = 1e3;\n\t    units = \" kb\";\n\t    value = raw / denom;\n\t    floored = Math.floor(value);\n\t    return numberFormatter(floored) + units;\n\t  } else {\n\t    return numberFormatter(raw) + \" bp\";\n\t  }\n\n\t  value = raw / denom;\n\t  floored = Math.floor(value);\n\t  return floored.toString() + units;\n\t}\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016-2017 The Regents of the University of California\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar InputDialog = function InputDialog($parent) {\n\t  var self = this,\n\t      $header,\n\t      $buttons; // dialog container\n\n\t  this.$container = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-container'\n\t  });\n\t  $parent.append(this.$container);\n\t  this.$container.offset({\n\t    left: 0,\n\t    top: 0\n\t  }); // dialog header\n\n\t  $header = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-header'\n\t  });\n\t  this.$container.append($header);\n\t  attachDialogCloseHandlerWithParent($header, function () {\n\t    self.$input.val(undefined);\n\t    self.$container.offset({\n\t      left: 0,\n\t      top: 0\n\t    });\n\t    self.$container.hide();\n\t  }); // dialog label\n\n\t  this.$label = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-one-liner'\n\t  });\n\t  this.$container.append(this.$label);\n\t  this.$label.text('Unlabeled'); // input container\n\n\t  this.$input_container = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-input'\n\t  });\n\t  this.$container.append(this.$input_container); //\n\n\t  this.$input = $(\"<input>\");\n\t  this.$input_container.append(this.$input); // ok | cancel\n\n\t  $buttons = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-ok-cancel'\n\t  });\n\t  this.$container.append($buttons); // ok\n\n\t  this.$ok = $(\"<div>\");\n\t  $buttons.append(this.$ok);\n\t  this.$ok.text('OK'); // cancel\n\n\t  this.$cancel = $(\"<div>\");\n\t  $buttons.append(this.$cancel);\n\t  this.$cancel.text('Cancel');\n\t  this.$cancel.on('click', function () {\n\t    self.$input.val(undefined);\n\t    self.$container.offset({\n\t      left: 0,\n\t      top: 0\n\t    });\n\t    self.$container.hide();\n\t  }); //this.$container.draggable({ handle:$header.get(0) });\n\n\t  makeDraggable(this.$container.get(0), $header.get(0));\n\t  this.$container.hide();\n\t};\n\n\tInputDialog.prototype.configure = function (config) {\n\t  var self = this;\n\t  this.$label.text(config.label);\n\t  this.$input.val(config.input);\n\t  this.$input.unbind();\n\t  this.$input.on('keyup', function (e) {\n\t    if (13 === e.keyCode) {\n\t      config.click();\n\t      self.$input.val(undefined);\n\t      self.$container.offset({\n\t        left: 0,\n\t        top: 0\n\t      });\n\t      self.$container.hide();\n\t    }\n\t  });\n\t  this.$ok.unbind();\n\t  this.$ok.on('click', function () {\n\t    config.click();\n\t    self.$input.val(undefined);\n\t    self.$container.offset({\n\t      left: 0,\n\t      top: 0\n\t    });\n\t    self.$container.hide();\n\t  });\n\t};\n\n\tInputDialog.prototype.present = function ($parent) {\n\t  var offset_top, scroll_top;\n\t  offset_top = $parent.offset().top;\n\t  scroll_top = $('body').scrollTop();\n\t  this.$container.offset({\n\t    left: $parent.width() - this.$container.width(),\n\t    top: offset_top + scroll_top\n\t  });\n\t  this.$container.show();\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016-2017 The Regents of the University of California \n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar DataRangeDialog = function DataRangeDialog($parent, browser) {\n\t  var self = this,\n\t      $header,\n\t      $buttons,\n\t      $div;\n\t  this.browser = browser; // dialog container\n\n\t  this.$container = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-container'\n\t  });\n\t  $parent.append(this.$container);\n\t  this.$container.offset({\n\t    left: 0,\n\t    top: 0\n\t  }); // dialog header\n\n\t  $header = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-header'\n\t  });\n\t  this.$container.append($header);\n\t  attachDialogCloseHandlerWithParent($header, function () {\n\t    self.$minimum_input.val(undefined);\n\t    self.$maximum_input.val(undefined);\n\t    self.$container.offset({\n\t      left: 0,\n\t      top: 0\n\t    });\n\t    self.$container.hide();\n\t  }); // minimun\n\n\t  this.$minimum = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-label-input'\n\t  });\n\t  this.$container.append(this.$minimum); //\n\n\t  $div = $('<div>');\n\t  $div.text('Minimum');\n\t  this.$minimum.append($div); //\n\n\t  this.$minimum_input = $(\"<input>\");\n\t  this.$minimum.append(this.$minimum_input); // maximum\n\n\t  this.$maximum = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-label-input'\n\t  });\n\t  this.$container.append(this.$maximum); //\n\n\t  $div = $('<div>');\n\t  $div.text('Maximum');\n\t  this.$maximum.append($div); //\n\n\t  this.$maximum_input = $(\"<input>\");\n\t  this.$maximum.append(this.$maximum_input); // ok | cancel\n\n\t  $buttons = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-ok-cancel'\n\t  });\n\t  this.$container.append($buttons); // ok\n\n\t  this.$ok = $(\"<div>\");\n\t  $buttons.append(this.$ok);\n\t  this.$ok.text('OK'); // cancel\n\n\t  this.$cancel = $(\"<div>\");\n\t  $buttons.append(this.$cancel);\n\t  this.$cancel.text('Cancel');\n\t  this.$cancel.on('click', function () {\n\t    self.$minimum_input.val(undefined);\n\t    self.$maximum_input.val(undefined);\n\t    self.$container.offset({\n\t      left: 0,\n\t      top: 0\n\t    });\n\t    self.$container.hide();\n\t  }); //this.$container.draggable({ handle:$header.get(0) });\n\n\t  makeDraggable(this.$container.get(0), $header.get(0));\n\t  this.$container.hide();\n\t};\n\n\tDataRangeDialog.prototype.configure = function (config) {\n\t  var self = this,\n\t      dataRange,\n\t      min,\n\t      max;\n\t  dataRange = config.trackView.dataRange();\n\n\t  if (dataRange) {\n\t    min = dataRange.min;\n\t    max = dataRange.max;\n\t  } else {\n\t    min = 0;\n\t    max = 100;\n\t  }\n\n\t  this.$minimum_input.val(min);\n\t  this.$maximum_input.val(max);\n\t  this.$minimum_input.unbind();\n\t  this.$minimum_input.on('keyup', function (e) {\n\t    if (13 === e.keyCode) {\n\t      processResults.call(self, config);\n\t    }\n\t  });\n\t  this.$maximum_input.unbind();\n\t  this.$maximum_input.on('keyup', function (e) {\n\t    if (13 === e.keyCode) {\n\t      processResults.call(self, config);\n\t    }\n\t  });\n\t  this.$ok.unbind();\n\t  this.$ok.on('click', function () {\n\t    processResults.call(self, config);\n\t  });\n\t};\n\n\tfunction processResults(config) {\n\t  var self = this,\n\t      min,\n\t      max;\n\t  min = parseFloat(this.$minimum_input.val());\n\t  max = parseFloat(this.$maximum_input.val());\n\n\t  if (isNaN(min) || isNaN(max)) {\n\t    self.browser.presentAlert(\"Must input numeric values\", undefined);\n\t  } else {\n\t    if (true === config.trackView.track.autoscale) {\n\t      $('#datarange-autoscale').trigger('click');\n\t    }\n\n\t    config.trackView.setDataRange(min, max, false);\n\t  }\n\n\t  this.$minimum_input.val(undefined);\n\t  this.$maximum_input.val(undefined);\n\t  this.$container.offset({\n\t    left: 0,\n\t    top: 0\n\t  });\n\t  this.$container.hide();\n\t}\n\n\tDataRangeDialog.prototype.present = function ($parent) {\n\t  var offset_top, scroll_top;\n\t  offset_top = $parent.offset().top;\n\t  scroll_top = $('body').scrollTop();\n\t  this.$container.offset({\n\t    left: $parent.width() - this.$container.width(),\n\t    top: offset_top + scroll_top\n\t  });\n\t  this.$container.show();\n\t};\n\n\tvar TrackRemovalDialog = function TrackRemovalDialog($parent) {\n\t  var self = this,\n\t      $header,\n\t      $buttons; // dialog container\n\n\t  this.$container = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-container'\n\t  });\n\t  $parent.append(this.$container);\n\t  this.$container.offset({\n\t    left: 0,\n\t    top: 0\n\t  }); // dialog header\n\n\t  $header = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-header'\n\t  });\n\t  this.$container.append($header);\n\t  attachDialogCloseHandlerWithParent($header, function () {\n\t    self.$track_name.text(undefined);\n\t    self.$container.offset({\n\t      left: 0,\n\t      top: 0\n\t    });\n\t    self.$container.hide();\n\t  }); // dialog label\n\n\t  this.$label = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-one-liner'\n\t  });\n\t  this.$container.append(this.$label);\n\t  this.$label.text('Remove track:'); // track name\n\n\t  this.$track_name = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-one-liner igv-ellipsis'\n\t  });\n\t  this.$container.append(this.$track_name); // this.$track_name.text('this is a really long track name so I better make it interesting');\n\t  // ok | cancel\n\n\t  $buttons = $(\"<div>\", {\n\t    class: 'igv-generic-dialog-ok-cancel'\n\t  });\n\t  this.$container.append($buttons); // ok\n\n\t  this.$ok = $(\"<div>\");\n\t  $buttons.append(this.$ok);\n\t  this.$ok.text('OK'); // cancel\n\n\t  this.$cancel = $(\"<div>\");\n\t  $buttons.append(this.$cancel);\n\t  this.$cancel.text('Cancel');\n\t  this.$cancel.on('click', function () {\n\t    self.$track_name.text(undefined);\n\t    self.$container.offset({\n\t      left: 0,\n\t      top: 0\n\t    });\n\t    self.$container.hide();\n\t  }); // this.$container.draggable({ handle:$header.get(0) });\n\n\t  makeDraggable(this.$container.get(0), $header.get(0));\n\t  this.$container.hide();\n\t};\n\n\tTrackRemovalDialog.prototype.configure = function (config) {\n\t  var self = this;\n\t  this.$track_name.text(config.name || 'unnamed');\n\t  this.$ok.unbind();\n\t  this.$ok.on('click', function () {\n\t    config.click();\n\t    self.$track_name.text(undefined);\n\t    self.$container.offset({\n\t      left: 0,\n\t      top: 0\n\t    });\n\t    self.$container.hide();\n\t  });\n\t};\n\n\tTrackRemovalDialog.prototype.present = function ($parent) {\n\t  var offset_top, scroll_top;\n\t  offset_top = $parent.offset().top;\n\t  scroll_top = $('body').scrollTop();\n\t  this.$container.offset({\n\t    left: $parent.width() - this.$container.width(),\n\t    top: offset_top + scroll_top\n\t  });\n\t  this.$container.show();\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2014 Broad Institute\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar UserFeedback = function UserFeedback($parent) {\n\t  this.$container = $('<div class=\"igv-user-feedback\">');\n\t  $parent.append(this.$container); // header\n\n\t  var $header = $('<div>');\n\t  this.$container.append($header); // alert\n\n\t  var $exclamation = $('<div>');\n\t  $header.append($exclamation);\n\t  var $a = createIcon(\"exclamation-triangle\", 'red');\n\t  $exclamation.append($a); // dismiss\n\n\t  var $dismiss = $('<div>');\n\t  $header.append($dismiss);\n\t  var $b = createIcon(\"times-circle\", 'grey');\n\t  $dismiss.append($b); // body copy\n\n\t  var $bodyCopyContainer = $('<div>');\n\t  this.$container.append($bodyCopyContainer);\n\t  var $bodyCopy = $('<div>');\n\t  $bodyCopyContainer.append($bodyCopy);\n\t  $bodyCopy.text('i am user feedback');\n\t  var self;\n\t  $dismiss.click(function () {\n\t    $bodyCopy.html('');\n\t    self.$container.hide();\n\t  });\n\t};\n\n\tUserFeedback.prototype.show = function () {\n\t  this.$container.show();\n\t};\n\n\tUserFeedback.prototype.hide = function () {\n\t  this.$container.hide();\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016 University of California San Diego\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar SVGSaveControl = function SVGSaveControl($parent, browser) {\n\t  var $button = $('<div class=\"igv-nav-bar-button\">');\n\t  $parent.append($button);\n\t  $button.text('Save SVG');\n\t  $button.on('click.svg-save-control', function () {\n\t    // browser.renderSVG({ $container: $('#igv-svg-container') })\n\t    browser.renderSVG({});\n\t  });\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016 University of California San Diego\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar ZoomWidget = function ZoomWidget(browser, $parent) {\n\t  var $div;\n\t  this.$zoomContainer = $('<div class=\"igv-zoom-widget\">');\n\t  $parent.append(this.$zoomContainer); // zoom out\n\n\t  $div = $('<div>');\n\t  this.$zoomContainer.append($div);\n\t  $div.append(createIcon(\"minus-circle\"));\n\t  $div.on('click', function () {\n\t    browser.zoomOut();\n\t  }); // Range slider\n\n\t  $div = $('<div>');\n\t  this.$zoomContainer.append($div);\n\t  this.$slider = $('<input type=\"range\"/>');\n\t  $div.append(this.$slider);\n\t  this.$slider.on('change', function (e) {\n\t    browser.zoomWithRangePercentage(e.target.value / 100.0);\n\t  }); // zoom in\n\n\t  $div = $('<div>');\n\t  this.$zoomContainer.append($div);\n\t  $div.append(createIcon(\"plus-circle\"));\n\t  $div.on('click', function () {\n\t    browser.zoomIn();\n\t  });\n\t  this.currentChr = undefined;\n\t  var self = this;\n\t  browser.on('locuschange', function () {\n\t    browser.updateZoomSlider(self.$slider);\n\t  });\n\t};\n\n\tZoomWidget.prototype.hide = function () {\n\t  this.$zoomContainer.hide();\n\t};\n\n\tZoomWidget.prototype.show = function () {\n\t  this.$zoomContainer.show();\n\t};\n\n\tZoomWidget.prototype.hideSlider = function () {\n\t  this.$slider.hide();\n\t};\n\n\tZoomWidget.prototype.showSlider = function () {\n\t  this.$slider.show();\n\t};\n\n\tvar ChromosomeSelectWidget = function ChromosomeSelectWidget(browser, $parent) {\n\t  this.showAllChromosomes = browser.config.showAllChromosomes;\n\t  this.$container = $('<div>', {\n\t    class: 'igv-chromosome-select-widget-container'\n\t  });\n\t  $parent.append(this.$container);\n\t  this.$select = $('<select>', {\n\t    'name': 'chromosome-select-widget'\n\t  });\n\t  this.$container.append(this.$select);\n\t  this.$select.on('change', function () {\n\t    var value = $(this).val();\n\n\t    if (value !== '') {\n\t      browser.search($(this).val());\n\t      $(this).blur();\n\t    }\n\t  });\n\t};\n\n\tChromosomeSelectWidget.prototype.update = function (genome) {\n\t  this.$select.empty();\n\t  var list = this.showAllChromosomes ? genome.chromosomeNames.slice() : genome.wgChromosomeNames.slice(); // slice used to copy list\n\n\t  if (genome.showWholeGenomeView()) {\n\t    list.unshift('all');\n\t    list.unshift('');\n\t  }\n\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var name = _step.value;\n\t      var $o;\n\t      $o = $('<option>', {\n\t        'value': name\n\t      });\n\t      this.$select.append($o);\n\t      $o.text(name);\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return != null) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016 University of California San Diego\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar TrackLabelControl = function TrackLabelControl($parent, browser) {\n\t  var self = this;\n\t  this.browser = browser;\n\t  this.$button = $('<div class=\"igv-nav-bar-button\">');\n\t  $parent.append(this.$button);\n\t  this.$button.text('track labels');\n\t  this.$button.on('click', function () {\n\t    if (true === browser.trackLabelsVisible) {\n\t      self.doHide();\n\t    } else {\n\t      self.doShow();\n\t    }\n\t  });\n\t};\n\n\tTrackLabelControl.prototype.doHide = function () {\n\t  this.$button.removeClass('igv-nav-bar-button-clicked');\n\t  this.browser.hideTrackLabels();\n\t};\n\n\tTrackLabelControl.prototype.doShow = function () {\n\t  this.$button.addClass('igv-nav-bar-button-clicked');\n\t  this.browser.showTrackLabels();\n\t};\n\n\tTrackLabelControl.prototype.setState = function (trackLabelsVisible) {\n\t  if (true === trackLabelsVisible) {\n\t    this.$button.addClass('igv-nav-bar-button-clicked');\n\t  } else {\n\t    this.$button.removeClass('igv-nav-bar-button-clicked');\n\t  }\n\t};\n\n\tTrackLabelControl.prototype.disable = function () {\n\t  this.doHide();\n\t  this.$button.hide();\n\t};\n\n\tTrackLabelControl.prototype.enable = function () {\n\t  this.$button.show();\n\t};\n\n\tvar CenterGuide = function CenterGuide($guideParent, $controlParent, config, browser) {\n\t  var self = this;\n\t  this.browser = browser;\n\t  this.$container = $('<div class=\"igv-center-guide igv-center-guide-thin\">');\n\t  $guideParent.append(this.$container);\n\n\t  if (true === config.showCenterGuideButton) {\n\t    this.$centerGuideToggle = $('<div class=\"igv-nav-bar-button\">');\n\t    $controlParent.append(this.$centerGuideToggle);\n\t    this.$centerGuideToggle.text('center line');\n\t    this.$centerGuideToggle.on('click', function () {\n\t      if (true === browser.isCenterGuideVisible) {\n\t        self.doHide();\n\t      } else {\n\t        self.doShow();\n\t      }\n\t    });\n\t  }\n\t};\n\n\tCenterGuide.prototype.doHide = function () {\n\t  if (this.$centerGuideToggle) {\n\t    this.$centerGuideToggle.removeClass('igv-nav-bar-button-clicked');\n\t  }\n\n\t  this.browser.hideCenterGuide();\n\t};\n\n\tCenterGuide.prototype.doShow = function () {\n\t  if (this.$centerGuideToggle) {\n\t    this.$centerGuideToggle.addClass('igv-nav-bar-button-clicked');\n\t  }\n\n\t  this.browser.showCenterGuide();\n\t};\n\n\tCenterGuide.prototype.setState = function (isCenterGuideVisible) {\n\t  if (this.$centerGuideToggle) {\n\t    if (true === isCenterGuideVisible) {\n\t      this.$centerGuideToggle.addClass('igv-nav-bar-button-clicked');\n\t    } else {\n\t      this.$centerGuideToggle.removeClass('igv-nav-bar-button-clicked');\n\t    }\n\t  }\n\t};\n\n\tCenterGuide.prototype.forcedHide = function () {\n\t  if (this.$centerGuideToggle) {\n\t    this.$centerGuideToggle.hide();\n\t  }\n\n\t  if (true === this.browser.isCenterGuideVisible) {\n\t    this.$container.hide();\n\t  }\n\t};\n\n\tCenterGuide.prototype.forcedShow = function () {\n\t  if (this.$centerGuideToggle) {\n\t    this.$centerGuideToggle.show();\n\t  }\n\n\t  if (true === this.browser.isCenterGuideVisible) {\n\t    this.$container.show();\n\t  }\n\t};\n\n\tCenterGuide.prototype.repaint = function () {\n\t  var ppb, xy, halfWidth, width, left, ls, ws, center, referenceFrame;\n\n\t  if (this.browser.genomicStateList) {\n\t    referenceFrame = this.browser.genomicStateList[0].referenceFrame;\n\t    ppb = 1.0 / referenceFrame.bpPerPixel;\n\n\t    if (ppb > 1) {\n\t      xy = this.browser.trackViews[0].$viewportContainer.position();\n\t      halfWidth = Math.round(this.browser.trackViews[0].$viewportContainer.width() / 2);\n\t      center = xy.left + halfWidth;\n\t      width = referenceFrame.toPixels(1);\n\t      left = center - 0.5 * width;\n\t      ls = Math.round(left).toString() + 'px';\n\t      ws = Math.round(width).toString() + 'px';\n\t      this.$container.css({\n\t        left: ls,\n\t        width: ws\n\t      });\n\t      this.$container.removeClass('igv-center-guide-thin');\n\t      this.$container.addClass('igv-center-guide-wide');\n\t    } else {\n\t      this.$container.css({\n\t        left: '50%',\n\t        width: '1px'\n\t      });\n\t      this.$container.removeClass('igv-center-guide-wide');\n\t      this.$container.addClass('igv-center-guide-thin');\n\t    }\n\t  }\n\t};\n\n\tCenterGuide.prototype.resize = function () {\n\t  this.repaint();\n\t};\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2016 University of California San Diego\n\t * Author: Jim Robinson\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\n\tvar CursorGuide = function CursorGuide($cursorGuideParent, $controlParent, config, browser) {\n\t  var _this = this;\n\n\t  var self = this;\n\t  this.browser = browser;\n\t  this.$guide = $('<div class=\"igv-cursor-tracking-guide\">');\n\t  $cursorGuideParent.append(this.$guide); // Guide line is bound within track area, and offset by 5 pixels so as not to interfere mouse clicks.\n\n\t  $cursorGuideParent.on('mousemove.cursor-guide', function (e) {\n\t    e.preventDefault();\n\t    var $child = $(document.elementFromPoint(e.clientX, e.clientY));\n\t    var $parent = $child.parent();\n\t    var $viewport = undefined;\n\n\t    if ($parent.hasClass('igv-viewport-content-div')) {\n\t      $viewport = $parent.parent();\n\t    } else if ($parent.hasClass('igv-viewport-div') && $child.hasClass('igv-viewport-content-div')) {\n\t      $viewport = $parent;\n\t    } else if ($parent.hasClass('igv-viewport-container') && $child.hasClass('igv-viewport-div')) {\n\t      $viewport = $child;\n\t    }\n\n\t    var childClass = $child.attr('class') || 'noclass',\n\t        parentClass = $parent.attr('class') || 'noclass';\n\n\t    if ($viewport) {\n\t      // console.log(`target class ${ $viewport.attr('class') } parent ${ parentClass } child ${ childClass }`);\n\t      var result = mouseHandler(e, $viewport, _this.$guide, $cursorGuideParent, browser);\n\n\t      if (result) {\n\t        var bp = result.bp,\n\t            start = result.start,\n\t            end = result.end,\n\t            interpolant = result.interpolant;\n\n\t        if (_this.customMouseHandler) {\n\t          _this.customMouseHandler({\n\t            bp: bp,\n\t            start: start,\n\t            end: end,\n\t            interpolant: interpolant\n\t          });\n\t        }\n\t      }\n\t    }\n\t  });\n\n\t  if (true === config.showCursorTrackingGuideButton) {\n\t    this.$button = $('<div class=\"igv-nav-bar-button\">');\n\t    $controlParent.append(this.$button);\n\t    this.$button.text('cursor guide');\n\t    this.$button.on('click', function () {\n\t      if (true === browser.cursorGuideVisible) {\n\t        self.doHide();\n\t      } else {\n\t        self.doShow();\n\t      }\n\t    });\n\t  }\n\t};\n\n\tvar mouseHandler = function mouseHandler(event, $viewport, $guideLine, $guideParent, browser) {\n\t  // pixel location of guide line\n\t  var _getMouseXY = getMouseXY($guideParent.get(0), event),\n\t      x = _getMouseXY.x;\n\n\t  var left = \"\".concat(x, \"px\");\n\t  $guideLine.css({\n\t    left: left\n\t  }); // base-pair location of guide line\n\n\t  var viewportMouseXY = getMouseXY($viewport.get(0), event);\n\t  var guid = $viewport.data('viewportGUID');\n\t  var viewport = browser.getViewportWithGUID(guid);\n\n\t  if (undefined === viewport) {\n\t    return undefined;\n\t  }\n\n\t  var referenceFrame = viewport.genomicState.referenceFrame;\n\t  var _startBP = referenceFrame.start;\n\n\t  var _endBP = 1 + referenceFrame.start + viewportMouseXY.width * referenceFrame.bpPerPixel; // bp = bp + (pixel * (bp / pixel))\n\n\n\t  var bp = Math.round(_startBP + viewportMouseXY.x * referenceFrame.bpPerPixel); // TODO: Can we make use of this in the custom mouse handler (ie: Tracing3D)\n\n\t  var $trackContainer = $viewport.closest('.igv-track-container-div');\n\t  var trackContainerMouseXY = getMouseXY($trackContainer.get(0), event);\n\t  return {\n\t    $host: $trackContainer,\n\t    host_css_left: left,\n\t    bp: bp,\n\t    start: _startBP,\n\t    end: _endBP,\n\t    interpolant: viewportMouseXY.xNormalized\n\t  };\n\t};\n\n\tCursorGuide.prototype.doHide = function () {\n\t  if (this.$button) {\n\t    this.$button.removeClass('igv-nav-bar-button-clicked');\n\t  }\n\n\t  this.browser.hideCursorGuide();\n\t};\n\n\tCursorGuide.prototype.doShow = function () {\n\t  this.$button.addClass('igv-nav-bar-button-clicked');\n\t  this.browser.showCursorGuide();\n\t};\n\n\tCursorGuide.prototype.setState = function (cursorGuideVisible) {\n\t  if (this.$button) {\n\t    if (true === cursorGuideVisible) {\n\t      this.$button.addClass('igv-nav-bar-button-clicked');\n\t    } else {\n\t      this.$button.removeClass('igv-nav-bar-button-clicked');\n\t    }\n\t  }\n\t};\n\n\tCursorGuide.prototype.disable = function () {\n\t  this.doHide();\n\t  this.$guide.hide();\n\t};\n\n\tCursorGuide.prototype.enable = function () {\n\t  if (this.$button) {\n\t    this.$button.show();\n\t  }\n\t};\n\n\tfunction getMouseXY(domElement, event) {\n\t  // a DOMRect object with eight properties: left, top, right, bottom, x, y, width, height\n\t  var dr = domElement.getBoundingClientRect();\n\t  var xy = {\n\t    x: event.clientX - dr.left,\n\t    y: event.clientY - dr.top,\n\t    xNormalized: (event.clientX - dr.left) / dr.width,\n\t    yNormalized: (event.clientY - dr.top) / dr.height,\n\t    width: dr.width,\n\t    height: dr.height\n\t  };\n\t  return xy;\n\t}\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2014 Broad Institute\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tvar NavbarManager = function NavbarManager(browser) {\n\t  this.browser = browser;\n\t};\n\n\tNavbarManager.prototype.navbarDidResize = function (width, isWholeGenomeView) {\n\t  updateNavbar.call(this, createResponsiveClassSchedule.call(this, width, isWholeGenomeView));\n\t};\n\n\tfunction updateNavbar(responsiveClassSchedule) {\n\t  this.browser['$toggle_button_container'].removeClass();\n\t  this.browser['$toggle_button_container'].addClass(responsiveClassSchedule['$toggle_button_container']);\n\t  this.browser.zoomWidget['$zoomContainer'].removeClass();\n\t  this.browser.zoomWidget['$zoomContainer'].addClass(responsiveClassSchedule['$zoomContainer']);\n\t}\n\n\tfunction createResponsiveClassSchedule(navbarWidth, isWholeGenomeView) {\n\t  var candidates = {};\n\n\t  if (isWholeGenomeView) {\n\t    this.browser.windowSizePanel.hide();\n\t  } else {\n\t    this.browser.windowSizePanel.show();\n\t  }\n\n\t  if (navbarWidth > 990) {\n\t    candidates['$toggle_button_container'] = 'igv-nav-bar-toggle-button-container';\n\t    candidates['$zoomContainer'] = 'igv-zoom-widget';\n\t  } else if (navbarWidth > 860) {\n\t    candidates['$toggle_button_container'] = 'igv-nav-bar-toggle-button-container';\n\t    candidates['$zoomContainer'] = 'igv-zoom-widget-900';\n\t  } else if (navbarWidth > 540) {\n\t    candidates['$toggle_button_container'] = 'igv-nav-bar-toggle-button-container-750';\n\t    candidates['$zoomContainer'] = 'igv-zoom-widget-900';\n\t  } else {\n\t    candidates['$toggle_button_container'] = 'igv-nav-bar-toggle-button-container-750';\n\t    candidates['$zoomContainer'] = 'igv-zoom-widget-900';\n\t    this.browser.windowSizePanel.hide();\n\t  }\n\n\t  if (isWholeGenomeView) {\n\t    candidates['$zoomContainer'] = 'igv-zoom-widget-hidden';\n\t  }\n\n\t  return candidates;\n\t}\n\n\tvar allBrowsers = [];\n\t/**\n\t * Create an igv.browser instance.  This object defines the public API for interacting with the genome browser.\n\t *\n\t * @param parentDiv - DOM tree root\n\t * @param config - configuration options.\n\t *\n\t */\n\n\tfunction createBrowser(_x, _x2) {\n\t  return _createBrowser.apply(this, arguments);\n\t}\n\n\tfunction _createBrowser() {\n\t  _createBrowser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(parentDiv, config) {\n\t    var browser, loadSession;\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            loadSession = function _ref(config) {\n\t              if (config.sessionURL) {\n\t                return browser.loadSession({\n\t                  url: config.sessionURL\n\t                });\n\t              } else {\n\t                return browser.loadSessionObject(config);\n\t              }\n\t            };\n\n\t            Alert.init($(parentDiv));\n\t            if (undefined === config) config = {}; // Path to genomes.json file.   This is globally shared among all browser objects\n\n\t            GenomeUtils.genomeList = config.genomeList || \"https://s3.amazonaws.com/igv.org.genomes/genomes.json\";\n\t            setDefaults(config); // Explicit parameters have priority\n\n\t            if (config.queryParametersSupported !== false) {\n\t              extractQuery(config);\n\t            } // Set track order explicitly. Otherwise they will be ordered randomly as each completes its async load\n\n\n\t            setTrackOrder(config);\n\t            browser = new Browser(config, parentDiv);\n\t            setControls(browser, config); // user feedback\n\n\t            browser.userFeedback = new UserFeedback(browser.$content);\n\t            browser.userFeedback.hide(); // browser.popover = new Popover(browser.$content, browser);\n\n\t            browser.alertDialog = new AlertDialog(browser.$content);\n\t            browser.inputDialog = new InputDialog(browser.$root);\n\t            browser.trackRemovalDialog = new TrackRemovalDialog(browser.$root);\n\t            browser.dataRangeDialog = new DataRangeDialog(browser.$root, browser);\n\n\t            if (config.apiKey) {\n\t              google.setApiKey(config.apiKey);\n\t            }\n\n\t            if (config.oauthToken) {\n\t              oauth.setToken(config.oauthToken);\n\t            }\n\n\t            return _context.abrupt(\"return\", loadSession(config).then(function (ignore) {\n\t              if (false === config.showTrackLabels) {\n\t                browser.hideTrackLabels();\n\t              } else {\n\t                browser.showTrackLabels();\n\n\t                if (browser.trackLabelControl) {\n\t                  browser.trackLabelControl.setState(browser.trackLabelsVisible);\n\t                }\n\t              }\n\n\t              if (false === config.showCursorTrackingGuide) {\n\t                browser.cursorGuide.doHide();\n\t              } else {\n\t                browser.cursorGuide.doShow();\n\t              }\n\n\t              if (false === config.showCenterGuide) {\n\t                browser.centerGuide.doHide();\n\t              } else {\n\t                browser.centerGuide.doShow();\n\t              }\n\n\t              var isWGV = browser.isMultiLocusWholeGenomeView() || GenomeUtils.isWholeGenomeView(browser.genomicStateList[0].referenceFrame); // multi-locus mode or isWGV\n\n\t              if (browser.isMultiLocusMode() || isWGV) {\n\t                browser.centerGuide.forcedHide();\n\t              } else {\n\t                browser.centerGuide.forcedShow();\n\t              }\n\n\t              igvxhr.startup();\n\t              browser.navbarManager.navbarDidResize(browser.$navigation.width(), isWGV);\n\t              return browser;\n\t            }).then(function (browser) {\n\t              allBrowsers.push(browser);\n\t              return browser;\n\t            }));\n\n\t          case 18:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee);\n\t  }));\n\t  return _createBrowser.apply(this, arguments);\n\t}\n\n\tfunction removeBrowser(browser) {\n\t  browser.dispose();\n\t  browser.$root.remove();\n\t  allBrowsers = allBrowsers.filter(function (item) {\n\t    return item !== browser;\n\t  }); // backward compatibility -- this will be removed in a future release\n\n\t  if (typeof igv !== 'undefined' && browser === igv.browser) {\n\t    igv.browser = undefined;\n\t  }\n\t} // A hack to replace the global igv.browser for the purpose of alert dialogs\n\t// TODO fixme\n\n\n\tfunction getBrowser() {\n\t  return allBrowsers[0];\n\t}\n\t/**\n\t * This function provided so clients can inform igv of a visibility change, typically when an igv instance is\n\t * made visible from a tab, accordion, or similar widget.\n\t */\n\n\n\tfunction visibilityChange() {\n\t  allBrowsers.forEach(function (browser) {\n\t    browser.visibilityChange();\n\t  });\n\t}\n\n\tfunction setTrackOrder(conf) {\n\t  var trackOrder = 1;\n\n\t  if (conf.tracks) {\n\t    conf.tracks.forEach(function (track) {\n\t      if (track.order === undefined) {\n\t        track.order = trackOrder++;\n\t      }\n\t    });\n\t  }\n\t}\n\n\tfunction setControls(browser, conf) {\n\t  var controlDiv; // Create controls. Can be customized by passing in a creation function that returns a div containing the controls\n\n\t  controlDiv = conf.createControls ? conf.createControls(browser, conf) : createStandardControls(browser, conf);\n\t  $(controlDiv).insertBefore(browser.$content);\n\n\t  if (false === conf.showControls) {\n\t    $(controlDiv).hide();\n\t  }\n\t}\n\n\tfunction createStandardControls(browser, config) {\n\t  var $div, $igv_nav_bar_left_container, $igv_nav_bar_right_container, $genomic_location, $locus_size_group, $toggle_button_container, logoDiv, logoSvg, $controls, $navigation, $searchContainer;\n\t  $controls = $('<div>', {\n\t    class: 'igvControlDiv'\n\t  });\n\t  $navigation = $('<div>', {\n\t    class: 'igv-navbar'\n\t  });\n\t  $controls.append($navigation);\n\t  browser.$navigation = $navigation;\n\t  browser.navbarManager = new NavbarManager(browser);\n\t  $igv_nav_bar_left_container = $('<div>', {\n\t    class: 'igv-nav-bar-left-container'\n\t  });\n\t  $navigation.append($igv_nav_bar_left_container); // IGV logo\n\n\t  logoDiv = $('<div>', {\n\t    class: 'igv-logo'\n\t  });\n\t  logoSvg = logo();\n\t  logoSvg.css(\"width\", \"34px\");\n\t  logoSvg.css(\"height\", \"32px\");\n\t  logoDiv.append(logoSvg);\n\t  $igv_nav_bar_left_container.append(logoDiv); // current genome\n\n\t  browser.$current_genome = $('<div>', {\n\t    class: 'igv-current-genome'\n\t  });\n\t  $igv_nav_bar_left_container.append(browser.$current_genome);\n\t  browser.$current_genome.text(''); //\n\n\t  $genomic_location = $('<div>', {\n\t    class: 'igv-nav-bar-genomic-location'\n\t  });\n\t  $igv_nav_bar_left_container.append($genomic_location); // chromosome select widget\n\n\t  browser.chromosomeSelectWidget = new ChromosomeSelectWidget(browser, $genomic_location);\n\n\t  if (undefined === config.showChromosomeWidget) {\n\t    config.showChromosomeWidget = true; // Default to true\n\t  }\n\n\t  if (true === config.showChromosomeWidget) {\n\t    browser.chromosomeSelectWidget.$container.show();\n\t  } else {\n\t    browser.chromosomeSelectWidget.$container.hide();\n\t  }\n\n\t  $locus_size_group = $('<div>', {\n\t    class: 'igv-locus-size-group'\n\t  });\n\t  $genomic_location.append($locus_size_group); // locus goto widget container\n\n\t  $searchContainer = $('<div>', {\n\t    class: 'igv-search-container'\n\t  });\n\t  $locus_size_group.append($searchContainer); // locus goto input\n\n\t  browser.$searchInput = $('<input type=\"text\" placeholder=\"Locus Search\">');\n\t  $searchContainer.append(browser.$searchInput);\n\t  browser.$searchInput.change(function (e) {\n\t    browser.search($(this).val()).catch(function (error) {\n\t      browser.presentAlert(error);\n\t    });\n\t  }); // search icon container\n\n\t  $div = $('<div>');\n\t  $searchContainer.append($div); // search icon svg\n\n\t  $div.append(createIcon(\"search\"));\n\t  $div.click(function () {\n\t    browser.search(browser.$searchInput.val());\n\t  }); // $searchContainer.append($faSearch);\n\t  // TODO: Currently not used\n\t  // search results presented in table\n\t  // browser.$searchResults = $('<div class=\"igv-search-results\">');\n\t  // $searchContainer.append(browser.$searchResults.get(0));\n\t  // browser.$searchResultsTable = $('<table>');\n\t  // browser.$searchResults.append(browser.$searchResultsTable.get(0));\n\t  // browser.$searchResults.hide();\n\t  // window size display\n\n\t  browser.windowSizePanel = new WindowSizePanel($locus_size_group, browser); // cursor guide | center guide | track labels\n\n\t  $igv_nav_bar_right_container = $('<div class=\"igv-nav-bar-right-container\">');\n\t  $navigation.append($igv_nav_bar_right_container);\n\t  $toggle_button_container = $('<div class=\"igv-nav-bar-toggle-button-container\">');\n\t  $igv_nav_bar_right_container.append($toggle_button_container);\n\t  browser.$toggle_button_container = $toggle_button_container; // cursor guide\n\t  // browser.cursorGuide = new CursorGuide($(browser.trackContainerDiv), $toggle_button_container, config, browser);\n\n\t  browser.cursorGuide = new CursorGuide(browser.$content, $toggle_button_container, config, browser); // center guide\n\n\t  browser.centerGuide = new CenterGuide($(browser.trackContainerDiv), $toggle_button_container, config, browser); // toggle track labels\n\n\t  if (true === config.showTrackLabelButton) {\n\t    browser.trackLabelControl = new TrackLabelControl($toggle_button_container, browser);\n\t  } // SVG save button\n\n\n\t  if (config.showSVGButton) {\n\t    browser.svgSaveControl = new SVGSaveControl($toggle_button_container, browser);\n\t  } // zoom widget\n\n\n\t  browser.zoomWidget = new ZoomWidget(browser, $igv_nav_bar_right_container);\n\n\t  if (false === config.showNavigation) {\n\t    browser.$navigation.hide();\n\t  }\n\n\t  return $controls.get(0);\n\t}\n\n\tfunction setDefaults(config) {\n\t  if (undefined === config.promisified) {\n\t    config.promisified = false;\n\t  }\n\n\t  if (undefined === config.minimumBases) {\n\t    config.minimumBases = 40;\n\t  }\n\n\t  if (undefined === config.showIdeogram) {\n\t    config.showIdeogram = true;\n\t  }\n\n\t  if (undefined === config.showCursorTrackingGuideButton) {\n\t    config.showCursorTrackingGuideButton = true;\n\t  }\n\n\t  if (undefined === config.showCenterGuideButton) {\n\t    config.showCenterGuideButton = true;\n\t  }\n\n\t  if (undefined === config.showSVGButton) {\n\t    config.showSVGButton = true;\n\t  }\n\n\t  if (undefined === config.showTrackLabelButton) {\n\t    config.showTrackLabelButton = true;\n\t  }\n\n\t  if (undefined === config.showCursorTrackingGuide) {\n\t    config.showCursorTrackingGuide = false;\n\t  }\n\n\t  if (undefined === config.showCenterGuide) {\n\t    config.showCenterGuide = false;\n\t  }\n\n\t  if (undefined === config.showTrackLabels) {\n\t    config.showTrackLabels = true;\n\t  }\n\n\t  if (config.showControls === undefined) {\n\t    config.showControls = true;\n\t  }\n\n\t  if (config.showNavigation === undefined) {\n\t    config.showNavigation = true;\n\t  }\n\n\t  if (config.showRuler === undefined) {\n\t    config.showRuler = true;\n\t  }\n\n\t  if (config.showSequence === undefined) {\n\t    config.showSequence = true;\n\t  }\n\n\t  if (config.flanking === undefined) {\n\t    config.flanking = 1000;\n\t  }\n\n\t  if (config.pairsSupported === undefined) {\n\t    config.pairsSupported = true;\n\t  }\n\n\t  if (!config.tracks) {\n\t    config.tracks = [];\n\t  }\n\n\t  if (config.showSequence) {\n\t    config.tracks.push({\n\t      type: \"sequence\",\n\t      order: -Number.MAX_VALUE\n\t    });\n\t  }\n\t}\n\n\tfunction extractQuery(config) {\n\t  var i1, i2, i, j, s, query, tokens, uri, key, value;\n\t  uri = window.location.href;\n\t  query = {};\n\t  i1 = uri.indexOf(\"?\");\n\t  i2 = uri.lastIndexOf(\"#\");\n\t  var files;\n\t  var indexURLs;\n\n\t  if (i1 >= 0) {\n\t    if (i2 < 0) i2 = uri.length;\n\n\t    for (i = i1 + 1; i < i2;) {\n\t      j = uri.indexOf(\"&\", i);\n\t      if (j < 0) j = i2;\n\t      s = uri.substring(i, j);\n\t      tokens = s.split(\"=\", 2);\n\n\t      if (tokens.length === 2) {\n\t        key = tokens[0];\n\t        value = decodeURIComponent(tokens[1]);\n\n\t        if ('file' === key) {\n\t          // IGV desktop style file parameter\n\t          files = value.split(',');\n\t        } else if ('index' === key) {\n\t          // IGV desktop style index parameter\n\t          indexURLs = value.split(',');\n\t        } else {\n\t          config[key] = value;\n\t        }\n\n\t        i = j + 1;\n\t      }\n\t    }\n\t  }\n\n\t  if (files) {\n\t    if (!config.tracks) config.tracks = [];\n\n\t    for (var _i = 0; _i < files.length; _i++) {\n\t      if (files[_i].endsWith(\".xml\") || files[_i].endsWith(\".json\")) {\n\t        config.sessionURL = files[_i];\n\t        break;\n\t      }\n\n\t      var trackConfig = {\n\t        url: files[_i]\n\t      };\n\n\t      if (indexURLs && indexURLs.length > _i) {\n\t        trackConfig.indexURL = indexURLs[_i];\n\t      }\n\n\t      config.tracks.push(trackConfig);\n\t    }\n\t  }\n\n\t  return query;\n\t}\n\n\tfunction logo() {\n\t  return $('<svg width=\"690px\" height=\"324px\" viewBox=\"0 0 690 324\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' + '<title>IGV</title>' + '<g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">' + '<g id=\"IGV\" fill=\"#666666\">' + '<polygon id=\"Path\" points=\"379.54574 8.00169252 455.581247 8.00169252 515.564813 188.87244 532.884012 253.529506 537.108207 253.529506 554.849825 188.87244 614.833392 8.00169252 689.60164 8.00169252 582.729511 320.722144 486.840288 320.722144\"></polygon>' + '<path d=\"M261.482414,323.793286 C207.975678,323.793286 168.339046,310.552102 142.571329,284.069337 C116.803612,257.586572 103.919946,217.158702 103.919946,162.784513 C103.919946,108.410325 117.437235,67.8415913 144.472217,41.0770945 C171.507199,14.3125977 212.903894,0.930550071 268.663545,0.930550071 C283.025879,0.930550071 298.232828,1.84616386 314.284849,3.6774189 C330.33687,5.50867394 344.839793,7.97378798 357.794056,11.072835 L357.794056,68.968378 C339.48912,65.869331 323.578145,63.5450806 310.060654,61.9955571 C296.543163,60.4460336 284.574731,59.6712835 274.154998,59.6712835 C255.850062,59.6712835 240.502308,61.4320792 228.111274,64.9537236 C215.720241,68.4753679 205.793482,74.2507779 198.330701,82.2801269 C190.867919,90.309476 185.587729,100.87425 182.48997,113.974767 C179.392212,127.075284 177.843356,143.345037 177.843356,162.784513 C177.843356,181.942258 179.251407,198.000716 182.067551,210.960367 C184.883695,223.920018 189.671068,234.41436 196.429813,242.443709 C203.188559,250.473058 212.059279,256.178037 223.042241,259.558815 C234.025202,262.939594 247.683295,264.629958 264.01693,264.629958 C268.241146,264.629958 273.098922,264.489094 278.590403,264.207362 C284.081883,263.925631 289.643684,263.50304 295.275972,262.939577 L295.275972,159.826347 L361.595831,159.826347 L361.595831,308.579859 C344.698967,313.087564 327.239137,316.750019 309.215815,319.567334 C291.192494,322.38465 275.281519,323.793286 261.482414,323.793286 L261.482414,323.793286 L261.482414,323.793286 Z\" id=\"Path\"></path>;' + '<polygon id=\"Path\" points=\"0.81355666 5.00169252 73.0472883 5.00169252 73.0472883 317.722144 0.81355666 317.722144\"></polygon>' + '</g> </g> </svg>');\n\t}\n\n\tfunction createTrack(config, browser) {\n\t  return Browser.prototype.createTrack.call(browser, config);\n\t}\n\n\tfunction embedCSS() {\n\t  var css = '.igv-user-feedback {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  width: 512px;\\n  height: 360px;\\n  z-index: 2048;\\n  background-color: white;\\n  border-color: #a2a2a2;\\n  border-style: solid;\\n  border-width: thin;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: medium;\\n  font-weight: 400;\\n  color: #444;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-user-feedback div:first-child {\\n    position: relative;\\n    height: 24px;\\n    width: 100%;\\n    background-color: white;\\n    border-bottom-color: #a2a2a2;\\n    border-bottom-style: solid;\\n    border-bottom-width: thin; }\\n    .igv-user-feedback div:first-child div {\\n      position: absolute;\\n      top: 2px;\\n      width: 16px;\\n      height: 16px;\\n      background-color: transparent; }\\n    .igv-user-feedback div:first-child div:first-child {\\n      left: 8px; }\\n    .igv-user-feedback div:first-child div:last-child {\\n      cursor: pointer;\\n      right: 8px; }\\n  .igv-user-feedback div:last-child {\\n    width: 100%;\\n    height: calc(100% - 24px);\\n    border-width: 0; }\\n    .igv-user-feedback div:last-child div {\\n      width: auto;\\n      height: auto;\\n      margin: 8px; }\\n\\n.igv-color-swatch {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  align-items: center;\\n  width: 32px;\\n  height: 32px;\\n  border-style: solid;\\n  border-width: 2px;\\n  border-color: white;\\n  border-radius: 4px; }\\n\\n.igv-colorpicker-menu-close-button {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-end;\\n  align-items: center;\\n  width: 100%;\\n  height: 32px;\\n  margin-top: 4px;\\n  margin-bottom: 4px;\\n  padding-right: 8px; }\\n  .igv-colorpicker-menu-close-button i.fa {\\n    display: block;\\n    margin-left: 4px;\\n    margin-right: 4px;\\n    color: #5f5f5f; }\\n  .igv-colorpicker-menu-close-button i.fa:hover,\\n  .igv-colorpicker-menu-close-button i.fa:focus,\\n  .igv-colorpicker-menu-close-button i.fa:active {\\n    cursor: pointer;\\n    color: #0f0f0f; }\\n\\n.igv-alert-dialog-container {\\n  position: absolute;\\n  z-index: 2048;\\n  top: 30%;\\n  left: 50%;\\n  margin: -150px 0 0 -150px;\\n  width: 300px;\\n  height: 256px;\\n  border-color: #7F7F7F;\\n  border-radius: 4px;\\n  border-style: solid;\\n  border-width: thin;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400;\\n  z-index: 2048;\\n  background-color: white;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-alert-dialog-container div:first-child {\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center;\\n    width: 100%;\\n    height: 24px;\\n    cursor: move;\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    border-bottom-color: #7F7F7F;\\n    border-bottom-style: solid;\\n    border-bottom-width: thin;\\n    background-color: #eee; }\\n    .igv-alert-dialog-container div:first-child div {\\n      margin-right: 4px;\\n      margin-bottom: 2px;\\n      height: 12px;\\n      width: 12px;\\n      color: #7F7F7F; }\\n    .igv-alert-dialog-container div:first-child div:hover {\\n      cursor: pointer;\\n      color: #444; }\\n  .igv-alert-dialog-container #igv-alert-dialog-body {\\n    color: #373737;\\n    width: 100%;\\n    height: calc(100% - 24px - 64px);\\n    overflow-y: scroll; }\\n    .igv-alert-dialog-container #igv-alert-dialog-body #igv-alert-dialog-body-copy {\\n      cursor: pointer;\\n      margin: 16px;\\n      width: auto;\\n      height: auto;\\n      overflow-wrap: break-word;\\n      word-break: break-word;\\n      background-color: white;\\n      border: unset; }\\n  .igv-alert-dialog-container div:last-child {\\n    width: 100%;\\n    height: 64px;\\n    background-color: white;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: center;\\n    align-items: center; }\\n    .igv-alert-dialog-container div:last-child div {\\n      width: 98px;\\n      height: 36px;\\n      line-height: 36px;\\n      text-align: center;\\n      color: white;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: medium;\\n      font-weight: 400;\\n      border-color: #2B81AF;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: 4px;\\n      background-color: #2B81AF; }\\n    .igv-alert-dialog-container div:last-child div:hover {\\n      cursor: pointer;\\n      border-color: #25597f;\\n      background-color: #25597f; }\\n\\n.igv-generic-container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 2048;\\n  background-color: white;\\n  cursor: pointer;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-generic-container div:first-child {\\n    cursor: move;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center;\\n    height: 24px;\\n    width: 100%;\\n    background-color: #dddddd; }\\n    .igv-generic-container div:first-child i {\\n      display: block;\\n      color: #5f5f5f;\\n      cursor: pointer;\\n      width: 14px;\\n      height: 14px;\\n      margin-right: 8px;\\n      margin-bottom: 4px; }\\n\\n.igv-generic-dialog-container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 300px;\\n  height: 200px;\\n  border-color: #7F7F7F;\\n  border-radius: 4px;\\n  border-style: solid;\\n  border-width: thin;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: medium;\\n  font-weight: 400;\\n  z-index: 2048;\\n  background-color: white;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-generic-dialog-container .igv-generic-dialog-header {\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center;\\n    width: 100%;\\n    height: 24px;\\n    cursor: move;\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    border-bottom-color: #7F7F7F;\\n    border-bottom-style: solid;\\n    border-bottom-width: thin;\\n    background-color: #eee; }\\n    .igv-generic-dialog-container .igv-generic-dialog-header div {\\n      margin-right: 4px;\\n      margin-bottom: 2px;\\n      height: 12px;\\n      width: 12px;\\n      color: #7F7F7F; }\\n    .igv-generic-dialog-container .igv-generic-dialog-header div:hover {\\n      cursor: pointer;\\n      color: #444; }\\n  .igv-generic-dialog-container .igv-generic-dialog-one-liner {\\n    color: #373737;\\n    width: 95%;\\n    height: 24px;\\n    line-height: 24px;\\n    text-align: left;\\n    margin-top: 8px;\\n    padding-left: 8px;\\n    overflow-wrap: break-word;\\n    background-color: white; }\\n  .igv-generic-dialog-container .igv-generic-dialog-label-input {\\n    margin-top: 8px;\\n    width: 95%;\\n    height: 24px;\\n    color: #373737;\\n    line-height: 24px;\\n    padding-left: 8px;\\n    background-color: white;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n    align-items: center; }\\n    .igv-generic-dialog-container .igv-generic-dialog-label-input div {\\n      width: 30%;\\n      height: 100%;\\n      font-size: 16px;\\n      text-align: right;\\n      padding-right: 8px;\\n      background-color: white; }\\n    .igv-generic-dialog-container .igv-generic-dialog-label-input input {\\n      display: block;\\n      height: 100%;\\n      width: 100%;\\n      padding-left: 4px;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-weight: 400;\\n      color: #373737;\\n      text-align: left;\\n      outline: none;\\n      border-style: solid;\\n      border-width: thin;\\n      border-color: #7F7F7F;\\n      background-color: white; }\\n    .igv-generic-dialog-container .igv-generic-dialog-label-input input {\\n      width: 50%;\\n      font-size: 16px; }\\n  .igv-generic-dialog-container .igv-generic-dialog-input {\\n    margin-top: 8px;\\n    width: calc(100% - 16px);\\n    height: 24px;\\n    color: #373737;\\n    line-height: 24px;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-around;\\n    align-items: center; }\\n    .igv-generic-dialog-container .igv-generic-dialog-input input {\\n      display: block;\\n      height: 100%;\\n      width: 100%;\\n      padding-left: 4px;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-weight: 400;\\n      color: #373737;\\n      text-align: left;\\n      outline: none;\\n      border-style: solid;\\n      border-width: thin;\\n      border-color: #7F7F7F;\\n      background-color: white; }\\n    .igv-generic-dialog-container .igv-generic-dialog-input input {\\n      font-size: 16px; }\\n  .igv-generic-dialog-container .igv-generic-dialog-ok-cancel {\\n    width: 100%;\\n    height: 28px;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-around;\\n    align-items: center; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div {\\n      margin-top: 32px;\\n      color: white;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: 14px;\\n      font-weight: 400;\\n      width: 75px;\\n      height: 28px;\\n      line-height: 28px;\\n      text-align: center;\\n      border-color: transparent;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: 2px; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:first-child {\\n      margin-left: 32px;\\n      margin-right: 0;\\n      background-color: #5ea4e0; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:last-child {\\n      margin-left: 0;\\n      margin-right: 32px;\\n      background-color: #c4c4c4; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:first-child:hover {\\n      cursor: pointer;\\n      background-color: #3b5c7f; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:last-child:hover {\\n      cursor: pointer;\\n      background-color: #7f7f7f; }\\n  .igv-generic-dialog-container .igv-generic-dialog-ok {\\n    width: 100%;\\n    height: 36px;\\n    margin-top: 32px;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-around;\\n    align-items: center; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok div {\\n      width: 98px;\\n      height: 36px;\\n      line-height: 36px;\\n      text-align: center;\\n      color: white;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: medium;\\n      font-weight: 400;\\n      border-color: white;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: 4px;\\n      background-color: #2B81AF; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok div:hover {\\n      cursor: pointer;\\n      background-color: #25597f; }\\n\\n.igv-popover {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  min-width: 128px;\\n  z-index: 4096;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: small;\\n  font-weight: 400;\\n  color: #4b4b4b;\\n  background-color: white;\\n  border-radius: 4px;\\n  border-color: #7F7F7F;\\n  border-style: solid;\\n  border-width: thin;\\n  display: none; }\\n\\n.igv-popover-header {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: flex-end;\\n  align-items: center;\\n  width: 100%;\\n  height: 24px;\\n  cursor: move;\\n  border-top-left-radius: 4px;\\n  border-top-right-radius: 4px;\\n  border-bottom-color: #7F7F7F;\\n  border-bottom-style: solid;\\n  border-bottom-width: thin;\\n  background-color: #eee; }\\n  .igv-popover-header div {\\n    margin-right: 4px;\\n    height: 12px;\\n    width: 12px;\\n    color: #7F7F7F; }\\n  .igv-popover-header div:hover {\\n    cursor: pointer;\\n    color: #444; }\\n\\n.igv-popover-track-popup-content {\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  max-height: 384px;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  background-color: white; }\\n  .igv-popover-track-popup-content div {\\n    margin-left: 4px;\\n    background-color: white; }\\n  .igv-popover-track-popup-content div:hover {\\n    cursor: pointer;\\n    background-color: #efefef; }\\n\\n.igv-popover-name-value {\\n  cursor: default;\\n  text-wrap: none;\\n  white-space: nowrap;\\n  max-width: 384px; }\\n\\n.igv-popover-name {\\n  font-weight: bold;\\n  padding-right: 4px;\\n  float: left; }\\n\\n.igv-popover-value {\\n  padding-left: 4px;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  max-width: 256px;\\n  display: inline-block; }\\n\\n.igv-trackgear-container {\\n  position: relative;\\n  width: 20px;\\n  height: 20px;\\n  margin-left: 4px;\\n  color: #7F7F7F; }\\n\\n.igv-trackgear-container:hover {\\n  cursor: pointer;\\n  color: #444; }\\n\\n.igv-trackgear-popover {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  min-width: 132px;\\n  z-index: 4096;\\n  cursor: pointer;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: small;\\n  font-weight: 400;\\n  color: #4b4b4b;\\n  background: white;\\n  border-radius: 4px;\\n  border-color: #7F7F7F;\\n  border-style: solid;\\n  border-width: thin;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: flex-end;\\n  text-align: left; }\\n  .igv-trackgear-popover > div:not(:first-child) {\\n    width: 100%; }\\n    .igv-trackgear-popover > div:not(:first-child) > div {\\n      background: white; }\\n    .igv-trackgear-popover > div:not(:first-child) > div:last-child {\\n      border-bottom-left-radius: 4px;\\n      border-bottom-right-radius: 4px;\\n      border-bottom-color: transparent;\\n      border-bottom-style: solid;\\n      border-bottom-width: thin; }\\n    .igv-trackgear-popover > div:not(:first-child) > div:hover {\\n      background: #efefef; }\\n\\n.igv-trackgear-popover-shim {\\n  padding-left: 8px;\\n  padding-right: 8px; }\\n\\n.igv-trackgear-popover-header {\\n  position: relative;\\n  width: 100%;\\n  height: 24px;\\n  cursor: move;\\n  border-top-color: transparent;\\n  border-top-left-radius: 4px;\\n  border-top-right-radius: 4px;\\n  border-bottom-color: #7F7F7F;\\n  border-bottom-style: solid;\\n  border-bottom-width: thin;\\n  background-color: #eee;\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-end;\\n  align-items: center; }\\n  .igv-trackgear-popover-header div {\\n    margin-right: 4px;\\n    height: 12px;\\n    width: 12px;\\n    color: #7F7F7F; }\\n  .igv-trackgear-popover-header div:hover {\\n    cursor: pointer;\\n    color: #444; }\\n\\n.igv-trackgear-popover-check-container {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center;\\n  width: 100%;\\n  height: 20px;\\n  background-color: transparent; }\\n  .igv-trackgear-popover-check-container div {\\n    padding-top: 2px;\\n    padding-left: 8px; }\\n  .igv-trackgear-popover-check-container div:first-child {\\n    position: relative;\\n    width: 12px;\\n    height: 12px; }\\n    .igv-trackgear-popover-check-container div:first-child svg {\\n      position: absolute;\\n      width: 12px;\\n      height: 12px; }\\n\\n.igvControlDiv {\\n  position: relative; }\\n\\n.igv-content-header {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center;\\n  margin-top: 10px;\\n  height: 16px;\\n  width: 100%; }\\n  .igv-content-header .igv-ideogram-shim {\\n    height: 100%;\\n    width: 50px;\\n    background-color: white; }\\n  .igv-content-header .igv-ideogram-content {\\n    height: 100%;\\n    background-color: white; }\\n  .igv-content-header .igv-ideogram-content-border-right {\\n    border-right-color: #292929;\\n    border-right-style: solid;\\n    border-right-width: 1px; }\\n\\n.igv-multi-locus-panel-border {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 1px;\\n  background-color: green;\\n  border-right-color: #ff0000;\\n  border-right-style: solid;\\n  border-right-width: 1px; }\\n\\n.igv-navbar {\\n  position: relative;\\n  padding-left: 8px;\\n  padding-right: 8px;\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  color: #444;\\n  font-size: 12px;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-weight: 400;\\n  line-height: 32px;\\n  margin-top: 2px;\\n  margin-bottom: 4px;\\n  height: 32px;\\n  border-style: solid;\\n  border-radius: 3px;\\n  border-width: thin;\\n  border-color: #bfbfbf;\\n  background-color: #f3f3f3; }\\n\\n.igv-nav-bar-left-container {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 32px;\\n  line-height: 32px; }\\n  .igv-nav-bar-left-container .igv-logo {\\n    width: 34px;\\n    height: 32px;\\n    margin-top: 6px;\\n    margin-right: 8px; }\\n  .igv-nav-bar-left-container .igv-current-genome {\\n    height: 32px;\\n    width: 40px;\\n    margin-left: 4px;\\n    margin-right: 4px;\\n    user-select: none;\\n    line-height: 32px;\\n    vertical-align: middle;\\n    text-align: center; }\\n\\n.igv-nav-bar-genomic-location {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 100%; }\\n\\n.igv-chromosome-select-widget-container {\\n  height: 100%;\\n  width: 125px;\\n  margin-right: 4px;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: space-around;\\n  align-items: center; }\\n  .igv-chromosome-select-widget-container select {\\n    display: block;\\n    cursor: pointer;\\n    width: 100px;\\n    height: 75%;\\n    outline: none;\\n    font-size: 12px;\\n    font-family: \\\"Open Sans\\\", sans-serif;\\n    font-weight: 400; }\\n\\n.igv-locus-size-group {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-left: 8px;\\n  height: calc(32px - 10px); }\\n  .igv-locus-size-group .igv-search-container {\\n    width: 200px;\\n    height: calc(32px - 10px);\\n    line-height: calc(32px - 10px);\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n    align-items: center; }\\n    .igv-locus-size-group .igv-search-container input {\\n      cursor: text;\\n      width: 85%;\\n      height: calc(32px - 10px);\\n      line-height: calc(32px - 10px);\\n      font-size: 12px;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-weight: 400;\\n      text-align: left;\\n      padding-left: 8px;\\n      margin-right: 8px;\\n      outline: none;\\n      border-style: solid;\\n      border-radius: 3px;\\n      border-width: thin;\\n      border-color: #bfbfbf;\\n      background-color: white; }\\n    .igv-locus-size-group .igv-search-container div {\\n      cursor: pointer;\\n      height: 16px;\\n      width: 16px; }\\n  .igv-locus-size-group .igv-windowsizepanel-content-div {\\n    margin-left: 4px;\\n    user-select: none; }\\n\\n.igv-nav-bar-right-container {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 32px;\\n  line-height: 32px; }\\n  .igv-nav-bar-right-container .igv-nav-bar-toggle-button-container {\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-between;\\n    align-items: center;\\n    height: 100%; }\\n    .igv-nav-bar-right-container .igv-nav-bar-toggle-button-container div {\\n      margin-left: 0;\\n      margin-right: 4px; }\\n    .igv-nav-bar-right-container .igv-nav-bar-toggle-button-container div:last-child {\\n      margin-left: 0;\\n      margin-right: 0; }\\n  .igv-nav-bar-right-container .igv-nav-bar-toggle-button-container-750 {\\n    display: none; }\\n  .igv-nav-bar-right-container .igv-zoom-widget {\\n    color: #737373;\\n    font-size: 18px;\\n    height: 32px;\\n    line-height: 32px;\\n    margin-left: 8px;\\n    user-select: none;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center; }\\n    .igv-nav-bar-right-container .igv-zoom-widget div {\\n      cursor: pointer;\\n      margin-left: unset;\\n      margin-right: unset; }\\n    .igv-nav-bar-right-container .igv-zoom-widget div:first-child {\\n      height: 24px;\\n      width: 24px;\\n      margin-left: unset;\\n      margin-right: 8px; }\\n    .igv-nav-bar-right-container .igv-zoom-widget div:last-child {\\n      height: 24px;\\n      width: 24px;\\n      margin-left: 8px;\\n      margin-right: unset; }\\n    .igv-nav-bar-right-container .igv-zoom-widget div:nth-child(even) {\\n      display: block;\\n      height: fit-content; }\\n    .igv-nav-bar-right-container .igv-zoom-widget input {\\n      display: block;\\n      width: 125px; }\\n    .igv-nav-bar-right-container .igv-zoom-widget svg {\\n      display: block; }\\n  .igv-nav-bar-right-container .igv-zoom-widget-900 {\\n    color: #737373;\\n    font-size: 18px;\\n    height: 32px;\\n    line-height: 32px;\\n    margin-left: 8px;\\n    user-select: none;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 div {\\n      cursor: pointer;\\n      margin-left: unset;\\n      margin-right: unset; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 div:first-child {\\n      height: 24px;\\n      width: 24px;\\n      margin-left: unset;\\n      margin-right: 8px; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 div:last-child {\\n      height: 24px;\\n      width: 24px;\\n      margin-left: 8px;\\n      margin-right: unset; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 div:nth-child(even) {\\n      width: 0;\\n      height: 0;\\n      display: none; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 input {\\n      width: 0;\\n      height: 0;\\n      display: none; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 svg {\\n      display: block; }\\n  .igv-nav-bar-right-container .igv-zoom-widget-hidden {\\n    display: none; }\\n\\n.igv-nav-bar-button {\\n  box-sizing: unset;\\n  padding-left: 6px;\\n  padding-right: 6px;\\n  height: 18px;\\n  text-transform: capitalize;\\n  user-select: none;\\n  line-height: 18px;\\n  text-align: center;\\n  vertical-align: middle;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 11px;\\n  font-weight: 200;\\n  color: #737373;\\n  background-color: #f3f3f3;\\n  border-color: #737373;\\n  border-style: solid;\\n  border-width: thin;\\n  border-radius: 6px; }\\n\\n.igv-nav-bar-button-clicked {\\n  color: white;\\n  background-color: #737373; }\\n\\n.igv-nav-bar-button:hover {\\n  cursor: pointer; }\\n\\n.igv-logo-nonav {\\n  margin-left: 4px;\\n  margin-top: 12px;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 34px;\\n  height: 16px; }\\n\\n.igv-search-results {\\n  position: absolute;\\n  top: 32px;\\n  left: 2px;\\n  height: 320px;\\n  width: 213px;\\n  background-color: white;\\n  border-color: #7F7F7F;\\n  border-style: solid;\\n  border-width: thin;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  z-index: 9999; }\\n  .igv-search-results tr {\\n    font-family: \\\"Open Sans\\\", sans-serif;\\n    font-size: small;\\n    font-weight: 400;\\n    color: #444; }\\n  .igv-search-results tr:hover,\\n  .igv-search-results tr:focus,\\n  .igv-search-results tr:active {\\n    cursor: pointer;\\n    font-weight: 700;\\n    color: #141414; }\\n\\n.igv-root-div {\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  height: auto;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n  padding-top: 4px; }\\n\\n.igv-content-div {\\n  position: relative;\\n  width: 100%;\\n  height: 100%; }\\n\\n.igv-track-container-div {\\n  user-select: none;\\n  position: relative;\\n  clear: both; }\\n\\n.igv-track-div {\\n  position: relative;\\n  width: 100%;\\n  margin-top: 5px;\\n  margin-bottom: 5px; }\\n\\n.igv-viewport-container {\\n  position: absolute;\\n  left: 50px;\\n  right: 50px;\\n  height: 100%;\\n  white-space: nowrap;\\n  overflow-x: hidden;\\n  overflow-y: hidden; }\\n\\n.igv-viewport-div {\\n  position: relative;\\n  display: inline-block;\\n  height: 100%;\\n  overflow-x: hidden;\\n  overflow-y: hidden; }\\n\\n.igv-viewport-content-div {\\n  position: absolute;\\n  width: 100%; }\\n\\n.igv-viewport-message {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  color: rgba(0, 0, 0, 0.15);\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 25px;\\n  font-weight: bold;\\n  user-select: none; }\\n\\n.igv-whole-genome-container {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  width: 100%;\\n  height: 100%;\\n  background-color: white; }\\n  .igv-whole-genome-container div {\\n    font-family: \\\"Open Sans\\\", sans-serif;\\n    font-size: 10px;\\n    font-weight: 400;\\n    color: #444;\\n    height: 100%;\\n    text-align: center;\\n    border-right-color: #bfbfbf;\\n    border-right-style: solid;\\n    border-right-width: thin; }\\n    .igv-whole-genome-container div span {\\n      display: block;\\n      padding-top: 6px;\\n      text-overflow: ellipsis; }\\n  .igv-whole-genome-container div:last-child {\\n    border-right-color: transparent; }\\n  .igv-whole-genome-container div:hover,\\n  .igv-whole-genome-container div:focus,\\n  .igv-whole-genome-container div:active {\\n    cursor: pointer;\\n    background-color: #efefef; }\\n\\n.igv-viewport-div-border-right {\\n  border-right-color: #292929;\\n  border-right-style: solid;\\n  border-right-width: 1px; }\\n\\n.igv-multi-locus-panel-close-container {\\n  position: absolute;\\n  top: 4px;\\n  right: 4px;\\n  width: 16px;\\n  height: 16px;\\n  color: #666666;\\n  z-index: 1000; }\\n\\n.igv-multi-locus-panel-close-container:hover {\\n  cursor: pointer;\\n  color: #434343; }\\n\\n.igv-multi-locus-panel-label-div {\\n  position: absolute;\\n  left: 50%;\\n  top: 25%;\\n  transform: translate(-50%, -25%);\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 400;\\n  text-align: center;\\n  min-width: 16px;\\n  z-index: 64;\\n  color: #373737;\\n  background-color: white;\\n  padding: 1px; }\\n\\n.igv-multi-locus-panel-label-div:hover {\\n  cursor: pointer; }\\n\\n.igv-viewport-ruler {\\n  cursor: pointer;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 10px;\\n  font-weight: 200;\\n  text-align: center; }\\n  .igv-viewport-ruler > div {\\n    height: 100%; }\\n\\n.igv-viewport-sequence {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 8px;\\n  font-weight: 200;\\n  text-align: center; }\\n\\n.igv-viewport-spinner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  z-index: 1024;\\n  width: 24px;\\n  height: 24px;\\n  pointer-events: none;\\n  color: #737373; }\\n\\n.igv-track-container-spinner {\\n  position: absolute;\\n  top: 90%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  z-index: 1024;\\n  width: 24px;\\n  height: 24px;\\n  pointer-events: none;\\n  color: #737373; }\\n\\n.igv-ruler-sweeper-div {\\n  display: none;\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 0;\\n  height: 100%;\\n  z-index: 99999;\\n  background-color: rgba(68, 134, 247, 0.25); }\\n\\n.igv-right-hand-gutter {\\n  position: absolute;\\n  right: 0;\\n  width: 36px;\\n  height: 100%;\\n  background: white; }\\n\\n.igv-left-hand-gutter {\\n  position: absolute;\\n  left: 0;\\n  width: 50px;\\n  height: 100%; }\\n  .igv-left-hand-gutter canvas {\\n    position: absolute; }\\n\\n.igv-track-menu-border-top {\\n  border-top-color: #a2a2a2;\\n  border-top-style: solid;\\n  border-top-width: thin; }\\n\\n.igv-track-menu-category {\\n  padding-left: 4px;\\n  font-weight: 400; }\\n\\n.igv-track-drag-scrim {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 256;\\n  background-color: rgba(68, 134, 247, 0.25); }\\n\\n.igv-track-manipulation-handle {\\n  cursor: pointer;\\n  position: absolute;\\n  right: 36px;\\n  width: 12px;\\n  margin-left: 2px;\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: medium;\\n  border-color: #c4c4c4;\\n  border-style: solid;\\n  border-width: thin;\\n  border-top-right-radius: 6px;\\n  border-bottom-right-radius: 6px;\\n  z-index: 512;\\n  background-color: #c4c4c4; }\\n\\n.igv-track-manipulation-handle:hover,\\n.igv-track-manipulation-handle:focus,\\n.igv-track-manipulation-handle:active {\\n  border-color: #7e7e7e;\\n  background-color: #7e7e7e; }\\n\\n.igv-track-label {\\n  position: absolute;\\n  left: 8px;\\n  top: 4px;\\n  width: auto;\\n  height: auto;\\n  max-width: 200px;\\n  padding-left: 4px;\\n  padding-right: 4px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: small;\\n  font-weight: 400;\\n  text-align: center;\\n  user-select: none;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  border-color: #444;\\n  border-radius: 2px;\\n  border-style: solid;\\n  border-width: thin;\\n  background-color: white;\\n  z-index: 128;\\n  cursor: pointer; }\\n\\n.igv-track-label:hover,\\n.igv-track-label:focus,\\n.igv-track-label:active {\\n  background-color: rgba(0, 0, 0, 0.05); }\\n\\n.igv-scrollbar-outer-div {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 14px;\\n  height: 100%;\\n  background-color: white; }\\n  .igv-scrollbar-outer-div div {\\n    position: absolute;\\n    top: 0;\\n    left: 3px;\\n    width: 8px;\\n    border-style: solid;\\n    border-width: thin;\\n    border-color: #c4c4c4;\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    border-bottom-left-radius: 4px;\\n    border-bottom-right-radius: 4px;\\n    background-color: white; }\\n  .igv-scrollbar-outer-div div:hover,\\n  .igv-scrollbar-outer-div div:focus,\\n  .igv-scrollbar-outer-div div:active {\\n    cursor: pointer;\\n    background-color: #c4c4c4; }\\n\\n.zoom-in-notice-container {\\n  position: absolute;\\n  top: 10px;\\n  left: 50%; }\\n  .zoom-in-notice-container div {\\n    position: relative;\\n    left: -50%;\\n    font-family: \\\"Open Sans\\\", sans-serif;\\n    font-size: medium;\\n    font-weight: 400;\\n    color: #3f3f3f;\\n    background-color: rgba(255, 255, 255, 0.51);\\n    z-index: 64; }\\n\\n.igv-center-guide {\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 50%;\\n  width: 8px;\\n  z-index: 8;\\n  display: none;\\n  user-select: none;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  border-left-style: dashed;\\n  border-left-width: thin;\\n  border-right-style: dashed;\\n  border-right-width: thin; }\\n\\n.igv-center-guide-wide {\\n  background-color: rgba(0, 0, 0, 0);\\n  border-left-color: rgba(127, 127, 127, 0.51);\\n  border-right-color: rgba(127, 127, 127, 0.51); }\\n\\n.igv-center-guide-thin {\\n  left: 50%;\\n  width: 1px;\\n  background-color: rgba(0, 0, 0, 0);\\n  border-left-color: rgba(127, 127, 127, 0.51);\\n  border-right-color: rgba(0, 0, 0, 0);\\n  /*background-color: rgba(127, 127, 127, 0.51);*/\\n  /*border-left-color: rgba(0,0,0,0);*/\\n  /*border-right-color: rgba(0,0,0,0);*/ }\\n\\n.igv-cursor-tracking-guide {\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 50%;\\n  width: 1px;\\n  z-index: 1;\\n  border-left-style: dotted;\\n  border-left-width: thin;\\n  border-left-color: rgba(127, 127, 127, 0.76);\\n  display: none;\\n  user-select: none;\\n  -moz-user-select: none;\\n  -webkit-user-select: none; }\\n\\n.igv-clickable {\\n  cursor: pointer;\\n  background-color: white; }\\n\\n#color-by-tag {\\n  color: #444; }\\n\\n#color-by-tag:hover,\\n#color-by-tag:focus,\\n#color-by-tag:active {\\n  cursor: pointer;\\n  padding-left: 2px;\\n  padding-right: 2px;\\n  color: white;\\n  border-color: #444;\\n  border-radius: 2px;\\n  border-style: solid;\\n  border-width: thin;\\n  background-color: #7f7f7f; }\\n\\n.igv-ellipsis {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\\n.igv-spinner-container {\\n  color: #3f3f3f;\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  padding-top: 8px;\\n  font-size: 24px;\\n  z-index: 512; }\\n\\n.igv-fa-check-visible {\\n  color: inherit;\\n  padding-right: 2px; }\\n\\n.igv-fa-check-hidden {\\n  color: transparent;\\n  padding-right: 2px; }\\n\\n.validateTips {\\n  border: 1px solid transparent;\\n  padding: 0.3em; }\\n  .validateTips fieldset {\\n    border: 0; }\\n\\n.igv-spacer-10 {\\n  height: 10px;\\n  width: 100%;\\n  font-size: 0;\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  display: block; }\\n\\n.igv-fa5-spin {\\n  -webkit-animation: igv-fa5-spin 2s infinite linear;\\n  animation: igv-fa5-spin 2s infinite linear; }\\n\\n@-webkit-keyframes igv-fa5-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg); } }\\n@keyframes igv-fa5-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg); } }\\n\\n/*# sourceMappingURL=igv.css.map */\\n';\n\t  var style = document.createElement('style');\n\t  style.setAttribute('type', 'text/css');\n\t  style.innerHTML = css;\n\t  document.head.insertBefore(style, document.head.childNodes[document.head.childNodes.length - 1]);\n\t}\n\n\tvar _version = \"2.4.0 (17f53b3d2cf786965300bdda2ca06a474de17699)\";\n\n\tfunction version$2() {\n\t  return _version;\n\t}\n\n\t// Defines the top-level API for the igv module\n\n\tfunction setGoogleOauthToken(accessToken) {\n\t  return oauth.setToken(accessToken);\n\t}\n\n\tfunction setApiKey(apiKey) {\n\t  return google.setApiKey(apiKey);\n\t} // for juicebox\n\n\n\tfunction appendRightHandGutter($parent) {\n\t  TrackView.prototype.appendRightHandGutter.call(this, $parent);\n\t}\n\n\tvar xhr = igvxhr;\n\tvar Color = IGVColor;\n\tvar graphics = IGVGraphics;\n\tembedCSS();\n\tvar index$1 = {\n\t  createBrowser: createBrowser,\n\t  removeBrowser: removeBrowser,\n\t  visibilityChange: visibilityChange,\n\t  setGoogleOauthToken: setGoogleOauthToken,\n\t  oauth: oauth,\n\t  version: version$2,\n\t  download: download,\n\t  getBrowser: getBrowser,\n\t  doAutoscale: doAutoscale,\n\t  graphics: graphics,\n\t  createTrack: createTrack,\n\t  getFilename: getFilename,\n\t  getExtension: getExtension,\n\t  isFilePath: isFilePath,\n\t  inferFileFormat: inferFileFormat,\n\t  inferTrackTypes: inferTrackTypes,\n\t  knownFileExtensions: knownFileExtensions,\n\t  appendRightHandGutter: appendRightHandGutter,\n\t  attachDialogCloseHandlerWithParent: attachDialogCloseHandlerWithParent,\n\t  guid: guid,\n\t  pageCoordinates: pageCoordinates,\n\t  translateMouseCoordinates: translateMouseCoordinates,\n\t  createIcon: createIcon,\n\t  GtexUtils: GtexUtils,\n\t  xhr: xhr,\n\t  Color: Color,\n\t  splitLines: splitLines,\n\t  isString: isString,\n\t  numberFormatter: numberFormatter,\n\t  getDataWrapper: getDataWrapper,\n\t  setApiKey: setApiKey,\n\t  createColorSwatchSelector: createColorSwatchSelector,\n\t  makeDraggable: makeDraggable,\n\t  GenericContainer: GenericContainer,\n\t  Popover: Popover,\n\t  AlertDialog: AlertDialog,\n\t  InputDialog: InputDialog,\n\t  TrackRemovalDialog: TrackRemovalDialog,\n\t  DataRangeDialog: DataRangeDialog,\n\t  MenuUtils: MenuUtils,\n\t  Alert: Alert,\n\t  google: google\n\t};\n\n\treturn index$1;\n\n})));\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnFA;AAiBA;AACA;AACA;AAqBA;AAGA;AAEA;AAyBA;AAEA;AACA;AAMA;AACA;AAcA;AACA;AAEA;AAiBA;AAeA;AAEA;AAuBA;AAEA;AAwCA;AA6HA;AAiBA;AAEA;AAKA;AAEA;AAEA;AAIA;AACA;AAEA;AAWA;AAEA;AAGA;AACA;AASA;AACA;AAEA;AACA;AAcA;AAQA;AAGA;AAEA;;;;;;;;;;;;;AA8DA;AAwBA;AAMA;AAKA;AA+CA;AAMA;AAMA;AACA;AAGA;AAAA;AAiBA;AAEA;AAMA;AAWA;AAsBA;AAMA;AAIA;AAIA;AAbA;AAiBA;AASA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AA4BA;AACA;AACA;AA4CA;AACA;AACA;AAEA;AAgBA;AASA;AAEA;AASA;AAgBA;AAEA;AAQA;AAUA;AAKA;AAEA;AAIA;AAcA;AAiBA;AAEA;AA0BA;AACA;AAMA;AAMA;AA6BA;AAMA;AAIA;AAEA;AAMA;AAOA;AACA;AACA;AACA;AAGA;AAmBA;AAEA;AAQA;AAOA;AACA;AAMA;AAWA;AACA;AAEA;AACA;AAEA;AACA;AAWA;AACA;AAEA;AAWA;AASA;AAOA;AASA;AAEA;AASA;AAGA;AAIA;AAOA;AACA;AAcA;AAeA;AAMA;AAMA;AAUA;AACA;AAEA;AAaA;AAsBA;AAKA;AAGA;AAuBA;AACA;AAsBA;AAEA;AAqCA;AAIA;AAEA;AAqBA;AACA;AACA;AAYA;AAEA;AAMA;AAOA;AAGA;AAgBA;AAUA;AAKA;AACA;AACA;AACA;AAEA;AAyBA;AACA;AACA;AAuBA;AADA;AAKA;AALA;AAeA;AACA;AAEA;AAKA;AAsBA;AACA;AAKA;AACA;AAcA;AAEA;AAoBA;AACA;AAEA;AACA;AAIA;AAEA;AAQA;AAIA;AAKA;AAMA;AAQA;AAeA;AASA;AAOA;AACA;AAKA;AACA;AACA;AACA;AACA;AAQA;AAEA;AAkCA;AACA;AAsCA;;;;;AAcA;AAMA;AAOA;AAGA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAkBA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AAGA;AAWA;AACA;AAOA;AAEA;AAWA;AACA;AAiBA;AACA;AACA;AAGA;AA0BA;AACA;AACA;AAIA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAUA;AACA;AAEA;AAEA;AAiBA;AAGA;AAoBA;AACA;AAiBA;AACA;AAYA;AAEA;AAMA;AACA;AACA;AAGA;AAKA;AACA;AAIA;AAEA;AACA;AAMA;AACA;AA+BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AAGA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAkCA;AACA;AACA;AAeA;AAEA;AAUA;AACA;AAGA;AAsCA;AAmBA;AAEA;AAUA;AA+BA;AACA;AAaA;AACA;AACA;AAuCA;AACA;AA0DA;AAGA;AAWA;AACA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgRA;AAuDA;AAEA;AAgHA;AAGA;AAqCA;AAgCA;AACA;AASA;AACA;AAkBA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAQA;AACA;AAEA;AACA;AAEA;AAEA;AAWA;AAEA;AAIA;AAAA;AAAA;AAYA;AAUA;AASA;AAGA;AAGA;AAGA;AAOA;AAGA;AAEA;AAgCA;AAUA;AACA;AAEA;AAcA;AACA;AAEA;AAOA;AA0BA;AAEA;AAQA;AASA;AAGA;AAEA;AAYA;AAeA;AAEA;AAiBA;AAGA;AAKA;AAQA;AAyEA;AAaA;AAKA;AASA;AAMA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AANA;AASA;AACA;AA2BA;AACA;AAEA;AAEA;AAOA;AAEA;AAaA;AACA;AACA;AAEA;AAqBA;AACA;AAEA;AAWA;AAKA;AA+BA;AACA;AAEA;AAmEA;AAEA;AAgBA;AAEA;AAkBA;AAIA;AASA;AAEA;AACA;AACA;AAOA;AAMA;AA+BA;AAKA;AAEA;AAEA;AAqDA;AAYA;AACA;AAEA;AAgBA;AAEA;AAMA;AACA;AAmBA;AACA;AAKA;AACA;AAkCA;AAKA;AACA;AAKA;AACA;AAoCA;AACA;AACA;AACA;AAEA;AAqBA;AAgCA;AA4BA;AAYA;;;;;;;;;;;;AAsBA;AAgBA;AACA;AACA;AACA;AAoCA;AAEA;AACA;AAGA;AAEA;AAEA;AACA;AAGA;AACA;AAIA;AAGA;AAKA;AACA;AAEA;AAKA;AAGA;AACA;AAEA;AAEA;AAEA;AAGA;AA0BA;AACA;AAiBA;AAGA;AAKA;AAKA;AAOA;AAEA;AAIA;AAKA;AASA;AACA;AAQA;AAKA;AAEA;AAOA;AAEA;AAMA;AAKA;AAMA;AASA;AA0BA;AAIA;AAiBA;AACA;AAkBA;AAEA;AAWA;AAMA;AAWA;AAWA;AAGA;AAEA;AACA;AAQA;AAMA;AACA;AACA;AACA;;;;;;;;;AAqBA;AAaA;AASA;AAeA;AAOA;AACA;AAcA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAgBA;AACA;AAMA;AAGA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAIA;AAKA;AAIA;AAGA;AACA;AACA;AACA;AAWA;AAEA;AAEA;AAIA;AAGA;AACA;AAIA;AAiBA;AAGA;AAKA;AASA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AAQA;AAEA;AACA;AACA;AAMA;AAGA;AAOA;AAIA;AACA;AACA;AACA;AAEA;AAOA;AASA;AAkBA;;;;;AAUA;AAKA;AAEA;;;AAcA;;;AAUA;AASA;AAKA;;;;AAUA;;;;;AAgBA;AAIA;AAKA;;;AAgBA;;;AAYA;;;AAYA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAGA;AAEA;AAKA;AACA;AACA;AAKA;;;AASA;AAQA;;;;AAeA;AAKA;;;;AAOA;AAEA;AACA;;;;AAUA;AAKA;AAKA;AAGA;AAEA;AAEA;AAEA;AAnBA;AA0BA;AACA;AAGA;AA9BA;AAsCA;AAKA;AACA;AACA;AACA;AAEA;AAKA;AAsBA;AAGA;AASA;AAOA;AAkBA;AAGA;AAQA;AAEA;AAaA;AA1IA;AAkJA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAKA;AAGA;AACA;AAGA;AAGA;AACA;AAGA;AAMA;AAEA;AAGA;AAEA;AAGA;AAGA;AAGA;AAGA;AAOA;AAQA;AACA;AACA;AAEA;AAUA;AACA;AACA;AAEA;AA9PA;AAiRA;AAEA;AAMA;AAOA;AACA;AAEA;AAEA;AASA;AAMA;AAYA;AAEA;AAKA;AAaA;AAKA;AACA;AAWA;AAKA;AAMA;AACA;AACA;AAWA;AASA;AAMA;;;AAiBA;AAMA;AAeA;AAGA;;;AASA;AAQA;AAEA;AAIA;AACA;AAIA;AASA;AAKA;AAyBA;;;;;;;;;AAmBA;AAIA;AAGA;AAGA;AAEA;AAeA;AAEA;AACA;AACA;AAEA;AAKA;AAuCA;AAiBA;AAWA;AAQA;AAEA;AACA;AAEA;AAEA;AAOA;AAEA;AAOA;AAEA;AAEA;AAEA;AAKA;AAGA;AAEA;AAGA;AAEA;AAEA;AAaA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAqBA;AAEA;AACA;AACA;AAQA;AASA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAmBA;AAWA;AAIA;AACA;AAKA;AACA;AAOA;AAEA;AACA;AACA;AACA;AAYA;AAaA;AACA;AAGA;AAiDA;AAkBA;AAyBA;AAGA;AAQA;AAKA;AAMA;AAgBA;AACA;AAGA;AACA;AAsBA;AASA;AAMA;AAYA;AAEA;AAMA;AAGA;AAEA;AA4EA;AAEA;AAEA;AACA;AACA;AAEA;AAKA;AAIA;AAaA;AAMA;AAQA;AASA;AAqBA;AASA;AAUA;AAEA;AASA;AAyBA;AAEA;AAMA;AACA;AAGA;AAsBA;AAEA;AAKA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AASA;AAIA;AAEA;AAMA;AAqBA;AAiBA;AAEA;;;;;;;;AAgBA;AASA;AAEA;AAEA;AAOA;AAQA;AAKA;AAMA;AAEA;AAaA;AAGA;AAGA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAUA;AAGA;AAWA;AAGA;AAkBA;AA4CA;AAQA;AAOA;AAOA;AAoDA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AAGA;AAGA;AAEA;AAGA;AAMA;AAEA;AAEA;AAEA;AAEA;AAGA;AAEA;AAOA;AAKA;AAOA;AAEA;AACA;AAIA;AAIA;AACA;AAEA;AAOA;AAEA;AAGA;AA2BA;AAIA;AACA;AAWA;AAEA;AAKA;AAKA;AACA;AAuDA;AACA;AAGA;AAoBA;AAKA;AAUA;;;;;;;;;;;;;;;;;;;;;AA+BA;AAEA;AACA;AAGA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAOA;AAEA;AAOA;AAMA;AAEA;AAEA;AAMA;AAEA;AAGA;AAaA;AAaA;AAOA;AAQA;AACA;AAIA;AAQA;AACA;AACA;AASA;AACA;AACA;AAaA;AAcA;AAKA;AAqBA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAOA;AACA;AAcA;AAOA;AACA;AACA;AAEA;AAsBA;AACA;AAEA;AAKA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAIA;AAEA;AACA;AAIA;AAGA;AAIA;AAOA;AACA;AAGA;AAEA;AACA;AASA;AACA;AACA;AAGA;AAIA;AACA;AAWA;AAEA;AAEA;AAIA;AACA;AAMA;AAGA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AAGA;AAGA;AAKA;AAGA;AAEA;AAEA;AAEA;AAGA;AAEA;AAYA;AAGA;AAMA;AAOA;AAEA;AAIA;AACA;AAYA;AAIA;AACA;AAFA;AAWA;AAEA;AACA;AAEA;AAEA;AAKA;AAEA;AAKA;AAKA;AAKA;AACA;AACA;AAGA;AAEA;AAGA;AAEA;AAEA;AAGA;AAKA;AAOA;AASA;AAGA;AAqBA;AAQA;AAGA;AAGA;AACA;AAGA;AAMA;AACA;AACA;AACA;AACA;AACA;AAWA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAcA;AAEA;AAEA;AAEA;AASA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAYA;AAEA;AACA;AAGA;AAEA;AAWA;AAEA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAiBA;AAaA;AAEA;AAUA;AAoBA;AACA;AAeA;AASA;AACA;AAkBA;AAQA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AAGA;AAOA;AAIA;AAEA;AAkBA;AAuBA;AAOA;AACA;AAKA;AASA;AA0BA;AAgBA;AACA;AAsCA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AAOA;AAmBA;AAIA;AACA;AAEA;AAEA;AAIA;AACA;AAYA;AAMA;AA2CA;AAWA;AACA;AACA;AAeA;AAMA;AAkCA;AAEA;AAEA;AACA;AACA;AAOA;AAMA;AACA;AAkBA;AA4BA;AAEA;AACA;AACA;AAEA;AAGA;AAIA;AAKA;AAGA;AAEA;AAEA;AAMA;AAKA;AAUA;AAEA;AAKA;AAkBA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AAgBA;AAGA;AASA;AAEA;AAEA;AAaA;AAKA;AAIA;AAiBA;AAKA;;;AAaA;AAgBA;AAKA;AAKA;AAGA;AAKA;AAKA;AAOA;AACA;AAKA;AAQA;AAKA;AAEA;AAEA;AAEA;AAWA;AAIA;AAgBA;AAOA;AAIA;AAmBA;AAQA;AAaA;AAiBA;AAGA;AAUA;AAMA;AAWA;AAQA;AAKA;AAEA;AAQA;AACA;AAgBA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AAsBA;AAwCA;AAIA;AAmBA;AAOA;AAOA;AACA;AAUA;AAOA;AAKA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAKA;AAKA;AAEA;AAEA;AAGA;AAkCA;AAiCA;AAKA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAcA;AAEA;AAsBA;AAOA;AASA;AAgBA;AAIA;AACA;AACA;AAEA;AAGA;AASA;AAuBA;AAkBA;AAQA;AAGA;AAEA;AAOA;AAaA;AAqBA;AAGA;AACA;AAEA;AAMA;AAEA;AACA;AAUA;AAEA;AAMA;AAiDA;AAEA;AASA;AAcA;AAOA;AAgBA;AAKA;AAGA;AAKA;AACA;AA2DA;AAEA;AAwBA;AAOA;AAOA;AAWA;AAWA;AAoBA;AAEA;AAUA;AACA;AACA;AAaA;AACA;AAEA;AAUA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAGA;AAEA;AAeA;AAGA;AAGA;AAiCA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAGA;AAEA;AAIA;AAGA;AAOA;AACA;AAKA;AAIA;AACA;AAKA;AAMA;AACA;AACA;AAcA;AAEA;AAKA;AAWA;AAGA;AAYA;AACA;AAEA;AAQA;AAMA;AAKA;AAEA;AAEA;AAEA;AAGA;AAEA;AAEA;AAKA;AAOA;AAEA;AACA;AAQA;AAIA;AAEA;AAOA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAIA;AAEA;AACA;AAKA;AACA;AAKA;AAOA;AAgBA;AACA;AAEA;AAEA;AAKA;AAMA;AACA;AAEA;AAKA;AAEA;AAGA;AAGA;AAIA;AAKA;AAKA;AAKA;AASA;AAKA;AASA;AACA;AAEA;AAKA;AAEA;AAKA;AAKA;AAKA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAEA;AAKA;AAmBA;AAUA;AAqCA;AAEA;AAiBA;AAEA;AACA;AAEA;AACA;AAEA;AAwBA;AAKA;AAGA;AAGA;AAwBA;AAsBA;AACA;AAUA;AAIA;AAkBA;AA2BA;AAMA;AAsBA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA8BA;AAEA;AAuDA;AAqCA;AAOA;AAMA;AA8BA;AAMA;AAOA;AAKA;AAEA;AACA;AACA;AAGA;AAuCA;AAKA;AAqBA;AAYA;AAYA;AACA;AACA;AACA;AAqBA;AAEA;AAEA;AACA;AAEA;AAEA;AAKA;AAyBA;AAUA;AAgBA;AAsBA;AAKA;AAMA;AAOA;AAEA;AAIA;AAOA;AAEA;AAKA;AAGA;AAaA;AAMA;AAMA;AAOA;AAaA;AAGA;AACA;AAEA;AAOA;AAwBA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAwCA;AAGA;AAGA;AAKA;AAKA;AAGA;AAGA;AAKA;AAKA;AAEA;AAKA;AACA;AAMA;AAUA;AAKA;AAkCA;AA0DA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AAGA;AAcA;AACA;AAEA;AACA;AAEA;AAWA;AA0BA;AAQA;AAEA;AAWA;AAoBA;AAEA;AAaA;AACA;AACA;AAGA;AAQA;AAQA;AACA;AAcA;AAEA;AAGA;AAEA;AASA;AAOA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AASA;AAoBA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAKA;AAUA;AAQA;AAIA;AAEA;AAEA;AAIA;AACA;AAOA;AAqBA;AAGA;AACA;AACA;AAEA;AAQA;AAGA;AAKA;AAOA;AAuBA;AACA;AACA;AAEA;AACA;AACA;AAOA;AAEA;AAEA;AAcA;AAGA;AASA;AAwBA;AAYA;AAEA;AAWA;AAEA;AA6BA;AAaA;AAuBA;AAgDA;AA+CA;AAmBA;AAIA;AASA;AAYA;AAKA;AAIA;AAEA;AAKA;AACA;AAGA;AAQA;AAmBA;AAIA;AAsBA;AAKA;AAWA;AAEA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAgCA;AAmEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAsBA;AAcA;AAmBA;AAsDA;AAmEA;AAEA;AAcA;AAeA;AACA;AAYA;AACA;AAoBA;AAKA;AAIA;AAMA;AAoBA;AAMA;AACA;AAYA;AACA;AAUA;AACA;AA4BA;AACA;AAoBA;AAIA;AAEA;AAiBA;AAEA;AAOA;AAEA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAWA;AAaA;AAyBA;AAQA;AAEA;AAEA;AAEA;;;;;;AAYA;AAUA;AAIA;AAGA;AACA;;AAeA;AAEA;AACA;;;AAQA;;;AA94XA;AAg6XA;AAGA;AAEA;AAEA;AAKA;AAUA;AACA;AAEA;AAKA;AAEA;AAWA;AAkBA;AAyJA;AAEA;AA+CA;AACA;AAUA;AACA;AAcA;AACA;AAaA;AACA;AAcA;AACA;AAaA;AACA;AA4BA;AACA;AAIA;AAoBA;AAcA;AAIA;AAIA;AAOA;AACA;AAEA;AAsBA;AAEA;AAiEA;AAEA;AAEA;AAEA;AAWA;AAqEA;AAyHA;AASA;AAyGA;AAsBA;AAyWA;AAyDA;AAGA;AAqJA;AACA;AAQA;AACA;AAEA;AACA;AAKA;AACA;AAWA;AACA;AAWA;AACA;AAMA;AACA;AAMA;AACA;AAOA;AACA;AAOA;AACA;AAeA;AACA;AAEA;AACA;AAeA;AAGA;AAKA;AAEA;AASA;AACA;AAEA;AAGA;AACA;AAEA;AAiBA;AA0CA;AACA;AAEA;AACA;AAQA;AAEA;AAeA;AAiBA;AAOA;;;;;;;;;;;AAeA;AAGA;AAYA;AAsBA;AAQA;AAOA;AAKA;AAEA;AAWA;AAEA;AASA;AAGA;AAEA;AAIA;AAEA;AAEA;AAPA;AAeA;AAkCA;;;;AAiCA;;AASA;AASA;;;;;;;;AA8BA;AAGA;AAIA;AAEA;AAKA;AACA;AAEA;AAQA;AAOA;AAOA;AAGA;AASA;AAEA;AAMA;AAYA;AAOA;;;AA4BA;AASA;;;AAiBA;AAEA;;;;AAgBA;;;;AAiBA;;;;AAoBA;AA0BA;AAEA;AAEA;AAaA;AAMA;AAQA;AAgBA;AAKA;;;AAYA;;;;;AAiBA;AAQA;AACA;AACA;AACA;AAEA;AAGA;;;AAmBA;;AAQA;;AAiBA;AAIA;;;AAcA;AAEA;AAmCA;AAyBA;;AAUA;;AAeA;;AAcA;;AAWA;;AAeA;AAEA;AAEA;;;AAaA;;;AAeA;;;AAUA;AAMA;;AAeA;;AAUA;;AAuBA;;AAoBA;;AAkBA;;;;AAWA;AAEA;AAGA;AAKA;AAGA;AACA;AACA;AACA;AAGA;AAIA;AACA;AAGA;AAOA;AACA;AACA;AACA;AAGA;AAGA;AAIA;AAEA;AAEA;AAIA;AAKA;AASA;AACA;AAEA;;AAOA;;AAcA;;AAcA;;AAiBA;AAEA;;;;;;AAkCA;;;;AAqBA;AAeA;;AAWA;AAEA;;;AAwBA;;;AAoBA;;;AAqBA;AAYA;AAKA;;;;;;AAeA;;;;;;;AAqBA;;;;;AA8BA;;;;;AAWA;;;;AAUA;;AASA;AAEA;AASA;AAWA;;AAgCA;AAeA;AAGA;AAEA;;;;AAUA;AAEA;AAqDA;AACA;AAgBA;AAeA;AAOA;;AAkBA;;AAsCA;;;;;AAqBA;AAGA;AAkCA;AAYA;AAUA;AAEA;AAOA;AA0BA;AAHA;AAWA;AAIA;AAEA;AAEA;AACA;AAQA;AAEA;AAEA;AACA;AAMA;AA6CA;AAIA;AAKA;AAEA;AAGA;AAEA;AAIA;AAEA;AA2BA;AAsCA;AAEA;AAaA;AASA;AAIA;AAOA;AACA;AAiBA;AACA;AAoBA;AACA;AAUA;AAIA;AACA;AAMA;AAKA;AAKA;AAeA;AAEA;AAaA;AAGA;AAEA;AAQA;AAcA;AAOA;;;AAWA;AAuDA;AAoBA;AAyIA;AAUA;;;;;;AA1qfA;AA0sfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AA/tfA;AAwufA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAuBA;AACA;AAEA;AACA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AAyEA;AAaA;AAaA;AAkEA;AACA;AACA;AACA;AAGA;AA2DA;AAKA;AAEA;AAYA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AA6CA;AAIA;AAGA;AAGA;AACA;AAMA;AAuBA;AAKA;AAEA;AAEA;AAkBA;AAEA;AAIA;AAEA;AACA;AAEA;AASA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAWA;AAGA;AAEA;AAEA;AAEA;AACA;AAEA;AAOA;AAMA;AAEA;AAEA;AAEA;AAEA;AAGA;AAIA;AAOA;AAEA;AAQA;AAEA;AAqBA;AAyEA;AAsBA;AAEA;AAiBA;AA8CA;AAKA;AASA;AACA;AAkBA;AAEA;AAgRA;AAGA;AAEA;AAEA;AAmBA;AAKA;AA4HA;AA4JA;AAQA;AAQA;AAOA;AAEA;AA8BA;AAEA;AASA;AAEA;AAQA;AACA;AAEA;AAUA;AAEA;AAiBA;AAEA;AASA;AAEA;AASA;AAEA;AASA;AAEA;AASA;AAEA;AAmBA;AAGA;AAGA;AAEA;AAGA;AAEA;AACA;AAEA;AAKA;AACA;AAEA;AAMA;AACA;AAEA;AAUA;AAEA;AAWA;AAEA;AASA;AAEA;AASA;AAEA;AAoBA;AAEA;AAEA;AAoBA;AAEA;AAEA;AAeA;AAEA;AASA;AAEA;AAMA;AAEA;AAaA;AAQA;AAEA;AAmBA;AAEA;;;AAaA;;;AASA;;;;;;;AAWA;;AAaA;;AAQA;;AASA;;;AAUA;;;AAMA;;;AAMA;;;AAMA;AAoBA;AAKA;;AA8BA;;;;;;;AAaA;;;;;;;AAUA;AAsFA;AAMA;AAEA;AAiBA;AAEA;AAEA;AAaA;AAQA;AACA;AACA;AAEA;AAIA;AAMA;AAKA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAKA;AAMA;AAGA;AASA;AAMA;AAMA;AAGA;AAMA;AAMA;AAMA;AAGA;AAGA;AAGA;AAGA;AAGA;AAKA;AAKA;AAYA;AAYA;AAQA;AACA;AAGA;AAKA;AACA;AACA;AAGA;AAKA;AAGA;AAGA;AAGA;AAGA;AAKA;AAKA;AAIA;;;;AAgBA;;;AAWA;;;;AAYA;;;AAgBA;;;AAWA;;;;AA2BA;;;AA0BA;AAoBA;AAaA;AAIA;AAIA;AACA;AACA;AAGA;AAWA;AAQA;AAIA;AAEA;;;;;;;;;;AAaA;AAwCA;AAmBA;;AAoBA;;;AASA;;;AAsBA;;;AAMA;;;;AAOA;;;;AAUA;;;;AAUA;;;;AAUA;;;;AAUA;;;;AAUA;;;;AAmBA;;AAiBA;AAIA;AAKA;AAIA;AAKA;AAKA;AAKA;;;;AAWA;AAYA;AAKA;AAMA;;;;AAiBA;AAqBA;AAUA;;AAiBA;AAqBA;AAGA;AAMA;AAMA;AAKA;AAKA;AAGA;AA+BA;;AAeA;;AAmBA;AAwCA;;;;AAuEA;AA0BA;AAYA;AAQA;AAQA;;;;AAyBA;AA0BA;AAWA;AAQA;AAQA;;;;AAwBA;AAQA;AAOA;;;;AAcA;AA6BA;AASA;;;AAcA;AA+BA;AAKA;AASA;;;AAcA;;;;;AA0BA;AA8CA;AAGA;AACA;AAEA;;AAeA;;AASA;;;AAcA;AAaA;AAGA;AASA;AA8BA;;;AA0CA;;;AAMA;;;;AAOA;;;;AAUA;;;;AAUA;;;;AAUA;;;;AAUA;;;;AAUA;;;;AAmBA;;AAiBA;AAYA;AAKA;AAKA;AAKA;AAKA;AAKA;;;;AAYA;AASA;AAEA;AAMA;AAKA;;;;AAiBA;AAqBA;AAWA;;AAiBA;AAiBA;AAKA;;AAWA;AAOA;AAEA;AAQA;AAKA;;AAmBA;;;AAaA;;;AAWA;;AAUA;AAiDA;AASA;AA0DA;;;AAaA;AAoCA;AAWA;AAgBA;AAuBA;AAUA;;;;AAqBA;AA6BA;AASA;;;AAcA;AAoBA;;;;;;;;;;;AA4BA;AAoBA;AAWA;AAGA;AAUA;AAKA;AAKA;;AAYA;;;AAMA;AAYA;;;AAkBA;;;AAsBA;AAKA;AAsBA;;;;;;;;;AAYA;AAOA;AAQA;AAUA;AAKA;;AApjoBA;;;;AAqkoBA;;AAkBA;;;AAaA;;AAgBA;AAmCA;AAKA;AAYA;AAEA;AAGA;AAEA;AAEA;AAMA;AASA;AASA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAOA;AAOA;;;AAeA;;AAQA;;AAuCA;;AA/yoBA;;;;AAi3oBA;AAyBA;;;AA4BA;;;AAMA;AAmCA;AAGA;AAIA;AAIA;AAEA;AAEA;AAMA;AAEA;AAEA;AAGA;AAYA;AAGA;AAYA;AAGA;AAOA;AAGA;AAIA;AAWA;AAMA;;AAxipBA;;;;AA4lpBA;;;;;AAYA;;;;AAUA;;;;;AAWA;AASA;AAGA;AAQA;;;;AAcA;AAUA;AAKA;AAGA;AAKA;AAKA;;AA3rpBA;;;;;;;;;;;AAmupBA;AAsBA;;AA2BA;;;;AAYA;;;;AAOA;;;;AAOA;;;;AAOA;;;;AAOA;;;;AAOA;;;AAmCA;AAWA;AAGA;;;;;AAgCA;AAeA;AAWA;AAIA;AAOA;;;;;AAkBA;AAaA;;;;;AAgBA;;;AAyCA;AAuBA;AAMA;AAKA;AAKA;AAWA;AASA;AAIA;;;;;AAmCA;AA6BA;AAGA;AAEA;AAEA;AAEA;AAGA;AACA;;;;;AAeA;AAUA;AAGA;AAEA;AAEA;AAEA;AAEA;AACA;;;;;AAeA;;;;;AAeA;;;AAsBA;;;;;AAwGA;;;;;AA2IA;AAgBA;AAKA;;;;AAaA;AAoDA;AAEA;;;;;AAOA;AAqBA;AAEA;AASA;AAMA;AAMA;AAKA;AAeA;AAKA;AAEA;AAIA;AAGA;AAQA;AASA;AAGA;;;;;;;AAmBA;AAUA;AAIA;AAWA;AAKA;AAMA;;;;;;;;;;;AAqBA;AAqBA;AAIA;AAMA;AAQA;AAOA;AAIA;AAcA;AAMA;AAGA;;;;;;AA6BA;AA0BA;AASA;AAMA;;;;;;AAsBA;;AA2CA;;;;;;AAgGA;AAUA;AAKA;AAOA;;;;AAoBA;;;AAuDA;;;AAMA;;;AAMA;;;;AAOA;AA8EA;AAKA;AAGA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;;;AAUA;AAwDA;AAKA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAkCA;AAKA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;;;AAsDA;AA+CA;AAOA;AAOA;;AAoCA;;;;AAgCA;;AAqBA;;;;AAUA;AAWA;;AArotBA;;;;AAkptBA;;AAlptBA;;;;AA6qtBA;;;;;AAeA;;;;;AAuCA;;;;;AAQA;AAUA;;;;AAaA;;;AAMA;AAUA;;;;;AAcA;;;;;AAiBA;AASA;AAGA;AAIA;AAKA;;;AAkBA;AAOA;AAOA;;;;AAaA;AASA;;;;;;AAyBA;;;;;;;AAaA;AAMA;;;;AAwBA;;;;AAUA;;;AAMA;;;AAh9tBA;;;;;AA69tBA;AAmBA;AAOA;AAKA;;;AASA;;AAKA;;;;;AAQA;;;AASA;AAgCA;AAcA;AAgCA;AAOA;AAEA;AAUA;;;;AAaA;AAKA;;;AAiEA;AASA;AAEA;AAEA;;;;;AASA;AAmDA;;;;;;;;;;;;AA+BA;;;;;;;;;;;;AAkDA;AAKA;AAoEA;;;;;;AAoBA;AAQA;;;;AA8BA;AAEA;AAyKA;AAEA;;;;;AA4EA;AA+BA;AAGA;AAMA;AAGA;AAWA;AAuCA;AA2DA;AAMA;AAMA;AAWA;AAqCA;AAEA;AAEA;AAMA;AA8CA;;;;;;;;;;;;;;;;;;;;;;;AA6EA;;;;;AAcA;;;;AA5kwBA;AA6mwBA;AACA;AACA;AACA;AACA;AACA;AAGA;AAaA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AA2FA;AAqCA;AACA;AAEA;AAOA;AAkBA;AA8CA;AACA;AACA;AAyBA;AAqDA;;;;;AAaA;;;;AAUA;AAMA;AAgBA;AAgBA;AAuBA;AAKA;AAwCA;AAOA;;;;AAgBA;AASA;;;AAyBA;AASA;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AASA;AAKA;AAGA;AAKA;AAKA;AAGA;AAiHA;AAwBA;AAeA;AAuBA;AAkBA;AACA;AACA;AA0CA;;;AAsUA;;AAmDA;AAOA;;;;;;;AA6FA;AA8DA;AAKA;AAcA;AAuCA;AAmEA;AAsDA;AA0BA;AAUA;AAWA;AAKA;AASA;AA+MA;;;;AAeA;AAGA;AASA;AAGA;AAcA;;;AA2EA;;AAUA;AA4BA;;;AA0BA;;AA8CA;AA+CA;AA0EA;AAWA;AAwCA;AAsBA;AAGA;AAEA;AAOA;AA0BA;AACA;AAEA;AAwCA;AAIA;AAIA;AAoBA;AAuDA;AAiEA;AAoBA;;;;;AA6GA;AASA;AAsBA;AAiBA;AA6BA;AAQA;AAEA;;;;;AAiCA;AA0BA;AAeA;AAsEA;AAwBA;AAKA;AAgCA;AA0BA;;AA+HA;AAeA;AAEA;AAkCA;AAYA;AAOA;;AAwBA;;;AAeA;AAUA;AAMA;AAaA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAUA;AA2BA;;;;;;AAiDA;AAcA;;AAcA;AAOA;AAyCA;;;;AAyCA;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;;;;AAoEA;;AAkBA;AA0DA;AACA;AAyBA;AACA;;;;AAQA;AA+BA;;AA0CA;AAKA;AAYA;AAkDA;AAMA;AAgBA;AAIA;AAGA;;;;;;;;AAYA;AAWA;AACA;AACA;;;;;AA2BA;AA4BA;AAEA;AA8EA;AAKA;AA+BA;AAyGA;AAkDA;AAkFA;AAiBA;AA0CA;AAoDA;AAKA;AAcA;AA4BA;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AAgCA;AAGA;AA2CA;AACA;AAEA;AA+HA;AAiJA;;;AA0CA;;AAcA;AAuBA;;AAqPA;AAiBA;AA4EA;AAiCA;;AAuCA;AAuEA;AAsDA;AAEA;AAQA;AASA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AASA;AAOA;AAMA;AAGA;AAIA;AAGA;AAQA;AAEA;AAQA;AA2BA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAWA;AAEA;AACA;AACA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6DA;AAKA;AAOA;AA8CA;;;AAkCA;;;;;;;AA0BA;AAEA;AAGA;AAEA;;AAIA;AAUA;AA+BA;AAgIA;AAkBA;AACA;AAEA;AAoBA;AAGA;AAEA;AAGA;AAGA;AAQA;AAGA;AACA;AAEA;AAKA;AAyCA;AACA;AAYA;AA2CA;AACA;AACA;AACA;AACA;AAyBA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAiCA;;;;;AA6EA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AA6CA;;;;;;;;;;;;;;;;;;;;;;AAwCA;AAWA;;;;;;AAmBA;;;;;;AA0CA;;;;;AAyCA;AAsHA;;;;;;;;;;;;;;;;AAyCA;AAmBA;AAmBA;AAiCA;AACA;AAyBA;AAcA;;;;;;AAiCA;AAkBA;AAWA;AAiBA;AAKA;AA8DA;;;;;;;AAqCA;AAKA;AAEA;AAEA;AAeA;AAuCA;AAIA;;;;;AAoBA;AAUA;AAqBA;AAEA;AAYA;AAoCA;AAGA;AAKA;;;;;AAuBA;;;;;;AAoCA;AAGA;AACA;AACA;AAEA;;;;;;;AA6BA;;;;;;;AA0EA;AAaA;AAUA;AAQA;;;;AAaA;AAmBA;AACA;AAQA;;;AAWA;AAYA;;;;AAyCA;AAuBA;;AAgEA;AAIA;AAGA;AAuCA;AAIA;AACA;AAqBA;AAIA;AASA;AAUA;AAYA;AAEA;AAwGA;;;;AA0EA;AAKA;AAEA;AAEA;AAMA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAkBA;AAMA;AAwBA;AACA;AAEA;AA0CA;AAiBA;;;;;AAyBA;AAcA;AAOA;;;;;;;;;;;;;;;;;;;;;;;AA7igCA;AA0pgCA;AAiCA;AACA;AACA;AACA;AACA;AAmBA;;;;AA4FA;AAUA;AACA;AAEA;AACA;;;;;AA4BA;AA8CA;AAWA;AAkBA;AAEA;AAEA;AAEA;AAMA;AAGA;AAEA;AAGA;AAiBA;;;;;;;AA8CA;AASA;AAEA;AAiBA;AAUA;AA6CA;AACA;AACA;;;AAOA;;;;;AAqCA;AAqBA;AAUA;AAcA;AAoCA;AAwBA;;;;;;AAUA;AAYA;AAGA;;;;;AAoCA;AAYA;;;;;AAiBA;AAyFA;AAKA;AA0FA;AA8BA;AA+BA;AAQA;AAEA;AAMA;;AA0MA;;;;;;AA8FA;AAQA;AAYA;AACA;AACA;;;;AAkDA;AAmBA;AAeA;;;;;AAsDA;AASA;AAEA;AA0CA;AAIA;AAuEA;;;;;;;;;;;;;;;;;;;;;;;;AAvojCA;;AA4qjCA;AA+BA;AAoBA;AA0BA;AAMA;AAUA;AAwCA;AAOA;AAwBA;AAmCA;AAkBA;AASA;AA2DA;AA0CA;AAuBA;AAqBA;AAiDA;AAQA;AAuBA;AAUA;AA+BA;AAWA;AAmCA;AAWA;AAuJA;AACA;AACA;AACA;AACA;AA6BA;AAgBA;AACA;AACA;AACA;AACA;AAmBA;AAYA;AAUA;AAOA;AAGA;AAqDA;AAqBA;AAgHA;AAKA;AA8CA;;;;;AAmFA;AAKA;AA4BA;AAgBA;AA+BA;AAgCA;;;;;;;;AAeA;AA4BA;AACA;AACA;AAGA;AAwBA;AA8EA;AAMA;AAEA;AAaA;AAeA;AAGA;AAEA;AA6CA;AAkCA;AA+DA;AAEA;AAMA;;;;;AAwBA;AAUA;AA6BA;AAEA;AAEA;AAEA;AAIA;AAEA;AAEA;AA2BA;AA+BA;AA0GA;AAUA;AAcA;AA0CA;AAMA;AAMA;AAKA;AAIA;AAkCA;AAwDA;AAyBA;AAeA;AAYA;AAkDA;AAsBA;AAKA;;;AAiBA;AAyFA;AAyBA;AAgFA;AA6EA;AAGA;AAUA;AAoCA;AACA;AAcA;AAEA;AAQA;AAOA;AAUA;AAuBA;AAKA;AASA;AAMA;AAeA;;;;;;AAsFA;AAmHA;;AA0DA;AAkFA;;AAuBA;;;AASA;;;;;AA6BA;AAGA;AAEA;;;;;;;;AAwBA;AAIA;AA2BA;AAcA;AACA;AAEA;AAMA;AASA;AAEA;AAMA;AAMA;AAQA;AAIA;AAIA;AAKA;AAQA;AAMA;AAMA;;;;;;;;;;AAgCA;AAGA;AAQA;AASA;AA6BA;;;;;;;AAyBA;AAkBA;AASA;;;;;;;AAwBA;AAEA;AA8CA;AAoBA;AAYA;AAcA;AAoBA;AACA;AACA;AACA;AAGA;AAUA;;;;;;;AAaA;AAoBA;AAIA;AASA;AAiBA;AAcA;AAuNA;AAoBA;AAOA;AA6HA;AA8KA;AAKA;AA6IA;AA2CA;AAyEA;AAqQA;AA0GA;AAoBA;AAoBA;AAuBA;AACA;AACA;AA8BA;AAOA;AAGA;AAMA;AAMA;AACA;AACA;AAiBA;AA0LA;AAEA;AAaA;AA4DA;AACA;AAOA;;AAyBA;;;;;;;AAaA;AAOA;AAcA;;;;;;AAyEA;;;;;;;;;;;;;AAmDA;AA0BA;AAwBA;AAEA;AAuDA;AAoBA;AAkCA;AAGA;AAEA;AAEA;AAEA;AAcA;;;;;;AA2DA;;AAWA;AAiBA;AA8EA;AAUA;AA2DA;AAgCA;AACA;AA2EA;AAmDA;AAEA;AAYA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AAoBA;AAOA;AA+BA;AASA;AAqBA;AAEA;AAKA;AAeA;AAEA;AAgEA;AAGA;AAOA;AAYA;AACA;AAEA;AAuBA;AAsLA;AACA;AACA;AAMA;AAiCA;AACA;AACA;;;;;;;;;;;AA4BA;AA2DA;AA+CA;AAYA;AACA;AAEA;AA6CA;AAEA;AAEA;AA2EA;AACA;AACA;AACA;AAEA;AAqDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAxswCA;;AAyxwCA;;;;AA4CA;AAMA;;;;;AAsBA;AA+BA;AAyBA;AAUA;AAMA;AAKA;AAMA;AACA;AAEA;AAGA;AACA;AAEA;AAIA;AAeA;;;;;;;;;;;;AAkBA;AAeA;AAEA;AAGA;AAwBA;AASA;AACA;AACA;AACA;AAEA;AAKA;AAoBA;AAWA;AAqBA;AA8BA;AACA;AAEA;AAEA;AAWA;AAEA;AAuEA;AACA;AAKA;AAaA;;;;;;;;;AAeA;AAsBA;AAIA;AAmBA;;;;;;AA8EA;AAKA;AA+BA;;;;;AAkBA;AASA;;;;;AAmJA;AAKA;AAEA;AAiEA;AAiCA;AAuGA;AA8GA;AAwCA;;;;;AAWA;AAOA;AAiBA;AA+CA;AAiBA;AAiDA;;;AA2BA;AAqCA;AAQA;AAIA;AAIA;AAKA;AAEA;AAcA;AAKA;AAEA;AAUA;AAEA;AAMA;AASA;AAIA;AAIA;AASA;AAYA;AAEA;AAgBA;AAEA;AAYA;AAEA;AASA;AAUA;AAYA;AAQA;AAQA;AAQA;AAOA;AACA;AAEA;AACA;;;;;AAqIA;;;;;AAqjFA;;;;;AA2vKA;;;;;AAwqGA;;;;;AAoCA;AA8GA;AAEA;AAEA;AAOA;AAEA;AACA;AAuDA;AAEA;AAgCA;AA6FA;AAsOA;AAGA;AAgBA;AAsDA;AAsaA;AA0CA;AAmBA;AAKA;;;AAWA;AAgEA;AAWA;AAiBA;;;;;;;;;;;AA0BA;AAiBA;AAIA;AAMA;;;;;AAgEA;AAsBA;AA4KA;AAkHA;AAuBA;AAEA;AAoDA;AA8DA;AAoDA;AAYA;AA0CA;AAMA;AAgBA;AAOA;AAGA;AAoBA;AAmBA;AAEA;AAmCA;AAIA;;;;;;AAuHA;AAoKA;AAEA;AASA;;AAsBA;;;;AAUA;AAiDA;AA6BA;AAEA;AAsBA;AAIA;AA4BA;AA8BA;AAOA;AAOA;AAOA;AAOA;AA6CA;AA0DA;AAsDA;AA2CA;AACA;AAEA;AAKA;AAuGA;AAJA;AAqCA;AA6CA;AAQA;AAiKA;;;;;;AA2CA;AA0EA;AAwIA;;;;AAWA;AAiBA;AAMA;AAqBA;AAoBA;AAMA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA;AAuCA;AAmBA;AAcA;AAKA;AA4CA;;;;;;AAuEA;AA+EA;AAsCA;;AAqFA;AA0BA;AAOA;;;;;AAyCA;AA6FA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAkDA;AAMA;AAiBA;AAKA;AAMA;AAIA;AA+BA;AAWA;AA2BA;AACA;;AA4CA;AA6DA;;;AAcA;AAMA;AACA;AAEA;;;;;;;;AAuBA;AAQA;AAIA;AAaA;AAQA;AAYA;AA0BA;AACA;AAEA;;;;;;;AAUA;AAgBA;AAyGA;AAIA;AAKA;AAEA;AAUA;AA4CA;AAeA;AAwBA;AAEA;AACA;AAgCA;AAEA;AAmGA;AAsDA;AACA;AAEA;AAgDA;AAEA;AAOA;AACA;AAEA;AAwDA;AACA;;;;;;AA0CA;AAoBA;;;AAeA;AAMA;AAKA;AAwCA;AAoEA;AAoCA;AAWA;AAgBA;AAIA;AA0BA;AAgCA;AAUA;AAkBA;AAyBA;AACA;;;;AAwBA;AAyDA;;;;;;;;;;;;;;;;;;;;;;;AAyKA;AA4BA;AAUA;AASA;AAgBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAhi1DA;;AAqk1DA;AAqBA;AAIA;AAuBA;AA4HA;;;AA8EA;AAqGA;AAoGA;AAeA;AAEA;AAQA;AAqCA;AAqCA;AAOA;AAIA;AA2DA;;;;AA+BA;AASA;AAGA;AAoDA;AAOA;AA2CA;AA8EA;AAkBA;AAQA;AAaA;;;;;;;;AA8CA;AAmRA;AAyBA;AAoDA;AAuCA;AAIA;AAqCA;AA+BA;AAgBA;AAcA;AAwEA;AAeA;AAyEA;;;;;AAqIA;AAQA;AAwDA;AA0BA;AAoEA;AAMA;AAEA;;;;;;;;;;;;;AAoEA;AAwCA;AAsCA;;AAqBA;;;;;AA4CA;AAoCA;AAuFA;AAkEA;;AAwRA;AAeA;AAgCA;AAKA;AAkFA;AAEA;AAKA;AAKA;AAiFA;AAoLA;AAEA;AAIA;AAGA;AAOA;AA+CA;AACA;;;;;;AAoCA;AAkFA;AA2BA;AAiIA;AAsHA;;;;AAcA;AAeA;AAEA;AAEA;AAuCA;AAqCA;AAMA;AAKA;AAaA;;;;;;;AAsDA;AA6CA;AAYA;;AA4BA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AAKA;AASA;AAaA;AAMA;AAKA;AAGA;AAKA;AAIA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AAOA;AASA;AAcA;AAKA;AAIA;AAGA;AAKA;AAIA;AAGA;AAKA;AAIA;AAaA;AAiFA;AASA;AAaA;AAMA;AAIA;AAEA;AAKA;AAIA;AAYA;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AAIA;AAGA;AAKA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AAKA;AAOA;AAQA;AAqDA;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AAQA;AAmBA;AAoCA;AAQA;AAcA;AAEA;AAgDA;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;;;;AAuDA;AAwBA;AAGA;AAKA;AAIA;AAGA;AAsCA;AA+BA;AAIA;AAGA;;;AASA;AAqBA;AAwBA;AASA;AAMA;AAKA;AAIA;AAaA;AAKA;AAQA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AAEA;AAEA;AAEA;AAKA;AAKA;AA8GA;AAGA;AA0DA;AASA;;;;;;;;;;;;AC9v/DA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvxtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}